#!/bin/bash

# Taking the path to Golang source file
if [[ $# -ne 1 ]]; then
    echo "Enter only the path to the source file as argument with extension .go" >&2
    exit 2
fi

export MILESTONE=4

path_to_root=$( dirname $( dirname $( realpath $0) ) )
abs_path_to_parser="${path_to_root}/src/Milestone${MILESTONE}/astree.py"
abs_path_to_gen_ast="${path_to_root}/src/Milestone${MILESTONE}/gen_tree.py"
abs_path_to_file=$(realpath $1)
abs_path_to_output=$(echo $abs_path_to_file | sed 's/.go$/.output/')
abs_path_to_dot=$(echo $abs_path_to_file | sed 's/.go$/.dot/')
abs_path_to_png=$(echo $abs_path_to_file | sed 's/.go$/.png/')
export PATH_TO_ROOT=$path_to_root

python3 $abs_path_to_parser $abs_path_to_file
if [ $? != 0 ];
then
    echo "Compilation and AST generation Failed!"
    exit 1
fi
echo "Compilation and AST generation Successful!"
# python3 $abs_path_to_gen_ast $abs_path_to_output
# if [ $? != 0 ];
# then
#     echo "Parse Tree Generation failed!"
#     exit 1
# fi
# echo "Parse Tree Generated Successfully!"
dot -Tpng $abs_path_to_dot -o $abs_path_to_png
if [ $? != 0 ];
then
    echo "PNG Generation failed!"
    echo "If dot is not installed, install dot using 'sudo apt install graphviz'"
    exit 1
fi
echo "PNG Generated Successfully!"
xdg-open $abs_path_to_png
