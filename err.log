WARNING: 59 shift/reduce conflicts
WARNING: 24 reduce/reduce conflicts
WARNING: reduce/reduce conflict in state 96 resolved using rule (IdentifierOth -> <empty>)
WARNING: rejected rule (TypeName -> IDENT) in state 96
WARNING: reduce/reduce conflict in state 123 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (TypeName -> IDENT) in state 123
WARNING: reduce/reduce conflict in state 124 resolved using rule (OperandName -> QualifiedIdent)
WARNING: rejected rule (TypeName -> QualifiedIdent) in state 124
WARNING: reduce/reduce conflict in state 182 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (TypeName -> IDENT) in state 182
WARNING: reduce/reduce conflict in state 232 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (TypeName -> IDENT) in state 232
WARNING: reduce/reduce conflict in state 233 resolved using rule (OperandName -> QualifiedIdent)
WARNING: rejected rule (TypeName -> QualifiedIdent) in state 233
WARNING: reduce/reduce conflict in state 286 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (TypeName -> IDENT) in state 286
WARNING: reduce/reduce conflict in state 322 resolved using rule (Key -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 322
WARNING: reduce/reduce conflict in state 322 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (TypeName -> IDENT) in state 322
WARNING: reduce/reduce conflict in state 349 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (TypeName -> IDENT) in state 349
PLY: PARSE DEBUG START
State  : 0
Stack  : . LexToken(PACKAGE,'package',1,1,0)
Action : Shift and goto state 3
State  : 3
Stack  : PACKAGE . LexToken(IDENT,'main',1,9,8)
Action : Shift and goto state 6
State  : 6
Defaulted state 6: Reduce using 3
Stack  : PACKAGE IDENT . None
Action : Reduce rule [PackageName -> IDENT] with ['main'] and goto state 5
Result : <list @ 0x7f0d4a92b708> (['PackageName', ['main']])
State  : 5
Defaulted state 5: Reduce using 2
Stack  : PACKAGE PackageName . None
Action : Reduce rule [PackageClause -> PACKAGE PackageName] with ['package',<list @ 0x7f0d4a92b708>] and goto state 2
Result : <list @ 0x7f0d4a8c0fc8> (['PackageClause', ['package'], ['Package ...)
State  : 2
Stack  : PackageClause . LexToken(SEMICOLON,';',1,13,12)
Action : Shift and goto state 4
State  : 4
Stack  : PackageClause SEMICOLON . LexToken(IMPORT,'import',2,1,14)
Action : Shift and goto state 9
State  : 9
Stack  : PackageClause SEMICOLON IMPORT . LexToken(LPAREN,'(',2,8,21)
Action : Shift and goto state 23
State  : 23
Stack  : PackageClause SEMICOLON IMPORT LPAREN . LexToken(STRING,'"fmt"',3,5,27)
Action : Shift and goto state 27
State  : 27
Defaulted state 27: Reduce using 13
Stack  : PackageClause SEMICOLON IMPORT LPAREN STRING . None
Action : Reduce rule [ImportPath -> STRING] with ['"fmt"'] and goto state 25
Result : <list @ 0x7f0d4a8c10c8> (['ImportPath', ['"fmt"']])
State  : 25
Defaulted state 25: Reduce using 12
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportPath . None
Action : Reduce rule [ImportSpec -> ImportPath] with [<list @ 0x7f0d4a8c10c8>] and goto state 45
Result : <list @ 0x7f0d4a8c1188> (['ImportSpec', ['ImportPath', ['"fmt"']] ...)
State  : 45
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec . LexToken(SEMICOLON,';',3,10,32)
Action : Shift and goto state 82
State  : 82
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON . LexToken(STRING,'"math/rand"',4,5,38)
Action : Shift and goto state 27
State  : 27
Defaulted state 27: Reduce using 13
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON STRING . None
Action : Reduce rule [ImportPath -> STRING] with ['"math/rand"'] and goto state 25
Result : <list @ 0x7f0d4a8c1148> (['ImportPath', ['"math/rand"']])
State  : 25
Defaulted state 25: Reduce using 12
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportPath . None
Action : Reduce rule [ImportSpec -> ImportPath] with [<list @ 0x7f0d4a8c1148>] and goto state 45
Result : <list @ 0x7f0d4a8c1208> (['ImportSpec', ['ImportPath', ['"WARNING: 59 shift/reduce conflicts
WARNING: 24 reduce/reduce conflicts
WARNING: reduce/reduce conflict in state 96 resolved using rule (IdentifierOth -> <empty>)
WARNING: rejected rule (TypeName -> IDENT) in state 96
WARNING: reduce/reduce conflict in state 123 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (TypeName -> IDENT) in state 123
WARNING: reduce/reduce conflict in state 124 resolved using rule (OperandName -> QualifiedIdent)
WARNING: rejected rule (TypeName -> QualifiedIdent) in state 124
WARNING: reduce/reduce conflict in state 182 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (TypeName -> IDENT) in state 182
WARNING: reduce/reduce conflict in state 232 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (TypeName -> IDENT) in state 232
WARNING: reduce/reduce conflict in state 233 resolved using rule (OperandName -> QualifiedIdent)
WARNING: rejected rule (TypeName -> QualifiedIdent) in state 233
WARNING: reduce/reduce conflict in state 286 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (TypeName -> IDENT) in state 286
WARNING: reduce/reduce conflict in state 322 resolved using rule (Key -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 322
WARNING: reduce/reduce conflict in state 322 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (TypeName -> IDENT) in state 322
WARNING: reduce/reduce conflict in state 349 resolved using rule (OperandName -> IDENT)
WARNING: rejected rule (TypeName -> IDENT) in state 349
PLY: PARSE DEBUG START
State  : 0
Stack  : . LexToken(PACKAGE,'package',1,1,0)
Action : Shift and goto state 3
State  : 3
Stack  : PACKAGE . LexToken(IDENT,'main',1,9,8)
Action : Shift and goto state 6
State  : 6
Defaulted state 6: Reduce using 3
Stack  : PACKAGE IDENT . None
Action : Reduce rule [PackageName -> IDENT] with ['main'] and goto state 5
Result : <list @ 0x7f0d4a92b708> (['PackageName', ['main']])
State  : 5
Defaulted state 5: Reduce using 2
Stack  : PACKAGE PackageName . None
Action : Reduce rule [PackageClause -> PACKAGE PackageName] with ['package',<list @ 0x7f0d4a92b708>] and goto state 2
Result : <list @ 0x7f0d4a8c0fc8> (['PackageClause', ['package'], ['Package ...)
State  : 2
Stack  : PackageClause . LexToken(SEMICOLON,';',1,13,12)
Action : Shift and goto state 4
State  : 4
Stack  : PackageClause SEMICOLON . LexToken(IMPORT,'import',2,1,14)
Action : Shift and goto state 9
State  : 9
Stack  : PackageClause SEMICOLON IMPORT . LexToken(LPAREN,'(',2,8,21)
Action : Shift and goto state 23
State  : 23
Stack  : PackageClause SEMICOLON IMPORT LPAREN . LexToken(STRING,'"fmt"',3,5,27)
Action : Shift and goto state 27
State  : 27
Defaulted state 27: Reduce using 13
Stack  : PackageClause SEMICOLON IMPORT LPAREN STRING . None
Action : Reduce rule [ImportPath -> STRING] with ['"fmt"'] and goto state 25
Result : <list @ 0x7f0d4a8c10c8> (['ImportPath', ['"fmt"']])
State  : 25
Defaulted state 25: Reduce using 12
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportPath . None
Action : Reduce rule [ImportSpec -> ImportPath] with [<list @ 0x7f0d4a8c10c8>] and goto state 45
Result : <list @ 0x7f0d4a8c1188> (['ImportSpec', ['ImportPath', ['"fmt"']] ...)
State  : 45
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec . LexToken(SEMICOLON,';',3,10,32)
Action : Shift and goto state 82
State  : 82
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON . LexToken(STRING,'"math/rand"',4,5,38)
Action : Shift and goto state 27
State  : 27
Defaulted state 27: Reduce using 13
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON STRING . None
Action : Reduce rule [ImportPath -> STRING] with ['"math/rand"'] and goto state 25
Result : <list @ 0x7f0d4a8c1148> (['ImportPath', ['"math/rand"']])
State  : 25
Defaulted state 25: Reduce using 12
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportPath . None
Action : Reduce rule [ImportSpec -> ImportPath] with [<list @ 0x7f0d4a8c1148>] and goto state 45
Result : <list @ 0x7f0d4a8c1208> (['ImportSpec', ['ImportPath', ['"math/ra ...)
State  : 45
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec . LexToken(SEMICOLON,';',4,16,49)
Action : Shift and goto state 82
State  : 82
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON . LexToken(STRING,'"time"',5,5,55)
Action : Shift and goto state 27
State  : 27
Defaulted state 27: Reduce using 13
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON STRING . None
Action : Reduce rule [ImportPath -> STRING] with ['"time"'] and goto state 25
Result : <list @ 0x7f0d4a8c1248> (['ImportPath', ['"time"']])
State  : 25
Defaulted state 25: Reduce using 12
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON ImportPath . None
Action : Reduce rule [ImportSpec -> ImportPath] with [<list @ 0x7f0d4a8c1248>] and goto state 45
Result : <list @ 0x7f0d4a8c1288> (['ImportSpec', ['ImportPath', ['"time"'] ...)
State  : 45
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON ImportSpec . LexToken(SEMICOLON,';',5,11,61)
Action : Shift and goto state 82
State  : 82
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON ImportSpec SEMICOLON . LexToken(RPAREN,')',6,1,63)
Action : Reduce rule [ImportSpecMult -> <empty>] with [] and goto state 150
Result : <list @ 0x7f0d4a8c1448> (['ImportMult'])
State  : 150
Defaulted state 150: Reduce using 8
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON ImportSpec SEMICOLON ImportSpecMult . LexToken(RPAREN,')',6,1,63)
Action : Reduce rule [ImportSpecMult -> ImportSpec SEMICOLON ImportSpecMult] with [<list @ 0x7f0d4a8c1288>,';',['ImportMult']] and goto state 150
Result : <list @ 0x7f0d4a8c14c8> (['ImportMult', ['ImportSpec', ['ImportPa ...)
State  : 150
Defaulted state 150: Reduce using 8
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON ImportSpecMult . LexToken(RPAREN,')',6,1,63)
Action : Reduce rule [ImportSpecMult -> ImportSpec SEMICOLON ImportSpecMult] with [<list @ 0x7f0d4a8c1208>,';',<list @ 0x7f0d4a8c14c8>] and goto state 150
Result : <list @ 0x7f0d4a8c1508> (['ImportMult', ['ImportSpec', ['ImportPa ...)
State  : 150
Defaulted state 150: Reduce using 8
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpecMult . LexToken(RPAREN,')',6,1,63)
Action : Reduce rule [ImportSpecMult -> ImportSpec SEMICOLON ImportSpecMult] with [<list @ 0x7f0d4a8c1188>,';',<list @ 0x7f0d4a8c1508>] and goto state 44
Result : <list @ 0x7f0d4a8c1548> (['ImportMult', ['ImportSpec', ['ImportPa ...)
State  : 44
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpecMult . LexToken(RPAREN,')',6,1,63)
Action : Shift and goto state 81
State  : 81
Defaulted state 81: Reduce using 7
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpecMult RPAREN . None
Action : Reduce rule [ImportDecl -> IMPORT LPAREN ImportSpecMult RPAREN] with ['import','(',<list @ 0x7f0d4a8c1548>,')'] and goto state 8
Result : <list @ 0x7f0d4a8c1608> (['ImportDecl', ['import'], ['('], ['Impo ...)
State  : 8
Stack  : PackageClause SEMICOLON ImportDecl . LexToken(SEMICOLON,';',6,2,64)
Action : Shift and goto state 21
State  : 21
Stack  : PackageClause SEMICOLON ImportDecl SEMICOLON . LexToken(TYPE,'type',8,1,67)
Action : Reduce rule [ImportDeclMult -> <empty>] with [] and goto state 43
Result : <list @ 0x7f0d4a8c1808> (['ImportDeclMult'])
State  : 43
Stack  : PackageClause SEMICOLON ImportDecl SEMICOLON ImportDeclMult . LexToken(TYPE,'type',8,1,67)
Action : Reduce rule [ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult] with [<list @ 0x7f0d4a8c1608>,';',<list @ 0x7f0d4a8c1808>] and goto state 7
Result : <list @ 0x7f0d4a8c1b88> (['ImportDeclMult', ['ImportDecl', ['impo ...)
State  : 7
Stack  : PackageClause SEMICOLON ImportDeclMult . LexToken(TYPE,'type',8,1,67)
Action : Shift and goto state 20
State  : 20
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE . LexToken(IDENT,'Node',8,6,72)
Action : Shift and goto state 42
Statemath/ra ...)
State  : 45
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec . LexToken(SEMICOLON,';',4,16,49)
Action : Shift and goto state 82
State  : 82
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON . LexToken(STRING,'"time"',5,5,55)
Action : Shift and goto state 27
State  : 27
Defaulted state 27: Reduce using 13
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON STRING . None
Action : Reduce rule [ImportPath -> STRING] with ['"time"'] and goto state 25
Result : <list @ 0x7f0d4a8c1248> (['ImportPath', ['"time"']])
State  : 25
Defaulted state 25: Reduce using 12
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON ImportPath . None
Action : Reduce rule [ImportSpec -> ImportPath] with [<list @ 0x7f0d4a8c1248>] and goto state 45
Result : <list @ 0x7f0d4a8c1288> (['ImportSpec', ['ImportPath', ['"time"'] ...)
State  : 45
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON ImportSpec . LexToken(SEMICOLON,';',5,11,61)
Action : Shift and goto state 82
State  : 82
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON ImportSpec SEMICOLON . LexToken(RPAREN,')',6,1,63)
Action : Reduce rule [ImportSpecMult -> <empty>] with [] and goto state 150
Result : <list @ 0x7f0d4a8c1448> (['ImportMult'])
State  : 150
Defaulted state 150: Reduce using 8
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON ImportSpec SEMICOLON ImportSpecMult . LexToken(RPAREN,')',6,1,63)
Action : Reduce rule [ImportSpecMult -> ImportSpec SEMICOLON ImportSpecMult] with [<list @ 0x7f0d4a8c1288>,';',['ImportMult']] and goto state 150
Result : <list @ 0x7f0d4a8c14c8> (['ImportMult', ['ImportSpec', ['ImportPa ...)
State  : 150
Defaulted state 150: Reduce using 8
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpec SEMICOLON ImportSpecMult . LexToken(RPAREN,')',6,1,63)
Action : Reduce rule [ImportSpecMult -> ImportSpec SEMICOLON ImportSpecMult] with [<list @ 0x7f0d4a8c1208>,';',<list @ 0x7f0d4a8c14c8>] and goto state 150
Result : <list @ 0x7f0d4a8c1508> (['ImportMult', ['ImportSpec', ['ImportPa ...)
State  : 150
Defaulted state 150: Reduce using 8
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpecMult . LexToken(RPAREN,')',6,1,63)
Action : Reduce rule [ImportSpecMult -> ImportSpec SEMICOLON ImportSpecMult] with [<list @ 0x7f0d4a8c1188>,';',<list @ 0x7f0d4a8c1508>] and goto state 44
Result : <list @ 0x7f0d4a8c1548> (['ImportMult', ['ImportSpec', ['ImportPa ...)
State  : 44
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpecMult . LexToken(RPAREN,')',6,1,63)
Action : Shift and goto state 81
State  : 81
Defaulted state 81: Reduce using 7
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpecMult RPAREN . None
Action : Reduce rule [ImportDecl -> IMPORT LPAREN ImportSpecMult RPAREN] with ['import','(',<list @ 0x7f0d4a8c1548>,')'] and goto state 8
Result : <list @ 0x7f0d4a8c1608> (['ImportDecl', ['import'], ['('], ['Impo ...)
State  : 8
Stack  : PackageClause SEMICOLON ImportDecl . LexToken(SEMICOLON,';',6,2,64)
Action : Shift and goto state 21
State  : 21
Stack  : PackageClause SEMICOLON ImportDecl SEMICOLON . LexToken(TYPE,'type',8,1,67)
Action : Reduce rule [ImportDeclMult -> <empty>] with [] and goto state 43
Result : <list @ 0x7f0d4a8c1808> (['ImportDeclMult'])
State  : 43
Stack  : PackageClause SEMICOLON ImportDecl SEMICOLON ImportDeclMult . LexToken(TYPE,'type',8,1,67)
Action : Reduce rule [ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult] with [<list @ 0x7f0d4a8c1608>,';',<list @ 0x7f0d4a8c1808>] and goto state 7
Result : <list @ 0x7f0d4a8c1b88> (['ImportDeclMult', ['ImportDecl', ['impo ...)
State  : 7
Stack  : PackageClause SEMICOLON ImportDeclMult . LexToken(TYPE,'type',8,1,67)
Action : Shift and goto state 20
State  : 20
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE . LexToken(IDENT,'Node',8,6,72)
Action : Shift and goto state 42
State  : 42
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT . LexToken(STRUCT,'struct',8,11,77)
  : 42
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT . LexToken(STRUCT,'struct',8,11,77)
Action : Shift and goto state 67
State  : 67
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT . LexToken(LBRACE,'{',8,18,84)
Action : Shift and goto state 136
State  : 136
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE . LexToken(IDENT,'value',9,5,90)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE IDENT . LexToken(IDENT,'int',9,11,96)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a92bf08> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE IDENT IdentifierOth . LexToken(IDENT,'int',9,11,96)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['value',<list @ 0x7f0d4a92bf08>] and goto state 249
Result : <list @ 0x7f0d4a92b188> (['IdentifierList', ['value'], ['Identifi ...)
State  : 249
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE IdentifierList . LexToken(IDENT,'int',9,11,96)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE IdentifierList IDENT . LexToken(SEMICOLON,';',9,14,99)
Action : Reduce rule [TypeName -> IDENT] with ['int'] and goto state 55
Result : <list @ 0x7f0d4a92bc48> (['TypeName', ['int']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE IdentifierList TypeName . LexToken(SEMICOLON,';',9,14,99)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4a92bc48>] and goto state 326
Result : <list @ 0x7f0d4a92bcc8> (['Type', ['TypeName', ['int']]])
State  : 326
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE IdentifierList Type . LexToken(SEMICOLON,';',9,14,99)
Action : Reduce rule [FieldDecl -> IdentifierList Type] with [<list @ 0x7f0d4a92b188>,<list @ 0x7f0d4a92bcc8>] and goto state 248
Result : <list @ 0x7f0d4a8c1bc8> (['FieldDecl', ['IdentifierList', ['value ...)
State  : 248
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl . LexToken(SEMICOLON,';',9,14,99)
Action : Shift and goto state 325
State  : 325
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON . LexToken(IDENT,'sub_tree_sum',10,5,105)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON IDENT . LexToken(IDENT,'int',10,18,118)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a8c1c48> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON IDENT IdentifierOth . LexToken(IDENT,'int',10,18,118)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['sub_tree_sum',<list @ 0x7f0d4a8c1c48>] and goto state 249
Result : <list @ 0x7f0d4a8c1d08> (['IdentifierList', ['sub_tree_sum'], ['I ...)
State  : 249
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON IdentifierList . LexToken(IDENT,'int',10,18,118)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON IdentifierList IDENT . LexToken(SEMICOLON,';',10,21,121)
Action : Reduce rule [TypeName -> IDENT] with ['int'] and goto state 55
Result : <list @ 0x7f0d4a92b388> (['TypeName', ['int']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON IdentifierList TypeName . LexToken(SEMICOLON,';',10,21,121)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4a92b388>] and goto state 326
Result : <list @ 0x7f0d4a8c1f48> (['Type', ['TypeName', ['int']]])
State  : 326
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON IdentifierList Type . LexToken(SEMICOLON,';',10,21,121)
Action : Reduce rule [FieldDecl -> IdentifierList Type] with [<list @ 0x7f0d4a8c1d08>,<list @ 0x7f0d4a8c1f48>] and goto state 248
Result : <list @ 0Action : Shift and goto state 67
State  : 67
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT . LexToken(LBRACE,'{',8,18,84)
Action : Shift and goto state 136
State  : 136
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE . LexToken(IDENT,'value',9,5,90)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE IDENT . LexToken(IDENT,'int',9,11,96)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a92bf08> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE IDENT IdentifierOth . LexToken(IDENT,'int',9,11,96)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['value',<list @ 0x7f0d4a92bf08>] and goto state 249
Result : <list @ 0x7f0d4a92b188> (['IdentifierList', ['value'], ['Identifi ...)
State  : 249
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE IdentifierList . LexToken(IDENT,'int',9,11,96)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE IdentifierList IDENT . LexToken(SEMICOLON,';',9,14,99)
Action : Reduce rule [TypeName -> IDENT] with ['int'] and goto state 55
Result : <list @ 0x7f0d4a92bc48> (['TypeName', ['int']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE IdentifierList TypeName . LexToken(SEMICOLON,';',9,14,99)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4a92bc48>] and goto state 326
Result : <list @ 0x7f0d4a92bcc8> (['Type', ['TypeName', ['int']]])
State  : 326
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE IdentifierList Type . LexToken(SEMICOLON,';',9,14,99)
Action : Reduce rule [FieldDecl -> IdentifierList Type] with [<list @ 0x7f0d4a92b188>,<list @ 0x7f0d4a92bcc8>] and goto state 248
Result : <list @ 0x7f0d4a8c1bc8> (['FieldDecl', ['IdentifierList', ['value ...)
State  : 248
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl . LexToken(SEMICOLON,';',9,14,99)
Action : Shift and goto state 325
State  : 325
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON . LexToken(IDENT,'sub_tree_sum',10,5,105)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON IDENT . LexToken(IDENT,'int',10,18,118)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a8c1c48> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON IDENT IdentifierOth . LexToken(IDENT,'int',10,18,118)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['sub_tree_sum',<list @ 0x7f0d4a8c1c48>] and goto state 249
Result : <list @ 0x7f0d4a8c1d08> (['IdentifierList', ['sub_tree_sum'], ['I ...)
State  : 249
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON IdentifierList . LexToken(IDENT,'int',10,18,118)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON IdentifierList IDENT . LexToken(SEMICOLON,';',10,21,121)
Action : Reduce rule [TypeName -> IDENT] with ['int'] and goto state 55
Result : <list @ 0x7f0d4a92b388> (['TypeName', ['int']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON IdentifierList TypeName . LexToken(SEMICOLON,';',10,21,121)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4a92b388>] and goto state 326
Result : <list @ 0x7f0d4a8c1f48> (['Type', ['TypeName', ['int']]])
State  : 326
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON IdentifierList Type . LexToken(SEMICOLON,';',10,21,121)
Action : Reduce rule [FieldDecl -> IdentifierList Type] with [<list @ 0x7f0d4a8c1d08>,<list @ 0x7f0d4a8c1f48>] and goto state 248
Result : <list @ 0x7f0d4a8c2048> (['FieldDecl', ['IdentifierList', ['sub_t ...)
State  : 248
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl . LexToken(SEMICOLON,';',10,21,121)
Action : Shift and goto state 325
State  : 325
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON . LexToken(IDENT,'flag',11,5,127)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT . LexToken(IDENT,'bool',11,10,132)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a8c20c8> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT IdentifierOth . LexToken(IDENT,'bool',11,10,132)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['flag',<list @ 0x7f0d4a8c20c8>] and goto state 249
Result : <list @ 0x7f0d4a8c2248> (['IdentifierList', ['flag'], ['Identifie ...)
State  : 249
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList . LexToken(IDENT,'bool',11,10,132)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList IDENT . LexToken(SEMICOLON,';',11,14,136)
Action : Reduce rule [TypeName -> IDENT] with ['bool'] and goto state 55
Result : <list @ 0x7f0d4a9d8f08> (['TypeName', ['bool']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList TypeName . LexToken(SEMICOLON,';',11,14,136)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4a9d8f08>] and goto state 326
Result : <list @ 0x7f0d4a8c22c8> (['Type', ['TypeName', ['bool']]])
State  : 326
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList Type . LexToken(SEMICOLON,';',11,14,136)
Action : Reduce rule [FieldDecl -> IdentifierList Type] with [<list @ 0x7f0d4a8c2248>,<list @ 0x7f0d4a8c22c8>] and goto state 248
Result : <list @ 0x7f0d4a8c25c8> (['FieldDecl', ['IdentifierList', ['flag' ...)
State  : 248
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl . LexToken(SEMICOLON,';',11,14,136)
Action : Shift and goto state 325
State  : 325
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON . LexToken(IDENT,'left',12,5,142)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT . LexToken(MUL,'*',12,10,147)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a8c2688> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT IdentifierOth . LexToken(MUL,'*',12,10,147)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['left',<list @ 0x7f0d4a8c2688>] and goto state 249
Result : <list @ 0x7f0d4a9d8e08> (['IdentifierList', ['left'], ['Identifie ...)
State  : 249
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList . LexToken(MUL,'*',12,10,147)
Action : Shift and goto state 68
State  : 68
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL . LexToken(IDENT,'Node',12,11,148)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON Idx7f0d4a8c2048> (['FieldDecl', ['IdentifierList', ['sub_t ...)
State  : 248
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl . LexToken(SEMICOLON,';',10,21,121)
Action : Shift and goto state 325
State  : 325
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON . LexToken(IDENT,'flag',11,5,127)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT . LexToken(IDENT,'bool',11,10,132)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a8c20c8> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT IdentifierOth . LexToken(IDENT,'bool',11,10,132)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['flag',<list @ 0x7f0d4a8c20c8>] and goto state 249
Result : <list @ 0x7f0d4a8c2248> (['IdentifierList', ['flag'], ['Identifie ...)
State  : 249
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList . LexToken(IDENT,'bool',11,10,132)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList IDENT . LexToken(SEMICOLON,';',11,14,136)
Action : Reduce rule [TypeName -> IDENT] with ['bool'] and goto state 55
Result : <list @ 0x7f0d4a9d8f08> (['TypeName', ['bool']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList TypeName . LexToken(SEMICOLON,';',11,14,136)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4a9d8f08>] and goto state 326
Result : <list @ 0x7f0d4a8c22c8> (['Type', ['TypeName', ['bool']]])
State  : 326
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList Type . LexToken(SEMICOLON,';',11,14,136)
Action : Reduce rule [FieldDecl -> IdentifierList Type] with [<list @ 0x7f0d4a8c2248>,<list @ 0x7f0d4a8c22c8>] and goto state 248
Result : <list @ 0x7f0d4a8c25c8> (['FieldDecl', ['IdentifierList', ['flag' ...)
State  : 248
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl . LexToken(SEMICOLON,';',11,14,136)
Action : Shift and goto state 325
State  : 325
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON . LexToken(IDENT,'left',12,5,142)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT . LexToken(MUL,'*',12,10,147)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a8c2688> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT IdentifierOth . LexToken(MUL,'*',12,10,147)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['left',<list @ 0x7f0d4a8c2688>] and goto state 249
Result : <list @ 0x7f0d4a9d8e08> (['IdentifierList', ['left'], ['Identifie ...)
State  : 249
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList . LexToken(MUL,'*',12,10,147)
Action : Shift and goto state 68
State  : 68
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL . LexToken(IDENT,'Node',12,11,148)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL IDENT . LexToken(SEMICOLON,';',12,15,152)
entifierList MUL IDENT . LexToken(SEMICOLON,';',12,15,152)
Action : Reduce rule [TypeName -> IDENT] with ['Node'] and goto state 55
Result : <list @ 0x7f0d4a8c27c8> (['TypeName', ['Node']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL TypeName . LexToken(SEMICOLON,';',12,15,152)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4a8c27c8>] and goto state 138
Result : <list @ 0x7f0d4a92bf88> (['Type', ['TypeName', ['Node']]])
State  : 138
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL Type . LexToken(SEMICOLON,';',12,15,152)
Action : Reduce rule [BaseType -> Type] with [<list @ 0x7f0d4a92bf88>] and goto state 137
Result : <list @ 0x7f0d4a8c2888> (['BaseType', ['Type', ['TypeName', ['Nod ...)
State  : 137
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL BaseType . LexToken(SEMICOLON,';',12,15,152)
Action : Reduce rule [PointerType -> MUL BaseType] with ['*',<list @ 0x7f0d4a8c2888>] and goto state 62
Result : <list @ 0x7f0d4a8c2c48> (['PointerType', ['*'], ['BaseType', ['Ty ...)
State  : 62
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList PointerType . LexToken(SEMICOLON,';',12,15,152)
Action : Reduce rule [TypeLit -> PointerType] with [<list @ 0x7f0d4a8c2c48>] and goto state 56
Result : <list @ 0x7f0d4a8c2e88> (['TypeLit', ['PointerType', ['*'], ['Bas ...)
State  : 56
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList TypeLit . LexToken(SEMICOLON,';',12,15,152)
Action : Reduce rule [Type -> TypeLit] with [<list @ 0x7f0d4a8c2e88>] and goto state 326
Result : <list @ 0x7f0d4a8c2f48> (['Type', ['TypeLit', ['PointerType', ['* ...)
State  : 326
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList Type . LexToken(SEMICOLON,';',12,15,152)
Action : Reduce rule [FieldDecl -> IdentifierList Type] with [<list @ 0x7f0d4a9d8e08>,<list @ 0x7f0d4a8c2f48>] and goto state 248
Result : <list @ 0x7f0d4a8c2fc8> (['FieldDecl', ['IdentifierList', ['left' ...)
State  : 248
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl . LexToken(SEMICOLON,';',12,15,152)
Action : Shift and goto state 325
State  : 325
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON . LexToken(IDENT,'right',13,5,158)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT . LexToken(MUL,'*',13,11,164)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a8c30c8> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT IdentifierOth . LexToken(MUL,'*',13,11,164)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['right',<list @ 0x7f0d4a8c30c8>] and goto state 249
Result : <list @ 0x7f0d4a9d8f48> (['IdentifierList', ['right'], ['Identifi ...)
State  : 249
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList . LexToken(MUL,'*',13,11,164)
Action : Shift and goto state 68
State  : 68
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL . LexToken(IDENT,'Node',13Action : Reduce rule [TypeName -> IDENT] with ['Node'] and goto state 55
Result : <list @ 0x7f0d4a8c27c8> (['TypeName', ['Node']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL TypeName . LexToken(SEMICOLON,';',12,15,152)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4a8c27c8>] and goto state 138
Result : <list @ 0x7f0d4a92bf88> (['Type', ['TypeName', ['Node']]])
State  : 138
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL Type . LexToken(SEMICOLON,';',12,15,152)
Action : Reduce rule [BaseType -> Type] with [<list @ 0x7f0d4a92bf88>] and goto state 137
Result : <list @ 0x7f0d4a8c2888> (['BaseType', ['Type', ['TypeName', ['Nod ...)
State  : 137
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL BaseType . LexToken(SEMICOLON,';',12,15,152)
Action : Reduce rule [PointerType -> MUL BaseType] with ['*',<list @ 0x7f0d4a8c2888>] and goto state 62
Result : <list @ 0x7f0d4a8c2c48> (['PointerType', ['*'], ['BaseType', ['Ty ...)
State  : 62
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList PointerType . LexToken(SEMICOLON,';',12,15,152)
Action : Reduce rule [TypeLit -> PointerType] with [<list @ 0x7f0d4a8c2c48>] and goto state 56
Result : <list @ 0x7f0d4a8c2e88> (['TypeLit', ['PointerType', ['*'], ['Bas ...)
State  : 56
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList TypeLit . LexToken(SEMICOLON,';',12,15,152)
Action : Reduce rule [Type -> TypeLit] with [<list @ 0x7f0d4a8c2e88>] and goto state 326
Result : <list @ 0x7f0d4a8c2f48> (['Type', ['TypeLit', ['PointerType', ['* ...)
State  : 326
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList Type . LexToken(SEMICOLON,';',12,15,152)
Action : Reduce rule [FieldDecl -> IdentifierList Type] with [<list @ 0x7f0d4a9d8e08>,<list @ 0x7f0d4a8c2f48>] and goto state 248
Result : <list @ 0x7f0d4a8c2fc8> (['FieldDecl', ['IdentifierList', ['left' ...)
State  : 248
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl . LexToken(SEMICOLON,';',12,15,152)
Action : Shift and goto state 325
State  : 325
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON . LexToken(IDENT,'right',13,5,158)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT . LexToken(MUL,'*',13,11,164)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a8c30c8> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT IdentifierOth . LexToken(MUL,'*',13,11,164)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['right',<list @ 0x7f0d4a8c30c8>] and goto state 249
Result : <list @ 0x7f0d4a9d8f48> (['IdentifierList', ['right'], ['Identifi ...)
State  : 249
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList . LexToken(MUL,'*',13,11,164)
Action : Shift and goto state 68
State  : 68
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL . LexToken(IDENT,'Node',13,12,165)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL IDENT . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [TypeName -> IDENT] with ['Node'] and goto state 55
Result : <list @ 0x7f0d4a8c3388> (['TypeName', ['Node']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL TypeName . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4a8c3388>] and goto state 138
Result : <list @ 0x7f0d4a8c36c8> (['Type', ['TypeName', ['Node']]])
State  : 138
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL Type . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [BaseType -> Type] with [<list @ 0x7f0d4a8c36c8>] and goto state 137
Result : <list @ 0x7f0d4a8c3408> (['BaseType', ['Type', ['TypeName', ['Nod ...)
State  : 137
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL BaseType . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [PointerType -> MUL BaseType] with ['*',<list @ 0x7f0d4a8c3408>] and goto state 62
Result : <list @ 0x7f0d4a8c3708> (['PointerType', ['*'], ['BaseType', ['Ty ...)
State  : 62
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList PointerType . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [TypeLit -> PointerType] with [<list @ 0x7f0d4a8c3708>] and goto state 56
Result : <list @ 0x7f0d4a8c38c8> (['TypeLit', ['PointerType', ['*'], ['Bas ...)
State  : 56
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList TypeLit . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [Type -> TypeLit] with [<list @ 0x7f0d4a8c38c8>] and goto state 326
Result : <list @ 0x7f0d4a8c3c88> (['Type', ['TypeLit', ['PointerType', ['* ...)
State  : 326
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList Type . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [FieldDecl -> IdentifierList Type] with [<list @ 0x7f0d4a9d8f48>,<list @ 0x7f0d4a8c3c88>] and goto state 248
Result : <list @ 0x7f0d4a8c3d08> (['FieldDecl', ['IdentifierList', ['right ...)
State  : 248
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl . LexToken(SEMICOLON,';',13,16,169)
Action : Shift and goto state 325
State  : 325
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON . LexToken(IDENT,'parent',14,5,175)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT . LexToken(MUL,'*',14,12,182)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a8c3dc8> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT IdentifierOth . LexToken(MUL,'*',14,12,182)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['parent',<list @ 0x7f0d4a8c3dc8>] and goto state 249
Result : <list @ 0x7f0d4a9d8ac8> (['IdentifierList', ['parent'],,12,165)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL IDENT . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [TypeName -> IDENT] with ['Node'] and goto state 55
Result : <list @ 0x7f0d4a8c3388> (['TypeName', ['Node']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL TypeName . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4a8c3388>] and goto state 138
Result : <list @ 0x7f0d4a8c36c8> (['Type', ['TypeName', ['Node']]])
State  : 138
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL Type . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [BaseType -> Type] with [<list @ 0x7f0d4a8c36c8>] and goto state 137
Result : <list @ 0x7f0d4a8c3408> (['BaseType', ['Type', ['TypeName', ['Nod ...)
State  : 137
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL BaseType . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [PointerType -> MUL BaseType] with ['*',<list @ 0x7f0d4a8c3408>] and goto state 62
Result : <list @ 0x7f0d4a8c3708> (['PointerType', ['*'], ['BaseType', ['Ty ...)
State  : 62
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList PointerType . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [TypeLit -> PointerType] with [<list @ 0x7f0d4a8c3708>] and goto state 56
Result : <list @ 0x7f0d4a8c38c8> (['TypeLit', ['PointerType', ['*'], ['Bas ...)
State  : 56
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList TypeLit . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [Type -> TypeLit] with [<list @ 0x7f0d4a8c38c8>] and goto state 326
Result : <list @ 0x7f0d4a8c3c88> (['Type', ['TypeLit', ['PointerType', ['* ...)
State  : 326
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList Type . LexToken(SEMICOLON,';',13,16,169)
Action : Reduce rule [FieldDecl -> IdentifierList Type] with [<list @ 0x7f0d4a9d8f48>,<list @ 0x7f0d4a8c3c88>] and goto state 248
Result : <list @ 0x7f0d4a8c3d08> (['FieldDecl', ['IdentifierList', ['right ...)
State  : 248
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl . LexToken(SEMICOLON,';',13,16,169)
Action : Shift and goto state 325
State  : 325
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON . LexToken(IDENT,'parent',14,5,175)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT . LexToken(MUL,'*',14,12,182)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a8c3dc8> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IDENT IdentifierOth . LexToken(MUL,'*',14,12,182)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['parent',<list @ 0x7f0d4a8c3dc8>] and goto state 249
Result : <list @ 0x7f0d4a9d8ac8> (['IdentifierList', ['parent'], ['Identif ...)
 ['Identif ...)
State  : 249
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList . LexToken(MUL,'*',14,12,182)
Action : Shift and goto state 68
State  : 68
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL . LexToken(IDENT,'Node',14,13,183)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL IDENT . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [TypeName -> IDENT] with ['Node'] and goto state 55
Result : <list @ 0x7f0d4aa65bc8> (['TypeName', ['Node']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL TypeName . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4aa65bc8>] and goto state 138
Result : <list @ 0x7f0d4aa65908> (['Type', ['TypeName', ['Node']]])
State  : 138
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL Type . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [BaseType -> Type] with [<list @ 0x7f0d4aa65908>] and goto state 137
Result : <list @ 0x7f0d4aa65c08> (['BaseType', ['Type', ['TypeName', ['Nod ...)
State  : 137
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL BaseType . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [PointerType -> MUL BaseType] with ['*',<list @ 0x7f0d4aa65c08>] and goto state 62
Result : <list @ 0x7f0d4aa658c8> (['PointerType', ['*'], ['BaseType', ['Ty ...)
State  : 62
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList PointerType . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [TypeLit -> PointerType] with [<list @ 0x7f0d4aa658c8>] and goto state 56
Result : <list @ 0x7f0d4aa65548> (['TypeLit', ['PointerType', ['*'], ['Bas ...)
State  : 56
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList TypeLit . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [Type -> TypeLit] with [<list @ 0x7f0d4aa65548>] and goto state 326
Result : <list @ 0x7f0d4a8c4308> (['Type', ['TypeLit', ['PointerType', ['* ...)
State  : 326
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList Type . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [FieldDecl -> IdentifierList Type] with [<list @ 0x7f0d4a9d8ac8>,<list @ 0x7f0d4a8c4308>] and goto state 248
Result : <list @ 0x7f0d4a8c4348> (['FieldDecl', ['IdentifierList', ['paren ...)
State  : 248
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl . LexToken(SEMICOLON,';',14,17,187)
Action : Shift and goto state 325
State  : 325
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> <empty>] with [] and goto state 365
Result : <list @ 0x7f0d4a8c43c8> (['FieldDeclMult'])
StState  : 249
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList . LexToken(MUL,'*',14,12,182)
Action : Shift and goto state 68
State  : 68
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL . LexToken(IDENT,'Node',14,13,183)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL IDENT . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [TypeName -> IDENT] with ['Node'] and goto state 55
Result : <list @ 0x7f0d4aa65bc8> (['TypeName', ['Node']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL TypeName . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4aa65bc8>] and goto state 138
Result : <list @ 0x7f0d4aa65908> (['Type', ['TypeName', ['Node']]])
State  : 138
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL Type . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [BaseType -> Type] with [<list @ 0x7f0d4aa65908>] and goto state 137
Result : <list @ 0x7f0d4aa65c08> (['BaseType', ['Type', ['TypeName', ['Nod ...)
State  : 137
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList MUL BaseType . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [PointerType -> MUL BaseType] with ['*',<list @ 0x7f0d4aa65c08>] and goto state 62
Result : <list @ 0x7f0d4aa658c8> (['PointerType', ['*'], ['BaseType', ['Ty ...)
State  : 62
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList PointerType . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [TypeLit -> PointerType] with [<list @ 0x7f0d4aa658c8>] and goto state 56
Result : <list @ 0x7f0d4aa65548> (['TypeLit', ['PointerType', ['*'], ['Bas ...)
State  : 56
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList TypeLit . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [Type -> TypeLit] with [<list @ 0x7f0d4aa65548>] and goto state 326
Result : <list @ 0x7f0d4a8c4308> (['Type', ['TypeLit', ['PointerType', ['* ...)
State  : 326
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON IdentifierList Type . LexToken(SEMICOLON,';',14,17,187)
Action : Reduce rule [FieldDecl -> IdentifierList Type] with [<list @ 0x7f0d4a9d8ac8>,<list @ 0x7f0d4a8c4308>] and goto state 248
Result : <list @ 0x7f0d4a8c4348> (['FieldDecl', ['IdentifierList', ['paren ...)
State  : 248
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl . LexToken(SEMICOLON,';',14,17,187)
Action : Shift and goto state 325
State  : 325
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> <empty>] with [] and goto state 365
Result : <list @ 0x7f0d4a8c43c8> (['FieldDeclMult'])
State  : 365
Defaulted state 365: Reduce using 40
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult] with [<list @ 0x7f0d4a8c4348>,';',<list @ 0x7f0d4a8c43c8>] and goto state 365
Result : <list @ 0x7f0d4a8c4d48> (['FieldDeclMult', ['FieldDecl', ['Identi ...)
State  : 365
Defaulted state 365: Reduce using 40
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult] with [<list @ 0x7f0d4a8c3d08>,';',<list @ 0x7f0d4a8c4d48>] and goto state 365
Result : <list @ 0x7f0d4a8c4508> (['FieldDeclMult', ['FieldDecl', ['Identi ...)
State  : 365
Defaulted state 365: Reduce using 40
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult] with [<list @ 0x7f0d4a8c2fc8>,';',<list @ 0x7f0d4a8c4508>] and goto state 365
Result : <list @ 0x7f0d4a8c4688> (['FieldDeclMult', ['FieldDecl', ['Identi ...)
State  : 365
Defaulted state 365: Reduce using 40
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult] with [<list @ 0x7f0d4a8c25c8>,';',<list @ 0x7f0d4a8c4688>] and goto state 365
Result : <list @ 0x7f0d4aa875c8> (['FieldDeclMult', ['FieldDecl', ['Identi ...)
State  : 365
Defaulted state 365: Reduce using 40
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult] with [<list @ 0x7f0d4a8c2048>,';',<list @ 0x7f0d4aa875c8>] and goto state 365
Result : <list @ 0x7f0d4a92b488> (['FieldDeclMult', ['FieldDecl', ['Identi ...)
State  : 365
Defaulted state 365: Reduce using 40
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult] with [<list @ 0x7f0d4a8c1bc8>,';',<list @ 0x7f0d4a92b488>] and goto state 247
Result : <list @ 0x7f0d4aa65cc8> (['FieldDeclMult', ['FieldDecl', ['Identi ...)
State  : 247
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Shift and goto state 324
State  : 324
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDeclMult RBRACE . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [StructType -> STRUCT LBRACE FieldDeclMult RBRACE] with ['struct','{',<list @ 0x7f0d4aa65cc8>,'}'] and goto state 61
Result : <list @ 0x7f0d4aa65888> (['StructType', ['struct'], ['{'], ['Fiel ...)
State  : 61
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT StructType . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [TypeLit -> StructType] with [<list @ 0x7f0d4aa65888>] and goto state 56
Result : <list @ 0x7f0d4aa656c8> (['TypeLit', ['StructType', ['struct'], [ ...)
State  : 56
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT TypeLit . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [Type -> TypeLit] with [<list @ 0x7f0d4aa656c8>] and goto state 80
Result : <list @ 0x7f0d4aa65948> (['Type', ['TypeLit', ['StructType', ['st ...)
State  : 80
Defaulted state 80: Reduce using 151
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT Type . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule ate  : 365
Defaulted state 365: Reduce using 40
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult] with [<list @ 0x7f0d4a8c4348>,';',<list @ 0x7f0d4a8c43c8>] and goto state 365
Result : <list @ 0x7f0d4a8c4d48> (['FieldDeclMult', ['FieldDecl', ['Identi ...)
State  : 365
Defaulted state 365: Reduce using 40
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult] with [<list @ 0x7f0d4a8c3d08>,';',<list @ 0x7f0d4a8c4d48>] and goto state 365
Result : <list @ 0x7f0d4a8c4508> (['FieldDeclMult', ['FieldDecl', ['Identi ...)
State  : 365
Defaulted state 365: Reduce using 40
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult] with [<list @ 0x7f0d4a8c2fc8>,';',<list @ 0x7f0d4a8c4508>] and goto state 365
Result : <list @ 0x7f0d4a8c4688> (['FieldDeclMult', ['FieldDecl', ['Identi ...)
State  : 365
Defaulted state 365: Reduce using 40
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult] with [<list @ 0x7f0d4a8c25c8>,';',<list @ 0x7f0d4a8c4688>] and goto state 365
Result : <list @ 0x7f0d4aa875c8> (['FieldDeclMult', ['FieldDecl', ['Identi ...)
State  : 365
Defaulted state 365: Reduce using 40
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDecl SEMICOLON FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult] with [<list @ 0x7f0d4a8c2048>,';',<list @ 0x7f0d4aa875c8>] and goto state 365
Result : <list @ 0x7f0d4a92b488> (['FieldDeclMult', ['FieldDecl', ['Identi ...)
State  : 365
Defaulted state 365: Reduce using 40
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDecl SEMICOLON FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Reduce rule [FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult] with [<list @ 0x7f0d4a8c1bc8>,';',<list @ 0x7f0d4a92b488>] and goto state 247
Result : <list @ 0x7f0d4aa65cc8> (['FieldDeclMult', ['FieldDecl', ['Identi ...)
State  : 247
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDeclMult . LexToken(RBRACE,'}',15,1,189)
Action : Shift and goto state 324
State  : 324
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT STRUCT LBRACE FieldDeclMult RBRACE . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [StructType -> STRUCT LBRACE FieldDeclMult RBRACE] with ['struct','{',<list @ 0x7f0d4aa65cc8>,'}'] and goto state 61
Result : <list @ 0x7f0d4aa65888> (['StructType', ['struct'], ['{'], ['Fiel ...)
State  : 61
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT StructType . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [TypeLit -> StructType] with [<list @ 0x7f0d4aa65888>] and goto state 56
Result : <list @ 0x7f0d4aa656c8> (['TypeLit', ['StructType', ['struct'], [ ...)
State  : 56
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT TypeLit . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [Type -> TypeLit] with [<list @ 0x7f0d4aa656c8>] and goto state 80
Result : <list @ 0x7f0d4aa65948> (['Type', ['TypeLit', ['StructType', ['st ...)
State  : 80
Defaulted state 80: Reduce using 151
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE IDENT Type . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [Typedef -> IDENT Type] with ['Node',<list @ 0x7f0d4aa65948>] and goto state 41
[Typedef -> IDENT Type] with ['Node',<list @ 0x7f0d4aa65948>] and goto state 41
Result : <list @ 0x7f0d4aa65a88> (['TypeDef', ['Node'], ['Type', ['TypeLit ...)
State  : 41
Defaulted state 41: Reduce using 149
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE Typedef . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [TypeSpec -> Typedef] with [<list @ 0x7f0d4aa65a88>] and goto state 38
Result : <list @ 0x7f0d4a9d8c48> (['TypeSpec', ['TypeDef', ['Node'], ['Typ ...)
State  : 38
Defaulted state 38: Reduce using 144
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE TypeSpec . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [TypeDecl -> TYPE TypeSpec] with ['type',<list @ 0x7f0d4a9d8c48>] and goto state 16
Result : <list @ 0x7f0d4aa65808> (['TypeDecl', ['type'], ['TypeSpec', ['Ty ...)
State  : 16
Defaulted state 16: Reduce using 20
Stack  : PackageClause SEMICOLON ImportDeclMult TypeDecl . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [Decl -> TypeDecl] with [<list @ 0x7f0d4aa65808>] and goto state 12
Result : <list @ 0x7f0d4aa65608> (['Decl', ['TypeDecl', ['type'], ['TypeSp ...)
State  : 12
Defaulted state 12: Reduce using 16
Stack  : PackageClause SEMICOLON ImportDeclMult Decl . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [TopLevelDecl -> Decl] with [<list @ 0x7f0d4aa65608>] and goto state 11
Result : <list @ 0x7f0d4ae26588> (['TopLevelDecl', ['Decl', ['TypeDecl', [ ...)
State  : 11
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl . LexToken(SEMICOLON,';',15,2,190)
Action : Shift and goto state 28
State  : 28
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON . LexToken(FUNC,'func',17,1,193)
Action : Shift and goto state 17
State  : 17
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC . LexToken(IDENT,'visit',17,6,198)
Action : Shift and goto state 30
State  : 30
Defaulted state 30: Reduce using 162
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC IDENT . None
Action : Reduce rule [FunctionName -> IDENT] with ['visit'] and goto state 29
Result : <list @ 0x7f0d4aa65788> (['FunctionName', ['visit']])
State  : 29
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName . LexToken(LPAREN,'(',17,11,203)
Action : Shift and goto state 51
State  : 51
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN . LexToken(IDENT,'nodeptr',17,12,204)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IDENT . LexToken(MUL,'*',17,20,212)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4aa65748> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IDENT IdentifierOth . LexToken(MUL,'*',17,20,212)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['nodeptr',<list @ 0x7f0d4aa65748>] and goto state 95
Result : <list @ 0x7f0d4aa65688> (['IdentifierList', ['nodeptr'], ['Identi ...)
State  : 95
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList . LexToken(MUL,'*',17,20,212)
Action : Shift and goto state 68
State  : 68
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList MUL . LexToken(IDENT,'Node',17,21,213)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList MUL IDENT . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [TypeName -> IDENT] with ['Node'] and goto state 55
Result : <list @ 0x7f0d4aad04c8> (['TypeName', ['Node']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList MUL TypeName . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4aad04c8>] and goto state 138
Result : <list @ 0x7f0d4addee08> (['Type', ['TypeName', ['Node']]])
State  : 138
Stack  : PackageClause SEMICResult : <list @ 0x7f0d4aa65a88> (['TypeDef', ['Node'], ['Type', ['TypeLit ...)
State  : 41
Defaulted state 41: Reduce using 149
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE Typedef . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [TypeSpec -> Typedef] with [<list @ 0x7f0d4aa65a88>] and goto state 38
Result : <list @ 0x7f0d4a9d8c48> (['TypeSpec', ['TypeDef', ['Node'], ['Typ ...)
State  : 38
Defaulted state 38: Reduce using 144
Stack  : PackageClause SEMICOLON ImportDeclMult TYPE TypeSpec . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [TypeDecl -> TYPE TypeSpec] with ['type',<list @ 0x7f0d4a9d8c48>] and goto state 16
Result : <list @ 0x7f0d4aa65808> (['TypeDecl', ['type'], ['TypeSpec', ['Ty ...)
State  : 16
Defaulted state 16: Reduce using 20
Stack  : PackageClause SEMICOLON ImportDeclMult TypeDecl . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [Decl -> TypeDecl] with [<list @ 0x7f0d4aa65808>] and goto state 12
Result : <list @ 0x7f0d4aa65608> (['Decl', ['TypeDecl', ['type'], ['TypeSp ...)
State  : 12
Defaulted state 12: Reduce using 16
Stack  : PackageClause SEMICOLON ImportDeclMult Decl . LexToken(SEMICOLON,';',15,2,190)
Action : Reduce rule [TopLevelDecl -> Decl] with [<list @ 0x7f0d4aa65608>] and goto state 11
Result : <list @ 0x7f0d4ae26588> (['TopLevelDecl', ['Decl', ['TypeDecl', [ ...)
State  : 11
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl . LexToken(SEMICOLON,';',15,2,190)
Action : Shift and goto state 28
State  : 28
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON . LexToken(FUNC,'func',17,1,193)
Action : Shift and goto state 17
State  : 17
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC . LexToken(IDENT,'visit',17,6,198)
Action : Shift and goto state 30
State  : 30
Defaulted state 30: Reduce using 162
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC IDENT . None
Action : Reduce rule [FunctionName -> IDENT] with ['visit'] and goto state 29
Result : <list @ 0x7f0d4aa65788> (['FunctionName', ['visit']])
State  : 29
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName . LexToken(LPAREN,'(',17,11,203)
Action : Shift and goto state 51
State  : 51
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN . LexToken(IDENT,'nodeptr',17,12,204)
Action : Shift and goto state 96
State  : 96
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IDENT . LexToken(MUL,'*',17,20,212)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4aa65748> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IDENT IdentifierOth . LexToken(MUL,'*',17,20,212)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['nodeptr',<list @ 0x7f0d4aa65748>] and goto state 95
Result : <list @ 0x7f0d4aa65688> (['IdentifierList', ['nodeptr'], ['Identi ...)
State  : 95
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList . LexToken(MUL,'*',17,20,212)
Action : Shift and goto state 68
State  : 68
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList MUL . LexToken(IDENT,'Node',17,21,213)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList MUL IDENT . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [TypeName -> IDENT] with ['Node'] and goto state 55
Result : <list @ 0x7f0d4aad04c8> (['TypeName', ['Node']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList MUL TypeName . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4aad04c8>] and goto state 138
Result : <list @ 0x7f0d4addee08> (['Type', ['TypeName', ['Node']]])
State  : 138
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList MUL Type . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [BaseType -> Type] with [<list @ 0x7f0d4addee08>] and goto state 137
Result : <list @ 0x7f0d4addea48> (['BaseType', ['Type', ['TypeName', ['Nod ...)
State  : 137
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList MUL BaseType . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [PointerType -> MUL BaseType] with ['*',<list @ 0x7f0d4addea48>] and goto state 62
Result : <list @ 0x7f0d4adde988> (['PointerType', ['*'], ['BaseType', ['Ty ...)
State  : 62
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList PointerType . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [TypeLit -> PointerType] with [<list @ 0x7f0d4adde988>] and goto state 56
Result : <list @ 0x7f0d4adde888> (['TypeLit', ['PointerType', ['*'], ['Bas ...)
State  : 56
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList TypeLit . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [Type -> TypeLit] with [<list @ 0x7f0d4adde888>] and goto state 190
Result : <list @ 0x7f0d4adf2908> (['Type', ['TypeLit', ['PointerType', ['* ...)
State  : 190
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList Type . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [ParameterDecl -> IdentifierList Type] with [<list @ 0x7f0d4aa65688>,<list @ 0x7f0d4adf2908>] and goto state 93
Result : <list @ 0x7f0d4adf2f08> (['ParameterDecl', ['IdentifierList', ['n ...)
State  : 93
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN ParameterDecl . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [ParameterList -> ParameterDecl] with [<list @ 0x7f0d4adf2f08>] and goto state 91
Result : <list @ 0x7f0d4adf2348> (['ParameterList', ['ParameterDecl', ['Id ...)
State  : 91
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN ParameterList . LexToken(RPAREN,')',17,25,217)
Action : Shift and goto state 187
State  : 187
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN ParameterList RPAREN . LexToken(IDENT,'int',17,27,219)
Action : Reduce rule [Parameters -> LPAREN ParameterList RPAREN] with ['(',<list @ 0x7f0d4adf2348>,')'] and goto state 50
Result : <list @ 0x7f0d4adf2dc8> (['Parameters', ['('], ['ParameterList',  ...)
State  : 50
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Parameters . LexToken(IDENT,'int',17,27,219)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Parameters IDENT . LexToken(LBRACE,'{',17,31,223)
Action : Reduce rule [TypeName -> IDENT] with ['int'] and goto state 55
Result : <list @ 0x7f0d4adf2ec8> (['TypeName', ['int']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Parameters TypeName . LexToken(LBRACE,'{',17,31,223)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4adf2ec8>] and goto state 88
Result : <list @ 0x7f0d4aac9cc8> (['Type', ['TypeName', ['int']]])
State  : 88
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Parameters Type . LexToken(LBRACE,'{',17,31,223)
Action : Reduce rule [Result -> Type] with [<list @ 0x7f0d4aac9cc8>] and goto state 87
Result : <list @ 0x7f0d4aac9e48> (['Result', ['Type', ['TypeName', ['int'] ...)
State  : 87
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Parameters Result . LexToken(LBRACE,'{',17,31,223)
Action : Reduce rule [Signature -> Parameters Result] with [<list @ 0x7f0d4adf2dc8>,<list @ 0x7f0d4aac9e48>] and goto state 49
Result : <list @ 0x7f0d4aac9c08> (['Signature', ['Parameters', ['('], ['Pa ...)
State  : 49
Stack  : PackageClause SEMICOLON ImportDecOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList MUL Type . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [BaseType -> Type] with [<list @ 0x7f0d4addee08>] and goto state 137
Result : <list @ 0x7f0d4addea48> (['BaseType', ['Type', ['TypeName', ['Nod ...)
State  : 137
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList MUL BaseType . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [PointerType -> MUL BaseType] with ['*',<list @ 0x7f0d4addea48>] and goto state 62
Result : <list @ 0x7f0d4adde988> (['PointerType', ['*'], ['BaseType', ['Ty ...)
State  : 62
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList PointerType . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [TypeLit -> PointerType] with [<list @ 0x7f0d4adde988>] and goto state 56
Result : <list @ 0x7f0d4adde888> (['TypeLit', ['PointerType', ['*'], ['Bas ...)
State  : 56
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList TypeLit . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [Type -> TypeLit] with [<list @ 0x7f0d4adde888>] and goto state 190
Result : <list @ 0x7f0d4adf2908> (['Type', ['TypeLit', ['PointerType', ['* ...)
State  : 190
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN IdentifierList Type . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [ParameterDecl -> IdentifierList Type] with [<list @ 0x7f0d4aa65688>,<list @ 0x7f0d4adf2908>] and goto state 93
Result : <list @ 0x7f0d4adf2f08> (['ParameterDecl', ['IdentifierList', ['n ...)
State  : 93
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN ParameterDecl . LexToken(RPAREN,')',17,25,217)
Action : Reduce rule [ParameterList -> ParameterDecl] with [<list @ 0x7f0d4adf2f08>] and goto state 91
Result : <list @ 0x7f0d4adf2348> (['ParameterList', ['ParameterDecl', ['Id ...)
State  : 91
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN ParameterList . LexToken(RPAREN,')',17,25,217)
Action : Shift and goto state 187
State  : 187
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName LPAREN ParameterList RPAREN . LexToken(IDENT,'int',17,27,219)
Action : Reduce rule [Parameters -> LPAREN ParameterList RPAREN] with ['(',<list @ 0x7f0d4adf2348>,')'] and goto state 50
Result : <list @ 0x7f0d4adf2dc8> (['Parameters', ['('], ['ParameterList',  ...)
State  : 50
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Parameters . LexToken(IDENT,'int',17,27,219)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Parameters IDENT . LexToken(LBRACE,'{',17,31,223)
Action : Reduce rule [TypeName -> IDENT] with ['int'] and goto state 55
Result : <list @ 0x7f0d4adf2ec8> (['TypeName', ['int']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Parameters TypeName . LexToken(LBRACE,'{',17,31,223)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4adf2ec8>] and goto state 88
Result : <list @ 0x7f0d4aac9cc8> (['Type', ['TypeName', ['int']]])
State  : 88
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Parameters Type . LexToken(LBRACE,'{',17,31,223)
Action : Reduce rule [Result -> Type] with [<list @ 0x7f0d4aac9cc8>] and goto state 87
Result : <list @ 0x7f0d4aac9e48> (['Result', ['Type', ['TypeName', ['int'] ...)
State  : 87
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Parameters Result . LexToken(LBRACE,'{',17,31,223)
Action : Reduce rule [Signature -> Parameters Result] with [<list @ 0x7f0d4adf2dc8>,<list @ 0x7f0d4aac9e48>] and goto state 49
Result : <list @ 0x7f0d4aac9c08> (['Signature', ['Parameters', ['('], ['Pa ...)
State  : 49
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature . LexToken(LBRACE,'{',17,31,223)
lMult TopLevelDecl SEMICOLON FUNC FunctionName Signature . LexToken(LBRACE,'{',17,31,223)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE . LexToken(IF,'if',18,5,229)
Action : Shift and goto state 177
State  : 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF . LexToken(IDENT,'nodeptr',18,8,232)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF IDENT . LexToken(EQL,'==',18,16,240)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aac9e88> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF OperandName . LexToken(EQL,'==',18,16,240)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aac9e88>] and goto state 108
Result : <list @ 0x7f0d4aac9d08> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Operand . LexToken(EQL,'==',18,16,240)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aac9d08>] and goto state 106
Result : <list @ 0x7f0d4aac9ec8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF PrimaryExpr . LexToken(EQL,'==',18,16,240)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aac9ec8>] and goto state 105
Result : <list @ 0x7f0d4aac9f08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF UnaryExpr . LexToken(EQL,'==',18,16,240)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aac9f08>] and goto state 284
Result : <list @ 0x7f0d4aac9d88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr . LexToken(EQL,'==',18,16,240)
Action : Shift and goto state 204
State  : 204
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr EQL . LexToken(IDENT,'nil',18,19,243)
Action : Reduce rule [RelOp -> EQL] with ['=='] and goto state 201
Result : <list @ 0x7f0d4aac9dc8> (['RelOp', ['==']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr RelOp . LexToken(IDENT,'nil',18,19,243)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4aac9dc8>] and goto state 198
Result : <list @ 0x7f0d4aadf488> (['BinOp', ['RelOp', ['==']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp . LexToken(IDENT,'nil',18,19,243)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp IDENT . LexToken(LBRACE,'{',18,23,247)
Action : Reduce rule [OperandName -> IDENT] with ['nil'] and goto state 117
Result : <list @ 0x7f0d4aadfa88> (['OperandName', ['nil']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp OperandName . LexToken(LBRACE,'{',18,23,247)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aadfa88>] and goto state 108
Result : <list @ 0x7f0d4aadf208> (['Operand', ['OperandName', ['nil']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp Operand . LexToken(LBRACE,'{',18,23,247)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aadf208>] and goto state 106
Result : <list @ 0x7f0d4aadf708> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PacAction : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE . LexToken(IF,'if',18,5,229)
Action : Shift and goto state 177
State  : 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF . LexToken(IDENT,'nodeptr',18,8,232)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF IDENT . LexToken(EQL,'==',18,16,240)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aac9e88> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF OperandName . LexToken(EQL,'==',18,16,240)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aac9e88>] and goto state 108
Result : <list @ 0x7f0d4aac9d08> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Operand . LexToken(EQL,'==',18,16,240)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aac9d08>] and goto state 106
Result : <list @ 0x7f0d4aac9ec8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF PrimaryExpr . LexToken(EQL,'==',18,16,240)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aac9ec8>] and goto state 105
Result : <list @ 0x7f0d4aac9f08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF UnaryExpr . LexToken(EQL,'==',18,16,240)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aac9f08>] and goto state 284
Result : <list @ 0x7f0d4aac9d88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr . LexToken(EQL,'==',18,16,240)
Action : Shift and goto state 204
State  : 204
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr EQL . LexToken(IDENT,'nil',18,19,243)
Action : Reduce rule [RelOp -> EQL] with ['=='] and goto state 201
Result : <list @ 0x7f0d4aac9dc8> (['RelOp', ['==']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr RelOp . LexToken(IDENT,'nil',18,19,243)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4aac9dc8>] and goto state 198
Result : <list @ 0x7f0d4aadf488> (['BinOp', ['RelOp', ['==']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp . LexToken(IDENT,'nil',18,19,243)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp IDENT . LexToken(LBRACE,'{',18,23,247)
Action : Reduce rule [OperandName -> IDENT] with ['nil'] and goto state 117
Result : <list @ 0x7f0d4aadfa88> (['OperandName', ['nil']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp OperandName . LexToken(LBRACE,'{',18,23,247)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aadfa88>] and goto state 108
Result : <list @ 0x7f0d4aadf208> (['Operand', ['OperandName', ['nil']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp Operand . LexToken(LBRACE,'{',18,23,247)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aadf208>] and goto state 106
Result : <list @ 0x7f0d4aadf708> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp PrimaryExpr . LexToken(LBRACE,'{',18,23,247)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aadf708>] and goto state 105
Result : <list @ 0x7f0d4aadf088> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp UnaryExpr . LexToken(LBRACE,'{',18,23,247)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aadf088>] and goto state 304
Result : <list @ 0x7f0d4aadf108> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp Expr . LexToken(LBRACE,'{',18,23,247)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aac9d88>,<list @ 0x7f0d4aadf488>,<list @ 0x7f0d4aadf108>] and goto state 284
Result : <list @ 0x7f0d4aadf1c8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr . LexToken(LBRACE,'{',18,23,247)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE . LexToken(RETURN,'return',19,9,257)
Action : Shift and goto state 172
State  : 172
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN . LexToken(INT,'0',19,16,264)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN INT . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [BasicLit -> INT] with ['0'] and goto state 120
Result : <list @ 0x7f0d4aadf288> (['BasicLit', ['0']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN BasicLit . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aadf288>] and goto state 116
Result : <list @ 0x7f0d4aadf3c8> (['Lit', ['BasicLit', ['0']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN Lit . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aadf3c8>] and goto state 108
Result : <list @ 0x7f0d4aadf0c8> (['Operand', ['Lit', ['BasicLit', ['0']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN Operand . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aadf0c8>] and goto state 106
Result : <list @ 0x7f0d4aadf348> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN PrimaryExpr . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aadf348>] and goto state 105
Result : <list @ 0x7f0d4aadfa48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN UnaryExpr . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aadfa48>] and goto state 146
Result : <list @ 0x7f0d4aab10c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN Expr . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aab1048> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMkageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp PrimaryExpr . LexToken(LBRACE,'{',18,23,247)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aadf708>] and goto state 105
Result : <list @ 0x7f0d4aadf088> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp UnaryExpr . LexToken(LBRACE,'{',18,23,247)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aadf088>] and goto state 304
Result : <list @ 0x7f0d4aadf108> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr BinOp Expr . LexToken(LBRACE,'{',18,23,247)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aac9d88>,<list @ 0x7f0d4aadf488>,<list @ 0x7f0d4aadf108>] and goto state 284
Result : <list @ 0x7f0d4aadf1c8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr . LexToken(LBRACE,'{',18,23,247)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE . LexToken(RETURN,'return',19,9,257)
Action : Shift and goto state 172
State  : 172
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN . LexToken(INT,'0',19,16,264)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN INT . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [BasicLit -> INT] with ['0'] and goto state 120
Result : <list @ 0x7f0d4aadf288> (['BasicLit', ['0']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN BasicLit . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aadf288>] and goto state 116
Result : <list @ 0x7f0d4aadf3c8> (['Lit', ['BasicLit', ['0']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN Lit . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aadf3c8>] and goto state 108
Result : <list @ 0x7f0d4aadf0c8> (['Operand', ['Lit', ['BasicLit', ['0']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN Operand . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aadf0c8>] and goto state 106
Result : <list @ 0x7f0d4aadf348> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN PrimaryExpr . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aadf348>] and goto state 105
Result : <list @ 0x7f0d4aadfa48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN UnaryExpr . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aadfa48>] and goto state 146
Result : <list @ 0x7f0d4aab10c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN Expr . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aab1048> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN Expr ExprOth . LexToken(SEMICOLON,';',19,17,265)
ICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN Expr ExprOth . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aab10c8>,['ExprOth']] and goto state 266
Result : <list @ 0x7f0d4aae5c88> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 266
Defaulted state 266: Reduce using 215
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN ExpressionList . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [ReturnStmt -> RETURN ExpressionList] with ['return',<list @ 0x7f0d4aae5c88>] and goto state 157
Result : <list @ 0x7f0d4aa65b48> (['ReturnStmt', ['return'], ['ExpressionL ...)
State  : 157
Defaulted state 157: Reduce using 181
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE ReturnStmt . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [Statement -> ReturnStmt] with [<list @ 0x7f0d4aa65b48>] and goto state 152
Result : <list @ 0x7f0d4aae5dc8> (['Statement', ['ReturnStmt', ['return'], ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement . LexToken(SEMICOLON,';',19,17,265)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',20,5,271)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aae5cc8> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',20,5,271)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aae5dc8>,';',<list @ 0x7f0d4aae5cc8>] and goto state 151
Result : <list @ 0x7f0d4aae5b08> (['StatementList', ['Statement', ['Return ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',20,5,271)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',20,6,272)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aae5b08>,'}'] and goto state 335
Result : <list @ 0x7f0d4aae5948> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr Block . LexToken(SEMICOLON,';',20,6,272)
Action : Reduce rule [else_stmt -> <empty>] with [] and goto state 369
Result : <list @ 0x7f0d4aae50c8> (['else_stmt'])
State  : 369
Defaulted state 369: Reduce using 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr Block else_stmt . LexToken(SEMICOLON,';',20,6,272)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f0d4aadf1c8>,<list @ 0x7f0d4aae5948>,['else_stmt']] and goto state 162
Result : <list @ 0x7f0d4aae5d48> (['IfStmt', ['if'], ['Expr', ['Expr', ['U ...)
State  : 162
Defaulted state 162: Reduce using 186
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IfStmt . LexToken(SEMICOLON,';',20,6,272)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f0d4aae5d48>] and goto state 152
Result : <list @ 0x7f0d4aae5088> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement . LexToken(SEMICOLON,';',20,6,272)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON . LexToken(IDENT,'node',21,5,278)
Action : Shift and goto state 182Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aab10c8>,['ExprOth']] and goto state 266
Result : <list @ 0x7f0d4aae5c88> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 266
Defaulted state 266: Reduce using 215
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE RETURN ExpressionList . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [ReturnStmt -> RETURN ExpressionList] with ['return',<list @ 0x7f0d4aae5c88>] and goto state 157
Result : <list @ 0x7f0d4aa65b48> (['ReturnStmt', ['return'], ['ExpressionL ...)
State  : 157
Defaulted state 157: Reduce using 181
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE ReturnStmt . LexToken(SEMICOLON,';',19,17,265)
Action : Reduce rule [Statement -> ReturnStmt] with [<list @ 0x7f0d4aa65b48>] and goto state 152
Result : <list @ 0x7f0d4aae5dc8> (['Statement', ['ReturnStmt', ['return'], ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement . LexToken(SEMICOLON,';',19,17,265)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',20,5,271)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aae5cc8> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',20,5,271)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aae5dc8>,';',<list @ 0x7f0d4aae5cc8>] and goto state 151
Result : <list @ 0x7f0d4aae5b08> (['StatementList', ['Statement', ['Return ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',20,5,271)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',20,6,272)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aae5b08>,'}'] and goto state 335
Result : <list @ 0x7f0d4aae5948> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr Block . LexToken(SEMICOLON,';',20,6,272)
Action : Reduce rule [else_stmt -> <empty>] with [] and goto state 369
Result : <list @ 0x7f0d4aae50c8> (['else_stmt'])
State  : 369
Defaulted state 369: Reduce using 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IF Expr Block else_stmt . LexToken(SEMICOLON,';',20,6,272)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f0d4aadf1c8>,<list @ 0x7f0d4aae5948>,['else_stmt']] and goto state 162
Result : <list @ 0x7f0d4aae5d48> (['IfStmt', ['if'], ['Expr', ['Expr', ['U ...)
State  : 162
Defaulted state 162: Reduce using 186
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE IfStmt . LexToken(SEMICOLON,';',20,6,272)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f0d4aae5d48>] and goto state 152
Result : <list @ 0x7f0d4aae5088> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement . LexToken(SEMICOLON,';',20,6,272)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON . LexToken(IDENT,'node',21,5,278)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IDENT . LexToken(DEFINE,':=',21,10,283)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4aae5808> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IDENT IdentifierOth . LexToken(DEFINE,':=',21,10,283)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['node',<list @ 0x7f0d4aae5808>] and goto state 183
Result : <list @ 0x7f0d4aae5c08> (['IdentifierList', ['node'], ['Identifie ...)
State  : 183
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList . LexToken(DEFINE,':=',21,10,283)
Action : Shift and goto state 298
State  : 298
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE . LexToken(MUL,'*',21,13,286)
Action : Shift and goto state 114
State  : 114
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE MUL . LexToken(IDENT,'nodeptr',21,14,287)
Action : Reduce rule [UnaryOp -> MUL] with ['*'] and goto state 107
Result : <list @ 0x7f0d4aae5d88> (['UnaryOp', ['*']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryOp . LexToken(IDENT,'nodeptr',21,14,287)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryOp IDENT . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aae6c88> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryOp OperandName . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aae6c88>] and goto state 108
Result : <list @ 0x7f0d4aae64c8> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryOp Operand . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aae64c8>] and goto state 106
Result : <list @ 0x7f0d4aae63c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryOp PrimaryExpr . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aae63c8>] and goto state 228
Result : <list @ 0x7f0d4aae6708> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryOp UnaryExpr . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aae5d88>,<list @ 0x7f0d4aae6708>] and goto state 105
Result : <list @ 0x7f0d4aae6648> (['UnaryExpr', ['UnaryOp', ['*']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryExpr . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aae6648>] and goto state 146
Result : <list @ 0x7f0d4aae69c8> (['Expr', ['UnaryExpr', ['UnaryOp', ['*'] ...)
State  : 146
Stack  : PackageClause SEMICOLON Imp
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IDENT . LexToken(DEFINE,':=',21,10,283)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4aae5808> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IDENT IdentifierOth . LexToken(DEFINE,':=',21,10,283)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['node',<list @ 0x7f0d4aae5808>] and goto state 183
Result : <list @ 0x7f0d4aae5c08> (['IdentifierList', ['node'], ['Identifie ...)
State  : 183
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList . LexToken(DEFINE,':=',21,10,283)
Action : Shift and goto state 298
State  : 298
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE . LexToken(MUL,'*',21,13,286)
Action : Shift and goto state 114
State  : 114
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE MUL . LexToken(IDENT,'nodeptr',21,14,287)
Action : Reduce rule [UnaryOp -> MUL] with ['*'] and goto state 107
Result : <list @ 0x7f0d4aae5d88> (['UnaryOp', ['*']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryOp . LexToken(IDENT,'nodeptr',21,14,287)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryOp IDENT . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aae6c88> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryOp OperandName . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aae6c88>] and goto state 108
Result : <list @ 0x7f0d4aae64c8> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryOp Operand . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aae64c8>] and goto state 106
Result : <list @ 0x7f0d4aae63c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryOp PrimaryExpr . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aae63c8>] and goto state 228
Result : <list @ 0x7f0d4aae6708> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryOp UnaryExpr . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aae5d88>,<list @ 0x7f0d4aae6708>] and goto state 105
Result : <list @ 0x7f0d4aae6648> (['UnaryExpr', ['UnaryOp', ['*']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE UnaryExpr . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aae6648>] and goto state 146
Result : <list @ 0x7f0d4aae69c8> (['Expr', ['UnaryExpr', ['UnaryOp', ['*'] ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE Expr . LexToken(SEMICOLON,';',21,21,294)
ortDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE Expr . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aae6cc8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE Expr ExprOth . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aae69c8>,['ExprOth']] and goto state 344
Result : <list @ 0x7f0d4aae5b48> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 344
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE ExpressionList . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [ShortVarDecl -> IdentifierList DEFINE ExpressionList] with [<list @ 0x7f0d4aae5c08>,':=',<list @ 0x7f0d4aae5b48>] and goto state 170
Result : <list @ 0x7f0d4aae6e08> (['ShortVarDecl', ['IdentifierList', ['no ...)
State  : 170
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON ShortVarDecl . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [SimpleStmt -> ShortVarDecl] with [<list @ 0x7f0d4aae6e08>] and goto state 155
Result : <list @ 0x7f0d4aae6308> (['SimpleStmt', ['ShortVarDecl', ['Identi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aae6308>] and goto state 152
Result : <list @ 0x7f0d4aae6b88> (['Statement', ['SimpleStmt', ['ShortVarD ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement . LexToken(SEMICOLON,';',21,21,294)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON . LexToken(LPAREN,'(',22,5,300)
Action : Shift and goto state 118
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN . LexToken(MUL,'*',22,6,301)
Action : Shift and goto state 114
State  : 114
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN MUL . LexToken(IDENT,'nodeptr',22,7,302)
Action : Reduce rule [UnaryOp -> MUL] with ['*'] and goto state 107
Result : <list @ 0x7f0d4aae6788> (['UnaryOp', ['*']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryOp . LexToken(IDENT,'nodeptr',22,7,302)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryOp IDENT . LexToken(RPAREN,')',22,14,309)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aab0c48> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryOp OperandName . LexToken(RPAREN,')',22,14,309)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aab0c48>] and goto state 108
Result : <list @ 0x7f0d4aab0f48> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryOp Operand . LexToken(RPAREN,')',22,14,309)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aab0f48>] and goto state 106
Result : <list @ 0x7f0d4aab0f88> (['PrimaryEAction : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aae6cc8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE Expr ExprOth . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aae69c8>,['ExprOth']] and goto state 344
Result : <list @ 0x7f0d4aae5b48> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 344
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON IdentifierList DEFINE ExpressionList . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [ShortVarDecl -> IdentifierList DEFINE ExpressionList] with [<list @ 0x7f0d4aae5c08>,':=',<list @ 0x7f0d4aae5b48>] and goto state 170
Result : <list @ 0x7f0d4aae6e08> (['ShortVarDecl', ['IdentifierList', ['no ...)
State  : 170
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON ShortVarDecl . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [SimpleStmt -> ShortVarDecl] with [<list @ 0x7f0d4aae6e08>] and goto state 155
Result : <list @ 0x7f0d4aae6308> (['SimpleStmt', ['ShortVarDecl', ['Identi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',21,21,294)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aae6308>] and goto state 152
Result : <list @ 0x7f0d4aae6b88> (['Statement', ['SimpleStmt', ['ShortVarD ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement . LexToken(SEMICOLON,';',21,21,294)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON . LexToken(LPAREN,'(',22,5,300)
Action : Shift and goto state 118
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN . LexToken(MUL,'*',22,6,301)
Action : Shift and goto state 114
State  : 114
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN MUL . LexToken(IDENT,'nodeptr',22,7,302)
Action : Reduce rule [UnaryOp -> MUL] with ['*'] and goto state 107
Result : <list @ 0x7f0d4aae6788> (['UnaryOp', ['*']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryOp . LexToken(IDENT,'nodeptr',22,7,302)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryOp IDENT . LexToken(RPAREN,')',22,14,309)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aab0c48> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryOp OperandName . LexToken(RPAREN,')',22,14,309)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aab0c48>] and goto state 108
Result : <list @ 0x7f0d4aab0f48> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryOp Operand . LexToken(RPAREN,')',22,14,309)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aab0f48>] and goto state 106
Result : <list @ 0x7f0d4aab0f88> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryOp PrimaryExpr . LexToken(RPAREN,')',22,14,309)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aab0f88>] and goto state 228
Result : <list @ 0x7f0d4aab0f08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryOp UnaryExpr . LexToken(RPAREN,')',22,14,309)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aae6788>,<list @ 0x7f0d4aab0f08>] and goto state 105
Result : <list @ 0x7f0d4aab0bc8> (['UnaryExpr', ['UnaryOp', ['*']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryExpr . LexToken(RPAREN,')',22,14,309)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aab0bc8>] and goto state 230
Result : <list @ 0x7f0d4aab0b48> (['Expr', ['UnaryExpr', ['UnaryOp', ['*'] ...)
State  : 230
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN Expr . LexToken(RPAREN,')',22,14,309)
Action : Shift and goto state 312
State  : 312
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN Expr RPAREN . LexToken(PERIOD,'.',22,15,310)
Action : Reduce rule [Operand -> LPAREN Expr RPAREN] with ['(',<list @ 0x7f0d4aab0b48>,')'] and goto state 108
Result : <list @ 0x7f0d4aab0ac8> (['Operand', ['('], ['Expr', ['UnaryExpr' ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Operand . LexToken(PERIOD,'.',22,15,310)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aab0ac8>] and goto state 106
Result : <list @ 0x7f0d4aab0948> (['PrimaryExpr', ['Operand', ['('], ['Exp ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(PERIOD,'.',22,15,310)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',22,16,311)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON PrimaryExpr PERIOD IDENT . LexToken(ADD_ASSIGN,'+=',22,29,324)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4aab08c8> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON PrimaryExpr Selector . LexToken(ADD_ASSIGN,'+=',22,29,324)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aab0948>,<list @ 0x7f0d4aab08c8>] and goto state 106
Result : <list @ 0x7f0d4aab09c8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(ADD_ASSIGN,'+=',22,29,324)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aab09c8>] and goto state 105
Result : <list @ 0x7f0d4aab0808> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON xpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryOp PrimaryExpr . LexToken(RPAREN,')',22,14,309)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aab0f88>] and goto state 228
Result : <list @ 0x7f0d4aab0f08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryOp UnaryExpr . LexToken(RPAREN,')',22,14,309)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aae6788>,<list @ 0x7f0d4aab0f08>] and goto state 105
Result : <list @ 0x7f0d4aab0bc8> (['UnaryExpr', ['UnaryOp', ['*']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN UnaryExpr . LexToken(RPAREN,')',22,14,309)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aab0bc8>] and goto state 230
Result : <list @ 0x7f0d4aab0b48> (['Expr', ['UnaryExpr', ['UnaryOp', ['*'] ...)
State  : 230
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN Expr . LexToken(RPAREN,')',22,14,309)
Action : Shift and goto state 312
State  : 312
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON LPAREN Expr RPAREN . LexToken(PERIOD,'.',22,15,310)
Action : Reduce rule [Operand -> LPAREN Expr RPAREN] with ['(',<list @ 0x7f0d4aab0b48>,')'] and goto state 108
Result : <list @ 0x7f0d4aab0ac8> (['Operand', ['('], ['Expr', ['UnaryExpr' ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Operand . LexToken(PERIOD,'.',22,15,310)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aab0ac8>] and goto state 106
Result : <list @ 0x7f0d4aab0948> (['PrimaryExpr', ['Operand', ['('], ['Exp ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(PERIOD,'.',22,15,310)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',22,16,311)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON PrimaryExpr PERIOD IDENT . LexToken(ADD_ASSIGN,'+=',22,29,324)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4aab08c8> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON PrimaryExpr Selector . LexToken(ADD_ASSIGN,'+=',22,29,324)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aab0948>,<list @ 0x7f0d4aab08c8>] and goto state 106
Result : <list @ 0x7f0d4aab09c8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(ADD_ASSIGN,'+=',22,29,324)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aab09c8>] and goto state 105
Result : <list @ 0x7f0d4aab0808> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON UnaryExpr . LexToken(ADD_ASSIGN,'+=',22,29,324)
Statement SEMICOLON UnaryExpr . LexToken(ADD_ASSIGN,'+=',22,29,324)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aab0808>] and goto state 178
Result : <list @ 0x7f0d4aab0788> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Expr . LexToken(ADD_ASSIGN,'+=',22,29,324)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aae6e48> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Expr ExprOth . LexToken(ADD_ASSIGN,'+=',22,29,324)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aab0788>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aab0548> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList . LexToken(ADD_ASSIGN,'+=',22,29,324)
Action : Shift and goto state 271
State  : 271
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList ADD_ASSIGN . LexToken(IDENT,'visit',22,32,327)
Action : Reduce rule [add_op_assign -> ADD_ASSIGN] with ['+='] and goto state 268
Result : <list @ 0x7f0d4aab0688> (['add_op_assign', ['+=']])
State  : 268
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList add_op_assign . LexToken(IDENT,'visit',22,32,327)
Action : Reduce rule [assign_op -> add_op_assign] with [<list @ 0x7f0d4aab0688>] and goto state 267
Result : <list @ 0x7f0d4aab0708> (['assign_op', ['add_op_assign', ['+=']]])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op . LexToken(IDENT,'visit',22,32,327)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op IDENT . LexToken(LPAREN,'(',22,37,332)
Action : Reduce rule [OperandName -> IDENT] with ['visit'] and goto state 117
Result : <list @ 0x7f0d4aab04c8> (['OperandName', ['visit']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op OperandName . LexToken(LPAREN,'(',22,37,332)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aab04c8>] and goto state 108
Result : <list @ 0x7f0d4aab05c8> (['Operand', ['OperandName', ['visit']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Operand . LexToken(LPAREN,'(',22,37,332)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aab05c8>] and goto state 106
Result : <list @ 0x7f0d4aab03c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr . LexToken(LPAREN,'(',22,37,332)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN . LexToken(IDENT,'node',22,38,333)
Action : Shift and goto state 232
State  : 232
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN IDENT . LexToken(PERIOD,'.',22,Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aab0808>] and goto state 178
Result : <list @ 0x7f0d4aab0788> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Expr . LexToken(ADD_ASSIGN,'+=',22,29,324)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aae6e48> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Expr ExprOth . LexToken(ADD_ASSIGN,'+=',22,29,324)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aab0788>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aab0548> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList . LexToken(ADD_ASSIGN,'+=',22,29,324)
Action : Shift and goto state 271
State  : 271
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList ADD_ASSIGN . LexToken(IDENT,'visit',22,32,327)
Action : Reduce rule [add_op_assign -> ADD_ASSIGN] with ['+='] and goto state 268
Result : <list @ 0x7f0d4aab0688> (['add_op_assign', ['+=']])
State  : 268
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList add_op_assign . LexToken(IDENT,'visit',22,32,327)
Action : Reduce rule [assign_op -> add_op_assign] with [<list @ 0x7f0d4aab0688>] and goto state 267
Result : <list @ 0x7f0d4aab0708> (['assign_op', ['add_op_assign', ['+=']]])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op . LexToken(IDENT,'visit',22,32,327)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op IDENT . LexToken(LPAREN,'(',22,37,332)
Action : Reduce rule [OperandName -> IDENT] with ['visit'] and goto state 117
Result : <list @ 0x7f0d4aab04c8> (['OperandName', ['visit']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op OperandName . LexToken(LPAREN,'(',22,37,332)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aab04c8>] and goto state 108
Result : <list @ 0x7f0d4aab05c8> (['Operand', ['OperandName', ['visit']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Operand . LexToken(LPAREN,'(',22,37,332)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aab05c8>] and goto state 106
Result : <list @ 0x7f0d4aab03c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr . LexToken(LPAREN,'(',22,37,332)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN . LexToken(IDENT,'node',22,38,333)
Action : Shift and goto state 232
State  : 232
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN IDENT . LexToken(PERIOD,'.',22,42,337)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN IDENT PERIOD . LexToken(IDENT,'left',22,43,338)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN IDENT PERIOD IDENT . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['node','.','left'] and goto state 233
Result : <list @ 0x7f0d4aab0388> (['QualifiedIdent', ['node'], ['.'], ['le ...)
State  : 233
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN QualifiedIdent . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aab0388>] and goto state 117
Result : <list @ 0x7f0d4aab0348> (['OperandName', ['QualifiedIdent', ['nod ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN OperandName . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aab0348>] and goto state 108
Result : <list @ 0x7f0d4aab01c8> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN Operand . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aab01c8>] and goto state 106
Result : <list @ 0x7f0d4aab0188> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aab0188>] and goto state 105
Result : <list @ 0x7f0d4aab0108> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aab0108>] and goto state 146
Result : <list @ 0x7f0d4aab0fc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aab0d88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aab0fc8>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4aab0d48> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',22,47,342)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE42,337)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN IDENT PERIOD . LexToken(IDENT,'left',22,43,338)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN IDENT PERIOD IDENT . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['node','.','left'] and goto state 233
Result : <list @ 0x7f0d4aab0388> (['QualifiedIdent', ['node'], ['.'], ['le ...)
State  : 233
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN QualifiedIdent . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aab0388>] and goto state 117
Result : <list @ 0x7f0d4aab0348> (['OperandName', ['QualifiedIdent', ['nod ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN OperandName . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aab0348>] and goto state 108
Result : <list @ 0x7f0d4aab01c8> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN Operand . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aab01c8>] and goto state 106
Result : <list @ 0x7f0d4aab0188> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aab0188>] and goto state 105
Result : <list @ 0x7f0d4aab0108> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aab0108>] and goto state 146
Result : <list @ 0x7f0d4aab0fc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aab0d88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',22,47,342)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aab0fc8>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4aab0d48> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',22,47,342)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',22,48,343)
 Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aab0d48>,')'] and goto state 224
Result : <list @ 0x7f0d4aab0e08> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr Arguments . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aab03c8>,<list @ 0x7f0d4aab0e08>] and goto state 106
Result : <list @ 0x7f0d4aab0648> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aab0648>] and goto state 105
Result : <list @ 0x7f0d4aaead08> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaead08>] and goto state 146
Result : <list @ 0x7f0d4aaead88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Expr . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaea7c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaead88>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aaea548> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aab0548>,<list @ 0x7f0d4aab0708>,<list @ 0x7f0d4aaea548>] and goto state 169
Result : <list @ 0x7f0d4aaeab48> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Assignment . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aaeab48>] and goto state 155
Result : <list @ 0x7f0d4aaea4c8> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aaea4c8>] and goto state 152
Result : <list @ 0x7f0d4aaeab08> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',22,48,343)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IF,'if',23,5,349)
Action : Shift and goto state 177
State  : 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEAction : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aab0d48>,')'] and goto state 224
Result : <list @ 0x7f0d4aab0e08> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr Arguments . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aab03c8>,<list @ 0x7f0d4aab0e08>] and goto state 106
Result : <list @ 0x7f0d4aab0648> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aab0648>] and goto state 105
Result : <list @ 0x7f0d4aaead08> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaead08>] and goto state 146
Result : <list @ 0x7f0d4aaead88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Expr . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaea7c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaead88>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aaea548> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aab0548>,<list @ 0x7f0d4aab0708>,<list @ 0x7f0d4aaea548>] and goto state 169
Result : <list @ 0x7f0d4aaeab48> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Assignment . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aaeab48>] and goto state 155
Result : <list @ 0x7f0d4aaea4c8> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',22,48,343)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aaea4c8>] and goto state 152
Result : <list @ 0x7f0d4aaeab08> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',22,48,343)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IF,'if',23,5,349)
Action : Shift and goto state 177
State  : 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF . LexToken(IDENT,'node',23,8,352)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT . LexToken(PERIOD,'.',23,12,356)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT PERIOD . LexToken(IDENT,'flag',23,13,357)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT PERIOD IDENT . LexToken(LBRACE,'{',23,18,362)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['node','.','flag'] and goto state 124
Result : <list @ 0x7f0d4aaea0c8> (['QualifiedIdent', ['node'], ['.'], ['fl ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF QualifiedIdent . LexToken(LBRACE,'{',23,18,362)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aaea0c8>] and goto state 117
Result : <list @ 0x7f0d4aaee4c8> (['OperandName', ['QualifiedIdent', ['nod ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF OperandName . LexToken(LBRACE,'{',23,18,362)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaee4c8>] and goto state 108
Result : <list @ 0x7f0d4aaea788> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Operand . LexToken(LBRACE,'{',23,18,362)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaea788>] and goto state 106
Result : <list @ 0x7f0d4aaee448> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr . LexToken(LBRACE,'{',23,18,362)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaee448>] and goto state 105
Result : <list @ 0x7f0d4aaee288> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF UnaryExpr . LexToken(LBRACE,'{',23,18,362)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaee288>] and goto state 284
Result : <list @ 0x7f0d4aaee048> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(LBRACE,'{',23,18,362)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE . LexToken(LPAREN,'(',24,9,372)
Action : Shift and goto state 118
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN . LexToken(MUL,'*',24,10,373)
Action : Shift and goto state 114
State  : 114
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF . LexToken(IDENT,'node',23,8,352)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT . LexToken(PERIOD,'.',23,12,356)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT PERIOD . LexToken(IDENT,'flag',23,13,357)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT PERIOD IDENT . LexToken(LBRACE,'{',23,18,362)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['node','.','flag'] and goto state 124
Result : <list @ 0x7f0d4aaea0c8> (['QualifiedIdent', ['node'], ['.'], ['fl ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF QualifiedIdent . LexToken(LBRACE,'{',23,18,362)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aaea0c8>] and goto state 117
Result : <list @ 0x7f0d4aaee4c8> (['OperandName', ['QualifiedIdent', ['nod ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF OperandName . LexToken(LBRACE,'{',23,18,362)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaee4c8>] and goto state 108
Result : <list @ 0x7f0d4aaea788> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Operand . LexToken(LBRACE,'{',23,18,362)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaea788>] and goto state 106
Result : <list @ 0x7f0d4aaee448> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr . LexToken(LBRACE,'{',23,18,362)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaee448>] and goto state 105
Result : <list @ 0x7f0d4aaee288> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF UnaryExpr . LexToken(LBRACE,'{',23,18,362)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaee288>] and goto state 284
Result : <list @ 0x7f0d4aaee048> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(LBRACE,'{',23,18,362)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE . LexToken(LPAREN,'(',24,9,372)
Action : Shift and goto state 118
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN . LexToken(MUL,'*',24,10,373)
Action : Shift and goto state 114
State  : 114
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN MUL . LexToken(IDENT,'nodeptr',24,11,374)
BRACE LPAREN MUL . LexToken(IDENT,'nodeptr',24,11,374)
Action : Reduce rule [UnaryOp -> MUL] with ['*'] and goto state 107
Result : <list @ 0x7f0d4aaee208> (['UnaryOp', ['*']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp . LexToken(IDENT,'nodeptr',24,11,374)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp IDENT . LexToken(RPAREN,')',24,18,381)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aaeaf08> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp OperandName . LexToken(RPAREN,')',24,18,381)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaeaf08>] and goto state 108
Result : <list @ 0x7f0d4aaee108> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp Operand . LexToken(RPAREN,')',24,18,381)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaee108>] and goto state 106
Result : <list @ 0x7f0d4aaee608> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp PrimaryExpr . LexToken(RPAREN,')',24,18,381)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaee608>] and goto state 228
Result : <list @ 0x7f0d4aaeeb08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp UnaryExpr . LexToken(RPAREN,')',24,18,381)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aaee208>,<list @ 0x7f0d4aaeeb08>] and goto state 105
Result : <list @ 0x7f0d4aaee948> (['UnaryExpr', ['UnaryOp', ['*']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryExpr . LexToken(RPAREN,')',24,18,381)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaee948>] and goto state 230
Result : <list @ 0x7f0d4aaeeec8> (['Expr', ['UnaryExpr', ['UnaryOp', ['*'] ...)
State  : 230
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN Expr . LexToken(RPAREN,')',24,18,381)
Action : Shift and goto state 312
State  : 312
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN Expr RPAREN . LexToken(PERIOD,'.',24,19,382)
Action : Reduce rule [Operand -> LPAREN Expr RPAREN] with ['(',<list @ 0x7f0d4aaeeec8>,')'] and goto state 108
Result : <list @ 0x7f0d4aaefac8> (['Operand', ['('], ['Expr', ['UnaryExpr' ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Operand . LexToken(PERIOD,'.',24,19,382)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaefac8>] and goto state 106
Result : <list @ 0x7f0d4aaef608> (['PrimaryExpr', ['Operand', ['('], ['Exp ...)
State  : 106
Action : Reduce rule [UnaryOp -> MUL] with ['*'] and goto state 107
Result : <list @ 0x7f0d4aaee208> (['UnaryOp', ['*']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp . LexToken(IDENT,'nodeptr',24,11,374)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp IDENT . LexToken(RPAREN,')',24,18,381)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aaeaf08> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp OperandName . LexToken(RPAREN,')',24,18,381)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaeaf08>] and goto state 108
Result : <list @ 0x7f0d4aaee108> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp Operand . LexToken(RPAREN,')',24,18,381)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaee108>] and goto state 106
Result : <list @ 0x7f0d4aaee608> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp PrimaryExpr . LexToken(RPAREN,')',24,18,381)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaee608>] and goto state 228
Result : <list @ 0x7f0d4aaeeb08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp UnaryExpr . LexToken(RPAREN,')',24,18,381)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aaee208>,<list @ 0x7f0d4aaeeb08>] and goto state 105
Result : <list @ 0x7f0d4aaee948> (['UnaryExpr', ['UnaryOp', ['*']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryExpr . LexToken(RPAREN,')',24,18,381)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaee948>] and goto state 230
Result : <list @ 0x7f0d4aaeeec8> (['Expr', ['UnaryExpr', ['UnaryOp', ['*'] ...)
State  : 230
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN Expr . LexToken(RPAREN,')',24,18,381)
Action : Shift and goto state 312
State  : 312
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN Expr RPAREN . LexToken(PERIOD,'.',24,19,382)
Action : Reduce rule [Operand -> LPAREN Expr RPAREN] with ['(',<list @ 0x7f0d4aaeeec8>,')'] and goto state 108
Result : <list @ 0x7f0d4aaefac8> (['Operand', ['('], ['Expr', ['UnaryExpr' ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Operand . LexToken(PERIOD,'.',24,19,382)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaefac8>] and goto state 106
Result : <list @ 0x7f0d4aaef608> (['PrimaryExpr', ['Operand', ['('], ['Exp ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(PERIOD,'.',24,19,382)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',24,20,383)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD IDENT . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4aaefa48> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Selector . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aaef608>,<list @ 0x7f0d4aaefa48>] and goto state 106
Result : <list @ 0x7f0d4aaef848> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaef848>] and goto state 105
Result : <list @ 0x7f0d4aaef348> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE UnaryExpr . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaef348>] and goto state 178
Result : <list @ 0x7f0d4aaef8c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaef2c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr ExprOth . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaef8c8>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aaef148> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Shift and goto state 271
State  : 271
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList ADD_ASSIGN . LexToken(IDENT,'visit',24,36,399)
Action : Reduce rule [add_op_assign -> ADD_ASSIGN] with ['+='] and goto state 268
Result : <list @ 0x7f0d4aaef4c8> (['add_op_assign', ['+=']])
State  : 268
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList add_op_assign . LexToken(IDENT,'visit',24,36,399)
Action : Reduce rule [assign_op -> add_op_assign] with [<list @ 0x7f0d4aaef4c8>] and Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(PERIOD,'.',24,19,382)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',24,20,383)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD IDENT . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4aaefa48> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Selector . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aaef608>,<list @ 0x7f0d4aaefa48>] and goto state 106
Result : <list @ 0x7f0d4aaef848> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaef848>] and goto state 105
Result : <list @ 0x7f0d4aaef348> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE UnaryExpr . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaef348>] and goto state 178
Result : <list @ 0x7f0d4aaef8c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaef2c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr ExprOth . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaef8c8>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aaef148> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList . LexToken(ADD_ASSIGN,'+=',24,33,396)
Action : Shift and goto state 271
State  : 271
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList ADD_ASSIGN . LexToken(IDENT,'visit',24,36,399)
Action : Reduce rule [add_op_assign -> ADD_ASSIGN] with ['+='] and goto state 268
Result : <list @ 0x7f0d4aaef4c8> (['add_op_assign', ['+=']])
State  : 268
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList add_op_assign . LexToken(IDENT,'visit',24,36,399)
Action : Reduce rule [assign_op -> add_op_assign] with [<list @ 0x7f0d4aaef4c8>] and goto state 267
Result : <list @ 0x7f0d4aaef088> (['assign_op', ['add_op_assign', ['+=']]])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op . LexToken(IDENT,'visit',24,36,399)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op IDENT . LexToken(LPAREN,'(',24,41,404)
Action : Reduce rule [OperandName -> IDENT] with ['visit'] and goto state 117
Result : <list @ 0x7f0d4aaee688> (['OperandName', ['visit']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op OperandName . LexToken(LPAREN,'(',24,41,404)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaee688>] and goto state 108
Result : <list @ 0x7f0d4aaef7c8> (['Operand', ['OperandName', ['visit']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Operand . LexToken(LPAREN,'(',24,41,404)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaef7c8>] and goto state 106
Result : <list @ 0x7f0d4aaefe48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr . LexToken(LPAREN,'(',24,41,404)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN . LexToken(IDENT,'node',24,42,405)
Action : Shift and goto state 232
State  : 232
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT . LexToken(PERIOD,'.',24,46,409)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT PERIOD . LexToken(IDENT,'right',24,47,410)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT PERIOD IDENT . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['node','.','right'] and goto state 233
Result : <list @ 0x7f0d4aaf16c8> (['QualifiedIdent', ['node'], ['.'], ['ri ...)
State  : 233
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN QualifiedIdent . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aaf16c8>] and goto state 117
Result : <list @ 0x7f0d4aaf17c8> (['OperandName', ['QualifiedIdent', ['nod ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN OperandName . LexToken(Rgoto state 267
Result : <list @ 0x7f0d4aaef088> (['assign_op', ['add_op_assign', ['+=']]])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op . LexToken(IDENT,'visit',24,36,399)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op IDENT . LexToken(LPAREN,'(',24,41,404)
Action : Reduce rule [OperandName -> IDENT] with ['visit'] and goto state 117
Result : <list @ 0x7f0d4aaee688> (['OperandName', ['visit']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op OperandName . LexToken(LPAREN,'(',24,41,404)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaee688>] and goto state 108
Result : <list @ 0x7f0d4aaef7c8> (['Operand', ['OperandName', ['visit']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Operand . LexToken(LPAREN,'(',24,41,404)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaef7c8>] and goto state 106
Result : <list @ 0x7f0d4aaefe48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr . LexToken(LPAREN,'(',24,41,404)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN . LexToken(IDENT,'node',24,42,405)
Action : Shift and goto state 232
State  : 232
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT . LexToken(PERIOD,'.',24,46,409)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT PERIOD . LexToken(IDENT,'right',24,47,410)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT PERIOD IDENT . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['node','.','right'] and goto state 233
Result : <list @ 0x7f0d4aaf16c8> (['QualifiedIdent', ['node'], ['.'], ['ri ...)
State  : 233
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN QualifiedIdent . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aaf16c8>] and goto state 117
Result : <list @ 0x7f0d4aaf17c8> (['OperandName', ['QualifiedIdent', ['nod ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN OperandName . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaf17c8>] and goto state 108
Result : <list @ 0x7f0d4aaf1708> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN Operand . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaf1708>] and goto state 106
Result : <list @ 0x7f0d4aaf1f48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaf1f48>] and goto state 105
Result : <list @ 0x7f0d4aaf14c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaf14c8>] and goto state 146
Result : <list @ 0x7f0d4aaf1548> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaf1348> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaf1548>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4aaf15c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',24,52,415)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aaf15c8>,')'] and goto state 224
Result : <list @ 0x7f0d4aaf1148> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr Arguments . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aaefe48>,<list @ 0x7f0d4aaf1148>] and goto state 106
Result : <list @ 0x7f0d4aaf1808> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaf1808>]PAREN,')',24,52,415)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaf17c8>] and goto state 108
Result : <list @ 0x7f0d4aaf1708> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN Operand . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaf1708>] and goto state 106
Result : <list @ 0x7f0d4aaf1f48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaf1f48>] and goto state 105
Result : <list @ 0x7f0d4aaf14c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaf14c8>] and goto state 146
Result : <list @ 0x7f0d4aaf1548> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaf1348> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',24,52,415)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaf1548>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4aaf15c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',24,52,415)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aaf15c8>,')'] and goto state 224
Result : <list @ 0x7f0d4aaf1148> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr Arguments . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aaefe48>,<list @ 0x7f0d4aaf1148>] and goto state 106
Result : <list @ 0x7f0d4aaf1808> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaf1808>] and goto state 105
Result : <list @ 0x7f0d4aae8608> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
 and goto state 105
Result : <list @ 0x7f0d4aae8608> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aae8608>] and goto state 146
Result : <list @ 0x7f0d4aae8648> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aae8c48> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aae8648>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aae8688> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aaef148>,<list @ 0x7f0d4aaef088>,<list @ 0x7f0d4aae8688>] and goto state 169
Result : <list @ 0x7f0d4aae8b88> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Assignment . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aae8b88>] and goto state 155
Result : <list @ 0x7f0d4aae86c8> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE SimpleStmt . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aae86c8>] and goto state 152
Result : <list @ 0x7f0d4aae8c08> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement . LexToken(SEMICOLON,';',24,53,416)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',25,5,422)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aae8c88> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',25,5,422)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aae8c08>,';',<list @ 0x7f0d4aae8c88>] and goto state 151
Result : <list @ 0x7f0d4aae8148> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList . LexToken(RBRACE,'}',25,5,422)
Action : Shift and goto state 261
StState  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aae8608>] and goto state 146
Result : <list @ 0x7f0d4aae8648> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aae8c48> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aae8648>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aae8688> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aaef148>,<list @ 0x7f0d4aaef088>,<list @ 0x7f0d4aae8688>] and goto state 169
Result : <list @ 0x7f0d4aae8b88> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Assignment . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aae8b88>] and goto state 155
Result : <list @ 0x7f0d4aae86c8> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE SimpleStmt . LexToken(SEMICOLON,';',24,53,416)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aae86c8>] and goto state 152
Result : <list @ 0x7f0d4aae8c08> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement . LexToken(SEMICOLON,';',24,53,416)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',25,5,422)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aae8c88> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',25,5,422)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aae8c08>,';',<list @ 0x7f0d4aae8c88>] and goto state 151
Result : <list @ 0x7f0d4aae8148> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList . LexToken(RBRACE,'}',25,5,422)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',25,7,424)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aae8148>,'}'] and goto state 335
Result : <list @ 0x7f0d4aaf4a08> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block . LexToken(ELSE,'else',25,7,424)
Action : Shift and goto state 370
State  : 370
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE . LexToken(LBRACE,'{',25,12,429)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE . LexToken(LPAREN,'(',26,9,439)
Action : Shift and goto state 118
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN . LexToken(MUL,'*',26,10,440)
Action : Shift and goto state 114
State  : 114
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN MUL . LexToken(IDENT,'nodeptr',26,11,441)
Action : Reduce rule [UnaryOp -> MUL] with ['*'] and goto state 107
Result : <list @ 0x7f0d4aaf4508> (['UnaryOp', ['*']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN UnaryOp . LexToken(IDENT,'nodeptr',26,11,441)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN UnaryOp IDENT . LexToken(RPAREN,')',26,18,448)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aaf4908> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN UnaryOp OperandName . LexToken(RPAREN,')',26,18,448)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaf4908>] and goto state 108
Result : <list @ 0x7f0d4aaf4188> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN UnaryOp Operand . LexToken(RPAREN,')',26,18,448)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaf4188>] and goto state 106
Result : <list @ 0x7f0d4aaf4208> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN UnaryOp PrimaryExpr . LexToken(RPAREN,')',26,18,448)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaf4208>] and goto state 228
Result : <list @ 0x7f0d4aaf4d88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Exprate  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',25,7,424)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aae8148>,'}'] and goto state 335
Result : <list @ 0x7f0d4aaf4a08> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block . LexToken(ELSE,'else',25,7,424)
Action : Shift and goto state 370
State  : 370
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE . LexToken(LBRACE,'{',25,12,429)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE . LexToken(LPAREN,'(',26,9,439)
Action : Shift and goto state 118
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN . LexToken(MUL,'*',26,10,440)
Action : Shift and goto state 114
State  : 114
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN MUL . LexToken(IDENT,'nodeptr',26,11,441)
Action : Reduce rule [UnaryOp -> MUL] with ['*'] and goto state 107
Result : <list @ 0x7f0d4aaf4508> (['UnaryOp', ['*']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN UnaryOp . LexToken(IDENT,'nodeptr',26,11,441)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN UnaryOp IDENT . LexToken(RPAREN,')',26,18,448)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aaf4908> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN UnaryOp OperandName . LexToken(RPAREN,')',26,18,448)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaf4908>] and goto state 108
Result : <list @ 0x7f0d4aaf4188> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN UnaryOp Operand . LexToken(RPAREN,')',26,18,448)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaf4188>] and goto state 106
Result : <list @ 0x7f0d4aaf4208> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN UnaryOp PrimaryExpr . LexToken(RPAREN,')',26,18,448)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaf4208>] and goto state 228
Result : <list @ 0x7f0d4aaf4d88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN UnaryOp UnaryExpr . LexToken(RPAREN,')',26,18,448)
 Block ELSE LBRACE LPAREN UnaryOp UnaryExpr . LexToken(RPAREN,')',26,18,448)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aaf4508>,<list @ 0x7f0d4aaf4d88>] and goto state 105
Result : <list @ 0x7f0d4aaf4a48> (['UnaryExpr', ['UnaryOp', ['*']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN UnaryExpr . LexToken(RPAREN,')',26,18,448)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaf4a48>] and goto state 230
Result : <list @ 0x7f0d4aaef1c8> (['Expr', ['UnaryExpr', ['UnaryOp', ['*'] ...)
State  : 230
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN Expr . LexToken(RPAREN,')',26,18,448)
Action : Shift and goto state 312
State  : 312
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN Expr RPAREN . LexToken(PERIOD,'.',26,19,449)
Action : Reduce rule [Operand -> LPAREN Expr RPAREN] with ['(',<list @ 0x7f0d4aaef1c8>,')'] and goto state 108
Result : <list @ 0x7f0d4aaf5688> (['Operand', ['('], ['Expr', ['UnaryExpr' ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Operand . LexToken(PERIOD,'.',26,19,449)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaf5688>] and goto state 106
Result : <list @ 0x7f0d4aaf5748> (['PrimaryExpr', ['Operand', ['('], ['Exp ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(PERIOD,'.',26,19,449)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',26,20,450)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD IDENT . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4aaf50c8> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Selector . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aaf5748>,<list @ 0x7f0d4aaf50c8>] and goto state 106
Result : <list @ 0x7f0d4aaf5708> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaf5708>] and goto state 105
Result : <list @ 0x7f0d4aaf5548> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE UnaryExpr . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaf5548>] and goto state 178
Result : <list @ 0x7f0d4aaf5fc8Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aaf4508>,<list @ 0x7f0d4aaf4d88>] and goto state 105
Result : <list @ 0x7f0d4aaf4a48> (['UnaryExpr', ['UnaryOp', ['*']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN UnaryExpr . LexToken(RPAREN,')',26,18,448)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaf4a48>] and goto state 230
Result : <list @ 0x7f0d4aaef1c8> (['Expr', ['UnaryExpr', ['UnaryOp', ['*'] ...)
State  : 230
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN Expr . LexToken(RPAREN,')',26,18,448)
Action : Shift and goto state 312
State  : 312
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE LPAREN Expr RPAREN . LexToken(PERIOD,'.',26,19,449)
Action : Reduce rule [Operand -> LPAREN Expr RPAREN] with ['(',<list @ 0x7f0d4aaef1c8>,')'] and goto state 108
Result : <list @ 0x7f0d4aaf5688> (['Operand', ['('], ['Expr', ['UnaryExpr' ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Operand . LexToken(PERIOD,'.',26,19,449)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaf5688>] and goto state 106
Result : <list @ 0x7f0d4aaf5748> (['PrimaryExpr', ['Operand', ['('], ['Exp ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(PERIOD,'.',26,19,449)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',26,20,450)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD IDENT . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4aaf50c8> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Selector . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aaf5748>,<list @ 0x7f0d4aaf50c8>] and goto state 106
Result : <list @ 0x7f0d4aaf5708> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaf5708>] and goto state 105
Result : <list @ 0x7f0d4aaf5548> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE UnaryExpr . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaf5548>] and goto state 178
Result : <list @ 0x7f0d4aaf5fc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaf5ec8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr ExprOth . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaf5fc8>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aa77448> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Shift and goto state 272
State  : 272
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList SUB_ASSIGN . LexToken(IDENT,'visit',26,36,466)
Action : Reduce rule [add_op_assign -> SUB_ASSIGN] with ['-='] and goto state 268
Result : <list @ 0x7f0d4aa77488> (['add_op_assign', ['-=']])
State  : 268
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList add_op_assign . LexToken(IDENT,'visit',26,36,466)
Action : Reduce rule [assign_op -> add_op_assign] with [<list @ 0x7f0d4aa77488>] and goto state 267
Result : <list @ 0x7f0d4aa77a08> (['assign_op', ['add_op_assign', ['-=']]])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op . LexToken(IDENT,'visit',26,36,466)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op IDENT . LexToken(LPAREN,'(',26,41,471)
Action : Reduce rule [OperandName -> IDENT] with ['visit'] and goto state 117
Result : <list @ 0x7f0d4aa77708> (['OperandName', ['visit']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op OperandName . LexToken(LPAREN,'(',26,41,471)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa77708>] and goto state 108
Result : <list @ 0x7f0d4aa77908> (['Operand', ['OperandName', ['visit']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Operand . LexToken(LPAREN,'(',26,41,471)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa77908>] and goto state 106
Result : <list @ 0x7f0d4aa772c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr . LexToken(LPAREN,'(',26,41,471)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaf5ec8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr ExprOth . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaf5fc8>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aa77448> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList . LexToken(SUB_ASSIGN,'-=',26,33,463)
Action : Shift and goto state 272
State  : 272
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList SUB_ASSIGN . LexToken(IDENT,'visit',26,36,466)
Action : Reduce rule [add_op_assign -> SUB_ASSIGN] with ['-='] and goto state 268
Result : <list @ 0x7f0d4aa77488> (['add_op_assign', ['-=']])
State  : 268
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList add_op_assign . LexToken(IDENT,'visit',26,36,466)
Action : Reduce rule [assign_op -> add_op_assign] with [<list @ 0x7f0d4aa77488>] and goto state 267
Result : <list @ 0x7f0d4aa77a08> (['assign_op', ['add_op_assign', ['-=']]])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op . LexToken(IDENT,'visit',26,36,466)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op IDENT . LexToken(LPAREN,'(',26,41,471)
Action : Reduce rule [OperandName -> IDENT] with ['visit'] and goto state 117
Result : <list @ 0x7f0d4aa77708> (['OperandName', ['visit']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op OperandName . LexToken(LPAREN,'(',26,41,471)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa77708>] and goto state 108
Result : <list @ 0x7f0d4aa77908> (['Operand', ['OperandName', ['visit']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Operand . LexToken(LPAREN,'(',26,41,471)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa77908>] and goto state 106
Result : <list @ 0x7f0d4aa772c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr . LexToken(LPAREN,'(',26,41,471)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN . LexToken(IDENT,'node',26,42,472)
 SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN . LexToken(IDENT,'node',26,42,472)
Action : Shift and goto state 232
State  : 232
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT . LexToken(PERIOD,'.',26,46,476)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT PERIOD . LexToken(IDENT,'right',26,47,477)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT PERIOD IDENT . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['node','.','right'] and goto state 233
Result : <list @ 0x7f0d4aa77408> (['QualifiedIdent', ['node'], ['.'], ['ri ...)
State  : 233
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN QualifiedIdent . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aa77408>] and goto state 117
Result : <list @ 0x7f0d4aa77c48> (['OperandName', ['QualifiedIdent', ['nod ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN OperandName . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa77c48>] and goto state 108
Result : <list @ 0x7f0d4aa77988> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN Operand . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa77988>] and goto state 106
Result : <list @ 0x7f0d4aa77d08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa77d08>] and goto state 105
Result : <list @ 0x7f0d4aa77d88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa77d88>] and goto state 146
Result : <list @ 0x7f0d4aa77b08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa81648> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON StateAction : Shift and goto state 232
State  : 232
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT . LexToken(PERIOD,'.',26,46,476)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT PERIOD . LexToken(IDENT,'right',26,47,477)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT PERIOD IDENT . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['node','.','right'] and goto state 233
Result : <list @ 0x7f0d4aa77408> (['QualifiedIdent', ['node'], ['.'], ['ri ...)
State  : 233
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN QualifiedIdent . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aa77408>] and goto state 117
Result : <list @ 0x7f0d4aa77c48> (['OperandName', ['QualifiedIdent', ['nod ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN OperandName . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa77c48>] and goto state 108
Result : <list @ 0x7f0d4aa77988> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN Operand . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa77988>] and goto state 106
Result : <list @ 0x7f0d4aa77d08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa77d08>] and goto state 105
Result : <list @ 0x7f0d4aa77d88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa77d88>] and goto state 146
Result : <list @ 0x7f0d4aa77b08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa81648> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa77b08>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4aa81fc8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',26,52,482)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aa81fc8>,')'] and goto state 224
Result : <list @ 0x7f0d4aa81948> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr Arguments . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aa772c8>,<list @ 0x7f0d4aa81948>] and goto state 106
Result : <list @ 0x7f0d4aa812c8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa812c8>] and goto state 105
Result : <list @ 0x7f0d4aa81208> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa81208>] and goto state 146
Result : <list @ 0x7f0d4aa81c88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa81cc8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa81c88>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aa81608> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aa77448>,<list @ 0x7f0d4aa77a08>,<list @ 0x7f0d4aa81608>] and goto state 169
Result : <list @ 0x7f0d4aa81088> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Stment SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',26,52,482)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa77b08>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4aa81fc8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',26,52,482)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aa81fc8>,')'] and goto state 224
Result : <list @ 0x7f0d4aa81948> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr Arguments . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aa772c8>,<list @ 0x7f0d4aa81948>] and goto state 106
Result : <list @ 0x7f0d4aa812c8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa812c8>] and goto state 105
Result : <list @ 0x7f0d4aa81208> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa81208>] and goto state 146
Result : <list @ 0x7f0d4aa81c88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa81cc8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa81c88>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aa81608> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aa77448>,<list @ 0x7f0d4aa77a08>,<list @ 0x7f0d4aa81608>] and goto state 169
Result : <list @ 0x7f0d4aa81088> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Assignment . LexToken(SEMICOLON,';',26,53,483)
atement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Assignment . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aa81088>] and goto state 155
Result : <list @ 0x7f0d4aa81108> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE SimpleStmt . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aa81108>] and goto state 152
Result : <list @ 0x7f0d4aaf5788> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement . LexToken(SEMICOLON,';',26,53,483)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',27,5,489)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aa81148> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',27,5,489)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aaf5788>,';',<list @ 0x7f0d4aa81148>] and goto state 151
Result : <list @ 0x7f0d4aa81f08> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList . LexToken(RBRACE,'}',27,5,489)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',27,6,490)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aa81f08>,'}'] and goto state 394
Result : <list @ 0x7f0d4aa81488> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 394
Defaulted state 394: Reduce using 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE Block . LexToken(SEMICOLON,';',27,6,490)
Action : Reduce rule [else_stmt -> ELSE Block] with ['else',<list @ 0x7f0d4aa81488>] and goto state 369
Result : <list @ 0x7f0d4aa81b48> (['else_stmt', ['else'], ['Block', ['{'], ...)
State  : 369
Defaulted state 369: Reduce using 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block else_stmt . LexToken(SEMICOLON,';',27,6,490)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f0d4aaee048>,<list @ 0x7f0d4aaf4a08>,<list @ 0x7f0d4aa81b48>] and goto state 162
Result : <list @ 0x7f0d4aa816c8> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 162
Defaulted state 162: Reduce using 186
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IfStmt . LexToken(SEMICOLON,';',27,6,490)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f0d4aa816c8>] and goto state 152
Result : <list @ 0x7f0d4aa81c48> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE StAction : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aa81088>] and goto state 155
Result : <list @ 0x7f0d4aa81108> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE SimpleStmt . LexToken(SEMICOLON,';',26,53,483)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aa81108>] and goto state 152
Result : <list @ 0x7f0d4aaf5788> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement . LexToken(SEMICOLON,';',26,53,483)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',27,5,489)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aa81148> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',27,5,489)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aaf5788>,';',<list @ 0x7f0d4aa81148>] and goto state 151
Result : <list @ 0x7f0d4aa81f08> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList . LexToken(RBRACE,'}',27,5,489)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',27,6,490)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aa81f08>,'}'] and goto state 394
Result : <list @ 0x7f0d4aa81488> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 394
Defaulted state 394: Reduce using 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE Block . LexToken(SEMICOLON,';',27,6,490)
Action : Reduce rule [else_stmt -> ELSE Block] with ['else',<list @ 0x7f0d4aa81488>] and goto state 369
Result : <list @ 0x7f0d4aa81b48> (['else_stmt', ['else'], ['Block', ['{'], ...)
State  : 369
Defaulted state 369: Reduce using 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block else_stmt . LexToken(SEMICOLON,';',27,6,490)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f0d4aaee048>,<list @ 0x7f0d4aaf4a08>,<list @ 0x7f0d4aa81b48>] and goto state 162
Result : <list @ 0x7f0d4aa816c8> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 162
Defaulted state 162: Reduce using 186
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IfStmt . LexToken(SEMICOLON,';',27,6,490)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f0d4aa816c8>] and goto state 152
Result : <list @ 0x7f0d4aa81c48> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',27,6,490)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IF,'if',28,5,496)
Action : Shift and goto state 177
State  : 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF . LexToken(IDENT,'node',28,8,499)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT . LexToken(PERIOD,'.',28,12,503)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT PERIOD . LexToken(IDENT,'parent',28,13,504)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT PERIOD IDENT . LexToken(NEQ,'!=',28,20,511)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['node','.','parent'] and goto state 124
Result : <list @ 0x7f0d4aa81e48> (['QualifiedIdent', ['node'], ['.'], ['pa ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF QualifiedIdent . LexToken(NEQ,'!=',28,20,511)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aa81e48>] and goto state 117
Result : <list @ 0x7f0d4aa81408> (['OperandName', ['QualifiedIdent', ['nod ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF OperandName . LexToken(NEQ,'!=',28,20,511)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa81408>] and goto state 108
Result : <list @ 0x7f0d4aa81248> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Operand . LexToken(NEQ,'!=',28,20,511)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa81248>] and goto state 106
Result : <list @ 0x7f0d4aa84e88> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr . LexToken(NEQ,'!=',28,20,511)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa84e88>] and goto state 105
Result : <list @ 0x7f0d4aa84fc8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF UnaryExpr . LexToken(NEQ,'!=',28,20,511)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa84fc8>] and goto state 284
Result : <list @ 0x7f0d4aa84dc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(NEQ,'!=',28,20,511)
Action : Shift and goto state 205
State  : 205
Stack  : PackageClause SEMICOLON atement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',27,6,490)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IF,'if',28,5,496)
Action : Shift and goto state 177
State  : 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF . LexToken(IDENT,'node',28,8,499)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT . LexToken(PERIOD,'.',28,12,503)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT PERIOD . LexToken(IDENT,'parent',28,13,504)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT PERIOD IDENT . LexToken(NEQ,'!=',28,20,511)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['node','.','parent'] and goto state 124
Result : <list @ 0x7f0d4aa81e48> (['QualifiedIdent', ['node'], ['.'], ['pa ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF QualifiedIdent . LexToken(NEQ,'!=',28,20,511)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aa81e48>] and goto state 117
Result : <list @ 0x7f0d4aa81408> (['OperandName', ['QualifiedIdent', ['nod ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF OperandName . LexToken(NEQ,'!=',28,20,511)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa81408>] and goto state 108
Result : <list @ 0x7f0d4aa81248> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Operand . LexToken(NEQ,'!=',28,20,511)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa81248>] and goto state 106
Result : <list @ 0x7f0d4aa84e88> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr . LexToken(NEQ,'!=',28,20,511)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa84e88>] and goto state 105
Result : <list @ 0x7f0d4aa84fc8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF UnaryExpr . LexToken(NEQ,'!=',28,20,511)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa84fc8>] and goto state 284
Result : <list @ 0x7f0d4aa84dc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(NEQ,'!=',28,20,511)
Action : Shift and goto state 205
State  : 205
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr NEQ . LexToken(IDENT,'nil',28,23,514)
ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr NEQ . LexToken(IDENT,'nil',28,23,514)
Action : Reduce rule [RelOp -> NEQ] with ['!='] and goto state 201
Result : <list @ 0x7f0d4aa84908> (['RelOp', ['!=']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr RelOp . LexToken(IDENT,'nil',28,23,514)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4aa84908>] and goto state 198
Result : <list @ 0x7f0d4aa811c8> (['BinOp', ['RelOp', ['!=']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp . LexToken(IDENT,'nil',28,23,514)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp IDENT . LexToken(LBRACE,'{',28,26,517)
Action : Reduce rule [OperandName -> IDENT] with ['nil'] and goto state 117
Result : <list @ 0x7f0d4aa84708> (['OperandName', ['nil']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp OperandName . LexToken(LBRACE,'{',28,26,517)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa84708>] and goto state 108
Result : <list @ 0x7f0d4aa844c8> (['Operand', ['OperandName', ['nil']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Operand . LexToken(LBRACE,'{',28,26,517)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa844c8>] and goto state 106
Result : <list @ 0x7f0d4aa847c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp PrimaryExpr . LexToken(LBRACE,'{',28,26,517)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa847c8>] and goto state 105
Result : <list @ 0x7f0d4aa84448> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp UnaryExpr . LexToken(LBRACE,'{',28,26,517)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa84448>] and goto state 304
Result : <list @ 0x7f0d4aa84608> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr . LexToken(LBRACE,'{',28,26,517)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aa84dc8>,<list @ 0x7f0d4aa811c8>,<list @ 0x7f0d4aa84608>] and goto state 284
Result : <list @ 0x7f0d4aa84f88> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(LBRACE,'{',28,26,517)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE . LexToken(LPAREN,'(',29,9,527)
Action : Shift and goto state 118
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLAction : Reduce rule [RelOp -> NEQ] with ['!='] and goto state 201
Result : <list @ 0x7f0d4aa84908> (['RelOp', ['!=']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr RelOp . LexToken(IDENT,'nil',28,23,514)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4aa84908>] and goto state 198
Result : <list @ 0x7f0d4aa811c8> (['BinOp', ['RelOp', ['!=']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp . LexToken(IDENT,'nil',28,23,514)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp IDENT . LexToken(LBRACE,'{',28,26,517)
Action : Reduce rule [OperandName -> IDENT] with ['nil'] and goto state 117
Result : <list @ 0x7f0d4aa84708> (['OperandName', ['nil']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp OperandName . LexToken(LBRACE,'{',28,26,517)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa84708>] and goto state 108
Result : <list @ 0x7f0d4aa844c8> (['Operand', ['OperandName', ['nil']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Operand . LexToken(LBRACE,'{',28,26,517)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa844c8>] and goto state 106
Result : <list @ 0x7f0d4aa847c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp PrimaryExpr . LexToken(LBRACE,'{',28,26,517)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa847c8>] and goto state 105
Result : <list @ 0x7f0d4aa84448> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp UnaryExpr . LexToken(LBRACE,'{',28,26,517)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa84448>] and goto state 304
Result : <list @ 0x7f0d4aa84608> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr . LexToken(LBRACE,'{',28,26,517)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aa84dc8>,<list @ 0x7f0d4aa811c8>,<list @ 0x7f0d4aa84608>] and goto state 284
Result : <list @ 0x7f0d4aa84f88> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(LBRACE,'{',28,26,517)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE . LexToken(LPAREN,'(',29,9,527)
Action : Shift and goto state 118
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN . LexToken(MUL,'*',29,10,528)
Action : Shift and goto state 114
State  : 114
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN MUL . LexToken(IDENT,'nodeptr',29,11,529)
Action : Reduce rule [UnaryOp -> MUL] with ['*'] and goto state 107
Result : <list @ 0x7f0d4aa84288> (['UnaryOp', ['*']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp . LexToken(IDENT,'nodeptr',29,11,529)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp IDENT . LexToken(RPAREN,')',29,18,536)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aa84388> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp OperandName . LexToken(RPAREN,')',29,18,536)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa84388>] and goto state 108
Result : <list @ 0x7f0d4aa842c8> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp Operand . LexToken(RPAREN,')',29,18,536)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa842c8>] and goto state 106
Result : <list @ 0x7f0d4aa84f08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp PrimaryExpr . LexToken(RPAREN,')',29,18,536)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa84f08>] and goto state 228
Result : <list @ 0x7f0d4aa84308> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp UnaryExpr . LexToken(RPAREN,')',29,18,536)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aa84288>,<list @ 0x7f0d4aa84308>] and goto state 105
Result : <list @ 0x7f0d4aa84148> (['UnaryExpr', ['UnaryOp', ['*']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryExpr . LexToken(RPAREN,')',29,18,536)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa84148>] and goto state 230
Result : <list @ 0x7f0d4aa84788> (['Expr', ['UnaryExpr', ['UnaryOp', ['*'] ...)
State  : 230
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN Expr . LexToken(RPAREN,')',29,18,536)
Action : Shift and goto state 312
State  : 312
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN Expr RPAREN . LexToken(PERIOD,'.',29,19,537)
Action : Reduce rule [Operand -> LPAREN ExpON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN . LexToken(MUL,'*',29,10,528)
Action : Shift and goto state 114
State  : 114
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN MUL . LexToken(IDENT,'nodeptr',29,11,529)
Action : Reduce rule [UnaryOp -> MUL] with ['*'] and goto state 107
Result : <list @ 0x7f0d4aa84288> (['UnaryOp', ['*']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp . LexToken(IDENT,'nodeptr',29,11,529)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp IDENT . LexToken(RPAREN,')',29,18,536)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aa84388> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp OperandName . LexToken(RPAREN,')',29,18,536)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa84388>] and goto state 108
Result : <list @ 0x7f0d4aa842c8> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp Operand . LexToken(RPAREN,')',29,18,536)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa842c8>] and goto state 106
Result : <list @ 0x7f0d4aa84f08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp PrimaryExpr . LexToken(RPAREN,')',29,18,536)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa84f08>] and goto state 228
Result : <list @ 0x7f0d4aa84308> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryOp UnaryExpr . LexToken(RPAREN,')',29,18,536)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aa84288>,<list @ 0x7f0d4aa84308>] and goto state 105
Result : <list @ 0x7f0d4aa84148> (['UnaryExpr', ['UnaryOp', ['*']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN UnaryExpr . LexToken(RPAREN,')',29,18,536)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa84148>] and goto state 230
Result : <list @ 0x7f0d4aa84788> (['Expr', ['UnaryExpr', ['UnaryOp', ['*'] ...)
State  : 230
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN Expr . LexToken(RPAREN,')',29,18,536)
Action : Shift and goto state 312
State  : 312
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE LPAREN Expr RPAREN . LexToken(PERIOD,'.',29,19,537)
Action : Reduce rule [Operand -> LPAREN Expr RPAREN] with ['(',<list @ 0x7f0d4aa84788>,')'] and goto state 108
r RPAREN] with ['(',<list @ 0x7f0d4aa84788>,')'] and goto state 108
Result : <list @ 0x7f0d4aa84b48> (['Operand', ['('], ['Expr', ['UnaryExpr' ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Operand . LexToken(PERIOD,'.',29,19,537)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa84b48>] and goto state 106
Result : <list @ 0x7f0d4aa84948> (['PrimaryExpr', ['Operand', ['('], ['Exp ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(PERIOD,'.',29,19,537)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',29,20,538)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD IDENT . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4aa84048> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Selector . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa84948>,<list @ 0x7f0d4aa84048>] and goto state 106
Result : <list @ 0x7f0d4aa84488> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa84488>] and goto state 105
Result : <list @ 0x7f0d4aa86fc8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE UnaryExpr . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa86fc8>] and goto state 178
Result : <list @ 0x7f0d4aa86ec8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa86e08> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr ExprOth . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa86ec8>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aa866c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Shift and goto state 275
State  : 275
Stack  : PackageClause SEMResult : <list @ 0x7f0d4aa84b48> (['Operand', ['('], ['Expr', ['UnaryExpr' ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Operand . LexToken(PERIOD,'.',29,19,537)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa84b48>] and goto state 106
Result : <list @ 0x7f0d4aa84948> (['PrimaryExpr', ['Operand', ['('], ['Exp ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(PERIOD,'.',29,19,537)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',29,20,538)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD IDENT . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4aa84048> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Selector . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa84948>,<list @ 0x7f0d4aa84048>] and goto state 106
Result : <list @ 0x7f0d4aa84488> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa84488>] and goto state 105
Result : <list @ 0x7f0d4aa86fc8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE UnaryExpr . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa86fc8>] and goto state 178
Result : <list @ 0x7f0d4aa86ec8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa86e08> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr ExprOth . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa86ec8>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aa866c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList . LexToken(MUL_ASSIGN,'*=',29,33,551)
Action : Shift and goto state 275
State  : 275
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList MUL_ASSIGN . LexToken(IDENT,'node',29,36,554)
Action : Reduce rule [mul_op_assign -> MUL_ASSIGN] with ['*='] and goto state 269
Result : <list @ 0x7f0d4aa86d48> (['mul_op_assign', ['*=']])
State  : 269
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList mul_op_assign . LexToken(IDENT,'node',29,36,554)
Action : Reduce rule [assign_op -> mul_op_assign] with [<list @ 0x7f0d4aa86d48>] and goto state 267
Result : <list @ 0x7f0d4aa86548> (['assign_op', ['mul_op_assign', ['*=']]])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op . LexToken(IDENT,'node',29,36,554)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op IDENT . LexToken(PERIOD,'.',29,40,558)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op IDENT PERIOD . LexToken(IDENT,'parent',29,41,559)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op IDENT PERIOD IDENT . LexToken(PERIOD,'.',29,47,565)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['node','.','parent'] and goto state 124
Result : <list @ 0x7f0d4aa86608> (['QualifiedIdent', ['node'], ['.'], ['pa ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op QualifiedIdent . LexToken(PERIOD,'.',29,47,565)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aa86608>] and goto state 117
Result : <list @ 0x7f0d4aa86d88> (['OperandName', ['QualifiedIdent', ['nod ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op OperandName . LexToken(PERIOD,'.',29,47,565)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa86d88>] and goto state 108
Result : <list @ 0x7f0d4aa86308> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Operand . LexToken(PERIOD,'.',29,47,565)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa86308>] and goto state 106
Result : <list @ 0x7f0d4aa86388> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr . LexToken(PERIOD,'.',29,47,565)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList MUL_ASSIGN . LexToken(IDENT,'node',29,36,554)
Action : Reduce rule [mul_op_assign -> MUL_ASSIGN] with ['*='] and goto state 269
Result : <list @ 0x7f0d4aa86d48> (['mul_op_assign', ['*=']])
State  : 269
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList mul_op_assign . LexToken(IDENT,'node',29,36,554)
Action : Reduce rule [assign_op -> mul_op_assign] with [<list @ 0x7f0d4aa86d48>] and goto state 267
Result : <list @ 0x7f0d4aa86548> (['assign_op', ['mul_op_assign', ['*=']]])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op . LexToken(IDENT,'node',29,36,554)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op IDENT . LexToken(PERIOD,'.',29,40,558)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op IDENT PERIOD . LexToken(IDENT,'parent',29,41,559)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op IDENT PERIOD IDENT . LexToken(PERIOD,'.',29,47,565)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['node','.','parent'] and goto state 124
Result : <list @ 0x7f0d4aa86608> (['QualifiedIdent', ['node'], ['.'], ['pa ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op QualifiedIdent . LexToken(PERIOD,'.',29,47,565)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aa86608>] and goto state 117
Result : <list @ 0x7f0d4aa86d88> (['OperandName', ['QualifiedIdent', ['nod ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op OperandName . LexToken(PERIOD,'.',29,47,565)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa86d88>] and goto state 108
Result : <list @ 0x7f0d4aa86308> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Operand . LexToken(PERIOD,'.',29,47,565)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa86308>] and goto state 106
Result : <list @ 0x7f0d4aa86388> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr . LexToken(PERIOD,'.',29,47,565)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr PERIOD . LexToken(IDENT,'value',29,48,566)
LON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr PERIOD . LexToken(IDENT,'value',29,48,566)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr PERIOD IDENT . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','value'] and goto state 221
Result : <list @ 0x7f0d4aa86088> (['Selector', ['.'], ['value']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr Selector . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa86388>,<list @ 0x7f0d4aa86088>] and goto state 106
Result : <list @ 0x7f0d4aa86248> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa86248>] and goto state 105
Result : <list @ 0x7f0d4aa86d08> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa86d08>] and goto state 146
Result : <list @ 0x7f0d4aa86908> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa86688> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa86908>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aa86288> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aa866c8>,<list @ 0x7f0d4aa86548>,<list @ 0x7f0d4aa86288>] and goto state 169
Result : <list @ 0x7f0d4aa861c8> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Assignment . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aa861c8>] and goto state 155
Result : <list @ 0x7f0d4aa86048> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE SimpleStmt . LexToken(SEMICOLON,';',29,53,571)
Action : ReduAction : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr PERIOD IDENT . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','value'] and goto state 221
Result : <list @ 0x7f0d4aa86088> (['Selector', ['.'], ['value']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr Selector . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa86388>,<list @ 0x7f0d4aa86088>] and goto state 106
Result : <list @ 0x7f0d4aa86248> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa86248>] and goto state 105
Result : <list @ 0x7f0d4aa86d08> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa86d08>] and goto state 146
Result : <list @ 0x7f0d4aa86908> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa86688> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa86908>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aa86288> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aa866c8>,<list @ 0x7f0d4aa86548>,<list @ 0x7f0d4aa86288>] and goto state 169
Result : <list @ 0x7f0d4aa861c8> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Assignment . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aa861c8>] and goto state 155
Result : <list @ 0x7f0d4aa86048> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE SimpleStmt . LexToken(SEMICOLON,';',29,53,571)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aa86048>] and goto state 152
Result : <list @ 0x7f0d4aa86a08> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement . LexToken(SEMICOLON,';',29,53,571)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',30,5,577)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aa86488> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',30,5,577)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa86a08>,';',<list @ 0x7f0d4aa86488>] and goto state 151
Result : <list @ 0x7f0d4aa87b48> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList . LexToken(RBRACE,'}',30,5,577)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',30,6,578)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aa87b48>,'}'] and goto state 335
Result : <list @ 0x7f0d4aa87ac8> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block . LexToken(SEMICOLON,';',30,6,578)
Action : Reduce rule [else_stmt -> <empty>] with [] and goto state 369
Result : <list @ 0x7f0d4aa87988> (['else_stmt'])
State  : 369
Defaulted state 369: Reduce using 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block else_stmt . LexToken(SEMICOLON,';',30,6,578)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f0d4aa84f88>,<list @ 0x7f0d4aa87ac8>,['else_stmt']] and goto state 162
Result : <list @ 0x7f0d4aa87788> (['IfStmt', ['if'], ['Expr', ['Expr', ['U ...)
State  : 162
Defaulted state 162: Reduce using 186
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IfStmt . LexToken(SEMICOLON,';',30,6,578)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f0d4aa87788>] and goto state 152
Result : <list @ 0x7f0d4aa87048> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',30,6,578)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(RETURN,'return',31,5,584)
Action : Shift and goto state 172
State  : 172
Stack  : PackageClause SEMICOLON Importce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aa86048>] and goto state 152
Result : <list @ 0x7f0d4aa86a08> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement . LexToken(SEMICOLON,';',29,53,571)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',30,5,577)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aa86488> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',30,5,577)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa86a08>,';',<list @ 0x7f0d4aa86488>] and goto state 151
Result : <list @ 0x7f0d4aa87b48> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList . LexToken(RBRACE,'}',30,5,577)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',30,6,578)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aa87b48>,'}'] and goto state 335
Result : <list @ 0x7f0d4aa87ac8> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block . LexToken(SEMICOLON,';',30,6,578)
Action : Reduce rule [else_stmt -> <empty>] with [] and goto state 369
Result : <list @ 0x7f0d4aa87988> (['else_stmt'])
State  : 369
Defaulted state 369: Reduce using 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block else_stmt . LexToken(SEMICOLON,';',30,6,578)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f0d4aa84f88>,<list @ 0x7f0d4aa87ac8>,['else_stmt']] and goto state 162
Result : <list @ 0x7f0d4aa87788> (['IfStmt', ['if'], ['Expr', ['Expr', ['U ...)
State  : 162
Defaulted state 162: Reduce using 186
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IfStmt . LexToken(SEMICOLON,';',30,6,578)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f0d4aa87788>] and goto state 152
Result : <list @ 0x7f0d4aa87048> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',30,6,578)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(RETURN,'return',31,5,584)
Action : Shift and goto state 172
State  : 172
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN . LexToken(LPAREN,'(',31,12,591)
DeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN . LexToken(LPAREN,'(',31,12,591)
Action : Shift and goto state 118
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN . LexToken(MUL,'*',31,13,592)
Action : Shift and goto state 114
State  : 114
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN MUL . LexToken(IDENT,'nodeptr',31,14,593)
Action : Reduce rule [UnaryOp -> MUL] with ['*'] and goto state 107
Result : <list @ 0x7f0d4aa87708> (['UnaryOp', ['*']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryOp . LexToken(IDENT,'nodeptr',31,14,593)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryOp IDENT . LexToken(RPAREN,')',31,21,600)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aa87308> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryOp OperandName . LexToken(RPAREN,')',31,21,600)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa87308>] and goto state 108
Result : <list @ 0x7f0d4aa87648> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryOp Operand . LexToken(RPAREN,')',31,21,600)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa87648>] and goto state 106
Result : <list @ 0x7f0d4aa877c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryOp PrimaryExpr . LexToken(RPAREN,')',31,21,600)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa877c8>] and goto state 228
Result : <list @ 0x7f0d4aa87b88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryOp UnaryExpr . LexToken(RPAREN,')',31,21,600)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aa87708>,<list @ 0x7f0d4aa87b88>] and goto state 105
Result : <list @ 0x7f0d4aa87c08> (['UnaryExpr', ['UnaryOp', ['*']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryExpr . LexToken(RPAREN,')',31,21,600)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa87c08>] and goto state 230
Result : <list @ 0x7f0d4aa87888> (['Expr', ['UnaryExpr', ['UnaryOp', ['*'] ...)
State  : 230
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN Expr . LexToken(RPAREN,')',31,21,600)
Action : Shift and goto state 312Action : Shift and goto state 118
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN . LexToken(MUL,'*',31,13,592)
Action : Shift and goto state 114
State  : 114
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN MUL . LexToken(IDENT,'nodeptr',31,14,593)
Action : Reduce rule [UnaryOp -> MUL] with ['*'] and goto state 107
Result : <list @ 0x7f0d4aa87708> (['UnaryOp', ['*']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryOp . LexToken(IDENT,'nodeptr',31,14,593)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryOp IDENT . LexToken(RPAREN,')',31,21,600)
Action : Reduce rule [OperandName -> IDENT] with ['nodeptr'] and goto state 117
Result : <list @ 0x7f0d4aa87308> (['OperandName', ['nodeptr']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryOp OperandName . LexToken(RPAREN,')',31,21,600)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa87308>] and goto state 108
Result : <list @ 0x7f0d4aa87648> (['Operand', ['OperandName', ['nodeptr']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryOp Operand . LexToken(RPAREN,')',31,21,600)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa87648>] and goto state 106
Result : <list @ 0x7f0d4aa877c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryOp PrimaryExpr . LexToken(RPAREN,')',31,21,600)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa877c8>] and goto state 228
Result : <list @ 0x7f0d4aa87b88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryOp UnaryExpr . LexToken(RPAREN,')',31,21,600)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aa87708>,<list @ 0x7f0d4aa87b88>] and goto state 105
Result : <list @ 0x7f0d4aa87c08> (['UnaryExpr', ['UnaryOp', ['*']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN UnaryExpr . LexToken(RPAREN,')',31,21,600)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa87c08>] and goto state 230
Result : <list @ 0x7f0d4aa87888> (['Expr', ['UnaryExpr', ['UnaryOp', ['*'] ...)
State  : 230
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN Expr . LexToken(RPAREN,')',31,21,600)
Action : Shift and goto state 312
State  : 312
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN Expr RPAREN . LexToken(PERIOD,'.',31,22,601)
Action : Reduce rule [Operand -> LPAREN Expr RPAREN] with ['(',<list @ 0x7f0d4aa87888>,')'] and goto state 108
Result : <list @ 0x7f0d4aa87f08> (['Operand', ['('], ['Expr', ['UnaryExpr' ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN Operand . LexToken(PERIOD,'.',31,22,601)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa87f08>] and goto state 106
Result : <list @ 0x7f0d4aa87148> (['PrimaryExpr', ['Operand', ['('], ['Exp ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN PrimaryExpr . LexToken(PERIOD,'.',31,22,601)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',31,23,602)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN PrimaryExpr PERIOD IDENT . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4aa879c8> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN PrimaryExpr Selector . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa87148>,<list @ 0x7f0d4aa879c8>] and goto state 106
Result : <list @ 0x7f0d4aa87388> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN PrimaryExpr . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa87388>] and goto state 105
Result : <list @ 0x7f0d4aa8ad08> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN UnaryExpr . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa8ad08>] and goto state 146
Result : <list @ 0x7f0d4aa8ad48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN Expr . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa8a608> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN Expr ExprOth . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [ExpressionList -> Expr ExprO
State  : 312
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN LPAREN Expr RPAREN . LexToken(PERIOD,'.',31,22,601)
Action : Reduce rule [Operand -> LPAREN Expr RPAREN] with ['(',<list @ 0x7f0d4aa87888>,')'] and goto state 108
Result : <list @ 0x7f0d4aa87f08> (['Operand', ['('], ['Expr', ['UnaryExpr' ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN Operand . LexToken(PERIOD,'.',31,22,601)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa87f08>] and goto state 106
Result : <list @ 0x7f0d4aa87148> (['PrimaryExpr', ['Operand', ['('], ['Exp ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN PrimaryExpr . LexToken(PERIOD,'.',31,22,601)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',31,23,602)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN PrimaryExpr PERIOD IDENT . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4aa879c8> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN PrimaryExpr Selector . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa87148>,<list @ 0x7f0d4aa879c8>] and goto state 106
Result : <list @ 0x7f0d4aa87388> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN PrimaryExpr . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa87388>] and goto state 105
Result : <list @ 0x7f0d4aa8ad08> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN UnaryExpr . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa8ad08>] and goto state 146
Result : <list @ 0x7f0d4aa8ad48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN Expr . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa8a608> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN Expr ExprOth . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa8ad48>,['ExprOth']] and goto state 266
th] with [<list @ 0x7f0d4aa8ad48>,['ExprOth']] and goto state 266
Result : <list @ 0x7f0d4aa8a3c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 266
Defaulted state 266: Reduce using 215
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN ExpressionList . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [ReturnStmt -> RETURN ExpressionList] with ['return',<list @ 0x7f0d4aa8a3c8>] and goto state 157
Result : <list @ 0x7f0d4aa846c8> (['ReturnStmt', ['return'], ['ExpressionL ...)
State  : 157
Defaulted state 157: Reduce using 181
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ReturnStmt . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [Statement -> ReturnStmt] with [<list @ 0x7f0d4aa846c8>] and goto state 152
Result : <list @ 0x7f0d4aa8a588> (['Statement', ['ReturnStmt', ['return'], ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',31,35,614)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aa8ae48> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa8a588>,';',<list @ 0x7f0d4aa8ae48>] and goto state 332
Result : <list @ 0x7f0d4aa8a308> (['StatementList', ['Statement', ['Return ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa87048>,';',<list @ 0x7f0d4aa8a308>] and goto state 332
Result : <list @ 0x7f0d4aa8ae08> (['StatementList', ['Statement', ['IfStmt ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa81c48>,';',<list @ 0x7f0d4aa8ae08>] and goto state 332
Result : <list @ 0x7f0d4aa8a6c8> (['StatementList', ['Statement', ['IfStmt ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aaeab08>,';',<list @ 0x7f0d4aa8a6c8>] and goto state 332
Result : <list @ 0x7f0d4aa8ae88> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aae6b88>,';',<list @ 0x7f0d4aa8ae88>] and goto state 332
Result : <list Result : <list @ 0x7f0d4aa8a3c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 266
Defaulted state 266: Reduce using 215
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON RETURN ExpressionList . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [ReturnStmt -> RETURN ExpressionList] with ['return',<list @ 0x7f0d4aa8a3c8>] and goto state 157
Result : <list @ 0x7f0d4aa846c8> (['ReturnStmt', ['return'], ['ExpressionL ...)
State  : 157
Defaulted state 157: Reduce using 181
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ReturnStmt . LexToken(SEMICOLON,';',31,35,614)
Action : Reduce rule [Statement -> ReturnStmt] with [<list @ 0x7f0d4aa846c8>] and goto state 152
Result : <list @ 0x7f0d4aa8a588> (['Statement', ['ReturnStmt', ['return'], ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',31,35,614)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aa8ae48> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa8a588>,';',<list @ 0x7f0d4aa8ae48>] and goto state 332
Result : <list @ 0x7f0d4aa8a308> (['StatementList', ['Statement', ['Return ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa87048>,';',<list @ 0x7f0d4aa8a308>] and goto state 332
Result : <list @ 0x7f0d4aa8ae08> (['StatementList', ['Statement', ['IfStmt ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa81c48>,';',<list @ 0x7f0d4aa8ae08>] and goto state 332
Result : <list @ 0x7f0d4aa8a6c8> (['StatementList', ['Statement', ['IfStmt ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aaeab08>,';',<list @ 0x7f0d4aa8a6c8>] and goto state 332
Result : <list @ 0x7f0d4aa8ae88> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aae6b88>,';',<list @ 0x7f0d4aa8ae88>] and goto state 332
Result : <list @ 0x7f0d4aa8a408> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aae5088>,';',<list @ 0x7f0d4aa8a408>] and goto state 151
Result : <list @ 0x7f0d4aa8a988> (['StatementList', ['Statement', ['IfStmt ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',32,2,617)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aa8a988>,'}'] and goto state 84
Result : <list @ 0x7f0d4aa8ab08> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 84
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature Block . LexToken(SEMICOLON,';',32,2,617)
Action : Reduce rule [FunctionBody -> Block] with [<list @ 0x7f0d4aa8ab08>] and goto state 83
Result : <list @ 0x7f0d4aa7a4c8> (['FunctionBody', ['Block', ['{'], ['Stat ...)
State  : 83
Defaulted state 83: Reduce using 160
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature FunctionBody . LexToken(SEMICOLON,';',32,2,617)
Action : Reduce rule [FuncDecl -> FUNC FunctionName Signature FunctionBody] with ['func',<list @ 0x7f0d4aa65788>,<list @ 0x7f0d4aac9c08>,<list @ 0x7f0d4aa7a4c8>] and goto state 13
Result : <list @ 0x7f0d4aa7a288> (['FuncDecl', ['func'], ['FunctionName',  ...)
State  : 13
Defaulted state 13: Reduce using 17
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FuncDecl . LexToken(SEMICOLON,';',32,2,617)
Action : Reduce rule [TopLevelDecl -> FuncDecl] with [<list @ 0x7f0d4aa7a288>] and goto state 11
Result : <list @ 0x7f0d4aa7a348> (['TopLevelDecl', ['FuncDecl', ['func'],  ...)
State  : 11
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl . LexToken(SEMICOLON,';',32,2,617)
Action : Shift and goto state 28
State  : 28
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON . LexToken(FUNC,'func',34,1,620)
Action : Shift and goto state 17
State  : 17
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC . LexToken(IDENT,'main',34,6,625)
Action : Shift and goto state 30
State  : 30
Defaulted state 30: Reduce using 162
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC IDENT . None
Action : Reduce rule [FunctionName -> IDENT] with ['main'] and goto state 29
Result : <list @ 0x7f0d4aa7a308> (['FunctionName', ['main']])
State  : 29
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName . LexToken(LPAREN,'(',34,10,629)
Action : Shift and goto state 51
State  : 51
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName LPAREN . LexToken(RPAREN,')',34,11,630)
Action : Shift and goto state 90
State  : 90
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName LPAREN RPAREN . LexToken(LBRACE,'{',34,12,631)
Action : Reduce rule [Parameters -> LPAREN RPAREN] with ['(',')'] and goto state 50
Result : <list @ 0x7f0d4aa7aa08> (['Parameters', ['('], [')']])
State  : 50
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Parameters . LexToken(LBRACE,'{',34,12,631)
Action : Reduce rule [Signature -> Parameters] with [<list @ 0x7f0d4aa7aa08>] and goto state 49
Result : <list @ 0x7f0d4aa7a9c8> (['Signature', ['Parameters', ['('], [')' ...)
State  : 49
Stack  : PackageClause SEMICOLON ImportDe@ 0x7f0d4aa8a408> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aae5088>,';',<list @ 0x7f0d4aa8a408>] and goto state 151
Result : <list @ 0x7f0d4aa8a988> (['StatementList', ['Statement', ['IfStmt ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE StatementList . LexToken(RBRACE,'}',32,1,616)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',32,2,617)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aa8a988>,'}'] and goto state 84
Result : <list @ 0x7f0d4aa8ab08> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 84
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature Block . LexToken(SEMICOLON,';',32,2,617)
Action : Reduce rule [FunctionBody -> Block] with [<list @ 0x7f0d4aa8ab08>] and goto state 83
Result : <list @ 0x7f0d4aa7a4c8> (['FunctionBody', ['Block', ['{'], ['Stat ...)
State  : 83
Defaulted state 83: Reduce using 160
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FUNC FunctionName Signature FunctionBody . LexToken(SEMICOLON,';',32,2,617)
Action : Reduce rule [FuncDecl -> FUNC FunctionName Signature FunctionBody] with ['func',<list @ 0x7f0d4aa65788>,<list @ 0x7f0d4aac9c08>,<list @ 0x7f0d4aa7a4c8>] and goto state 13
Result : <list @ 0x7f0d4aa7a288> (['FuncDecl', ['func'], ['FunctionName',  ...)
State  : 13
Defaulted state 13: Reduce using 17
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON FuncDecl . LexToken(SEMICOLON,';',32,2,617)
Action : Reduce rule [TopLevelDecl -> FuncDecl] with [<list @ 0x7f0d4aa7a288>] and goto state 11
Result : <list @ 0x7f0d4aa7a348> (['TopLevelDecl', ['FuncDecl', ['func'],  ...)
State  : 11
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl . LexToken(SEMICOLON,';',32,2,617)
Action : Shift and goto state 28
State  : 28
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON . LexToken(FUNC,'func',34,1,620)
Action : Shift and goto state 17
State  : 17
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC . LexToken(IDENT,'main',34,6,625)
Action : Shift and goto state 30
State  : 30
Defaulted state 30: Reduce using 162
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC IDENT . None
Action : Reduce rule [FunctionName -> IDENT] with ['main'] and goto state 29
Result : <list @ 0x7f0d4aa7a308> (['FunctionName', ['main']])
State  : 29
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName . LexToken(LPAREN,'(',34,10,629)
Action : Shift and goto state 51
State  : 51
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName LPAREN . LexToken(RPAREN,')',34,11,630)
Action : Shift and goto state 90
State  : 90
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName LPAREN RPAREN . LexToken(LBRACE,'{',34,12,631)
Action : Reduce rule [Parameters -> LPAREN RPAREN] with ['(',')'] and goto state 50
Result : <list @ 0x7f0d4aa7aa08> (['Parameters', ['('], [')']])
State  : 50
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Parameters . LexToken(LBRACE,'{',34,12,631)
Action : Reduce rule [Signature -> Parameters] with [<list @ 0x7f0d4aa7aa08>] and goto state 49
Result : <list @ 0x7f0d4aa7a9c8> (['Signature', ['Parameters', ['('], [')' ...)
State  : 49
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature . LexToken(LBRACE,'{',34,12,631)
clMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature . LexToken(LBRACE,'{',34,12,631)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE . LexToken(VAR,'var',35,5,637)
Action : Shift and goto state 19
State  : 19
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR . LexToken(IDENT,'n',35,9,641)
Action : Shift and goto state 34
State  : 34
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IDENT . LexToken(IDENT,'int',35,11,643)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4aa7a788> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IDENT IdentifierOth . LexToken(IDENT,'int',35,11,643)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['n',<list @ 0x7f0d4aa7a788>] and goto state 37
Result : <list @ 0x7f0d4aa7ad08> (['IdentifierList', ['n'], ['IdentifierOt ...)
State  : 37
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList . LexToken(IDENT,'int',35,11,643)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList IDENT . LexToken(ASSIGN,'=',35,15,647)
Action : Reduce rule [TypeName -> IDENT] with ['int'] and goto state 55
Result : <list @ 0x7f0d4aa7ad88> (['TypeName', ['int']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList TypeName . LexToken(ASSIGN,'=',35,15,647)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4aa7ad88>] and goto state 75
Result : <list @ 0x7f0d4aa7a748> (['Type', ['TypeName', ['int']]])
State  : 75
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type . LexToken(ASSIGN,'=',35,15,647)
Action : Shift and goto state 144
State  : 144
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN . LexToken(INT,'20',35,17,649)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN INT . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [BasicLit -> INT] with ['20'] and goto state 120
Result : <list @ 0x7f0d4aa7af08> (['BasicLit', ['20']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN BasicLit . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aa7af08>] and goto state 116
Result : <list @ 0x7f0d4aa8ca88> (['Lit', ['BasicLit', ['20']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN Lit . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aa8ca88>] and goto state 108
Result : <list @ 0x7f0d4aa8cb88> (['Operand', ['Lit', ['BasicLit', ['20']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN Operand . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa8cb88>] and goto state 106
Result : <list @ 0x7f0d4aa8c848> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecAction : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE . LexToken(VAR,'var',35,5,637)
Action : Shift and goto state 19
State  : 19
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR . LexToken(IDENT,'n',35,9,641)
Action : Shift and goto state 34
State  : 34
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IDENT . LexToken(IDENT,'int',35,11,643)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4aa7a788> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IDENT IdentifierOth . LexToken(IDENT,'int',35,11,643)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['n',<list @ 0x7f0d4aa7a788>] and goto state 37
Result : <list @ 0x7f0d4aa7ad08> (['IdentifierList', ['n'], ['IdentifierOt ...)
State  : 37
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList . LexToken(IDENT,'int',35,11,643)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList IDENT . LexToken(ASSIGN,'=',35,15,647)
Action : Reduce rule [TypeName -> IDENT] with ['int'] and goto state 55
Result : <list @ 0x7f0d4aa7ad88> (['TypeName', ['int']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList TypeName . LexToken(ASSIGN,'=',35,15,647)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4aa7ad88>] and goto state 75
Result : <list @ 0x7f0d4aa7a748> (['Type', ['TypeName', ['int']]])
State  : 75
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type . LexToken(ASSIGN,'=',35,15,647)
Action : Shift and goto state 144
State  : 144
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN . LexToken(INT,'20',35,17,649)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN INT . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [BasicLit -> INT] with ['20'] and goto state 120
Result : <list @ 0x7f0d4aa7af08> (['BasicLit', ['20']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN BasicLit . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aa7af08>] and goto state 116
Result : <list @ 0x7f0d4aa8ca88> (['Lit', ['BasicLit', ['20']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN Lit . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aa8ca88>] and goto state 108
Result : <list @ 0x7f0d4aa8cb88> (['Operand', ['Lit', ['BasicLit', ['20']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN Operand . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa8cb88>] and goto state 106
Result : <list @ 0x7f0d4aa8c848> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN PrimaryExpr . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa8c848>] and goto state 105
Result : <list @ 0x7f0d4aa8c5c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN UnaryExpr . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa8c5c8>] and goto state 146
Result : <list @ 0x7f0d4aa8cbc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN Expr . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa8c288> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN Expr ExprOth . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa8cbc8>,['ExprOth']] and goto state 257
Result : <list @ 0x7f0d4aa8cc08> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 257
Defaulted state 257: Reduce using 156
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN ExpressionList . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [VarSpec -> IdentifierList Type ASSIGN ExpressionList] with [<list @ 0x7f0d4aa7ad08>,<list @ 0x7f0d4aa7a748>,'=',<list @ 0x7f0d4aa8cc08>] and goto state 35
Result : <list @ 0x7f0d4aa8c348> (['VarSpec', ['IdentifierList', ['n'], [' ...)
State  : 35
Defaulted state 35: Reduce using 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR VarSpec . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [VarDecl -> VAR VarSpec] with ['var',<list @ 0x7f0d4aa8c348>] and goto state 15
Result : <list @ 0x7f0d4aa8c608> (['VarDecl', ['var'], ['VarSpec', ['Ident ...)
State  : 15
Defaulted state 15: Reduce using 19
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VarDecl . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [Decl -> VarDecl] with [<list @ 0x7f0d4aa8c608>] and goto state 153
Result : <list @ 0x7f0d4aa8c108> (['Decl', ['VarDecl', ['var'], ['VarSpec' ...)
State  : 153
Defaulted state 153: Reduce using 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Decl . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [Statement -> Decl] with [<list @ 0x7f0d4aa8c108>] and goto state 152
Result : <list @ 0x7f0d4aa8cf48> (['Statement', ['Decl', ['VarDecl', ['var ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement . LexToken(SEMICOLON,';',35,19,651)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON . LexToken(VAR,'var',36,5,657)
Action : Shift and goto state 19
State  : 19
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR . LexToken(IDENT,'max_val',36,9,661)
Action : Shift and goto state 34
State  : 34
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IDENT . LexToken(IDENT,'int',36,17,669)
Action : Reduce rule [Identifiel SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN PrimaryExpr . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa8c848>] and goto state 105
Result : <list @ 0x7f0d4aa8c5c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN UnaryExpr . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa8c5c8>] and goto state 146
Result : <list @ 0x7f0d4aa8cbc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN Expr . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa8c288> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN Expr ExprOth . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa8cbc8>,['ExprOth']] and goto state 257
Result : <list @ 0x7f0d4aa8cc08> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 257
Defaulted state 257: Reduce using 156
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR IdentifierList Type ASSIGN ExpressionList . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [VarSpec -> IdentifierList Type ASSIGN ExpressionList] with [<list @ 0x7f0d4aa7ad08>,<list @ 0x7f0d4aa7a748>,'=',<list @ 0x7f0d4aa8cc08>] and goto state 35
Result : <list @ 0x7f0d4aa8c348> (['VarSpec', ['IdentifierList', ['n'], [' ...)
State  : 35
Defaulted state 35: Reduce using 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VAR VarSpec . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [VarDecl -> VAR VarSpec] with ['var',<list @ 0x7f0d4aa8c348>] and goto state 15
Result : <list @ 0x7f0d4aa8c608> (['VarDecl', ['var'], ['VarSpec', ['Ident ...)
State  : 15
Defaulted state 15: Reduce using 19
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE VarDecl . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [Decl -> VarDecl] with [<list @ 0x7f0d4aa8c608>] and goto state 153
Result : <list @ 0x7f0d4aa8c108> (['Decl', ['VarDecl', ['var'], ['VarSpec' ...)
State  : 153
Defaulted state 153: Reduce using 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Decl . LexToken(SEMICOLON,';',35,19,651)
Action : Reduce rule [Statement -> Decl] with [<list @ 0x7f0d4aa8c108>] and goto state 152
Result : <list @ 0x7f0d4aa8cf48> (['Statement', ['Decl', ['VarDecl', ['var ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement . LexToken(SEMICOLON,';',35,19,651)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON . LexToken(VAR,'var',36,5,657)
Action : Shift and goto state 19
State  : 19
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR . LexToken(IDENT,'max_val',36,9,661)
Action : Shift and goto state 34
State  : 34
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IDENT . LexToken(IDENT,'int',36,17,669)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
rOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4aa8cfc8> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IDENT IdentifierOth . LexToken(IDENT,'int',36,17,669)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['max_val',<list @ 0x7f0d4aa8cfc8>] and goto state 37
Result : <list @ 0x7f0d4aa8ce48> (['IdentifierList', ['max_val'], ['Identi ...)
State  : 37
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList . LexToken(IDENT,'int',36,17,669)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList IDENT . LexToken(ASSIGN,'=',36,21,673)
Action : Reduce rule [TypeName -> IDENT] with ['int'] and goto state 55
Result : <list @ 0x7f0d4aa8cf08> (['TypeName', ['int']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList TypeName . LexToken(ASSIGN,'=',36,21,673)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4aa8cf08>] and goto state 75
Result : <list @ 0x7f0d4aa8c248> (['Type', ['TypeName', ['int']]])
State  : 75
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type . LexToken(ASSIGN,'=',36,21,673)
Action : Shift and goto state 144
State  : 144
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN . LexToken(INT,'100',36,23,675)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN INT . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [BasicLit -> INT] with ['100'] and goto state 120
Result : <list @ 0x7f0d4aa8cc48> (['BasicLit', ['100']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN BasicLit . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aa8cc48>] and goto state 116
Result : <list @ 0x7f0d4aa8cdc8> (['Lit', ['BasicLit', ['100']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN Lit . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aa8cdc8>] and goto state 108
Result : <list @ 0x7f0d4aa8cb08> (['Operand', ['Lit', ['BasicLit', ['100'] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN Operand . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa8cb08>] and goto state 106
Result : <list @ 0x7f0d4aa8c208> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN PrimaryExpr . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa8c208>] and goto state 105
Result : <list @ 0x7f0d4aa8c988> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE StatemeResult : <list @ 0x7f0d4aa8cfc8> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IDENT IdentifierOth . LexToken(IDENT,'int',36,17,669)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['max_val',<list @ 0x7f0d4aa8cfc8>] and goto state 37
Result : <list @ 0x7f0d4aa8ce48> (['IdentifierList', ['max_val'], ['Identi ...)
State  : 37
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList . LexToken(IDENT,'int',36,17,669)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList IDENT . LexToken(ASSIGN,'=',36,21,673)
Action : Reduce rule [TypeName -> IDENT] with ['int'] and goto state 55
Result : <list @ 0x7f0d4aa8cf08> (['TypeName', ['int']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList TypeName . LexToken(ASSIGN,'=',36,21,673)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4aa8cf08>] and goto state 75
Result : <list @ 0x7f0d4aa8c248> (['Type', ['TypeName', ['int']]])
State  : 75
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type . LexToken(ASSIGN,'=',36,21,673)
Action : Shift and goto state 144
State  : 144
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN . LexToken(INT,'100',36,23,675)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN INT . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [BasicLit -> INT] with ['100'] and goto state 120
Result : <list @ 0x7f0d4aa8cc48> (['BasicLit', ['100']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN BasicLit . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aa8cc48>] and goto state 116
Result : <list @ 0x7f0d4aa8cdc8> (['Lit', ['BasicLit', ['100']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN Lit . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aa8cdc8>] and goto state 108
Result : <list @ 0x7f0d4aa8cb08> (['Operand', ['Lit', ['BasicLit', ['100'] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN Operand . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa8cb08>] and goto state 106
Result : <list @ 0x7f0d4aa8c208> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN PrimaryExpr . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa8c208>] and goto state 105
Result : <list @ 0x7f0d4aa8c988> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN UnaryExpr . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa8c988>] and goto state 146
Result : <list @ 0x7f0d4aa8c788> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN Expr . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa8c388> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN Expr ExprOth . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa8c788>,['ExprOth']] and goto state 257
Result : <list @ 0x7f0d4aa8c8c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 257
Defaulted state 257: Reduce using 156
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN ExpressionList . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [VarSpec -> IdentifierList Type ASSIGN ExpressionList] with [<list @ 0x7f0d4aa8ce48>,<list @ 0x7f0d4aa8c248>,'=',<list @ 0x7f0d4aa8c8c8>] and goto state 35
Result : <list @ 0x7f0d4aa8c908> (['VarSpec', ['IdentifierList', ['max_val ...)
State  : 35
Defaulted state 35: Reduce using 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR VarSpec . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [VarDecl -> VAR VarSpec] with ['var',<list @ 0x7f0d4aa8c908>] and goto state 15
Result : <list @ 0x7f0d4aa8c508> (['VarDecl', ['var'], ['VarSpec', ['Ident ...)
State  : 15
Defaulted state 15: Reduce using 19
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VarDecl . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [Decl -> VarDecl] with [<list @ 0x7f0d4aa8c508>] and goto state 153
Result : <list @ 0x7f0d4aa8dd08> (['Decl', ['VarDecl', ['var'], ['VarSpec' ...)
State  : 153
Defaulted state 153: Reduce using 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Decl . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [Statement -> Decl] with [<list @ 0x7f0d4aa8dd08>] and goto state 152
Result : <list @ 0x7f0d4aa8de48> (['Statement', ['Decl', ['VarDecl', ['var ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement . LexToken(SEMICOLON,';',36,26,678)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON . LexToken(IDENT,'graph',37,5,684)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IDENT . LexToken(DEFINE,':=',37,11,690)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4aa8dcc8> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IDENT IdentifierOth . LexToken(DEFINE,':=',37,11,690)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['graph',<list @ 0x7f0d4aa8dcc8>] and goto state 183
Result : <list @ 0x7f0d4aa8df48> (['IdentifierList', ['grapnt SEMICOLON VAR IdentifierList Type ASSIGN UnaryExpr . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa8c988>] and goto state 146
Result : <list @ 0x7f0d4aa8c788> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN Expr . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa8c388> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN Expr ExprOth . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa8c788>,['ExprOth']] and goto state 257
Result : <list @ 0x7f0d4aa8c8c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 257
Defaulted state 257: Reduce using 156
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR IdentifierList Type ASSIGN ExpressionList . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [VarSpec -> IdentifierList Type ASSIGN ExpressionList] with [<list @ 0x7f0d4aa8ce48>,<list @ 0x7f0d4aa8c248>,'=',<list @ 0x7f0d4aa8c8c8>] and goto state 35
Result : <list @ 0x7f0d4aa8c908> (['VarSpec', ['IdentifierList', ['max_val ...)
State  : 35
Defaulted state 35: Reduce using 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VAR VarSpec . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [VarDecl -> VAR VarSpec] with ['var',<list @ 0x7f0d4aa8c908>] and goto state 15
Result : <list @ 0x7f0d4aa8c508> (['VarDecl', ['var'], ['VarSpec', ['Ident ...)
State  : 15
Defaulted state 15: Reduce using 19
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON VarDecl . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [Decl -> VarDecl] with [<list @ 0x7f0d4aa8c508>] and goto state 153
Result : <list @ 0x7f0d4aa8dd08> (['Decl', ['VarDecl', ['var'], ['VarSpec' ...)
State  : 153
Defaulted state 153: Reduce using 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Decl . LexToken(SEMICOLON,';',36,26,678)
Action : Reduce rule [Statement -> Decl] with [<list @ 0x7f0d4aa8dd08>] and goto state 152
Result : <list @ 0x7f0d4aa8de48> (['Statement', ['Decl', ['VarDecl', ['var ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement . LexToken(SEMICOLON,';',36,26,678)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON . LexToken(IDENT,'graph',37,5,684)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IDENT . LexToken(DEFINE,':=',37,11,690)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4aa8dcc8> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IDENT IdentifierOth . LexToken(DEFINE,':=',37,11,690)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['graph',<list @ 0x7f0d4aa8dcc8>] and goto state 183
Result : <list @ 0x7f0d4aa8df48> (['IdentifierList', ['graph'], ['Identifi ...)
h'], ['Identifi ...)
State  : 183
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList . LexToken(DEFINE,':=',37,11,690)
Action : Shift and goto state 298
State  : 298
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE . LexToken(IDENT,'make',37,14,693)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE IDENT . LexToken(LPAREN,'(',37,18,697)
Action : Reduce rule [OperandName -> IDENT] with ['make'] and goto state 117
Result : <list @ 0x7f0d4aa8d888> (['OperandName', ['make']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE OperandName . LexToken(LPAREN,'(',37,18,697)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa8d888>] and goto state 108
Result : <list @ 0x7f0d4aa8da08> (['Operand', ['OperandName', ['make']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE Operand . LexToken(LPAREN,'(',37,18,697)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa8da08>] and goto state 106
Result : <list @ 0x7f0d4aa8d9c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr . LexToken(LPAREN,'(',37,18,697)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN . LexToken(LBRACK,'[',37,19,698)
Action : Shift and goto state 66
State  : 66
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN LBRACK . LexToken(RBRACK,']',37,20,699)
Action : Shift and goto state 103
State  : 103
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN LBRACK RBRACK . LexToken(IDENT,'Node',37,21,700)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN LBRACK RBRACK IDENT . LexToken(COMMA,',',37,25,704)
Action : Reduce rule [TypeName -> IDENT] with ['Node'] and goto state 55
Result : <list @ 0x7f0d4aa8d648> (['TypeName', ['Node']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN LBRACK RBRACK TypeName . LexToken(COMMA,',',37,25,704)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4aa8d648>] and goto state 197
Result : <list @ 0x7f0d4aa8d4c8> (['Type', ['TypeName', ['Node']]])
State  : 197
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN LBRACK RBRACK Type . LexToken(COMMA,',',37,25,704)
Action : Reduce rule [ElementType -> Type] witState  : 183
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList . LexToken(DEFINE,':=',37,11,690)
Action : Shift and goto state 298
State  : 298
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE . LexToken(IDENT,'make',37,14,693)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE IDENT . LexToken(LPAREN,'(',37,18,697)
Action : Reduce rule [OperandName -> IDENT] with ['make'] and goto state 117
Result : <list @ 0x7f0d4aa8d888> (['OperandName', ['make']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE OperandName . LexToken(LPAREN,'(',37,18,697)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa8d888>] and goto state 108
Result : <list @ 0x7f0d4aa8da08> (['Operand', ['OperandName', ['make']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE Operand . LexToken(LPAREN,'(',37,18,697)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa8da08>] and goto state 106
Result : <list @ 0x7f0d4aa8d9c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr . LexToken(LPAREN,'(',37,18,697)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN . LexToken(LBRACK,'[',37,19,698)
Action : Shift and goto state 66
State  : 66
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN LBRACK . LexToken(RBRACK,']',37,20,699)
Action : Shift and goto state 103
State  : 103
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN LBRACK RBRACK . LexToken(IDENT,'Node',37,21,700)
Action : Shift and goto state 58
State  : 58
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN LBRACK RBRACK IDENT . LexToken(COMMA,',',37,25,704)
Action : Reduce rule [TypeName -> IDENT] with ['Node'] and goto state 55
Result : <list @ 0x7f0d4aa8d648> (['TypeName', ['Node']])
State  : 55
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN LBRACK RBRACK TypeName . LexToken(COMMA,',',37,25,704)
Action : Reduce rule [Type -> TypeName] with [<list @ 0x7f0d4aa8d648>] and goto state 197
Result : <list @ 0x7f0d4aa8d4c8> (['Type', ['TypeName', ['Node']]])
State  : 197
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN LBRACK RBRACK Type . LexToken(COMMA,',',37,25,704)
Action : Reduce rule [ElementType -> Type] with [<list @ 0x7f0d4aa8d4c8>] and goto state 196
Result : <list @ 0x7f0d4aa8da88> (['ElementType', ['Type', ['TypeName', [' ...)
State  : 196
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN LBRACK RBRACK ElementType . LexToken(COMMA,',',37,25,704)
Action : Reduce rule [SliceType -> LBRACK RBRACK ElementType] with ['[',']',<list @ 0x7f0d4aa8da88>] and goto state 236
Result : <list @ 0x7f0d4aa8d548> (['SliceType', ['['], [']'], ['ElementTyp ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN SliceType . LexToken(COMMA,',',37,25,704)
Action : Reduce rule [TypeLit -> SliceType] with [<list @ 0x7f0d4aa8d548>] and goto state 56
Result : <list @ 0x7f0d4aa8d308> (['TypeLit', ['SliceType', ['['], [']'],  ...)
State  : 56
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN TypeLit . LexToken(COMMA,',',37,25,704)
Action : Reduce rule [Type -> TypeLit] with [<list @ 0x7f0d4aa8d308>] and goto state 310
Result : <list @ 0x7f0d4aa8d108> (['Type', ['TypeLit', ['SliceType', ['['] ...)
State  : 310
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type . LexToken(COMMA,',',37,25,704)
Action : Shift and goto state 358
State  : 358
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA . LexToken(IDENT,'n',37,27,706)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA IDENT . LexToken(ADD,'+',37,28,707)
Action : Reduce rule [OperandName -> IDENT] with ['n'] and goto state 117
Result : <list @ 0x7f0d4aa8d0c8> (['OperandName', ['n']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA OperandName . LexToken(ADD,'+',37,28,707)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa8d0c8>] and goto state 108
Result : <list @ 0x7f0d4aa8d148> (['Operand', ['OperandName', ['n']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Operand . LexToken(ADD,'+',37,28,707)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa8d148>] and goto state 106
Result : <list @ 0x7f0d4aa8d088> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA PrimaryExpr . LexToken(ADD,'+',37,28,707)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa8d088>] and goto state 105
Result : <list @ 0x7f0d4aa8d288> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA UnaryExpr . LexToken(ADD,'+',37,28,707)
h [<list @ 0x7f0d4aa8d4c8>] and goto state 196
Result : <list @ 0x7f0d4aa8da88> (['ElementType', ['Type', ['TypeName', [' ...)
State  : 196
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN LBRACK RBRACK ElementType . LexToken(COMMA,',',37,25,704)
Action : Reduce rule [SliceType -> LBRACK RBRACK ElementType] with ['[',']',<list @ 0x7f0d4aa8da88>] and goto state 236
Result : <list @ 0x7f0d4aa8d548> (['SliceType', ['['], [']'], ['ElementTyp ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN SliceType . LexToken(COMMA,',',37,25,704)
Action : Reduce rule [TypeLit -> SliceType] with [<list @ 0x7f0d4aa8d548>] and goto state 56
Result : <list @ 0x7f0d4aa8d308> (['TypeLit', ['SliceType', ['['], [']'],  ...)
State  : 56
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN TypeLit . LexToken(COMMA,',',37,25,704)
Action : Reduce rule [Type -> TypeLit] with [<list @ 0x7f0d4aa8d308>] and goto state 310
Result : <list @ 0x7f0d4aa8d108> (['Type', ['TypeLit', ['SliceType', ['['] ...)
State  : 310
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type . LexToken(COMMA,',',37,25,704)
Action : Shift and goto state 358
State  : 358
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA . LexToken(IDENT,'n',37,27,706)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA IDENT . LexToken(ADD,'+',37,28,707)
Action : Reduce rule [OperandName -> IDENT] with ['n'] and goto state 117
Result : <list @ 0x7f0d4aa8d0c8> (['OperandName', ['n']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA OperandName . LexToken(ADD,'+',37,28,707)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa8d0c8>] and goto state 108
Result : <list @ 0x7f0d4aa8d148> (['Operand', ['OperandName', ['n']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Operand . LexToken(ADD,'+',37,28,707)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa8d148>] and goto state 106
Result : <list @ 0x7f0d4aa8d088> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA PrimaryExpr . LexToken(ADD,'+',37,28,707)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa8d088>] and goto state 105
Result : <list @ 0x7f0d4aa8d288> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA UnaryExpr . LexToken(ADD,'+',37,28,707)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa8d288>] and goto state 146
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa8d288>] and goto state 146
Result : <list @ 0x7f0d4aa8d748> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr . LexToken(ADD,'+',37,28,707)
Action : Shift and goto state 210
State  : 210
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr ADD . LexToken(INT,'1',37,29,708)
Action : Reduce rule [AddOp -> ADD] with ['+'] and goto state 202
Result : <list @ 0x7f0d4aa8a548> (['AddOp', ['+']])
State  : 202
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr AddOp . LexToken(INT,'1',37,29,708)
Action : Reduce rule [BinOp -> AddOp] with [<list @ 0x7f0d4aa8a548>] and goto state 198
Result : <list @ 0x7f0d4aa8da48> (['BinOp', ['AddOp', ['+']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp . LexToken(INT,'1',37,29,708)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp INT . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4aa8dfc8> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp BasicLit . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aa8dfc8>] and goto state 116
Result : <list @ 0x7f0d4aa8d608> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp Lit . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aa8d608>] and goto state 108
Result : <list @ 0x7f0d4aa8db48> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp Operand . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa8db48>] and goto state 106
Result : <list @ 0x7f0d4aa8d808> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp PrimaryExpr . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa8d808>] and goto state 105
Result : <list @ 0x7f0d4aa8dd48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp UnaryExpr . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa8dd48Result : <list @ 0x7f0d4aa8d748> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr . LexToken(ADD,'+',37,28,707)
Action : Shift and goto state 210
State  : 210
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr ADD . LexToken(INT,'1',37,29,708)
Action : Reduce rule [AddOp -> ADD] with ['+'] and goto state 202
Result : <list @ 0x7f0d4aa8a548> (['AddOp', ['+']])
State  : 202
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr AddOp . LexToken(INT,'1',37,29,708)
Action : Reduce rule [BinOp -> AddOp] with [<list @ 0x7f0d4aa8a548>] and goto state 198
Result : <list @ 0x7f0d4aa8da48> (['BinOp', ['AddOp', ['+']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp . LexToken(INT,'1',37,29,708)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp INT . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4aa8dfc8> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp BasicLit . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aa8dfc8>] and goto state 116
Result : <list @ 0x7f0d4aa8d608> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp Lit . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aa8d608>] and goto state 108
Result : <list @ 0x7f0d4aa8db48> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp Operand . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa8db48>] and goto state 106
Result : <list @ 0x7f0d4aa8d808> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp PrimaryExpr . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa8d808>] and goto state 105
Result : <list @ 0x7f0d4aa8dd48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp UnaryExpr . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa8dd48>] and goto state 304
Result : <list @ 0x7f0d4aa8dbc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp Expr . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aa8d748>,<list @ 0x7f0d4aa8da48>,<list @ 0x7f0d4aa8dbc8>] and goto state 146
Result : <list @ 0x7f0d4aa90a88> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa90b88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr ExprOth . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa90a88>,['ExprOth']] and goto state 386
Result : <list @ 0x7f0d4aa908c8> (['ExpressionList', ['Expr', ['Expr', ['U ...)
State  : 386
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA ExpressionList . LexToken(RPAREN,')',37,30,709)
Action : Shift and goto state 412
State  : 412
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA ExpressionList RPAREN . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [Arguments -> LPAREN Type COMMA ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aa8d108>,',',<list @ 0x7f0d4aa908c8>,')'] and goto state 224
Result : <list @ 0x7f0d4aa90848> (['Arguments', ['('], ['Type', ['TypeLit' ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr Arguments . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aa8d9c8>,<list @ 0x7f0d4aa90848>] and goto state 106
Result : <list @ 0x7f0d4aa90648> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa90648>] and goto state 105
Result : <list @ 0x7f0d4aa90688> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE UnaryExpr . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa90688>] and goto state 146
Result : <list @ 0x7f0d4aa904c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE Expr . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa90548> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICO>] and goto state 304
Result : <list @ 0x7f0d4aa8dbc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr BinOp Expr . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aa8d748>,<list @ 0x7f0d4aa8da48>,<list @ 0x7f0d4aa8dbc8>] and goto state 146
Result : <list @ 0x7f0d4aa90a88> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa90b88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA Expr ExprOth . LexToken(RPAREN,')',37,30,709)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa90a88>,['ExprOth']] and goto state 386
Result : <list @ 0x7f0d4aa908c8> (['ExpressionList', ['Expr', ['Expr', ['U ...)
State  : 386
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA ExpressionList . LexToken(RPAREN,')',37,30,709)
Action : Shift and goto state 412
State  : 412
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr LPAREN Type COMMA ExpressionList RPAREN . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [Arguments -> LPAREN Type COMMA ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aa8d108>,',',<list @ 0x7f0d4aa908c8>,')'] and goto state 224
Result : <list @ 0x7f0d4aa90848> (['Arguments', ['('], ['Type', ['TypeLit' ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr Arguments . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aa8d9c8>,<list @ 0x7f0d4aa90848>] and goto state 106
Result : <list @ 0x7f0d4aa90648> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE PrimaryExpr . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa90648>] and goto state 105
Result : <list @ 0x7f0d4aa90688> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE UnaryExpr . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa90688>] and goto state 146
Result : <list @ 0x7f0d4aa904c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE Expr . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa90548> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE Expr ExprOth . LexToken(SEMICOLON,';',37,31,710)
LON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE Expr ExprOth . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa904c8>,['ExprOth']] and goto state 344
Result : <list @ 0x7f0d4aa90888> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 344
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE ExpressionList . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [ShortVarDecl -> IdentifierList DEFINE ExpressionList] with [<list @ 0x7f0d4aa8df48>,':=',<list @ 0x7f0d4aa90888>] and goto state 170
Result : <list @ 0x7f0d4aa8dc08> (['ShortVarDecl', ['IdentifierList', ['gr ...)
State  : 170
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ShortVarDecl . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [SimpleStmt -> ShortVarDecl] with [<list @ 0x7f0d4aa8dc08>] and goto state 155
Result : <list @ 0x7f0d4aa90f48> (['SimpleStmt', ['ShortVarDecl', ['Identi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aa90f48>] and goto state 152
Result : <list @ 0x7f0d4aa90288> (['Statement', ['SimpleStmt', ['ShortVarD ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',37,31,710)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IDENT,'rand',38,5,716)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IDENT . LexToken(PERIOD,'.',38,9,720)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IDENT PERIOD . LexToken(IDENT,'Seed',38,10,721)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IDENT PERIOD IDENT . LexToken(LPAREN,'(',38,14,725)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['rand','.','Seed'] and goto state 124
Result : <list @ 0x7f0d4aa902c8> (['QualifiedIdent', ['rand'], ['.'], ['Se ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON QualifiedIdent . LexToken(LPAREN,'(',38,14,725)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aa902c8>] and goto state 117
Result : <list @ 0x7f0d4aa90248> (['OperandName', ['QualifiedIdent', ['ran ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON OperandName . LexToken(LPAREN,'(',38,14,725)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa90248>] and goto state 108
Result : <list @ 0x7f0d4aa900c8> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON StateAction : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa904c8>,['ExprOth']] and goto state 344
Result : <list @ 0x7f0d4aa90888> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 344
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON IdentifierList DEFINE ExpressionList . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [ShortVarDecl -> IdentifierList DEFINE ExpressionList] with [<list @ 0x7f0d4aa8df48>,':=',<list @ 0x7f0d4aa90888>] and goto state 170
Result : <list @ 0x7f0d4aa8dc08> (['ShortVarDecl', ['IdentifierList', ['gr ...)
State  : 170
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON ShortVarDecl . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [SimpleStmt -> ShortVarDecl] with [<list @ 0x7f0d4aa8dc08>] and goto state 155
Result : <list @ 0x7f0d4aa90f48> (['SimpleStmt', ['ShortVarDecl', ['Identi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',37,31,710)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aa90f48>] and goto state 152
Result : <list @ 0x7f0d4aa90288> (['Statement', ['SimpleStmt', ['ShortVarD ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',37,31,710)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IDENT,'rand',38,5,716)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IDENT . LexToken(PERIOD,'.',38,9,720)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IDENT PERIOD . LexToken(IDENT,'Seed',38,10,721)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IDENT PERIOD IDENT . LexToken(LPAREN,'(',38,14,725)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['rand','.','Seed'] and goto state 124
Result : <list @ 0x7f0d4aa902c8> (['QualifiedIdent', ['rand'], ['.'], ['Se ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON QualifiedIdent . LexToken(LPAREN,'(',38,14,725)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aa902c8>] and goto state 117
Result : <list @ 0x7f0d4aa90248> (['OperandName', ['QualifiedIdent', ['ran ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON OperandName . LexToken(LPAREN,'(',38,14,725)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa90248>] and goto state 108
Result : <list @ 0x7f0d4aa900c8> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Operand . LexToken(LPAREN,'(',38,14,725)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa900c8>] and goto state 106
Result : <list @ 0x7f0d4aa90e48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(LPAREN,'(',38,14,725)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN . LexToken(IDENT,'time',38,15,726)
Action : Shift and goto state 232
State  : 232
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN IDENT . LexToken(PERIOD,'.',38,19,730)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN IDENT PERIOD . LexToken(IDENT,'Now',38,20,731)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN IDENT PERIOD IDENT . LexToken(LPAREN,'(',38,23,734)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['time','.','Now'] and goto state 233
Result : <list @ 0x7f0d4aa90b48> (['QualifiedIdent', ['time'], ['.'], ['No ...)
State  : 233
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN QualifiedIdent . LexToken(LPAREN,'(',38,23,734)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aa90b48>] and goto state 117
Result : <list @ 0x7f0d4aa90f08> (['OperandName', ['QualifiedIdent', ['tim ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN OperandName . LexToken(LPAREN,'(',38,23,734)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa90f08>] and goto state 108
Result : <list @ 0x7f0d4aa90488> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN Operand . LexToken(LPAREN,'(',38,23,734)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa90488>] and goto state 106
Result : <list @ 0x7f0d4aa90a08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr . LexToken(LPAREN,'(',38,23,734)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr LPAREN . LexToken(RPAREN,')',38,24,735)
Action : Shift and goto state 308
State  : 308
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr LPAREN RPAREN . LexToken(PERIOD,'.',38,25,736ment SEMICOLON Statement SEMICOLON Operand . LexToken(LPAREN,'(',38,14,725)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa900c8>] and goto state 106
Result : <list @ 0x7f0d4aa90e48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(LPAREN,'(',38,14,725)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN . LexToken(IDENT,'time',38,15,726)
Action : Shift and goto state 232
State  : 232
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN IDENT . LexToken(PERIOD,'.',38,19,730)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN IDENT PERIOD . LexToken(IDENT,'Now',38,20,731)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN IDENT PERIOD IDENT . LexToken(LPAREN,'(',38,23,734)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['time','.','Now'] and goto state 233
Result : <list @ 0x7f0d4aa90b48> (['QualifiedIdent', ['time'], ['.'], ['No ...)
State  : 233
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN QualifiedIdent . LexToken(LPAREN,'(',38,23,734)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aa90b48>] and goto state 117
Result : <list @ 0x7f0d4aa90f08> (['OperandName', ['QualifiedIdent', ['tim ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN OperandName . LexToken(LPAREN,'(',38,23,734)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa90f08>] and goto state 108
Result : <list @ 0x7f0d4aa90488> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN Operand . LexToken(LPAREN,'(',38,23,734)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa90488>] and goto state 106
Result : <list @ 0x7f0d4aa90a08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr . LexToken(LPAREN,'(',38,23,734)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr LPAREN . LexToken(RPAREN,')',38,24,735)
Action : Shift and goto state 308
State  : 308
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr LPAREN RPAREN . LexToken(PERIOD,'.',38,25,736)
Action : Reduce rule [Arguments -> LPAREN RPAREN] with ['(',')'] and goto state 224
)
Action : Reduce rule [Arguments -> LPAREN RPAREN] with ['(',')'] and goto state 224
Result : <list @ 0x7f0d4aa90988> (['Arguments', ['('], [')']])
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr Arguments . LexToken(PERIOD,'.',38,25,736)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aa90a08>,<list @ 0x7f0d4aa90988>] and goto state 106
Result : <list @ 0x7f0d4aa90088> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr . LexToken(PERIOD,'.',38,25,736)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr PERIOD . LexToken(IDENT,'UnixNano',38,26,737)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr PERIOD IDENT . LexToken(LPAREN,'(',38,34,745)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','UnixNano'] and goto state 221
Result : <list @ 0x7f0d4aa92c48> (['Selector', ['.'], ['UnixNano']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr Selector . LexToken(LPAREN,'(',38,34,745)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa90088>,<list @ 0x7f0d4aa92c48>] and goto state 106
Result : <list @ 0x7f0d4aa92a88> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr . LexToken(LPAREN,'(',38,34,745)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr LPAREN . LexToken(RPAREN,')',38,35,746)
Action : Shift and goto state 308
State  : 308
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr LPAREN RPAREN . LexToken(RPAREN,')',38,36,747)
Action : Reduce rule [Arguments -> LPAREN RPAREN] with ['(',')'] and goto state 224
Result : <list @ 0x7f0d4aa92c88> (['Arguments', ['('], [')']])
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr Arguments . LexToken(RPAREN,')',38,36,747)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aa92a88>,<list @ 0x7f0d4aa92c88>] and goto state 106
Result : <list @ 0x7f0d4aa92bc8> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',38,36,747)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa92bc8>] and goto state 105
Result : <list @ 0x7f0d4aa92a08> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClauResult : <list @ 0x7f0d4aa90988> (['Arguments', ['('], [')']])
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr Arguments . LexToken(PERIOD,'.',38,25,736)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aa90a08>,<list @ 0x7f0d4aa90988>] and goto state 106
Result : <list @ 0x7f0d4aa90088> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr . LexToken(PERIOD,'.',38,25,736)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr PERIOD . LexToken(IDENT,'UnixNano',38,26,737)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr PERIOD IDENT . LexToken(LPAREN,'(',38,34,745)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','UnixNano'] and goto state 221
Result : <list @ 0x7f0d4aa92c48> (['Selector', ['.'], ['UnixNano']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr Selector . LexToken(LPAREN,'(',38,34,745)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa90088>,<list @ 0x7f0d4aa92c48>] and goto state 106
Result : <list @ 0x7f0d4aa92a88> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr . LexToken(LPAREN,'(',38,34,745)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr LPAREN . LexToken(RPAREN,')',38,35,746)
Action : Shift and goto state 308
State  : 308
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr LPAREN RPAREN . LexToken(RPAREN,')',38,36,747)
Action : Reduce rule [Arguments -> LPAREN RPAREN] with ['(',')'] and goto state 224
Result : <list @ 0x7f0d4aa92c88> (['Arguments', ['('], [')']])
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr Arguments . LexToken(RPAREN,')',38,36,747)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aa92a88>,<list @ 0x7f0d4aa92c88>] and goto state 106
Result : <list @ 0x7f0d4aa92bc8> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',38,36,747)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa92bc8>] and goto state 105
Result : <list @ 0x7f0d4aa92a08> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',38,36,747)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa92a08>] and goto state 146
Result : <list @ 0x7f0d4aa92588> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',38,36,747)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa92688> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',38,36,747)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa92588>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4aa92388> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',38,36,747)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aa92388>,')'] and goto state 224
Result : <list @ 0x7f0d4aa92508> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr Arguments . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aa90e48>,<list @ 0x7f0d4aa92508>] and goto state 106
Result : <list @ 0x7f0d4aa92708> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa92708>] and goto state 105
Result : <list @ 0x7f0d4aa92748> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON UnaryExpr . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa92748>] and goto state 178
Result : <list @ 0x7f0d4aa922c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Expr . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [ExpressionStmt -> Expr] with [<list @ 0x7f0d4aa922c8>] and goto state 167
Result : <list @ 0x7f0d4aa926c8> (['ExpressionStmt', ['Expr', ['UnaryExpr' ...)
State  : 167
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionStmt . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [SimpleStmt -> ExpressionStmt] with [<list @ 0x7f0d4ase SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',38,36,747)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa92a08>] and goto state 146
Result : <list @ 0x7f0d4aa92588> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',38,36,747)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa92688> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',38,36,747)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa92588>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4aa92388> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',38,36,747)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aa92388>,')'] and goto state 224
Result : <list @ 0x7f0d4aa92508> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr Arguments . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aa90e48>,<list @ 0x7f0d4aa92508>] and goto state 106
Result : <list @ 0x7f0d4aa92708> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa92708>] and goto state 105
Result : <list @ 0x7f0d4aa92748> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON UnaryExpr . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa92748>] and goto state 178
Result : <list @ 0x7f0d4aa922c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Expr . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [ExpressionStmt -> Expr] with [<list @ 0x7f0d4aa922c8>] and goto state 167
Result : <list @ 0x7f0d4aa926c8> (['ExpressionStmt', ['Expr', ['UnaryExpr' ...)
State  : 167
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionStmt . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [SimpleStmt -> ExpressionStmt] with [<list @ 0x7f0d4aa926c8>] and goto state 155
a926c8>] and goto state 155
Result : <list @ 0x7f0d4aa92188> (['SimpleStmt', ['ExpressionStmt', ['Expr ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aa92188>] and goto state 152
Result : <list @ 0x7f0d4aa92f88> (['Statement', ['SimpleStmt', ['Expressio ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',38,37,748)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(FOR,'for',40,5,798)
Action : Shift and goto state 181
State  : 181
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR . LexToken(IDENT,'i',40,9,802)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IDENT . LexToken(DEFINE,':=',40,11,804)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4aa92108> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IDENT IdentifierOth . LexToken(DEFINE,':=',40,11,804)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['i',<list @ 0x7f0d4aa92108>] and goto state 297
Result : <list @ 0x7f0d4aa92d88> (['IdentifierList', ['i'], ['IdentifierOt ...)
State  : 297
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList . LexToken(DEFINE,':=',40,11,804)
Action : Shift and goto state 343
State  : 343
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE . LexToken(INT,'1',40,14,807)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE INT . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4aa92908> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE BasicLit . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aa92908>] and goto state 116
Result : <list @ 0x7f0d4aa92548> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Lit . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [Operand -> Lit] with [<list @ 0xResult : <list @ 0x7f0d4aa92188> (['SimpleStmt', ['ExpressionStmt', ['Expr ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',38,37,748)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aa92188>] and goto state 152
Result : <list @ 0x7f0d4aa92f88> (['Statement', ['SimpleStmt', ['Expressio ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',38,37,748)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(FOR,'for',40,5,798)
Action : Shift and goto state 181
State  : 181
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR . LexToken(IDENT,'i',40,9,802)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IDENT . LexToken(DEFINE,':=',40,11,804)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4aa92108> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IDENT IdentifierOth . LexToken(DEFINE,':=',40,11,804)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['i',<list @ 0x7f0d4aa92108>] and goto state 297
Result : <list @ 0x7f0d4aa92d88> (['IdentifierList', ['i'], ['IdentifierOt ...)
State  : 297
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList . LexToken(DEFINE,':=',40,11,804)
Action : Shift and goto state 343
State  : 343
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE . LexToken(INT,'1',40,14,807)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE INT . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4aa92908> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE BasicLit . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aa92908>] and goto state 116
Result : <list @ 0x7f0d4aa92548> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Lit . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aa92548>] and goto state 108
Result : <list @ 0x7f0d4aa92988> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Operand . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa92988>] and goto state 106
Result : <list @ 0x7f0d4aa92248> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE PrimaryExpr . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa92248>] and goto state 105
Result : <list @ 0x7f0d4aa92fc8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE UnaryExpr . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa92fc8>] and goto state 146
Result : <list @ 0x7f0d4aa94f08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Expr . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa94cc8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Expr ExprOth . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa94f08>,['ExprOth']] and goto state 344
Result : <list @ 0x7f0d4aa94e08> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 344
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE ExpressionList . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [ShortVarDecl -> IdentifierList DEFINE ExpressionList] with [<list @ 0x7f0d4aa92d88>,':=',<list @ 0x7f0d4aa94e08>] and goto state 170
Result : <list @ 0x7f0d4aa94c48> (['ShortVarDecl', ['IdentifierList', ['i' ...)
State  : 170
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ShortVarDecl . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [SimpleStmt -> ShortVarDecl] with [<list @ 0x7f0d4aa94c48>] and goto state 295
Result : <list @ 0x7f0d4aa94e48> (['SimpleStmt', ['ShortVarDecl', ['Identi ...)
State  : 295
Defaulted state 295: Reduce using 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR SimpleStmt . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [InitStmt -> SimpleStmt] with [<list @ 0x7f0d4aa94e48>] and goto state 293
Result : <list @ 0x7f0d4aa946c8> (['InitStmt', ['SimpleStmt', ['ShortVarDe ...)
State  : 293
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMIC7f0d4aa92548>] and goto state 108
Result : <list @ 0x7f0d4aa92988> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Operand . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa92988>] and goto state 106
Result : <list @ 0x7f0d4aa92248> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE PrimaryExpr . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa92248>] and goto state 105
Result : <list @ 0x7f0d4aa92fc8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE UnaryExpr . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa92fc8>] and goto state 146
Result : <list @ 0x7f0d4aa94f08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Expr . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa94cc8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Expr ExprOth . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa94f08>,['ExprOth']] and goto state 344
Result : <list @ 0x7f0d4aa94e08> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 344
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE ExpressionList . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [ShortVarDecl -> IdentifierList DEFINE ExpressionList] with [<list @ 0x7f0d4aa92d88>,':=',<list @ 0x7f0d4aa94e08>] and goto state 170
Result : <list @ 0x7f0d4aa94c48> (['ShortVarDecl', ['IdentifierList', ['i' ...)
State  : 170
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ShortVarDecl . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [SimpleStmt -> ShortVarDecl] with [<list @ 0x7f0d4aa94c48>] and goto state 295
Result : <list @ 0x7f0d4aa94e48> (['SimpleStmt', ['ShortVarDecl', ['Identi ...)
State  : 295
Defaulted state 295: Reduce using 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR SimpleStmt . LexToken(SEMICOLON,';',40,15,808)
Action : Reduce rule [InitStmt -> SimpleStmt] with [<list @ 0x7f0d4aa94e48>] and goto state 293
Result : <list @ 0x7f0d4aa946c8> (['InitStmt', ['SimpleStmt', ['ShortVarDe ...)
State  : 293
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt . LexToken(SEMICOLON,';',40,15,808)
OLON Statement SEMICOLON FOR InitStmt . LexToken(SEMICOLON,';',40,15,808)
Action : Shift and goto state 340
State  : 340
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON . LexToken(IDENT,'i',40,17,810)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON IDENT . LexToken(LEQ,'<=',40,18,811)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa94d48> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON OperandName . LexToken(LEQ,'<=',40,18,811)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa94d48>] and goto state 108
Result : <list @ 0x7f0d4aa94988> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Operand . LexToken(LEQ,'<=',40,18,811)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa94988>] and goto state 106
Result : <list @ 0x7f0d4aa94b08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON PrimaryExpr . LexToken(LEQ,'<=',40,18,811)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa94b08>] and goto state 105
Result : <list @ 0x7f0d4aa94788> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON UnaryExpr . LexToken(LEQ,'<=',40,18,811)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa94788>] and goto state 374
Result : <list @ 0x7f0d4aa94548> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 374
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr . LexToken(LEQ,'<=',40,18,811)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr LEQ . LexToken(IDENT,'n',40,20,813)
Action : Reduce rule [RelOp -> LEQ] with ['<='] and goto state 201
Result : <list @ 0x7f0d4aa94588> (['RelOp', ['<=']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr RelOp . LexToken(IDENT,'n',40,20,813)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4aa94588>] and goto state 198
Result : <list @ 0x7f0d4aa943c8> (['BinOp', ['RelOp', ['<=']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp . LexToken(IDENT,'n',40,20,813)
Action : Shift and goto state 123
State  : 123Action : Shift and goto state 340
State  : 340
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON . LexToken(IDENT,'i',40,17,810)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON IDENT . LexToken(LEQ,'<=',40,18,811)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa94d48> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON OperandName . LexToken(LEQ,'<=',40,18,811)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa94d48>] and goto state 108
Result : <list @ 0x7f0d4aa94988> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Operand . LexToken(LEQ,'<=',40,18,811)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa94988>] and goto state 106
Result : <list @ 0x7f0d4aa94b08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON PrimaryExpr . LexToken(LEQ,'<=',40,18,811)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa94b08>] and goto state 105
Result : <list @ 0x7f0d4aa94788> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON UnaryExpr . LexToken(LEQ,'<=',40,18,811)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa94788>] and goto state 374
Result : <list @ 0x7f0d4aa94548> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 374
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr . LexToken(LEQ,'<=',40,18,811)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr LEQ . LexToken(IDENT,'n',40,20,813)
Action : Reduce rule [RelOp -> LEQ] with ['<='] and goto state 201
Result : <list @ 0x7f0d4aa94588> (['RelOp', ['<=']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr RelOp . LexToken(IDENT,'n',40,20,813)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4aa94588>] and goto state 198
Result : <list @ 0x7f0d4aa943c8> (['BinOp', ['RelOp', ['<=']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp . LexToken(IDENT,'n',40,20,813)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp IDENT . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [OperandName -> IDENT] with ['n'] and goto state 117
Result : <list @ 0x7f0d4aa94b88> (['OperandName', ['n']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp OperandName . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa94b88>] and goto state 108
Result : <list @ 0x7f0d4aa94188> (['Operand', ['OperandName', ['n']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp Operand . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa94188>] and goto state 106
Result : <list @ 0x7f0d4aa940c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp PrimaryExpr . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa940c8>] and goto state 105
Result : <list @ 0x7f0d4aa94248> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp UnaryExpr . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa94248>] and goto state 304
Result : <list @ 0x7f0d4aa942c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp Expr . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aa94548>,<list @ 0x7f0d4aa943c8>,<list @ 0x7f0d4aa942c8>] and goto state 374
Result : <list @ 0x7f0d4aa94388> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 374
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [Condition -> Expr] with [<list @ 0x7f0d4aa94388>] and goto state 373
Result : <list @ 0x7f0d4aa94288> (['Condition', ['Expr', ['Expr', ['UnaryE ...)
State  : 373
Defaulted state 373: Reduce using 259
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Condition . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [ConditionOpt -> Condition] with [<list @ 0x7f0d4aa94288>] and goto state 372
Result : <list @ 0x7f0d4aa94208> (['ConditionOpt', ['Condition', ['Expr',  ...)
State  : 372
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt . LexToken(SEMICOLON,';',40
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp IDENT . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [OperandName -> IDENT] with ['n'] and goto state 117
Result : <list @ 0x7f0d4aa94b88> (['OperandName', ['n']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp OperandName . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa94b88>] and goto state 108
Result : <list @ 0x7f0d4aa94188> (['Operand', ['OperandName', ['n']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp Operand . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa94188>] and goto state 106
Result : <list @ 0x7f0d4aa940c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp PrimaryExpr . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa940c8>] and goto state 105
Result : <list @ 0x7f0d4aa94248> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp UnaryExpr . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa94248>] and goto state 304
Result : <list @ 0x7f0d4aa942c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp Expr . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aa94548>,<list @ 0x7f0d4aa943c8>,<list @ 0x7f0d4aa942c8>] and goto state 374
Result : <list @ 0x7f0d4aa94388> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 374
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [Condition -> Expr] with [<list @ 0x7f0d4aa94388>] and goto state 373
Result : <list @ 0x7f0d4aa94288> (['Condition', ['Expr', ['Expr', ['UnaryE ...)
State  : 373
Defaulted state 373: Reduce using 259
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Condition . LexToken(SEMICOLON,';',40,21,814)
Action : Reduce rule [ConditionOpt -> Condition] with [<list @ 0x7f0d4aa94288>] and goto state 372
Result : <list @ 0x7f0d4aa94208> (['ConditionOpt', ['Condition', ['Expr',  ...)
State  : 372
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt . LexToken(SEMICOLON,';',40,21,814)
,21,814)
Action : Shift and goto state 396
State  : 396
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON . LexToken(IDENT,'i',40,23,816)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON IDENT . LexToken(INC,'++',40,24,817)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa94108> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON OperandName . LexToken(INC,'++',40,24,817)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa94108>] and goto state 108
Result : <list @ 0x7f0d4aa94f88> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON Operand . LexToken(INC,'++',40,24,817)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa94f88>] and goto state 106
Result : <list @ 0x7f0d4aa944c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON PrimaryExpr . LexToken(INC,'++',40,24,817)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa944c8>] and goto state 105
Result : <list @ 0x7f0d4aa94448> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON UnaryExpr . LexToken(INC,'++',40,24,817)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa94448>] and goto state 178
Result : <list @ 0x7f0d4aa94948> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON Expr . LexToken(INC,'++',40,24,817)
Action : Shift and goto state 287
State  : 287
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON Expr INC . LexToken(LBRACE,'{',40,26,819)
Action : Reduce rule [IncDecStmt -> Expr INC] with [<list @ 0x7f0d4aa94948>,'++'] and goto state 168
Result : <list @ 0x7f0d4aa94688> (['IncDecStmt', ['Expr', ['UnaryExpr', [' ...)
State  : 168
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON IncDecStmt . LexToken(LBRACE,'{',40,26,819)
Action : Reduce rule [SimpleStmt -> IncDecStmt] with [<list @ 0x7f0d4aa94688>] and goto state 414
Result : <list @ 0x7f0d4aa94408> (['SimpleStmt', ['IncDecStmt', ['Expr', [ ...)
State  : 414
Defaulted state 414: ReduAction : Shift and goto state 396
State  : 396
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON . LexToken(IDENT,'i',40,23,816)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON IDENT . LexToken(INC,'++',40,24,817)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa94108> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON OperandName . LexToken(INC,'++',40,24,817)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa94108>] and goto state 108
Result : <list @ 0x7f0d4aa94f88> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON Operand . LexToken(INC,'++',40,24,817)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa94f88>] and goto state 106
Result : <list @ 0x7f0d4aa944c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON PrimaryExpr . LexToken(INC,'++',40,24,817)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa944c8>] and goto state 105
Result : <list @ 0x7f0d4aa94448> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON UnaryExpr . LexToken(INC,'++',40,24,817)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa94448>] and goto state 178
Result : <list @ 0x7f0d4aa94948> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON Expr . LexToken(INC,'++',40,24,817)
Action : Shift and goto state 287
State  : 287
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON Expr INC . LexToken(LBRACE,'{',40,26,819)
Action : Reduce rule [IncDecStmt -> Expr INC] with [<list @ 0x7f0d4aa94948>,'++'] and goto state 168
Result : <list @ 0x7f0d4aa94688> (['IncDecStmt', ['Expr', ['UnaryExpr', [' ...)
State  : 168
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON IncDecStmt . LexToken(LBRACE,'{',40,26,819)
Action : Reduce rule [SimpleStmt -> IncDecStmt] with [<list @ 0x7f0d4aa94688>] and goto state 414
Result : <list @ 0x7f0d4aa94408> (['SimpleStmt', ['IncDecStmt', ['Expr', [ ...)
State  : 414
Defaulted state 414: Reduce using 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt . LexToken(LBRACE,'{',40,26,819)
Action : Reduce rule [PostStmt -> SimpleStmt] with [<list @ 0x7f0d4aa94408>] and goto state 413
Result : <list @ 0x7f0d4aa94bc8> (['PostStmt', ['SimpleStmt', ['IncDecStmt ...)
State  : 413
Defaulted state 413: Reduce using 257
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt . LexToken(LBRACE,'{',40,26,819)
Action : Reduce rule [ForClause -> InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt] with [<list @ 0x7f0d4aa946c8>,';',<list @ 0x7f0d4aa94208>,';',<list @ 0x7f0d4aa94bc8>] and goto state 290
Result : <list @ 0x7f0d4aa96d48> (['ForClause', ['InitStmt', ['SimpleStmt' ...)
State  : 290
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause . LexToken(LBRACE,'{',40,26,819)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE . LexToken(IDENT,'graph',41,9,829)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE IDENT . LexToken(LBRACK,'[',41,14,834)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aa96e48> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE OperandName . LexToken(LBRACK,'[',41,14,834)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa96e48>] and goto state 108
Result : <list @ 0x7f0d4aa96f48> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Operand . LexToken(LBRACK,'[',41,14,834)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa96f48>] and goto state 106
Result : <list @ 0x7f0d4aa968c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr . LexToken(LBRACK,'[',41,14,834)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',41,15,835)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',41,16,836)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Resuce using 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt . LexToken(LBRACE,'{',40,26,819)
Action : Reduce rule [PostStmt -> SimpleStmt] with [<list @ 0x7f0d4aa94408>] and goto state 413
Result : <list @ 0x7f0d4aa94bc8> (['PostStmt', ['SimpleStmt', ['IncDecStmt ...)
State  : 413
Defaulted state 413: Reduce using 257
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt . LexToken(LBRACE,'{',40,26,819)
Action : Reduce rule [ForClause -> InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt] with [<list @ 0x7f0d4aa946c8>,';',<list @ 0x7f0d4aa94208>,';',<list @ 0x7f0d4aa94bc8>] and goto state 290
Result : <list @ 0x7f0d4aa96d48> (['ForClause', ['InitStmt', ['SimpleStmt' ...)
State  : 290
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause . LexToken(LBRACE,'{',40,26,819)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE . LexToken(IDENT,'graph',41,9,829)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE IDENT . LexToken(LBRACK,'[',41,14,834)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aa96e48> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE OperandName . LexToken(LBRACK,'[',41,14,834)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa96e48>] and goto state 108
Result : <list @ 0x7f0d4aa96f48> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Operand . LexToken(LBRACK,'[',41,14,834)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa96f48>] and goto state 106
Result : <list @ 0x7f0d4aa968c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr . LexToken(LBRACK,'[',41,14,834)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',41,15,835)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',41,16,836)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa96bc8> (['OperandName', ['i']])
lt : <list @ 0x7f0d4aa96bc8> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',41,16,836)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa96bc8>] and goto state 108
Result : <list @ 0x7f0d4aa96a88> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',41,16,836)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa96a88>] and goto state 106
Result : <list @ 0x7f0d4aa96f08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',41,16,836)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa96f08>] and goto state 105
Result : <list @ 0x7f0d4aa964c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',41,16,836)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa964c8>] and goto state 306
Result : <list @ 0x7f0d4aa96608> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',41,16,836)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',41,17,837)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aa96608>,']'] and goto state 222
Result : <list @ 0x7f0d4aa966c8> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',41,17,837)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aa968c8>,<list @ 0x7f0d4aa966c8>] and goto state 106
Result : <list @ 0x7f0d4aa96648> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr . LexToken(PERIOD,'.',41,17,837)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'value',41,18,838)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON StatemenState  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',41,16,836)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa96bc8>] and goto state 108
Result : <list @ 0x7f0d4aa96a88> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',41,16,836)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa96a88>] and goto state 106
Result : <list @ 0x7f0d4aa96f08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',41,16,836)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa96f08>] and goto state 105
Result : <list @ 0x7f0d4aa964c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',41,16,836)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa964c8>] and goto state 306
Result : <list @ 0x7f0d4aa96608> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',41,16,836)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',41,17,837)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aa96608>,']'] and goto state 222
Result : <list @ 0x7f0d4aa966c8> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',41,17,837)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aa968c8>,<list @ 0x7f0d4aa966c8>] and goto state 106
Result : <list @ 0x7f0d4aa96648> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr . LexToken(PERIOD,'.',41,17,837)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'value',41,18,838)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',41,24,844)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','value'] and goto state 221
Result : <list @ 0x7f0d4aa96148> (['Selector', ['.'], ['value']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',41,24,844)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa96648>,<list @ 0x7f0d4aa96148>] and goto state 106
Result : <list @ 0x7f0d4aa960c8> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr . LexToken(ASSIGN,'=',41,24,844)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa960c8>] and goto state 105
Result : <list @ 0x7f0d4aa967c8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE UnaryExpr . LexToken(ASSIGN,'=',41,24,844)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa967c8>] and goto state 178
Result : <list @ 0x7f0d4aa96788> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Expr . LexToken(ASSIGN,'=',41,24,844)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa96388> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Expr ExprOth . LexToken(ASSIGN,'=',41,24,844)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa96788>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aa96a48> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList . LexToken(ASSIGN,'=',41,24,844)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList ASSIGN . LexToken(IDENT,'rand',41,26,846)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aa96ec8> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op . LexToken(IDENT,'rand',41,26,846)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op IDENT . LexToken(PERIOD,'.',41,30,850)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLOt SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',41,24,844)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','value'] and goto state 221
Result : <list @ 0x7f0d4aa96148> (['Selector', ['.'], ['value']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',41,24,844)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa96648>,<list @ 0x7f0d4aa96148>] and goto state 106
Result : <list @ 0x7f0d4aa960c8> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr . LexToken(ASSIGN,'=',41,24,844)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa960c8>] and goto state 105
Result : <list @ 0x7f0d4aa967c8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE UnaryExpr . LexToken(ASSIGN,'=',41,24,844)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa967c8>] and goto state 178
Result : <list @ 0x7f0d4aa96788> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Expr . LexToken(ASSIGN,'=',41,24,844)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa96388> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Expr ExprOth . LexToken(ASSIGN,'=',41,24,844)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa96788>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aa96a48> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList . LexToken(ASSIGN,'=',41,24,844)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList ASSIGN . LexToken(IDENT,'rand',41,26,846)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aa96ec8> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op . LexToken(IDENT,'rand',41,26,846)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op IDENT . LexToken(PERIOD,'.',41,30,850)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op IDENT PERIOD . LexToken(IDENT,'Intn',41,31,851)
N TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op IDENT PERIOD . LexToken(IDENT,'Intn',41,31,851)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op IDENT PERIOD IDENT . LexToken(LPAREN,'(',41,35,855)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['rand','.','Intn'] and goto state 124
Result : <list @ 0x7f0d4aa961c8> (['QualifiedIdent', ['rand'], ['.'], ['In ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op QualifiedIdent . LexToken(LPAREN,'(',41,35,855)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aa961c8>] and goto state 117
Result : <list @ 0x7f0d4aa96448> (['OperandName', ['QualifiedIdent', ['ran ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op OperandName . LexToken(LPAREN,'(',41,35,855)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa96448>] and goto state 108
Result : <list @ 0x7f0d4aaa5f08> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op Operand . LexToken(LPAREN,'(',41,35,855)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa5f08>] and goto state 106
Result : <list @ 0x7f0d4aaa5e08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr . LexToken(LPAREN,'(',41,35,855)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN . LexToken(IDENT,'max_val',41,36,856)
Action : Shift and goto state 232
State  : 232
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [OperandName -> IDENT] with ['max_val'] and goto state 117
Result : <list @ 0x7f0d4aaa5fc8> (['OperandName', ['max_val']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN OperandName . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa5fc8>] and goto state 108
Result : <list @ 0x7f0d4aaa5b48> (['Operand', ['OperandName', ['max_val']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN Operand . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaAction : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op IDENT PERIOD IDENT . LexToken(LPAREN,'(',41,35,855)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['rand','.','Intn'] and goto state 124
Result : <list @ 0x7f0d4aa961c8> (['QualifiedIdent', ['rand'], ['.'], ['In ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op QualifiedIdent . LexToken(LPAREN,'(',41,35,855)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aa961c8>] and goto state 117
Result : <list @ 0x7f0d4aa96448> (['OperandName', ['QualifiedIdent', ['ran ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op OperandName . LexToken(LPAREN,'(',41,35,855)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa96448>] and goto state 108
Result : <list @ 0x7f0d4aaa5f08> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op Operand . LexToken(LPAREN,'(',41,35,855)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa5f08>] and goto state 106
Result : <list @ 0x7f0d4aaa5e08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr . LexToken(LPAREN,'(',41,35,855)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN . LexToken(IDENT,'max_val',41,36,856)
Action : Shift and goto state 232
State  : 232
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN IDENT . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [OperandName -> IDENT] with ['max_val'] and goto state 117
Result : <list @ 0x7f0d4aaa5fc8> (['OperandName', ['max_val']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN OperandName . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa5fc8>] and goto state 108
Result : <list @ 0x7f0d4aaa5b48> (['Operand', ['OperandName', ['max_val']] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN Operand . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa5b48>] and goto state 106
Result : <list @ 0x7f0d4aaa5c08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa5c08>] and goto state 105
Result : <list @ 0x7f0d4aaa5bc8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa5bc8>] and goto state 146
Result : <list @ 0x7f0d4aaa5b08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaa51c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaa5b08>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4aaa5308> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',41,43,863)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aaa5308>,')'] and goto state 224
Result : <list @ 0x7f0d4aaa5208> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr Arguments . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aaa5e08>,<list @ 0x7f0d4aaa5208>] and goto state 106
Result : <list @ 0x7f0d4aaa5288> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa5288>] and goto state 105
Result : <list @ 0x7f0d4aaa5048> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDa5b48>] and goto state 106
Result : <list @ 0x7f0d4aaa5c08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa5c08>] and goto state 105
Result : <list @ 0x7f0d4aaa5bc8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa5bc8>] and goto state 146
Result : <list @ 0x7f0d4aaa5b08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaa51c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',41,43,863)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaa5b08>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4aaa5308> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',41,43,863)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aaa5308>,')'] and goto state 224
Result : <list @ 0x7f0d4aaa5208> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr Arguments . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aaa5e08>,<list @ 0x7f0d4aaa5208>] and goto state 106
Result : <list @ 0x7f0d4aaa5288> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa5288>] and goto state 105
Result : <list @ 0x7f0d4aaa5048> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',41,44,864)
eclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa5048>] and goto state 146
Result : <list @ 0x7f0d4aaa56c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa929c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaa56c8>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aaa55c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aa96a48>,<list @ 0x7f0d4aa96ec8>,<list @ 0x7f0d4aaa55c8>] and goto state 169
Result : <list @ 0x7f0d4aaa5608> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Assignment . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aaa5608>] and goto state 155
Result : <list @ 0x7f0d4aaa5108> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE SimpleStmt . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aaa5108>] and goto state 152
Result : <list @ 0x7f0d4aaa52c8> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement . LexToken(SEMICOLON,';',41,44,864)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON . LexToken(IDENT,'graph',42,9,874)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON IDENT . LexToken(LBRACK,'[',42,14,879)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aaa5788> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON OperandName . LexToken(LBRACK,'[',42,14,879)
Action : Reduce rule [Operand -Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa5048>] and goto state 146
Result : <list @ 0x7f0d4aaa56c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa929c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaa56c8>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aaa55c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aa96a48>,<list @ 0x7f0d4aa96ec8>,<list @ 0x7f0d4aaa55c8>] and goto state 169
Result : <list @ 0x7f0d4aaa5608> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Assignment . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aaa5608>] and goto state 155
Result : <list @ 0x7f0d4aaa5108> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE SimpleStmt . LexToken(SEMICOLON,';',41,44,864)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aaa5108>] and goto state 152
Result : <list @ 0x7f0d4aaa52c8> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement . LexToken(SEMICOLON,';',41,44,864)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON . LexToken(IDENT,'graph',42,9,874)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON IDENT . LexToken(LBRACK,'[',42,14,879)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aaa5788> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON OperandName . LexToken(LBRACK,'[',42,14,879)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa5788>] and goto state 108
Result : <list @ 0x7f0d4aaa58c8> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Operand . LexToken(LBRACK,'[',42,14,879)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa58c8>] and goto state 106
Result : <list @ 0x7f0d4aaa5348> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr . LexToken(LBRACK,'[',42,14,879)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK . LexToken(IDENT,'i',42,15,880)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',42,16,881)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aaa5908> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',42,16,881)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa5908>] and goto state 108
Result : <list @ 0x7f0d4aaa5a08> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',42,16,881)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa5a08>] and goto state 106
Result : <list @ 0x7f0d4aaa54c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',42,16,881)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa54c8>] and goto state 105
Result : <list @ 0x7f0d4aaa5b88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',42,16,881)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa5b88>] and goto state 306
Result : <list @ 0x7f0d4aaa5e48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',42,16,881)
Action : Shift > OperandName] with [<list @ 0x7f0d4aaa5788>] and goto state 108
Result : <list @ 0x7f0d4aaa58c8> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Operand . LexToken(LBRACK,'[',42,14,879)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa58c8>] and goto state 106
Result : <list @ 0x7f0d4aaa5348> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr . LexToken(LBRACK,'[',42,14,879)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK . LexToken(IDENT,'i',42,15,880)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',42,16,881)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aaa5908> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',42,16,881)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa5908>] and goto state 108
Result : <list @ 0x7f0d4aaa5a08> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',42,16,881)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa5a08>] and goto state 106
Result : <list @ 0x7f0d4aaa54c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',42,16,881)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa54c8>] and goto state 105
Result : <list @ 0x7f0d4aaa5b88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',42,16,881)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa5b88>] and goto state 306
Result : <list @ 0x7f0d4aaa5e48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',42,16,881)
Action : Shift and goto state 351
and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',42,17,882)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aaa5e48>,']'] and goto state 222
Result : <list @ 0x7f0d4aa98b88> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr Index . LexToken(PERIOD,'.',42,17,882)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aaa5348>,<list @ 0x7f0d4aa98b88>] and goto state 106
Result : <list @ 0x7f0d4aa98ec8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr . LexToken(PERIOD,'.',42,17,882)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',42,18,883)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',42,31,896)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4aa98908> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr Selector . LexToken(ASSIGN,'=',42,31,896)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa98ec8>,<list @ 0x7f0d4aa98908>] and goto state 106
Result : <list @ 0x7f0d4aa98808> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr . LexToken(ASSIGN,'=',42,31,896)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa98808>] and goto state 105
Result : <list @ 0x7f0d4aa98508> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON UnaryExpr . LexToken(ASSIGN,'=',42,31,896)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa98508>] and goto state 178
Result : <list @ 0x7f0d4aa98948> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Expr . LexToken(ASSIGN,'=',42,31,896)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
RState  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',42,17,882)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aaa5e48>,']'] and goto state 222
Result : <list @ 0x7f0d4aa98b88> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr Index . LexToken(PERIOD,'.',42,17,882)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aaa5348>,<list @ 0x7f0d4aa98b88>] and goto state 106
Result : <list @ 0x7f0d4aa98ec8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr . LexToken(PERIOD,'.',42,17,882)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',42,18,883)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',42,31,896)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4aa98908> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr Selector . LexToken(ASSIGN,'=',42,31,896)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa98ec8>,<list @ 0x7f0d4aa98908>] and goto state 106
Result : <list @ 0x7f0d4aa98808> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON PrimaryExpr . LexToken(ASSIGN,'=',42,31,896)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa98808>] and goto state 105
Result : <list @ 0x7f0d4aa98508> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON UnaryExpr . LexToken(ASSIGN,'=',42,31,896)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa98508>] and goto state 178
Result : <list @ 0x7f0d4aa98948> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Expr . LexToken(ASSIGN,'=',42,31,896)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa985c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Expr ExprOth . LexToken(ASSIGN,'=',42,31,896)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa98948>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aa98648> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList . LexToken(ASSIGN,'=',42,31,896)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList ASSIGN . LexToken(IDENT,'graph',42,33,898)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aa98188> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op . LexToken(IDENT,'graph',42,33,898)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op IDENT . LexToken(LBRACK,'[',42,38,903)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aa988c8> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op OperandName . LexToken(LBRACK,'[',42,38,903)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa988c8>] and goto state 108
Result : <list @ 0x7f0d4aa98c08> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op Operand . LexToken(LBRACK,'[',42,38,903)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa98c08>] and goto state 106
Result : <list @ 0x7f0d4aa98608> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr . LexToken(LBRACK,'[',42,38,903)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK . LexToken(IDENT,'i',42,39,904)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement esult : <list @ 0x7f0d4aa985c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Expr ExprOth . LexToken(ASSIGN,'=',42,31,896)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa98948>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aa98648> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList . LexToken(ASSIGN,'=',42,31,896)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList ASSIGN . LexToken(IDENT,'graph',42,33,898)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aa98188> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op . LexToken(IDENT,'graph',42,33,898)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op IDENT . LexToken(LBRACK,'[',42,38,903)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aa988c8> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op OperandName . LexToken(LBRACK,'[',42,38,903)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa988c8>] and goto state 108
Result : <list @ 0x7f0d4aa98c08> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op Operand . LexToken(LBRACK,'[',42,38,903)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa98c08>] and goto state 106
Result : <list @ 0x7f0d4aa98608> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr . LexToken(LBRACK,'[',42,38,903)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK . LexToken(IDENT,'i',42,39,904)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',42,40,905)
SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',42,40,905)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa98ac8> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',42,40,905)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa98ac8>] and goto state 108
Result : <list @ 0x7f0d4aaa5548> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',42,40,905)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa5548>] and goto state 106
Result : <list @ 0x7f0d4aa98108> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',42,40,905)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa98108>] and goto state 105
Result : <list @ 0x7f0d4aaa7c08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',42,40,905)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa7c08>] and goto state 306
Result : <list @ 0x7f0d4aaa7f48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',42,40,905)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',42,41,906)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aaa7f48>,']'] and goto state 222
Result : <list @ 0x7f0d4aaa7e48> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr Index . LexToken(PERIOD,'.',42,41,906)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aa98608>,<list @ 0x7f0d4aaa7e48>] and goto state 106
Result : <list @ 0x7f0d4aaa7d08> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr . LexToken(PERIOD,'.',42,41,906)
Action : Shift and goto state 225
State  : 225
Stack  : PackageCAction : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa98ac8> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',42,40,905)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa98ac8>] and goto state 108
Result : <list @ 0x7f0d4aaa5548> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',42,40,905)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa5548>] and goto state 106
Result : <list @ 0x7f0d4aa98108> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',42,40,905)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa98108>] and goto state 105
Result : <list @ 0x7f0d4aaa7c08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',42,40,905)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa7c08>] and goto state 306
Result : <list @ 0x7f0d4aaa7f48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',42,40,905)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',42,41,906)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aaa7f48>,']'] and goto state 222
Result : <list @ 0x7f0d4aaa7e48> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr Index . LexToken(PERIOD,'.',42,41,906)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aa98608>,<list @ 0x7f0d4aaa7e48>] and goto state 106
Result : <list @ 0x7f0d4aaa7d08> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr . LexToken(PERIOD,'.',42,41,906)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr PERIOD . LexToken(IDENT,'value',42,42,907)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr PERIOD IDENT . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','value'] and goto state 221
Result : <list @ 0x7f0d4aaa7ac8> (['Selector', ['.'], ['value']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr Selector . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aaa7d08>,<list @ 0x7f0d4aaa7ac8>] and goto state 106
Result : <list @ 0x7f0d4aaa7b88> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa7b88>] and goto state 105
Result : <list @ 0x7f0d4aaa7808> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa7808>] and goto state 146
Result : <list @ 0x7f0d4aaa78c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op Expr . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaa7648> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaa78c8>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aaa7548> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aa98648>,<list @ 0x7f0d4aa98188>,<list @ 0x7f0d4aaa7548>] and goto state 169
Result : <list @ 0x7f0d4aaa75c8> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDeclause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr PERIOD . LexToken(IDENT,'value',42,42,907)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr PERIOD IDENT . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','value'] and goto state 221
Result : <list @ 0x7f0d4aaa7ac8> (['Selector', ['.'], ['value']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr Selector . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aaa7d08>,<list @ 0x7f0d4aaa7ac8>] and goto state 106
Result : <list @ 0x7f0d4aaa7b88> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa7b88>] and goto state 105
Result : <list @ 0x7f0d4aaa7808> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa7808>] and goto state 146
Result : <list @ 0x7f0d4aaa78c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op Expr . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaa7648> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaa78c8>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aaa7548> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aa98648>,<list @ 0x7f0d4aa98188>,<list @ 0x7f0d4aaa7548>] and goto state 169
Result : <list @ 0x7f0d4aaa75c8> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Assignment . LexToken(SEMICOLON,';',42,47,912)
l SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Assignment . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aaa75c8>] and goto state 155
Result : <list @ 0x7f0d4aaa7388> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aaa7388>] and goto state 152
Result : <list @ 0x7f0d4aa98048> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement . LexToken(SEMICOLON,';',42,47,912)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON . LexToken(IF,'if',43,9,922)
Action : Shift and goto state 177
State  : 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF . LexToken(IDENT,'rand',43,12,925)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF IDENT . LexToken(PERIOD,'.',43,16,929)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF IDENT PERIOD . LexToken(IDENT,'Intn',43,17,930)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF IDENT PERIOD IDENT . LexToken(LPAREN,'(',43,21,934)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['rand','.','Intn'] and goto state 124
Result : <list @ 0x7f0d4aaa7248> (['QualifiedIdent', ['rand'], ['.'], ['In ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF QualifiedIdent . LexToken(LPAREN,'(',43,21,934)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aaa7248>] and goto state 117
Result : <list @ 0x7f0d4aaa71c8> (['OperandName', ['QualifiedIdent', ['ran ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF OperandName . LexToken(LPAREN,'(',43,21,934)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa71c8>] and goto state 108
Result : <list @ 0x7f0d4aaa72c8> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecAction : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aaa75c8>] and goto state 155
Result : <list @ 0x7f0d4aaa7388> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',42,47,912)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aaa7388>] and goto state 152
Result : <list @ 0x7f0d4aa98048> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement . LexToken(SEMICOLON,';',42,47,912)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON . LexToken(IF,'if',43,9,922)
Action : Shift and goto state 177
State  : 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF . LexToken(IDENT,'rand',43,12,925)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF IDENT . LexToken(PERIOD,'.',43,16,929)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF IDENT PERIOD . LexToken(IDENT,'Intn',43,17,930)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF IDENT PERIOD IDENT . LexToken(LPAREN,'(',43,21,934)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['rand','.','Intn'] and goto state 124
Result : <list @ 0x7f0d4aaa7248> (['QualifiedIdent', ['rand'], ['.'], ['In ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF QualifiedIdent . LexToken(LPAREN,'(',43,21,934)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4aaa7248>] and goto state 117
Result : <list @ 0x7f0d4aaa71c8> (['OperandName', ['QualifiedIdent', ['ran ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF OperandName . LexToken(LPAREN,'(',43,21,934)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa71c8>] and goto state 108
Result : <list @ 0x7f0d4aaa72c8> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Operand . LexToken(LPAREN,'(',43,21,934)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa72c8>] and goto state 106
Result : <list @ 0x7f0d4aaa7588> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr . LexToken(LPAREN,'(',43,21,934)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN . LexToken(INT,'2',43,22,935)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN INT . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 120
Result : <list @ 0x7f0d4aaa7e88> (['BasicLit', ['2']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN BasicLit . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aaa7e88>] and goto state 116
Result : <list @ 0x7f0d4aaa7948> (['Lit', ['BasicLit', ['2']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN Lit . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaa7948>] and goto state 108
Result : <list @ 0x7f0d4aaa7f08> (['Operand', ['Lit', ['BasicLit', ['2']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN Operand . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa7f08>] and goto state 106
Result : <list @ 0x7f0d4aaa7dc8> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa7dc8>] and goto state 105
Result : <list @ 0x7f0d4aaaaec8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [Expr -> UnaryExpr] with [<list l SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Operand . LexToken(LPAREN,'(',43,21,934)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa72c8>] and goto state 106
Result : <list @ 0x7f0d4aaa7588> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr . LexToken(LPAREN,'(',43,21,934)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN . LexToken(INT,'2',43,22,935)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN INT . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 120
Result : <list @ 0x7f0d4aaa7e88> (['BasicLit', ['2']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN BasicLit . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aaa7e88>] and goto state 116
Result : <list @ 0x7f0d4aaa7948> (['Lit', ['BasicLit', ['2']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN Lit . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaa7948>] and goto state 108
Result : <list @ 0x7f0d4aaa7f08> (['Operand', ['Lit', ['BasicLit', ['2']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN Operand . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa7f08>] and goto state 106
Result : <list @ 0x7f0d4aaa7dc8> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa7dc8>] and goto state 105
Result : <list @ 0x7f0d4aaaaec8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaaaec8>] and goto state 146
@ 0x7f0d4aaaaec8>] and goto state 146
Result : <list @ 0x7f0d4aaaaf48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaa7d48> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaaaf48>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4aaaab08> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',43,23,936)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(EQL,'==',43,25,938)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aaaab08>,')'] and goto state 224
Result : <list @ 0x7f0d4aaaadc8> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr Arguments . LexToken(EQL,'==',43,25,938)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aaa7588>,<list @ 0x7f0d4aaaadc8>] and goto state 106
Result : <list @ 0x7f0d4aaaae08> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr . LexToken(EQL,'==',43,25,938)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaaae08>] and goto state 105
Result : <list @ 0x7f0d4aaaa908> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF UnaryExpr . LexToken(EQL,'==',43,25,938)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaaa908>] and goto state 284
Result : <list @ 0x7f0d4aaaabc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(EQL,'==',43,25,938)
Action : Shift and goto state 204
State  : 204
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE StResult : <list @ 0x7f0d4aaaaf48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaa7d48> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',43,23,936)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaaaf48>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4aaaab08> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',43,23,936)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(EQL,'==',43,25,938)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4aaaab08>,')'] and goto state 224
Result : <list @ 0x7f0d4aaaadc8> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr Arguments . LexToken(EQL,'==',43,25,938)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4aaa7588>,<list @ 0x7f0d4aaaadc8>] and goto state 106
Result : <list @ 0x7f0d4aaaae08> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr . LexToken(EQL,'==',43,25,938)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaaae08>] and goto state 105
Result : <list @ 0x7f0d4aaaa908> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF UnaryExpr . LexToken(EQL,'==',43,25,938)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaaa908>] and goto state 284
Result : <list @ 0x7f0d4aaaabc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(EQL,'==',43,25,938)
Action : Shift and goto state 204
State  : 204
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr EQL . LexToken(INT,'1',43,28,941)
Action : Reduce rule [RelOp -> EQL] with ['=='] and goto state 201
Result : <list @ 0x7f0d4aaaa448> (['RelOp', ['==']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr RelOp . LexToken(INT,'1',43,28,941)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4aaaa448>] and goto state 198
Result : <list @ 0x7f0d4aaaa888> (['BinOp', ['RelOp', ['==']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp . LexToken(INT,'1',43,28,941)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp INT . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4aaaa6c8> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp BasicLit . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aaaa6c8>] and goto state 116
Result : <list @ 0x7f0d4aaaa3c8> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Lit . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaaa3c8>] and goto state 108
Result : <list @ 0x7f0d4aaaa1c8> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Operand . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaaa1c8>] and goto state 106
Result : <list @ 0x7f0d4aaaa588> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp PrimaryExpr . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaaa588>] and goto state 105
Result : <list @ 0x7f0d4aaaa108> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp UnaryExpr . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaaa108>] and goto state 304
Result : <list @ 0x7f0d4aaaa0c8> (atement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr EQL . LexToken(INT,'1',43,28,941)
Action : Reduce rule [RelOp -> EQL] with ['=='] and goto state 201
Result : <list @ 0x7f0d4aaaa448> (['RelOp', ['==']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr RelOp . LexToken(INT,'1',43,28,941)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4aaaa448>] and goto state 198
Result : <list @ 0x7f0d4aaaa888> (['BinOp', ['RelOp', ['==']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp . LexToken(INT,'1',43,28,941)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp INT . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4aaaa6c8> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp BasicLit . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aaaa6c8>] and goto state 116
Result : <list @ 0x7f0d4aaaa3c8> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Lit . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaaa3c8>] and goto state 108
Result : <list @ 0x7f0d4aaaa1c8> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Operand . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaaa1c8>] and goto state 106
Result : <list @ 0x7f0d4aaaa588> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp PrimaryExpr . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaaa588>] and goto state 105
Result : <list @ 0x7f0d4aaaa108> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp UnaryExpr . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaaa108>] and goto state 304
Result : <list @ 0x7f0d4aaaa0c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aaaabc8>,<list @ 0x7f0d4aaaa888>,<list @ 0x7f0d4aaaa0c8>] and goto state 284
Result : <list @ 0x7f0d4aaaa308> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(LBRACE,'{',43,30,943)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE . LexToken(IDENT,'graph',44,13,957)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE IDENT . LexToken(LBRACK,'[',44,18,962)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aaaa148> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE OperandName . LexToken(LBRACK,'[',44,18,962)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaaa148>] and goto state 108
Result : <list @ 0x7f0d4aaaa688> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Operand . LexToken(LBRACK,'[',44,18,962)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaaa688>] and goto state 106
Result : <list @ 0x7f0d4aaaa4c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(LBRACK,'[',44,18,962)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',44,19,963)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',44,20,964)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aaaa808> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeState  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr . LexToken(LBRACE,'{',43,30,943)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aaaabc8>,<list @ 0x7f0d4aaaa888>,<list @ 0x7f0d4aaaa0c8>] and goto state 284
Result : <list @ 0x7f0d4aaaa308> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(LBRACE,'{',43,30,943)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE . LexToken(IDENT,'graph',44,13,957)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE IDENT . LexToken(LBRACK,'[',44,18,962)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aaaa148> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE OperandName . LexToken(LBRACK,'[',44,18,962)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaaa148>] and goto state 108
Result : <list @ 0x7f0d4aaaa688> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Operand . LexToken(LBRACK,'[',44,18,962)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaaa688>] and goto state 106
Result : <list @ 0x7f0d4aaaa4c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(LBRACK,'[',44,18,962)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',44,19,963)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',44,20,964)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aaaa808> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',44,20,964)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaaa808>] and goto state 108
Result : <list @ 0x7f0d4aaaab88> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',44,20,964)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaaab88>] and goto state 106
Result : <list @ 0x7f0d4aaaa248> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',44,20,964)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaaa248>] and goto state 105
Result : <list @ 0x7f0d4aaaa9c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',44,20,964)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaaa9c8>] and goto state 306
Result : <list @ 0x7f0d4aaaad08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',44,20,964)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',44,21,965)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aaaad08>,']'] and goto state 222
Result : <list @ 0x7f0d4aaaae88> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',44,21,965)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aaaa4c8>,<list @ 0x7f0d4aaaae88>] and goto state 106
Result : <list @ 0x7f0d4aaaab48> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(PERIOD,'.',44,21,965)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',44,20,964)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaaa808>] and goto state 108
Result : <list @ 0x7f0d4aaaab88> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',44,20,964)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaaab88>] and goto state 106
Result : <list @ 0x7f0d4aaaa248> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',44,20,964)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaaa248>] and goto state 105
Result : <list @ 0x7f0d4aaaa9c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',44,20,964)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaaa9c8>] and goto state 306
Result : <list @ 0x7f0d4aaaad08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',44,20,964)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',44,21,965)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aaaad08>,']'] and goto state 222
Result : <list @ 0x7f0d4aaaae88> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',44,21,965)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aaaa4c8>,<list @ 0x7f0d4aaaae88>] and goto state 106
Result : <list @ 0x7f0d4aaaab48> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(PERIOD,'.',44,21,965)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'flag',44,22,966)
BRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'flag',44,22,966)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',44,27,971)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','flag'] and goto state 221
Result : <list @ 0x7f0d4aaaa388> (['Selector', ['.'], ['flag']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',44,27,971)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aaaab48>,<list @ 0x7f0d4aaaa388>] and goto state 106
Result : <list @ 0x7f0d4aaaa708> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(ASSIGN,'=',44,27,971)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaaa708>] and goto state 105
Result : <list @ 0x7f0d4aaaaa88> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE UnaryExpr . LexToken(ASSIGN,'=',44,27,971)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaaaa88>] and goto state 178
Result : <list @ 0x7f0d4aaaaf08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr . LexToken(ASSIGN,'=',44,27,971)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaaac08> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr ExprOth . LexToken(ASSIGN,'=',44,27,971)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaaaf08>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aa9cf08> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList . LexToken(ASSIGN,'=',44,27,971)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList ASSIGN . LexToken(IDENT,'true',44,29,973)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aa9cc88> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SAction : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',44,27,971)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','flag'] and goto state 221
Result : <list @ 0x7f0d4aaaa388> (['Selector', ['.'], ['flag']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',44,27,971)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aaaab48>,<list @ 0x7f0d4aaaa388>] and goto state 106
Result : <list @ 0x7f0d4aaaa708> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(ASSIGN,'=',44,27,971)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaaa708>] and goto state 105
Result : <list @ 0x7f0d4aaaaa88> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE UnaryExpr . LexToken(ASSIGN,'=',44,27,971)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaaaa88>] and goto state 178
Result : <list @ 0x7f0d4aaaaf08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr . LexToken(ASSIGN,'=',44,27,971)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaaac08> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr ExprOth . LexToken(ASSIGN,'=',44,27,971)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaaaf08>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aa9cf08> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList . LexToken(ASSIGN,'=',44,27,971)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList ASSIGN . LexToken(IDENT,'true',44,29,973)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aa9cc88> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op . LexToken(IDENT,'true',44,29,973)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op IDENT . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [OperandName -> IDENT] with ['true'] and goto state 117
Result : <list @ 0x7f0d4aa9cf88> (['OperandName', ['true']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op OperandName . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9cf88>] and goto state 108
Result : <list @ 0x7f0d4aa9cc08> (['Operand', ['OperandName', ['true']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Operand . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9cc08>] and goto state 106
Result : <list @ 0x7f0d4aa9ce48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9ce48>] and goto state 105
Result : <list @ 0x7f0d4aa9cc48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9cc48>] and goto state 146
Result : <list @ 0x7f0d4aa9ca08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa9ca88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa9ca08>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aa9cd88> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl EMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op . LexToken(IDENT,'true',44,29,973)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op IDENT . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [OperandName -> IDENT] with ['true'] and goto state 117
Result : <list @ 0x7f0d4aa9cf88> (['OperandName', ['true']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op OperandName . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9cf88>] and goto state 108
Result : <list @ 0x7f0d4aa9cc08> (['Operand', ['OperandName', ['true']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Operand . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9cc08>] and goto state 106
Result : <list @ 0x7f0d4aa9ce48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9ce48>] and goto state 105
Result : <list @ 0x7f0d4aa9cc48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9cc48>] and goto state 146
Result : <list @ 0x7f0d4aa9ca08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa9ca88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa9ca08>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aa9cd88> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',44,33,977)
SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aa9cf08>,<list @ 0x7f0d4aa9cc88>,<list @ 0x7f0d4aa9cd88>] and goto state 169
Result : <list @ 0x7f0d4aa9c888> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Assignment . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aa9c888>] and goto state 155
Result : <list @ 0x7f0d4aaaac88> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE SimpleStmt . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aaaac88>] and goto state 152
Result : <list @ 0x7f0d4aa9c348> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement . LexToken(SEMICOLON,';',44,33,977)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',45,9,987)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aa9c408> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',45,9,987)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa9c348>,';',<list @ 0x7f0d4aa9c408>] and goto state 151
Result : <list @ 0x7f0d4aa9c448> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList . LexToken(RBRACE,'}',45,9,987)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',45,11,989)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aa9c448>,'}'] and goto state 335
Result : <list @ 0x7f0d4aa9c6c8> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block . LexToken(ELSE,'else',45,11,989)
Action : Shift and goto state 370
State  :Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aa9cf08>,<list @ 0x7f0d4aa9cc88>,<list @ 0x7f0d4aa9cd88>] and goto state 169
Result : <list @ 0x7f0d4aa9c888> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Assignment . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aa9c888>] and goto state 155
Result : <list @ 0x7f0d4aaaac88> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE SimpleStmt . LexToken(SEMICOLON,';',44,33,977)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aaaac88>] and goto state 152
Result : <list @ 0x7f0d4aa9c348> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement . LexToken(SEMICOLON,';',44,33,977)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',45,9,987)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aa9c408> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',45,9,987)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa9c348>,';',<list @ 0x7f0d4aa9c408>] and goto state 151
Result : <list @ 0x7f0d4aa9c448> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList . LexToken(RBRACE,'}',45,9,987)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',45,11,989)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aa9c448>,'}'] and goto state 335
Result : <list @ 0x7f0d4aa9c6c8> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block . LexToken(ELSE,'else',45,11,989)
Action : Shift and goto state 370
State  : 370
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE . LexToken(LBRACE,'{',45,16,994)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE . LexToken(IDENT,'graph',46,13,1008)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE IDENT . LexToken(LBRACK,'[',46,18,1013)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aa9c5c8> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE OperandName . LexToken(LBRACK,'[',46,18,1013)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9c5c8>] and goto state 108
Result : <list @ 0x7f0d4aa9c748> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Operand . LexToken(LBRACK,'[',46,18,1013)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9c748>] and goto state 106
Result : <list @ 0x7f0d4aa9c4c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(LBRACK,'[',46,18,1013)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',46,19,1014)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',46,20,1015)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa9c808> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',46,20,1015)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9c808>] and goto state 108
Result : <list @ 0x7f0d4aa9c088> (['Operand', ['OperandNa 370
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE . LexToken(LBRACE,'{',45,16,994)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE . LexToken(IDENT,'graph',46,13,1008)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE IDENT . LexToken(LBRACK,'[',46,18,1013)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aa9c5c8> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE OperandName . LexToken(LBRACK,'[',46,18,1013)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9c5c8>] and goto state 108
Result : <list @ 0x7f0d4aa9c748> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Operand . LexToken(LBRACK,'[',46,18,1013)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9c748>] and goto state 106
Result : <list @ 0x7f0d4aa9c4c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(LBRACK,'[',46,18,1013)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',46,19,1014)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',46,20,1015)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa9c808> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',46,20,1015)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9c808>] and goto state 108
Result : <list @ 0x7f0d4aa9c088> (['Operand', ['OperandName', ['i']]])
me', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',46,20,1015)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9c088>] and goto state 106
Result : <list @ 0x7f0d4aa9c548> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',46,20,1015)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9c548>] and goto state 105
Result : <list @ 0x7f0d4aa9cb08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',46,20,1015)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9cb08>] and goto state 306
Result : <list @ 0x7f0d4aa9c108> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',46,20,1015)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',46,21,1016)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aa9c108>,']'] and goto state 222
Result : <list @ 0x7f0d4aa9c948> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',46,21,1016)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aa9c4c8>,<list @ 0x7f0d4aa9c948>] and goto state 106
Result : <list @ 0x7f0d4aa9cf48> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(PERIOD,'.',46,21,1016)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'flag',46,22,1017)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName SignState  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',46,20,1015)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9c088>] and goto state 106
Result : <list @ 0x7f0d4aa9c548> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',46,20,1015)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9c548>] and goto state 105
Result : <list @ 0x7f0d4aa9cb08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',46,20,1015)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9cb08>] and goto state 306
Result : <list @ 0x7f0d4aa9c108> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',46,20,1015)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',46,21,1016)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aa9c108>,']'] and goto state 222
Result : <list @ 0x7f0d4aa9c948> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',46,21,1016)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aa9c4c8>,<list @ 0x7f0d4aa9c948>] and goto state 106
Result : <list @ 0x7f0d4aa9cf48> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(PERIOD,'.',46,21,1016)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'flag',46,22,1017)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',46,27,1022)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','flag'] and goto state 221
Result : <list @ 0x7f0d4aaacec8> (['Selector', ['.'], ['flag']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',46,27,1022)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa9cf48>,<list @ 0x7f0d4aaacec8>] and goto state 106
Result : <list @ 0x7f0d4aaacd48> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(ASSIGN,'=',46,27,1022)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaacd48>] and goto state 105
Result : <list @ 0x7f0d4aaac948> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE UnaryExpr . LexToken(ASSIGN,'=',46,27,1022)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaac948>] and goto state 178
Result : <list @ 0x7f0d4aaacbc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr . LexToken(ASSIGN,'=',46,27,1022)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaac8c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr ExprOth . LexToken(ASSIGN,'=',46,27,1022)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaacbc8>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aaac748> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList . LexToken(ASSIGN,'=',46,27,1022)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList ASSIGN . LexToken(IDENT,'false',46,29,1024)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aaac488> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Stature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',46,27,1022)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','flag'] and goto state 221
Result : <list @ 0x7f0d4aaacec8> (['Selector', ['.'], ['flag']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',46,27,1022)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa9cf48>,<list @ 0x7f0d4aaacec8>] and goto state 106
Result : <list @ 0x7f0d4aaacd48> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(ASSIGN,'=',46,27,1022)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaacd48>] and goto state 105
Result : <list @ 0x7f0d4aaac948> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE UnaryExpr . LexToken(ASSIGN,'=',46,27,1022)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaac948>] and goto state 178
Result : <list @ 0x7f0d4aaacbc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr . LexToken(ASSIGN,'=',46,27,1022)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaac8c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr ExprOth . LexToken(ASSIGN,'=',46,27,1022)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaacbc8>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aaac748> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList . LexToken(ASSIGN,'=',46,27,1022)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList ASSIGN . LexToken(IDENT,'false',46,29,1024)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aaac488> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op . LexToken(IDENT,'false',46,29,1024)
atement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op . LexToken(IDENT,'false',46,29,1024)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op IDENT . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [OperandName -> IDENT] with ['false'] and goto state 117
Result : <list @ 0x7f0d4aaac388> (['OperandName', ['false']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op OperandName . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaac388>] and goto state 108
Result : <list @ 0x7f0d4aaac288> (['Operand', ['OperandName', ['false']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Operand . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaac288>] and goto state 106
Result : <list @ 0x7f0d4aaac088> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaac088>] and goto state 105
Result : <list @ 0x7f0d4aaac108> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaac108>] and goto state 146
Result : <list @ 0x7f0d4aaac648> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaac188> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaac648>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aaac1c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE StatAction : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op IDENT . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [OperandName -> IDENT] with ['false'] and goto state 117
Result : <list @ 0x7f0d4aaac388> (['OperandName', ['false']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op OperandName . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaac388>] and goto state 108
Result : <list @ 0x7f0d4aaac288> (['Operand', ['OperandName', ['false']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Operand . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaac288>] and goto state 106
Result : <list @ 0x7f0d4aaac088> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaac088>] and goto state 105
Result : <list @ 0x7f0d4aaac108> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaac108>] and goto state 146
Result : <list @ 0x7f0d4aaac648> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaac188> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaac648>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aaac1c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aaac748>,<list @ 0x7f0d4aaac488>,<list @ 0x7f0d4aaac1c8>] and goto state 169
Result : <list @ 0x7f0d4aaac508> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Assignment . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aaac508>] and goto state 155
Result : <list @ 0x7f0d4aaac308> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE SimpleStmt . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aaac308>] and goto state 152
Result : <list @ 0x7f0d4aaac688> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement . LexToken(SEMICOLON,';',46,34,1029)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',47,9,1039)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aaac9c8> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',47,9,1039)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aaac688>,';',<list @ 0x7f0d4aaac9c8>] and goto state 151
Result : <list @ 0x7f0d4aaacb48> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList . LexToken(RBRACE,'}',47,9,1039)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',47,10,1040)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aaacb48>,'}'] and goto state 394
Result : <list @ 0x7f0d4aaacb08> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 394
Defaulted state 394: Reduce using 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aaac748>,<list @ 0x7f0d4aaac488>,<list @ 0x7f0d4aaac1c8>] and goto state 169
Result : <list @ 0x7f0d4aaac508> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Assignment . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aaac508>] and goto state 155
Result : <list @ 0x7f0d4aaac308> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE SimpleStmt . LexToken(SEMICOLON,';',46,34,1029)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aaac308>] and goto state 152
Result : <list @ 0x7f0d4aaac688> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement . LexToken(SEMICOLON,';',46,34,1029)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',47,9,1039)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aaac9c8> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',47,9,1039)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aaac688>,';',<list @ 0x7f0d4aaac9c8>] and goto state 151
Result : <list @ 0x7f0d4aaacb48> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList . LexToken(RBRACE,'}',47,9,1039)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',47,10,1040)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aaacb48>,'}'] and goto state 394
Result : <list @ 0x7f0d4aaacb08> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 394
Defaulted state 394: Reduce using 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE Block . LexToken(SEMICOLON,';',47,10,1040)
C FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE Block . LexToken(SEMICOLON,';',47,10,1040)
Action : Reduce rule [else_stmt -> ELSE Block] with ['else',<list @ 0x7f0d4aaacb08>] and goto state 369
Result : <list @ 0x7f0d4aaac0c8> (['else_stmt', ['else'], ['Block', ['{'], ...)
State  : 369
Defaulted state 369: Reduce using 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block else_stmt . LexToken(SEMICOLON,';',47,10,1040)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f0d4aaaa308>,<list @ 0x7f0d4aa9c6c8>,<list @ 0x7f0d4aaac0c8>] and goto state 162
Result : <list @ 0x7f0d4aa9c3c8> (['IfStmt', ['if'], ['Expr', ['Expr', ['U ...)
State  : 162
Defaulted state 162: Reduce using 186
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IfStmt . LexToken(SEMICOLON,';',47,10,1040)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f0d4aa9c3c8>] and goto state 152
Result : <list @ 0x7f0d4aaac708> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',47,10,1040)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IF,'if',48,9,1050)
Action : Shift and goto state 177
State  : 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF . LexToken(IDENT,'i',48,12,1053)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT . LexToken(MUL,'*',48,13,1054)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aaac3c8> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF OperandName . LexToken(MUL,'*',48,13,1054)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaac3c8>] and goto state 108
Result : <list @ 0x7f0d4aaaccc8> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Operand . LexToken(MUL,'*',48,13,1054)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaaccc8>] and goto state 106
Result : <list @ 0x7f0d4aaac888> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName SignatuAction : Reduce rule [else_stmt -> ELSE Block] with ['else',<list @ 0x7f0d4aaacb08>] and goto state 369
Result : <list @ 0x7f0d4aaac0c8> (['else_stmt', ['else'], ['Block', ['{'], ...)
State  : 369
Defaulted state 369: Reduce using 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IF Expr Block else_stmt . LexToken(SEMICOLON,';',47,10,1040)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f0d4aaaa308>,<list @ 0x7f0d4aa9c6c8>,<list @ 0x7f0d4aaac0c8>] and goto state 162
Result : <list @ 0x7f0d4aa9c3c8> (['IfStmt', ['if'], ['Expr', ['Expr', ['U ...)
State  : 162
Defaulted state 162: Reduce using 186
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON IfStmt . LexToken(SEMICOLON,';',47,10,1040)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f0d4aa9c3c8>] and goto state 152
Result : <list @ 0x7f0d4aaac708> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',47,10,1040)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IF,'if',48,9,1050)
Action : Shift and goto state 177
State  : 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF . LexToken(IDENT,'i',48,12,1053)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT . LexToken(MUL,'*',48,13,1054)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aaac3c8> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF OperandName . LexToken(MUL,'*',48,13,1054)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaac3c8>] and goto state 108
Result : <list @ 0x7f0d4aaaccc8> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Operand . LexToken(MUL,'*',48,13,1054)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaaccc8>] and goto state 106
Result : <list @ 0x7f0d4aaac888> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr . LexToken(MUL,'*',48,13,1054)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaac888>] and goto state 105
Result : <list @ 0x7f0d4aaacd08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF UnaryExpr . LexToken(MUL,'*',48,13,1054)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaacd08>] and goto state 284
Result : <list @ 0x7f0d4aa9fe48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(MUL,'*',48,13,1054)
Action : Shift and goto state 214
State  : 214
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr MUL . LexToken(INT,'2',48,14,1055)
Action : Reduce rule [MulOp -> MUL] with ['*'] and goto state 203
Result : <list @ 0x7f0d4aa9fe88> (['MulOp', ['*']])
State  : 203
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr MulOp . LexToken(INT,'2',48,14,1055)
Action : Reduce rule [BinOp -> MulOp] with [<list @ 0x7f0d4aa9fe88>] and goto state 198
Result : <list @ 0x7f0d4aa9ffc8> (['BinOp', ['MulOp', ['*']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp . LexToken(INT,'2',48,14,1055)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp INT . LexToken(LEQ,'<=',48,16,1057)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 120
Result : <list @ 0x7f0d4aa9fcc8> (['BasicLit', ['2']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp BasicLit . LexToken(LEQ,'<=',48,16,1057)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aa9fcc8>] and goto state 116
Result : <list @ 0x7f0d4aa9f608> (['Lit', ['BasicLit', ['2']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Lit . LexToken(LEQ,'<=',48,16,1057)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aa9f608>] and goto state 108
Result : <list @ 0x7f0d4aa9fare LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr . LexToken(MUL,'*',48,13,1054)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaac888>] and goto state 105
Result : <list @ 0x7f0d4aaacd08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF UnaryExpr . LexToken(MUL,'*',48,13,1054)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaacd08>] and goto state 284
Result : <list @ 0x7f0d4aa9fe48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(MUL,'*',48,13,1054)
Action : Shift and goto state 214
State  : 214
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr MUL . LexToken(INT,'2',48,14,1055)
Action : Reduce rule [MulOp -> MUL] with ['*'] and goto state 203
Result : <list @ 0x7f0d4aa9fe88> (['MulOp', ['*']])
State  : 203
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr MulOp . LexToken(INT,'2',48,14,1055)
Action : Reduce rule [BinOp -> MulOp] with [<list @ 0x7f0d4aa9fe88>] and goto state 198
Result : <list @ 0x7f0d4aa9ffc8> (['BinOp', ['MulOp', ['*']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp . LexToken(INT,'2',48,14,1055)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp INT . LexToken(LEQ,'<=',48,16,1057)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 120
Result : <list @ 0x7f0d4aa9fcc8> (['BasicLit', ['2']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp BasicLit . LexToken(LEQ,'<=',48,16,1057)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aa9fcc8>] and goto state 116
Result : <list @ 0x7f0d4aa9f608> (['Lit', ['BasicLit', ['2']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Lit . LexToken(LEQ,'<=',48,16,1057)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aa9f608>] and goto state 108
Result : <list @ 0x7f0d4aa9fa48> (['Operand', ['Lit', ['BasicLit', ['2']]] ...)
48> (['Operand', ['Lit', ['BasicLit', ['2']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Operand . LexToken(LEQ,'<=',48,16,1057)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9fa48>] and goto state 106
Result : <list @ 0x7f0d4aa9fa08> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp PrimaryExpr . LexToken(LEQ,'<=',48,16,1057)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9fa08>] and goto state 105
Result : <list @ 0x7f0d4aa9fa88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp UnaryExpr . LexToken(LEQ,'<=',48,16,1057)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9fa88>] and goto state 304
Result : <list @ 0x7f0d4aa9f848> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr . LexToken(LEQ,'<=',48,16,1057)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr LEQ . LexToken(IDENT,'n',48,19,1060)
Action : Reduce rule [RelOp -> LEQ] with ['<='] and goto state 201
Result : <list @ 0x7f0d4aa9f8c8> (['RelOp', ['<=']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr RelOp . LexToken(IDENT,'n',48,19,1060)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4aa9f8c8>] and goto state 198
Result : <list @ 0x7f0d4aa9f988> (['BinOp', ['RelOp', ['<=']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp . LexToken(IDENT,'n',48,19,1060)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp IDENT . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [OperandName -> IDENT] with ['n'] and goto state 117
Result : <list @ 0x7f0d4aa9fb48> (['OperandName', ['n']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMState  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Operand . LexToken(LEQ,'<=',48,16,1057)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9fa48>] and goto state 106
Result : <list @ 0x7f0d4aa9fa08> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp PrimaryExpr . LexToken(LEQ,'<=',48,16,1057)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9fa08>] and goto state 105
Result : <list @ 0x7f0d4aa9fa88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp UnaryExpr . LexToken(LEQ,'<=',48,16,1057)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9fa88>] and goto state 304
Result : <list @ 0x7f0d4aa9f848> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr . LexToken(LEQ,'<=',48,16,1057)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr LEQ . LexToken(IDENT,'n',48,19,1060)
Action : Reduce rule [RelOp -> LEQ] with ['<='] and goto state 201
Result : <list @ 0x7f0d4aa9f8c8> (['RelOp', ['<=']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr RelOp . LexToken(IDENT,'n',48,19,1060)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4aa9f8c8>] and goto state 198
Result : <list @ 0x7f0d4aa9f988> (['BinOp', ['RelOp', ['<=']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp . LexToken(IDENT,'n',48,19,1060)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp IDENT . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [OperandName -> IDENT] with ['n'] and goto state 117
Result : <list @ 0x7f0d4aa9fb48> (['OperandName', ['n']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp OperandName . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9fb48>] and goto state 108
Result : <list @ 0x7f0d4aa9f788> (['Operand', ['OperandName', ['n']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Operand . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9f788>] and goto state 106
Result : <list @ 0x7f0d4aa9f4c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp PrimaryExpr . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9f4c8>] and goto state 105
Result : <list @ 0x7f0d4aa9f388> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp UnaryExpr . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9f388>] and goto state 304
Result : <list @ 0x7f0d4aa9f048> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aa9f848>,<list @ 0x7f0d4aa9f988>,<list @ 0x7f0d4aa9f048>] and goto state 304
Result : <list @ 0x7f0d4aa9f088> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aa9fe48>,<list @ 0x7f0d4aa9ffc8>,<list @ 0x7f0d4aa9f088>] and goto state 284
Result : <list @ 0x7f0d4aa9f0c8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(LBRACE,'{',48,21,1062)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE . LexToken(IDENT,'graph',49,13,1076)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON StatICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp OperandName . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9fb48>] and goto state 108
Result : <list @ 0x7f0d4aa9f788> (['Operand', ['OperandName', ['n']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Operand . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9f788>] and goto state 106
Result : <list @ 0x7f0d4aa9f4c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp PrimaryExpr . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9f4c8>] and goto state 105
Result : <list @ 0x7f0d4aa9f388> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp UnaryExpr . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9f388>] and goto state 304
Result : <list @ 0x7f0d4aa9f048> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aa9f848>,<list @ 0x7f0d4aa9f988>,<list @ 0x7f0d4aa9f048>] and goto state 304
Result : <list @ 0x7f0d4aa9f088> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr . LexToken(LBRACE,'{',48,21,1062)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aa9fe48>,<list @ 0x7f0d4aa9ffc8>,<list @ 0x7f0d4aa9f088>] and goto state 284
Result : <list @ 0x7f0d4aa9f0c8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(LBRACE,'{',48,21,1062)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE . LexToken(IDENT,'graph',49,13,1076)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE IDENT . LexToken(LBRACK,'[',49,18,1081)
ement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE IDENT . LexToken(LBRACK,'[',49,18,1081)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aa9f588> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE OperandName . LexToken(LBRACK,'[',49,18,1081)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9f588>] and goto state 108
Result : <list @ 0x7f0d4aaac588> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Operand . LexToken(LBRACK,'[',49,18,1081)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaac588>] and goto state 106
Result : <list @ 0x7f0d4aa9f108> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(LBRACK,'[',49,18,1081)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',49,19,1082)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',49,20,1083)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa9f148> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',49,20,1083)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9f148>] and goto state 108
Result : <list @ 0x7f0d4aa9f348> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',49,20,1083)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9f348>] and goto state 106
Result : <list @ 0x7f0d4aa9fdc8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',49,20,1083)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9fdc8>] andAction : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aa9f588> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE OperandName . LexToken(LBRACK,'[',49,18,1081)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9f588>] and goto state 108
Result : <list @ 0x7f0d4aaac588> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Operand . LexToken(LBRACK,'[',49,18,1081)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaac588>] and goto state 106
Result : <list @ 0x7f0d4aa9f108> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(LBRACK,'[',49,18,1081)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',49,19,1082)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',49,20,1083)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa9f148> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',49,20,1083)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9f148>] and goto state 108
Result : <list @ 0x7f0d4aa9f348> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',49,20,1083)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9f348>] and goto state 106
Result : <list @ 0x7f0d4aa9fdc8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',49,20,1083)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9fdc8>] and goto state 105
Result : <list @ 0x7f0d4aa9f948> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',49,20,1083)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9f948>] and goto state 306
Result : <list @ 0x7f0d4aa9fd48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',49,20,1083)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',49,21,1084)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aa9fd48>,']'] and goto state 222
Result : <list @ 0x7f0d4aa9f408> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',49,21,1084)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aa9f108>,<list @ 0x7f0d4aa9f408>] and goto state 106
Result : <list @ 0x7f0d4aa9f888> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(PERIOD,'.',49,21,1084)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'left',49,22,1085)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',49,27,1090)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','left'] and goto state 221
Result : <list @ 0x7f0d4aa9ff08> (['Selector', ['.'], ['left']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',49,27,1090)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa9f888>,<list @ 0x7f0d4aa9ff08>] and goto state 106
Result : <list @ 0x7f0d4aaaedc8> (['PrimaryE goto state 105
Result : <list @ 0x7f0d4aa9f948> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',49,20,1083)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9f948>] and goto state 306
Result : <list @ 0x7f0d4aa9fd48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',49,20,1083)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',49,21,1084)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aa9fd48>,']'] and goto state 222
Result : <list @ 0x7f0d4aa9f408> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',49,21,1084)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aa9f108>,<list @ 0x7f0d4aa9f408>] and goto state 106
Result : <list @ 0x7f0d4aa9f888> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(PERIOD,'.',49,21,1084)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'left',49,22,1085)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',49,27,1090)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','left'] and goto state 221
Result : <list @ 0x7f0d4aa9ff08> (['Selector', ['.'], ['left']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',49,27,1090)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa9f888>,<list @ 0x7f0d4aa9ff08>] and goto state 106
Result : <list @ 0x7f0d4aaaedc8> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
xpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(ASSIGN,'=',49,27,1090)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaaedc8>] and goto state 105
Result : <list @ 0x7f0d4aaaed88> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE UnaryExpr . LexToken(ASSIGN,'=',49,27,1090)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaaed88>] and goto state 178
Result : <list @ 0x7f0d4aaaec88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr . LexToken(ASSIGN,'=',49,27,1090)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaae9c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr ExprOth . LexToken(ASSIGN,'=',49,27,1090)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaaec88>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aaae5c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList . LexToken(ASSIGN,'=',49,27,1090)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList ASSIGN . LexToken(AND,'&',49,29,1092)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aaae708> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op . LexToken(AND,'&',49,29,1092)
Action : Shift and goto state 115
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op AND . LexToken(IDENT,'graph',49,30,1093)
Action : Reduce rule [UnaryOp -> AND] with ['&'] and goto state 107
Result : <list @ 0x7f0d4aaae348> (['UnaryOp', ['&']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON StatemState  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(ASSIGN,'=',49,27,1090)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaaedc8>] and goto state 105
Result : <list @ 0x7f0d4aaaed88> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE UnaryExpr . LexToken(ASSIGN,'=',49,27,1090)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaaed88>] and goto state 178
Result : <list @ 0x7f0d4aaaec88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr . LexToken(ASSIGN,'=',49,27,1090)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaae9c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr ExprOth . LexToken(ASSIGN,'=',49,27,1090)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaaec88>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aaae5c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList . LexToken(ASSIGN,'=',49,27,1090)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList ASSIGN . LexToken(AND,'&',49,29,1092)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aaae708> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op . LexToken(AND,'&',49,29,1092)
Action : Shift and goto state 115
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op AND . LexToken(IDENT,'graph',49,30,1093)
Action : Reduce rule [UnaryOp -> AND] with ['&'] and goto state 107
Result : <list @ 0x7f0d4aaae348> (['UnaryOp', ['&']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp . LexToken(IDENT,'graph',49,30,1093)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp IDENT . LexToken(LBRACK,'[',49,35,1098)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aaae448> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp OperandName . LexToken(LBRACK,'[',49,35,1098)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaae448>] and goto state 108
Result : <list @ 0x7f0d4aaae208> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp Operand . LexToken(LBRACK,'[',49,35,1098)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaae208>] and goto state 106
Result : <list @ 0x7f0d4aaae308> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr . LexToken(LBRACK,'[',49,35,1098)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK . LexToken(IDENT,'i',49,36,1099)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK IDENT . LexToken(MUL,'*',49,37,1100)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aaae0c8> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK OperandName . LexToken(MUL,'*',49,37,1100)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaae0c8>] and goto state 108
Result : <list @ 0x7f0d4aaae288> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Sent SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp . LexToken(IDENT,'graph',49,30,1093)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp IDENT . LexToken(LBRACK,'[',49,35,1098)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aaae448> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp OperandName . LexToken(LBRACK,'[',49,35,1098)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaae448>] and goto state 108
Result : <list @ 0x7f0d4aaae208> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp Operand . LexToken(LBRACK,'[',49,35,1098)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaae208>] and goto state 106
Result : <list @ 0x7f0d4aaae308> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr . LexToken(LBRACK,'[',49,35,1098)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK . LexToken(IDENT,'i',49,36,1099)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK IDENT . LexToken(MUL,'*',49,37,1100)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aaae0c8> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK OperandName . LexToken(MUL,'*',49,37,1100)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaae0c8>] and goto state 108
Result : <list @ 0x7f0d4aaae288> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Operand . LexToken(MUL,'*',49,37,1100)
tatement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Operand . LexToken(MUL,'*',49,37,1100)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaae288>] and goto state 106
Result : <list @ 0x7f0d4aaae088> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK PrimaryExpr . LexToken(MUL,'*',49,37,1100)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaae088>] and goto state 105
Result : <list @ 0x7f0d4aa9fe08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK UnaryExpr . LexToken(MUL,'*',49,37,1100)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9fe08>] and goto state 306
Result : <list @ 0x7f0d4aaae108> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr . LexToken(MUL,'*',49,37,1100)
Action : Shift and goto state 214
State  : 214
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr MUL . LexToken(INT,'2',49,38,1101)
Action : Reduce rule [MulOp -> MUL] with ['*'] and goto state 203
Result : <list @ 0x7f0d4aaae648> (['MulOp', ['*']])
State  : 203
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr MulOp . LexToken(INT,'2',49,38,1101)
Action : Reduce rule [BinOp -> MulOp] with [<list @ 0x7f0d4aaae648>] and goto state 198
Result : <list @ 0x7f0d4aaae608> (['BinOp', ['MulOp', ['*']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp . LexToken(INT,'2',49,38,1101)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp INT . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 120
Result : <list @ 0x7f0d4aaae8c8> (['BasicLit', ['2']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FAction : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaae288>] and goto state 106
Result : <list @ 0x7f0d4aaae088> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK PrimaryExpr . LexToken(MUL,'*',49,37,1100)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaae088>] and goto state 105
Result : <list @ 0x7f0d4aa9fe08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK UnaryExpr . LexToken(MUL,'*',49,37,1100)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9fe08>] and goto state 306
Result : <list @ 0x7f0d4aaae108> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr . LexToken(MUL,'*',49,37,1100)
Action : Shift and goto state 214
State  : 214
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr MUL . LexToken(INT,'2',49,38,1101)
Action : Reduce rule [MulOp -> MUL] with ['*'] and goto state 203
Result : <list @ 0x7f0d4aaae648> (['MulOp', ['*']])
State  : 203
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr MulOp . LexToken(INT,'2',49,38,1101)
Action : Reduce rule [BinOp -> MulOp] with [<list @ 0x7f0d4aaae648>] and goto state 198
Result : <list @ 0x7f0d4aaae608> (['BinOp', ['MulOp', ['*']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp . LexToken(INT,'2',49,38,1101)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp INT . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 120
Result : <list @ 0x7f0d4aaae8c8> (['BasicLit', ['2']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp BasicLit . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aaae8c8>] and goto state 116
Result : <list @ 0x7f0d4aaae908> (['Lit', ['BasicLit', ['2']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Lit . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaae908>] and goto state 108
Result : <list @ 0x7f0d4aaaea08> (['Operand', ['Lit', ['BasicLit', ['2']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Operand . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaaea08>] and goto state 106
Result : <list @ 0x7f0d4aaae4c8> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp PrimaryExpr . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaae4c8>] and goto state 105
Result : <list @ 0x7f0d4aaaeb48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp UnaryExpr . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaaeb48>] and goto state 304
Result : <list @ 0x7f0d4aaaee48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aaae108>,<list @ 0x7f0d4aaae608>,<list @ 0x7f0d4aaaee48>] and goto state 306
Result : <list @ 0x7f0d4aaae048> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',49,39,1102)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON OR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp BasicLit . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aaae8c8>] and goto state 116
Result : <list @ 0x7f0d4aaae908> (['Lit', ['BasicLit', ['2']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Lit . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaae908>] and goto state 108
Result : <list @ 0x7f0d4aaaea08> (['Operand', ['Lit', ['BasicLit', ['2']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Operand . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaaea08>] and goto state 106
Result : <list @ 0x7f0d4aaae4c8> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp PrimaryExpr . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaae4c8>] and goto state 105
Result : <list @ 0x7f0d4aaaeb48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp UnaryExpr . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaaeb48>] and goto state 304
Result : <list @ 0x7f0d4aaaee48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr . LexToken(RBRACK,']',49,39,1102)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aaae108>,<list @ 0x7f0d4aaae608>,<list @ 0x7f0d4aaaee48>] and goto state 306
Result : <list @ 0x7f0d4aaae048> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',49,39,1102)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr RBRACK . LexToken(SEMICOLON,';',49,40,1103)
Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr RBRACK . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aaae048>,']'] and goto state 222
Result : <list @ 0x7f0d4aaae188> (['Index', ['['], ['Expr', ['Expr', ['Una ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr Index . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aaae308>,<list @ 0x7f0d4aaae188>] and goto state 106
Result : <list @ 0x7f0d4aaae3c8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaae3c8>] and goto state 228
Result : <list @ 0x7f0d4aaae2c8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp UnaryExpr . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aaae348>,<list @ 0x7f0d4aaae2c8>] and goto state 105
Result : <list @ 0x7f0d4aaae948> (['UnaryExpr', ['UnaryOp', ['&']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaae948>] and goto state 146
Result : <list @ 0x7f0d4aaaee88> (['Expr', ['UnaryExpr', ['UnaryOp', ['&'] ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaae548> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaaee88>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aaa1f08> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [Assignment -> ExpressionList assignAction : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aaae048>,']'] and goto state 222
Result : <list @ 0x7f0d4aaae188> (['Index', ['['], ['Expr', ['Expr', ['Una ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr Index . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aaae308>,<list @ 0x7f0d4aaae188>] and goto state 106
Result : <list @ 0x7f0d4aaae3c8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaae3c8>] and goto state 228
Result : <list @ 0x7f0d4aaae2c8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp UnaryExpr . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aaae348>,<list @ 0x7f0d4aaae2c8>] and goto state 105
Result : <list @ 0x7f0d4aaae948> (['UnaryExpr', ['UnaryOp', ['&']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaae948>] and goto state 146
Result : <list @ 0x7f0d4aaaee88> (['Expr', ['UnaryExpr', ['UnaryOp', ['&'] ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaae548> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaaee88>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aaa1f08> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aaae5c8>,<list @ 0x7f0d4aaae708>,<list @ 0x7f0d4aaa1f08>] and goto state 169
Result : <list @ 0x7f0d4aaaea88> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Assignment . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aaaea88>] and goto state 155
Result : <list @ 0x7f0d4aaa1e88> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE SimpleStmt . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aaa1e88>] and goto state 152
Result : <list @ 0x7f0d4aaa1d48> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement . LexToken(SEMICOLON,';',49,40,1103)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',50,9,1113)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aaa1a08> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',50,9,1113)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aaa1d48>,';',<list @ 0x7f0d4aaa1a08>] and goto state 151
Result : <list @ 0x7f0d4aaa1f88> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList . LexToken(RBRACE,'}',50,9,1113)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',50,11,1115)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aaa1f88>,'}'] and goto state 335
Result : <list @ 0x7f0d4aaa1cc8> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON _op ExpressionList] with [<list @ 0x7f0d4aaae5c8>,<list @ 0x7f0d4aaae708>,<list @ 0x7f0d4aaa1f08>] and goto state 169
Result : <list @ 0x7f0d4aaaea88> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Assignment . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aaaea88>] and goto state 155
Result : <list @ 0x7f0d4aaa1e88> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE SimpleStmt . LexToken(SEMICOLON,';',49,40,1103)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aaa1e88>] and goto state 152
Result : <list @ 0x7f0d4aaa1d48> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement . LexToken(SEMICOLON,';',49,40,1103)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',50,9,1113)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aaa1a08> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',50,9,1113)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aaa1d48>,';',<list @ 0x7f0d4aaa1a08>] and goto state 151
Result : <list @ 0x7f0d4aaa1f88> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList . LexToken(RBRACE,'}',50,9,1113)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',50,11,1115)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aaa1f88>,'}'] and goto state 335
Result : <list @ 0x7f0d4aaa1cc8> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block . LexToken(ELSE,'else',50,11,1115)
Statement SEMICOLON IF Expr Block . LexToken(ELSE,'else',50,11,1115)
Action : Shift and goto state 370
State  : 370
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE . LexToken(LBRACE,'{',50,16,1120)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE . LexToken(IDENT,'graph',51,13,1134)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE IDENT . LexToken(LBRACK,'[',51,18,1139)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aaa1608> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE OperandName . LexToken(LBRACK,'[',51,18,1139)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa1608>] and goto state 108
Result : <list @ 0x7f0d4aaa18c8> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Operand . LexToken(LBRACK,'[',51,18,1139)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa18c8>] and goto state 106
Result : <list @ 0x7f0d4aaa1988> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(LBRACK,'[',51,18,1139)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',51,19,1140)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',51,20,1141)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aaa1b08> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBAction : Shift and goto state 370
State  : 370
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE . LexToken(LBRACE,'{',50,16,1120)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE . LexToken(IDENT,'graph',51,13,1134)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE IDENT . LexToken(LBRACK,'[',51,18,1139)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aaa1608> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE OperandName . LexToken(LBRACK,'[',51,18,1139)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa1608>] and goto state 108
Result : <list @ 0x7f0d4aaa18c8> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Operand . LexToken(LBRACK,'[',51,18,1139)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa18c8>] and goto state 106
Result : <list @ 0x7f0d4aaa1988> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(LBRACK,'[',51,18,1139)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',51,19,1140)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',51,20,1141)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aaa1b08> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',51,20,1141)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa1b08>] and goto state 108
Result : <list @ 0x7f0d4aaa1908> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',51,20,1141)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa1908>] and goto state 106
Result : <list @ 0x7f0d4aaa16c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',51,20,1141)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa16c8>] and goto state 105
Result : <list @ 0x7f0d4aaa14c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',51,20,1141)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa14c8>] and goto state 306
Result : <list @ 0x7f0d4aaa1208> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',51,20,1141)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',51,21,1142)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aaa1208>,']'] and goto state 222
Result : <list @ 0x7f0d4aaa1188> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',51,21,1142)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aaa1988>,<list @ 0x7f0d4aaa1188>] and goto state 106
Result : <list @ 0x7f0d4aaa1508> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(PERIOD,'.',51,21,1142)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE StatemenRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',51,20,1141)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa1b08>] and goto state 108
Result : <list @ 0x7f0d4aaa1908> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',51,20,1141)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa1908>] and goto state 106
Result : <list @ 0x7f0d4aaa16c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',51,20,1141)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa16c8>] and goto state 105
Result : <list @ 0x7f0d4aaa14c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',51,20,1141)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa14c8>] and goto state 306
Result : <list @ 0x7f0d4aaa1208> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',51,20,1141)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',51,21,1142)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aaa1208>,']'] and goto state 222
Result : <list @ 0x7f0d4aaa1188> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',51,21,1142)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aaa1988>,<list @ 0x7f0d4aaa1188>] and goto state 106
Result : <list @ 0x7f0d4aaa1508> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(PERIOD,'.',51,21,1142)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'left',51,22,1143)
t SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'left',51,22,1143)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',51,27,1148)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','left'] and goto state 221
Result : <list @ 0x7f0d4aaa1108> (['Selector', ['.'], ['left']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',51,27,1148)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aaa1508>,<list @ 0x7f0d4aaa1108>] and goto state 106
Result : <list @ 0x7f0d4aaa13c8> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(ASSIGN,'=',51,27,1148)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa13c8>] and goto state 105
Result : <list @ 0x7f0d4aaa10c8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE UnaryExpr . LexToken(ASSIGN,'=',51,27,1148)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa10c8>] and goto state 178
Result : <list @ 0x7f0d4aaa1dc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr . LexToken(ASSIGN,'=',51,27,1148)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaa17c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr ExprOth . LexToken(ASSIGN,'=',51,27,1148)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaa1dc8>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aaa1148> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList . LexToken(ASSIGN,'=',51,27,1148)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList ASSIGN . LexToAction : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',51,27,1148)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','left'] and goto state 221
Result : <list @ 0x7f0d4aaa1108> (['Selector', ['.'], ['left']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',51,27,1148)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aaa1508>,<list @ 0x7f0d4aaa1108>] and goto state 106
Result : <list @ 0x7f0d4aaa13c8> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(ASSIGN,'=',51,27,1148)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa13c8>] and goto state 105
Result : <list @ 0x7f0d4aaa10c8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE UnaryExpr . LexToken(ASSIGN,'=',51,27,1148)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa10c8>] and goto state 178
Result : <list @ 0x7f0d4aaa1dc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr . LexToken(ASSIGN,'=',51,27,1148)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aaa17c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr ExprOth . LexToken(ASSIGN,'=',51,27,1148)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aaa1dc8>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aaa1148> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList . LexToken(ASSIGN,'=',51,27,1148)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList ASSIGN . LexToken(IDENT,'nil',51,29,1150)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aaa12c8> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op . LexToken(IDENT,'nil',51,29,1150)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op IDENT . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [OperandName -> IDENT] with ['nil'] and goto state 117
Result : <list @ 0x7f0d4aaa1788> (['OperandName', ['nil']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op OperandName . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa1788>] and goto state 108
Result : <list @ 0x7f0d4aa9bdc8> (['Operand', ['OperandName', ['nil']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Operand . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9bdc8>] and goto state 106
Result : <list @ 0x7f0d4aa9bd88> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9bd88>] and goto state 105
Result : <list @ 0x7f0d4aa9be08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9be08>] and goto state 146
Result : <list @ 0x7f0d4aa9bb08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa9bb88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Stateken(IDENT,'nil',51,29,1150)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aaa12c8> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op . LexToken(IDENT,'nil',51,29,1150)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op IDENT . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [OperandName -> IDENT] with ['nil'] and goto state 117
Result : <list @ 0x7f0d4aaa1788> (['OperandName', ['nil']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op OperandName . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa1788>] and goto state 108
Result : <list @ 0x7f0d4aa9bdc8> (['Operand', ['OperandName', ['nil']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Operand . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9bdc8>] and goto state 106
Result : <list @ 0x7f0d4aa9bd88> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9bd88>] and goto state 105
Result : <list @ 0x7f0d4aa9be08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9be08>] and goto state 146
Result : <list @ 0x7f0d4aa9bb08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa9bb88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',51,32,1153)
ment SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa9bb08>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aa9be48> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aaa1148>,<list @ 0x7f0d4aaa12c8>,<list @ 0x7f0d4aa9be48>] and goto state 169
Result : <list @ 0x7f0d4aaae408> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Assignment . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aaae408>] and goto state 155
Result : <list @ 0x7f0d4aa9bc88> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE SimpleStmt . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aa9bc88>] and goto state 152
Result : <list @ 0x7f0d4aa9b4c8> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement . LexToken(SEMICOLON,';',51,32,1153)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',52,9,1163)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aa9b748> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',52,9,1163)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa9b4c8>,';',<list @ 0x7f0d4aa9b748>] and goto state 151
Result : <list @ 0x7f0d4aa9b6c8> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList . LexToken(RBRACE,'}',52,9,1163)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName SignaAction : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa9bb08>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4aa9be48> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aaa1148>,<list @ 0x7f0d4aaa12c8>,<list @ 0x7f0d4aa9be48>] and goto state 169
Result : <list @ 0x7f0d4aaae408> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Assignment . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4aaae408>] and goto state 155
Result : <list @ 0x7f0d4aa9bc88> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE SimpleStmt . LexToken(SEMICOLON,';',51,32,1153)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4aa9bc88>] and goto state 152
Result : <list @ 0x7f0d4aa9b4c8> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement . LexToken(SEMICOLON,';',51,32,1153)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',52,9,1163)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4aa9b748> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',52,9,1163)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa9b4c8>,';',<list @ 0x7f0d4aa9b748>] and goto state 151
Result : <list @ 0x7f0d4aa9b6c8> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList . LexToken(RBRACE,'}',52,9,1163)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',52,10,1164)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aa9b6c8>,'}'] and goto state 394
Result : <list @ 0x7f0d4aa9b588> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 394
Defaulted state 394: Reduce using 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE Block . LexToken(SEMICOLON,';',52,10,1164)
Action : Reduce rule [else_stmt -> ELSE Block] with ['else',<list @ 0x7f0d4aa9b588>] and goto state 369
Result : <list @ 0x7f0d4aa9b548> (['else_stmt', ['else'], ['Block', ['{'], ...)
State  : 369
Defaulted state 369: Reduce using 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block else_stmt . LexToken(SEMICOLON,';',52,10,1164)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f0d4aa9f0c8>,<list @ 0x7f0d4aaa1cc8>,<list @ 0x7f0d4aa9b548>] and goto state 162
Result : <list @ 0x7f0d4aa9b5c8> (['IfStmt', ['if'], ['Expr', ['Expr', ['U ...)
State  : 162
Defaulted state 162: Reduce using 186
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IfStmt . LexToken(SEMICOLON,';',52,10,1164)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f0d4aa9b5c8>] and goto state 152
Result : <list @ 0x7f0d4aa9bcc8> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',52,10,1164)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IF,'if',53,9,1174)
Action : Shift and goto state 177
State  : 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF . LexToken(IDENT,'i',53,12,1177)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT . LexToken(MUL,'*',53,13,1178)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa9bfc8> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statementture LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',52,10,1164)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4aa9b6c8>,'}'] and goto state 394
Result : <list @ 0x7f0d4aa9b588> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 394
Defaulted state 394: Reduce using 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE Block . LexToken(SEMICOLON,';',52,10,1164)
Action : Reduce rule [else_stmt -> ELSE Block] with ['else',<list @ 0x7f0d4aa9b588>] and goto state 369
Result : <list @ 0x7f0d4aa9b548> (['else_stmt', ['else'], ['Block', ['{'], ...)
State  : 369
Defaulted state 369: Reduce using 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block else_stmt . LexToken(SEMICOLON,';',52,10,1164)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f0d4aa9f0c8>,<list @ 0x7f0d4aaa1cc8>,<list @ 0x7f0d4aa9b548>] and goto state 162
Result : <list @ 0x7f0d4aa9b5c8> (['IfStmt', ['if'], ['Expr', ['Expr', ['U ...)
State  : 162
Defaulted state 162: Reduce using 186
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IfStmt . LexToken(SEMICOLON,';',52,10,1164)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f0d4aa9b5c8>] and goto state 152
Result : <list @ 0x7f0d4aa9bcc8> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',52,10,1164)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IF,'if',53,9,1174)
Action : Shift and goto state 177
State  : 177
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF . LexToken(IDENT,'i',53,12,1177)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF IDENT . LexToken(MUL,'*',53,13,1178)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa9bfc8> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF OperandName . LexToken(MUL,'*',53,13,1178)
 SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF OperandName . LexToken(MUL,'*',53,13,1178)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9bfc8>] and goto state 108
Result : <list @ 0x7f0d4aa9b808> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Operand . LexToken(MUL,'*',53,13,1178)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9b808>] and goto state 106
Result : <list @ 0x7f0d4aa9b8c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr . LexToken(MUL,'*',53,13,1178)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9b8c8>] and goto state 105
Result : <list @ 0x7f0d4aa9b888> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF UnaryExpr . LexToken(MUL,'*',53,13,1178)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9b888>] and goto state 284
Result : <list @ 0x7f0d4aa9b908> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(MUL,'*',53,13,1178)
Action : Shift and goto state 214
State  : 214
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr MUL . LexToken(INT,'2',53,14,1179)
Action : Reduce rule [MulOp -> MUL] with ['*'] and goto state 203
Result : <list @ 0x7f0d4aa9b108> (['MulOp', ['*']])
State  : 203
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr MulOp . LexToken(INT,'2',53,14,1179)
Action : Reduce rule [BinOp -> MulOp] with [<list @ 0x7f0d4aa9b108>] and goto state 198
Result : <list @ 0x7f0d4aa9ba48> (['BinOp', ['MulOp', ['*']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp . LexToken(INT,'2',53,14,1179)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp INT . LexToken(ADD,'+',53,16,1181)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 120
Result : <list @ 0x7f0d4aa9b048> (['BasicLit', ['2']])
StAction : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa9bfc8>] and goto state 108
Result : <list @ 0x7f0d4aa9b808> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Operand . LexToken(MUL,'*',53,13,1178)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa9b808>] and goto state 106
Result : <list @ 0x7f0d4aa9b8c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF PrimaryExpr . LexToken(MUL,'*',53,13,1178)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa9b8c8>] and goto state 105
Result : <list @ 0x7f0d4aa9b888> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF UnaryExpr . LexToken(MUL,'*',53,13,1178)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa9b888>] and goto state 284
Result : <list @ 0x7f0d4aa9b908> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(MUL,'*',53,13,1178)
Action : Shift and goto state 214
State  : 214
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr MUL . LexToken(INT,'2',53,14,1179)
Action : Reduce rule [MulOp -> MUL] with ['*'] and goto state 203
Result : <list @ 0x7f0d4aa9b108> (['MulOp', ['*']])
State  : 203
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr MulOp . LexToken(INT,'2',53,14,1179)
Action : Reduce rule [BinOp -> MulOp] with [<list @ 0x7f0d4aa9b108>] and goto state 198
Result : <list @ 0x7f0d4aa9ba48> (['BinOp', ['MulOp', ['*']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp . LexToken(INT,'2',53,14,1179)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp INT . LexToken(ADD,'+',53,16,1181)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 120
Result : <list @ 0x7f0d4aa9b048> (['BasicLit', ['2']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp BasicLit . LexToken(ADD,'+',53,16,1181)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aa9b048>] and goto state 116
Result : <list @ 0x7f0d4aaa4e08> (['Lit', ['BasicLit', ['2']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Lit . LexToken(ADD,'+',53,16,1181)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaa4e08>] and goto state 108
Result : <list @ 0x7f0d4aaa4f88> (['Operand', ['Lit', ['BasicLit', ['2']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Operand . LexToken(ADD,'+',53,16,1181)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa4f88>] and goto state 106
Result : <list @ 0x7f0d4aaa4c48> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp PrimaryExpr . LexToken(ADD,'+',53,16,1181)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa4c48>] and goto state 105
Result : <list @ 0x7f0d4aaa4b88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp UnaryExpr . LexToken(ADD,'+',53,16,1181)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa4b88>] and goto state 304
Result : <list @ 0x7f0d4aaa49c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr . LexToken(ADD,'+',53,16,1181)
Action : Shift and goto state 210
State  : 210
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr ADD . LexToken(INT,'1',53,17,1182)
Action : Reduce rule [AddOp -> ADD] with ['+'] and goto state 202
Result : <list @ 0x7f0d4aaa4a88> (['AddOp', ['+']])
State  : 202
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr AddOp . LexToken(INT,'1',53,17,1182)
Action : Reduce rule [BinOp -> AddOp] with [<list @ 0x7f0d4aaa4a88>] and goto state ate  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp BasicLit . LexToken(ADD,'+',53,16,1181)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aa9b048>] and goto state 116
Result : <list @ 0x7f0d4aaa4e08> (['Lit', ['BasicLit', ['2']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Lit . LexToken(ADD,'+',53,16,1181)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaa4e08>] and goto state 108
Result : <list @ 0x7f0d4aaa4f88> (['Operand', ['Lit', ['BasicLit', ['2']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Operand . LexToken(ADD,'+',53,16,1181)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa4f88>] and goto state 106
Result : <list @ 0x7f0d4aaa4c48> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp PrimaryExpr . LexToken(ADD,'+',53,16,1181)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa4c48>] and goto state 105
Result : <list @ 0x7f0d4aaa4b88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp UnaryExpr . LexToken(ADD,'+',53,16,1181)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa4b88>] and goto state 304
Result : <list @ 0x7f0d4aaa49c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr . LexToken(ADD,'+',53,16,1181)
Action : Shift and goto state 210
State  : 210
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr ADD . LexToken(INT,'1',53,17,1182)
Action : Reduce rule [AddOp -> ADD] with ['+'] and goto state 202
Result : <list @ 0x7f0d4aaa4a88> (['AddOp', ['+']])
State  : 202
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr AddOp . LexToken(INT,'1',53,17,1182)
Action : Reduce rule [BinOp -> AddOp] with [<list @ 0x7f0d4aaa4a88>] and goto state 198
Result : <list @ 0x7f0d4aaa4948> (['BinOp', ['AddOp', ['+']]])
198
Result : <list @ 0x7f0d4aaa4948> (['BinOp', ['AddOp', ['+']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp . LexToken(INT,'1',53,17,1182)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp INT . LexToken(LEQ,'<=',53,19,1184)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4aaa4ac8> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp BasicLit . LexToken(LEQ,'<=',53,19,1184)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aaa4ac8>] and goto state 116
Result : <list @ 0x7f0d4aaa4a08> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Lit . LexToken(LEQ,'<=',53,19,1184)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaa4a08>] and goto state 108
Result : <list @ 0x7f0d4aaa4588> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Operand . LexToken(LEQ,'<=',53,19,1184)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa4588>] and goto state 106
Result : <list @ 0x7f0d4aaa4988> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp PrimaryExpr . LexToken(LEQ,'<=',53,19,1184)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa4988>] and goto state 105
Result : <list @ 0x7f0d4aaa47c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp UnaryExpr . LexToken(LEQ,'<=',53,19,1184)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa47c8>] and goto state 304
Result : <list @ 0x7f0d4aaa4288> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr . LexToken(LEQ,'<=',53,19,118State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp . LexToken(INT,'1',53,17,1182)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp INT . LexToken(LEQ,'<=',53,19,1184)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4aaa4ac8> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp BasicLit . LexToken(LEQ,'<=',53,19,1184)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aaa4ac8>] and goto state 116
Result : <list @ 0x7f0d4aaa4a08> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Lit . LexToken(LEQ,'<=',53,19,1184)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaa4a08>] and goto state 108
Result : <list @ 0x7f0d4aaa4588> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Operand . LexToken(LEQ,'<=',53,19,1184)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa4588>] and goto state 106
Result : <list @ 0x7f0d4aaa4988> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp PrimaryExpr . LexToken(LEQ,'<=',53,19,1184)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa4988>] and goto state 105
Result : <list @ 0x7f0d4aaa47c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp UnaryExpr . LexToken(LEQ,'<=',53,19,1184)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa47c8>] and goto state 304
Result : <list @ 0x7f0d4aaa4288> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr . LexToken(LEQ,'<=',53,19,1184)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr LEQ . LexToken(IDENT,'n',53,22,1187)
Action : Reduce rule [RelOp -> LEQ] with ['<='] and goto state 201
Result : <list @ 0x7f0d4aaa4688> (['RelOp', ['<=']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr RelOp . LexToken(IDENT,'n',53,22,1187)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4aaa4688>] and goto state 198
Result : <list @ 0x7f0d4aaa4548> (['BinOp', ['RelOp', ['<=']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp . LexToken(IDENT,'n',53,22,1187)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp IDENT . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [OperandName -> IDENT] with ['n'] and goto state 117
Result : <list @ 0x7f0d4aaa4648> (['OperandName', ['n']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp OperandName . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa4648>] and goto state 108
Result : <list @ 0x7f0d4aaa4848> (['Operand', ['OperandName', ['n']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp Operand . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa4848>] and goto state 106
Result : <list @ 0x7f0d4aaa4b48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp PrimaryExpr . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa4b48>] and goto state 105
Result : <list @ 0x7f0d4aaa42c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement4)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr LEQ . LexToken(IDENT,'n',53,22,1187)
Action : Reduce rule [RelOp -> LEQ] with ['<='] and goto state 201
Result : <list @ 0x7f0d4aaa4688> (['RelOp', ['<=']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr RelOp . LexToken(IDENT,'n',53,22,1187)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4aaa4688>] and goto state 198
Result : <list @ 0x7f0d4aaa4548> (['BinOp', ['RelOp', ['<=']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp . LexToken(IDENT,'n',53,22,1187)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp IDENT . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [OperandName -> IDENT] with ['n'] and goto state 117
Result : <list @ 0x7f0d4aaa4648> (['OperandName', ['n']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp OperandName . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa4648>] and goto state 108
Result : <list @ 0x7f0d4aaa4848> (['Operand', ['OperandName', ['n']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp Operand . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa4848>] and goto state 106
Result : <list @ 0x7f0d4aaa4b48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp PrimaryExpr . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa4b48>] and goto state 105
Result : <list @ 0x7f0d4aaa42c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp UnaryExpr . LexToken(LBRACE,'{',53,24,1189)
 SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp UnaryExpr . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa42c8>] and goto state 304
Result : <list @ 0x7f0d4aaa4cc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp Expr . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aaa4288>,<list @ 0x7f0d4aaa4548>,<list @ 0x7f0d4aaa4cc8>] and goto state 304
Result : <list @ 0x7f0d4aa9bd48> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aaa49c8>,<list @ 0x7f0d4aaa4948>,<list @ 0x7f0d4aa9bd48>] and goto state 304
Result : <list @ 0x7f0d4aa99ec8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aa9b908>,<list @ 0x7f0d4aa9ba48>,<list @ 0x7f0d4aa99ec8>] and goto state 284
Result : <list @ 0x7f0d4aa99e08> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(LBRACE,'{',53,24,1189)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE . LexToken(IDENT,'graph',54,13,1203)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE IDENT . LexToken(LBRACK,'[',54,18,1208)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aa99dc8> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE OperandName . LexToken(LBRACK,'[',54,18,1208)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa99dc8>] and goto state 108
Result : <list @ 0x7f0d4aa99308> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatAction : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa42c8>] and goto state 304
Result : <list @ 0x7f0d4aaa4cc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr BinOp Expr . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aaa4288>,<list @ 0x7f0d4aaa4548>,<list @ 0x7f0d4aaa4cc8>] and goto state 304
Result : <list @ 0x7f0d4aa9bd48> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr BinOp Expr . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aaa49c8>,<list @ 0x7f0d4aaa4948>,<list @ 0x7f0d4aa9bd48>] and goto state 304
Result : <list @ 0x7f0d4aa99ec8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr BinOp Expr . LexToken(LBRACE,'{',53,24,1189)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aa9b908>,<list @ 0x7f0d4aa9ba48>,<list @ 0x7f0d4aa99ec8>] and goto state 284
Result : <list @ 0x7f0d4aa99e08> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr . LexToken(LBRACE,'{',53,24,1189)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE . LexToken(IDENT,'graph',54,13,1203)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE IDENT . LexToken(LBRACK,'[',54,18,1208)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aa99dc8> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE OperandName . LexToken(LBRACK,'[',54,18,1208)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa99dc8>] and goto state 108
Result : <list @ 0x7f0d4aa99308> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Operand . LexToken(LBRACK,'[',54,18,1208)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa99308>] and goto state 106
Result : <list @ 0x7f0d4aa99d88> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(LBRACK,'[',54,18,1208)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',54,19,1209)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',54,20,1210)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa99408> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',54,20,1210)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa99408>] and goto state 108
Result : <list @ 0x7f0d4aa99f08> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',54,20,1210)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa99f08>] and goto state 106
Result : <list @ 0x7f0d4aa99a88> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',54,20,1210)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa99a88>] and goto state 105
Result : <list @ 0x7f0d4aa99348> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',54,20,1210)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa99348>] and goto state 306
Result : <list @ 0x7f0d4aa99388> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDeclement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Operand . LexToken(LBRACK,'[',54,18,1208)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa99308>] and goto state 106
Result : <list @ 0x7f0d4aa99d88> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(LBRACK,'[',54,18,1208)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',54,19,1209)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',54,20,1210)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aa99408> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',54,20,1210)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa99408>] and goto state 108
Result : <list @ 0x7f0d4aa99f08> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',54,20,1210)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa99f08>] and goto state 106
Result : <list @ 0x7f0d4aa99a88> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',54,20,1210)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa99a88>] and goto state 105
Result : <list @ 0x7f0d4aa99348> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',54,20,1210)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa99348>] and goto state 306
Result : <list @ 0x7f0d4aa99388> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',54,20,1210)
 SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',54,20,1210)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',54,21,1211)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aa99388>,']'] and goto state 222
Result : <list @ 0x7f0d4aa99508> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',54,21,1211)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aa99d88>,<list @ 0x7f0d4aa99508>] and goto state 106
Result : <list @ 0x7f0d4aa99448> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(PERIOD,'.',54,21,1211)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'right',54,22,1212)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',54,28,1218)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','right'] and goto state 221
Result : <list @ 0x7f0d4aa99048> (['Selector', ['.'], ['right']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',54,28,1218)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa99448>,<list @ 0x7f0d4aa99048>] and goto state 106
Result : <list @ 0x7f0d4aa99208> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(ASSIGN,'=',54,28,1218)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa99208>] and goto state 105
Result : <list @ 0x7f0d4aa99488> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',54,21,1211)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aa99388>,']'] and goto state 222
Result : <list @ 0x7f0d4aa99508> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',54,21,1211)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aa99d88>,<list @ 0x7f0d4aa99508>] and goto state 106
Result : <list @ 0x7f0d4aa99448> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(PERIOD,'.',54,21,1211)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'right',54,22,1212)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',54,28,1218)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','right'] and goto state 221
Result : <list @ 0x7f0d4aa99048> (['Selector', ['.'], ['right']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',54,28,1218)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4aa99448>,<list @ 0x7f0d4aa99048>] and goto state 106
Result : <list @ 0x7f0d4aa99208> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE PrimaryExpr . LexToken(ASSIGN,'=',54,28,1218)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aa99208>] and goto state 105
Result : <list @ 0x7f0d4aa99488> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE UnaryExpr . LexToken(ASSIGN,'=',54,28,1218)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa99488>] and goto state 178
Result : <list @ 0x7f0d4aa99e88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr . LexToken(ASSIGN,'=',54,28,1218)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa99fc8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr ExprOth . LexToken(ASSIGN,'=',54,28,1218)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa99e88>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aa99688> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList . LexToken(ASSIGN,'=',54,28,1218)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList ASSIGN . LexToken(AND,'&',54,30,1220)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aa99248> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op . LexToken(AND,'&',54,30,1220)
Action : Shift and goto state 115
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op AND . LexToken(IDENT,'graph',54,31,1221)
Action : Reduce rule [UnaryOp -> AND] with ['&'] and goto state 107
Result : <list @ 0x7f0d4aa99908> (['UnaryOp', ['&']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp . LexToken(IDENT,'graph',54,31,1221)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp IDENT . LexToken(LBRACK,'[',54,36,1226)
Action : Reduce ruleStatement SEMICOLON IF Expr LBRACE UnaryExpr . LexToken(ASSIGN,'=',54,28,1218)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aa99488>] and goto state 178
Result : <list @ 0x7f0d4aa99e88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr . LexToken(ASSIGN,'=',54,28,1218)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4aa99fc8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Expr ExprOth . LexToken(ASSIGN,'=',54,28,1218)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4aa99e88>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4aa99688> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList . LexToken(ASSIGN,'=',54,28,1218)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList ASSIGN . LexToken(AND,'&',54,30,1220)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4aa99248> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op . LexToken(AND,'&',54,30,1220)
Action : Shift and goto state 115
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op AND . LexToken(IDENT,'graph',54,31,1221)
Action : Reduce rule [UnaryOp -> AND] with ['&'] and goto state 107
Result : <list @ 0x7f0d4aa99908> (['UnaryOp', ['&']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp . LexToken(IDENT,'graph',54,31,1221)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp IDENT . LexToken(LBRACK,'[',54,36,1226)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
 [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4aa998c8> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp OperandName . LexToken(LBRACK,'[',54,36,1226)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa998c8>] and goto state 108
Result : <list @ 0x7f0d4aa99e48> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp Operand . LexToken(LBRACK,'[',54,36,1226)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa99e48>] and goto state 106
Result : <list @ 0x7f0d4aa99888> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr . LexToken(LBRACK,'[',54,36,1226)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK . LexToken(IDENT,'i',54,37,1227)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK IDENT . LexToken(MUL,'*',54,38,1228)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aaa3a48> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK OperandName . LexToken(MUL,'*',54,38,1228)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa3a48>] and goto state 108
Result : <list @ 0x7f0d4aaa3d88> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Operand . LexToken(MUL,'*',54,38,1228)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa3d88>] and goto state 106
Result : <list @ 0x7f0d4aaa3c08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLONResult : <list @ 0x7f0d4aa998c8> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp OperandName . LexToken(LBRACK,'[',54,36,1226)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aa998c8>] and goto state 108
Result : <list @ 0x7f0d4aa99e48> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp Operand . LexToken(LBRACK,'[',54,36,1226)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa99e48>] and goto state 106
Result : <list @ 0x7f0d4aa99888> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr . LexToken(LBRACK,'[',54,36,1226)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK . LexToken(IDENT,'i',54,37,1227)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK IDENT . LexToken(MUL,'*',54,38,1228)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4aaa3a48> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK OperandName . LexToken(MUL,'*',54,38,1228)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4aaa3a48>] and goto state 108
Result : <list @ 0x7f0d4aaa3d88> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Operand . LexToken(MUL,'*',54,38,1228)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa3d88>] and goto state 106
Result : <list @ 0x7f0d4aaa3c08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK PrimaryExpr . LexToken(MUL,'*',54,38,1228)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa3c08>] and goto state 105
Result : <list @ 0x7f0d4aaa3e08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK UnaryExpr . LexToken(MUL,'*',54,38,1228)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa3e08>] and goto state 306
Result : <list @ 0x7f0d4aaa3ac8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr . LexToken(MUL,'*',54,38,1228)
Action : Shift and goto state 214
State  : 214
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr MUL . LexToken(INT,'2',54,39,1229)
Action : Reduce rule [MulOp -> MUL] with ['*'] and goto state 203
Result : <list @ 0x7f0d4aaa3b48> (['MulOp', ['*']])
State  : 203
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr MulOp . LexToken(INT,'2',54,39,1229)
Action : Reduce rule [BinOp -> MulOp] with [<list @ 0x7f0d4aaa3b48>] and goto state 198
Result : <list @ 0x7f0d4aaa3a88> (['BinOp', ['MulOp', ['*']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp . LexToken(INT,'2',54,39,1229)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp INT . LexToken(ADD,'+',54,41,1231)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 120
Result : <list @ 0x7f0d4aaa3948> (['BasicLit', ['2']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp BasicLit . LexToken(ADD,'+',54,41,1231)
Ac Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK PrimaryExpr . LexToken(MUL,'*',54,38,1228)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa3c08>] and goto state 105
Result : <list @ 0x7f0d4aaa3e08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK UnaryExpr . LexToken(MUL,'*',54,38,1228)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa3e08>] and goto state 306
Result : <list @ 0x7f0d4aaa3ac8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr . LexToken(MUL,'*',54,38,1228)
Action : Shift and goto state 214
State  : 214
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr MUL . LexToken(INT,'2',54,39,1229)
Action : Reduce rule [MulOp -> MUL] with ['*'] and goto state 203
Result : <list @ 0x7f0d4aaa3b48> (['MulOp', ['*']])
State  : 203
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr MulOp . LexToken(INT,'2',54,39,1229)
Action : Reduce rule [BinOp -> MulOp] with [<list @ 0x7f0d4aaa3b48>] and goto state 198
Result : <list @ 0x7f0d4aaa3a88> (['BinOp', ['MulOp', ['*']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp . LexToken(INT,'2',54,39,1229)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp INT . LexToken(ADD,'+',54,41,1231)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 120
Result : <list @ 0x7f0d4aaa3948> (['BasicLit', ['2']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp BasicLit . LexToken(ADD,'+',54,41,1231)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aaa3948>] and goto state 116
tion : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aaa3948>] and goto state 116
Result : <list @ 0x7f0d4aaa38c8> (['Lit', ['BasicLit', ['2']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Lit . LexToken(ADD,'+',54,41,1231)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaa38c8>] and goto state 108
Result : <list @ 0x7f0d4aa999c8> (['Operand', ['Lit', ['BasicLit', ['2']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Operand . LexToken(ADD,'+',54,41,1231)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa999c8>] and goto state 106
Result : <list @ 0x7f0d4aaa3808> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp PrimaryExpr . LexToken(ADD,'+',54,41,1231)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa3808>] and goto state 105
Result : <list @ 0x7f0d4aaa3748> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp UnaryExpr . LexToken(ADD,'+',54,41,1231)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa3748>] and goto state 304
Result : <list @ 0x7f0d4aaa3888> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr . LexToken(ADD,'+',54,41,1231)
Action : Shift and goto state 210
State  : 210
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr ADD . LexToken(INT,'1',54,43,1233)
Action : Reduce rule [AddOp -> ADD] with ['+'] and goto state 202
Result : <list @ 0x7f0d4aaa35c8> (['AddOp', ['+']])
State  : 202
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr AddOp . LexToken(INT,'1',54,43,1233)
Action : Reduce rule [BinOp -> AddOp] with [<list @ 0x7f0d4aaa35c8>] and goto state 198
Result : <liResult : <list @ 0x7f0d4aaa38c8> (['Lit', ['BasicLit', ['2']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Lit . LexToken(ADD,'+',54,41,1231)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaa38c8>] and goto state 108
Result : <list @ 0x7f0d4aa999c8> (['Operand', ['Lit', ['BasicLit', ['2']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Operand . LexToken(ADD,'+',54,41,1231)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aa999c8>] and goto state 106
Result : <list @ 0x7f0d4aaa3808> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp PrimaryExpr . LexToken(ADD,'+',54,41,1231)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa3808>] and goto state 105
Result : <list @ 0x7f0d4aaa3748> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp UnaryExpr . LexToken(ADD,'+',54,41,1231)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa3748>] and goto state 304
Result : <list @ 0x7f0d4aaa3888> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr . LexToken(ADD,'+',54,41,1231)
Action : Shift and goto state 210
State  : 210
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr ADD . LexToken(INT,'1',54,43,1233)
Action : Reduce rule [AddOp -> ADD] with ['+'] and goto state 202
Result : <list @ 0x7f0d4aaa35c8> (['AddOp', ['+']])
State  : 202
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr AddOp . LexToken(INT,'1',54,43,1233)
Action : Reduce rule [BinOp -> AddOp] with [<list @ 0x7f0d4aaa35c8>] and goto state 198
Result : <list @ 0x7f0d4aaa32c8> (['BinOp', ['AddOp', ['+']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp . LexToken(INT,'1',54,43,1233)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp INT . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4aaa3248> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp BasicLit . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aaa3248>] and goto state 116
Result : <list @ 0x7f0d4aaa3288> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp Lit . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaa3288>] and goto state 108
Result : <list @ 0x7f0d4aaa3208> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp Operand . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa3208>] and goto state 106
Result : <list @ 0x7f0d4aaa31c8> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp PrimaryExpr . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa31c8>] and goto state 105
Result : <list @ 0x7f0d4aaa3148> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp UnaryExpr . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [Expr -> UnaryExpr] wst @ 0x7f0d4aaa32c8> (['BinOp', ['AddOp', ['+']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp . LexToken(INT,'1',54,43,1233)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp INT . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4aaa3248> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp BasicLit . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4aaa3248>] and goto state 116
Result : <list @ 0x7f0d4aaa3288> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp Lit . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4aaa3288>] and goto state 108
Result : <list @ 0x7f0d4aaa3208> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp Operand . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa3208>] and goto state 106
Result : <list @ 0x7f0d4aaa31c8> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp PrimaryExpr . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa31c8>] and goto state 105
Result : <list @ 0x7f0d4aaa3148> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp UnaryExpr . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa3148>] and goto state 304
ith [<list @ 0x7f0d4aaa3148>] and goto state 304
Result : <list @ 0x7f0d4aaa30c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp Expr . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aaa3888>,<list @ 0x7f0d4aaa32c8>,<list @ 0x7f0d4aaa30c8>] and goto state 304
Result : <list @ 0x7f0d4aaa37c8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aaa3ac8>,<list @ 0x7f0d4aaa3a88>,<list @ 0x7f0d4aaa37c8>] and goto state 306
Result : <list @ 0x7f0d4aaa3308> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',54,44,1234)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr RBRACK . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aaa3308>,']'] and goto state 222
Result : <list @ 0x7f0d4ad70b08> (['Index', ['['], ['Expr', ['Expr', ['Una ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr Index . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aa99888>,<list @ 0x7f0d4ad70b08>] and goto state 106
Result : <list @ 0x7f0d4aaa3048> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa3048>] and goto state 228
Result : <list @ 0x7f0d4aaa3588> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressiResult : <list @ 0x7f0d4aaa30c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr BinOp Expr . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aaa3888>,<list @ 0x7f0d4aaa32c8>,<list @ 0x7f0d4aaa30c8>] and goto state 304
Result : <list @ 0x7f0d4aaa37c8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr . LexToken(RBRACK,']',54,44,1234)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4aaa3ac8>,<list @ 0x7f0d4aaa3a88>,<list @ 0x7f0d4aaa37c8>] and goto state 306
Result : <list @ 0x7f0d4aaa3308> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',54,44,1234)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr RBRACK . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4aaa3308>,']'] and goto state 222
Result : <list @ 0x7f0d4ad70b08> (['Index', ['['], ['Expr', ['Expr', ['Una ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr Index . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4aa99888>,<list @ 0x7f0d4ad70b08>] and goto state 106
Result : <list @ 0x7f0d4aaa3048> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp PrimaryExpr . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4aaa3048>] and goto state 228
Result : <list @ 0x7f0d4aaa3588> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryOp UnaryExpr . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aa99908>,<list @ 0x7f0d4aaa3588>] and goto state 105
Result : <list @ 0x7f0d4aaa3688> (['UnaryExpr', ['UnaryOp', ['&']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa3688>] and goto state 146
Result : <list @ 0x7f0d4a8c0cc8> (['Expr', ['UnaryExpr', ['UnaryOp', ['&'] ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a8c0c08> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a8c0cc8>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4a8c0508> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aa99688>,<list @ 0x7f0d4aa99248>,<list @ 0x7f0d4a8c0508>] and goto state 169
Result : <list @ 0x7f0d4a8c0ac8> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Assignment . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4a8c0ac8>] and goto state 155
Result : <list @ 0x7f0d4a8c03c8> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE SimpleStmt . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4a8c03c8>] and goto state 152
Result : <list @ 0x7f0d4a8c0488> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON StaonList assign_op UnaryOp UnaryExpr . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4aa99908>,<list @ 0x7f0d4aaa3588>] and goto state 105
Result : <list @ 0x7f0d4aaa3688> (['UnaryExpr', ['UnaryOp', ['&']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4aaa3688>] and goto state 146
Result : <list @ 0x7f0d4a8c0cc8> (['Expr', ['UnaryExpr', ['UnaryOp', ['&'] ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a8c0c08> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a8c0cc8>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4a8c0508> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4aa99688>,<list @ 0x7f0d4aa99248>,<list @ 0x7f0d4a8c0508>] and goto state 169
Result : <list @ 0x7f0d4a8c0ac8> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Assignment . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4a8c0ac8>] and goto state 155
Result : <list @ 0x7f0d4a8c03c8> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE SimpleStmt . LexToken(SEMICOLON,';',54,45,1235)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4a8c03c8>] and goto state 152
Result : <list @ 0x7f0d4a8c0488> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement . LexToken(SEMICOLON,';',54,45,1235)
tement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement . LexToken(SEMICOLON,';',54,45,1235)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',55,9,1245)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4a8c0a48> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',55,9,1245)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8c0488>,';',<list @ 0x7f0d4a8c0a48>] and goto state 151
Result : <list @ 0x7f0d4a8c0588> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList . LexToken(RBRACE,'}',55,9,1245)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',55,11,1247)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4a8c0588>,'}'] and goto state 335
Result : <list @ 0x7f0d4a8bfe48> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block . LexToken(ELSE,'else',55,11,1247)
Action : Shift and goto state 370
State  : 370
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE . LexToken(LBRACE,'{',55,16,1252)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE . LexToken(IDENT,'graph',56,13,1266)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE IDENT . LexToken(LBRACK,'[',56,18,1271)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4a8bff88> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName SigAction : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',55,9,1245)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4a8c0a48> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',55,9,1245)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8c0488>,';',<list @ 0x7f0d4a8c0a48>] and goto state 151
Result : <list @ 0x7f0d4a8c0588> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList . LexToken(RBRACE,'}',55,9,1245)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',55,11,1247)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4a8c0588>,'}'] and goto state 335
Result : <list @ 0x7f0d4a8bfe48> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block . LexToken(ELSE,'else',55,11,1247)
Action : Shift and goto state 370
State  : 370
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE . LexToken(LBRACE,'{',55,16,1252)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE . LexToken(IDENT,'graph',56,13,1266)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE IDENT . LexToken(LBRACK,'[',56,18,1271)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4a8bff88> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE OperandName . LexToken(LBRACK,'[',56,18,1271)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bff88>] and goto state 108
Result : <list @ 0x7f0d4a8bf908> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Operand . LexToken(LBRACK,'[',56,18,1271)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bf908>] and goto state 106
Result : <list @ 0x7f0d4a8bf9c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(LBRACK,'[',56,18,1271)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',56,19,1272)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',56,20,1273)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a8bf3c8> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',56,20,1273)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bf3c8>] and goto state 108
Result : <list @ 0x7f0d4a8bf848> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',56,20,1273)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bf848>] and goto state 106
Result : <list @ 0x7f0d4a8bf7c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',56,20,1273)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8bf7c8>] and goto state 105
Resunature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE OperandName . LexToken(LBRACK,'[',56,18,1271)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bff88>] and goto state 108
Result : <list @ 0x7f0d4a8bf908> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Operand . LexToken(LBRACK,'[',56,18,1271)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bf908>] and goto state 106
Result : <list @ 0x7f0d4a8bf9c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(LBRACK,'[',56,18,1271)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK . LexToken(IDENT,'i',56,19,1272)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',56,20,1273)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a8bf3c8> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',56,20,1273)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bf3c8>] and goto state 108
Result : <list @ 0x7f0d4a8bf848> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',56,20,1273)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bf848>] and goto state 106
Result : <list @ 0x7f0d4a8bf7c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',56,20,1273)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8bf7c8>] and goto state 105
Result : <list @ 0x7f0d4a8bf308> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
lt : <list @ 0x7f0d4a8bf308> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',56,20,1273)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8bf308>] and goto state 306
Result : <list @ 0x7f0d4a8bf1c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',56,20,1273)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',56,21,1274)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4a8bf1c8>,']'] and goto state 222
Result : <list @ 0x7f0d4a8bf148> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',56,21,1274)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4a8bf9c8>,<list @ 0x7f0d4a8bf148>] and goto state 106
Result : <list @ 0x7f0d4a8beec8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(PERIOD,'.',56,21,1274)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'right',56,22,1275)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',56,28,1281)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','right'] and goto state 221
Result : <list @ 0x7f0d4a8bed48> (['Selector', ['.'], ['right']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',56,28,1281)
Action : Reduce rule [State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',56,20,1273)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8bf308>] and goto state 306
Result : <list @ 0x7f0d4a8bf1c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',56,20,1273)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',56,21,1274)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4a8bf1c8>,']'] and goto state 222
Result : <list @ 0x7f0d4a8bf148> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Index . LexToken(PERIOD,'.',56,21,1274)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4a8bf9c8>,<list @ 0x7f0d4a8bf148>] and goto state 106
Result : <list @ 0x7f0d4a8beec8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(PERIOD,'.',56,21,1274)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD . LexToken(IDENT,'right',56,22,1275)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',56,28,1281)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','right'] and goto state 221
Result : <list @ 0x7f0d4a8bed48> (['Selector', ['.'], ['right']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr Selector . LexToken(ASSIGN,'=',56,28,1281)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4a8beec8>,<list @ 0x7f0d4a8bed48>] and goto state 106
Result : <list @ 0x7f0d4a8bec08> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(ASSIGN,'=',56,28,1281)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8bec08>] and goto state 105
Result : <list @ 0x7f0d4a8be888> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE UnaryExpr . LexToken(ASSIGN,'=',56,28,1281)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8be888>] and goto state 178
Result : <list @ 0x7f0d4a8be948> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr . LexToken(ASSIGN,'=',56,28,1281)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a8be688> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr ExprOth . LexToken(ASSIGN,'=',56,28,1281)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a8be948>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4a8be408> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList . LexToken(ASSIGN,'=',56,28,1281)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList ASSIGN . LexToken(IDENT,'nil',56,30,1283)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4a8be288> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op . LexToken(IDENT,'nil',56,30,1283)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICPrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4a8beec8>,<list @ 0x7f0d4a8bed48>] and goto state 106
Result : <list @ 0x7f0d4a8bec08> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(ASSIGN,'=',56,28,1281)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8bec08>] and goto state 105
Result : <list @ 0x7f0d4a8be888> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE UnaryExpr . LexToken(ASSIGN,'=',56,28,1281)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8be888>] and goto state 178
Result : <list @ 0x7f0d4a8be948> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr . LexToken(ASSIGN,'=',56,28,1281)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a8be688> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Expr ExprOth . LexToken(ASSIGN,'=',56,28,1281)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a8be948>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4a8be408> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList . LexToken(ASSIGN,'=',56,28,1281)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList ASSIGN . LexToken(IDENT,'nil',56,30,1283)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4a8be288> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op . LexToken(IDENT,'nil',56,30,1283)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op IDENT . LexToken(SEMICOLON,';',56,33,1286)
OLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op IDENT . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [OperandName -> IDENT] with ['nil'] and goto state 117
Result : <list @ 0x7f0d4a8bdd48> (['OperandName', ['nil']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op OperandName . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bdd48>] and goto state 108
Result : <list @ 0x7f0d4aaa36c8> (['Operand', ['OperandName', ['nil']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Operand . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa36c8>] and goto state 106
Result : <list @ 0x7f0d4a8bdc88> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8bdc88>] and goto state 105
Result : <list @ 0x7f0d4a8bdb48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8bdb48>] and goto state 146
Result : <list @ 0x7f0d4a8bda08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a8bd9c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a8bda08>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4a8bd948> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',56,33,1286Action : Reduce rule [OperandName -> IDENT] with ['nil'] and goto state 117
Result : <list @ 0x7f0d4a8bdd48> (['OperandName', ['nil']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op OperandName . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bdd48>] and goto state 108
Result : <list @ 0x7f0d4aaa36c8> (['Operand', ['OperandName', ['nil']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Operand . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4aaa36c8>] and goto state 106
Result : <list @ 0x7f0d4a8bdc88> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8bdc88>] and goto state 105
Result : <list @ 0x7f0d4a8bdb48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8bdb48>] and goto state 146
Result : <list @ 0x7f0d4a8bda08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a8bd9c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a8bda08>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4a8bd948> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4a8be408>,<list @ 0x7f0d4a8be288>,<list @ 0x7f0d4a8bd948>] and goto state 169
Result : <list @ 0x7f0d4a8bd788> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Assignment . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4a8bd788>] and goto state 155
Result : <list @ 0x7f0d4a8bd688> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE SimpleStmt . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4a8bd688>] and goto state 152
Result : <list @ 0x7f0d4a8bd4c8> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement . LexToken(SEMICOLON,';',56,33,1286)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',57,9,1296)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4a8bd488> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',57,9,1296)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8bd4c8>,';',<list @ 0x7f0d4a8bd488>] and goto state 151
Result : <list @ 0x7f0d4a8bd3c8> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList . LexToken(RBRACE,'}',57,9,1296)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',57,10,1297)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4a8bd3c8>,'}'] and goto state 394
Result : <list @ 0x7f0d4a8bd408> (['Block', ['{'], ['StatementList', ['Sta ...)
State)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4a8be408>,<list @ 0x7f0d4a8be288>,<list @ 0x7f0d4a8bd948>] and goto state 169
Result : <list @ 0x7f0d4a8bd788> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Assignment . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4a8bd788>] and goto state 155
Result : <list @ 0x7f0d4a8bd688> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE SimpleStmt . LexToken(SEMICOLON,';',56,33,1286)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4a8bd688>] and goto state 152
Result : <list @ 0x7f0d4a8bd4c8> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement . LexToken(SEMICOLON,';',56,33,1286)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',57,9,1296)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4a8bd488> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',57,9,1296)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8bd4c8>,';',<list @ 0x7f0d4a8bd488>] and goto state 151
Result : <list @ 0x7f0d4a8bd3c8> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList . LexToken(RBRACE,'}',57,9,1296)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',57,10,1297)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4a8bd3c8>,'}'] and goto state 394
Result : <list @ 0x7f0d4a8bd408> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 394
Defaulted state 394: Reduce using 227
  : 394
Defaulted state 394: Reduce using 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE Block . LexToken(SEMICOLON,';',57,10,1297)
Action : Reduce rule [else_stmt -> ELSE Block] with ['else',<list @ 0x7f0d4a8bd408>] and goto state 369
Result : <list @ 0x7f0d4a8bd088> (['else_stmt', ['else'], ['Block', ['{'], ...)
State  : 369
Defaulted state 369: Reduce using 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block else_stmt . LexToken(SEMICOLON,';',57,10,1297)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f0d4aa99e08>,<list @ 0x7f0d4a8bfe48>,<list @ 0x7f0d4a8bd088>] and goto state 162
Result : <list @ 0x7f0d4a8bd288> (['IfStmt', ['if'], ['Expr', ['Expr', ['U ...)
State  : 162
Defaulted state 162: Reduce using 186
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IfStmt . LexToken(SEMICOLON,';',57,10,1297)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f0d4a8bd288>] and goto state 152
Result : <list @ 0x7f0d4a8bca88> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',57,10,1297)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IDENT,'graph',58,9,1307)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IDENT . LexToken(LBRACK,'[',58,14,1312)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4a8bc9c8> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON OperandName . LexToken(LBRACK,'[',58,14,1312)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bc9c8>] and goto state 108
Result : <list @ 0x7f0d4a8bc808> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Operand . LexToken(LBRACK,'[',58,14,1312)
Action : ReStack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block ELSE Block . LexToken(SEMICOLON,';',57,10,1297)
Action : Reduce rule [else_stmt -> ELSE Block] with ['else',<list @ 0x7f0d4a8bd408>] and goto state 369
Result : <list @ 0x7f0d4a8bd088> (['else_stmt', ['else'], ['Block', ['{'], ...)
State  : 369
Defaulted state 369: Reduce using 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IF Expr Block else_stmt . LexToken(SEMICOLON,';',57,10,1297)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f0d4aa99e08>,<list @ 0x7f0d4a8bfe48>,<list @ 0x7f0d4a8bd088>] and goto state 162
Result : <list @ 0x7f0d4a8bd288> (['IfStmt', ['if'], ['Expr', ['Expr', ['U ...)
State  : 162
Defaulted state 162: Reduce using 186
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IfStmt . LexToken(SEMICOLON,';',57,10,1297)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f0d4a8bd288>] and goto state 152
Result : <list @ 0x7f0d4a8bca88> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',57,10,1297)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IDENT,'graph',58,9,1307)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IDENT . LexToken(LBRACK,'[',58,14,1312)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4a8bc9c8> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON OperandName . LexToken(LBRACK,'[',58,14,1312)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bc9c8>] and goto state 108
Result : <list @ 0x7f0d4a8bc808> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Operand . LexToken(LBRACK,'[',58,14,1312)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bc808>] and goto state 106
Result : <list @ 0x7f0d4a8bcfc8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(LBRACK,'[',58,14,1312)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK . LexToken(IDENT,'i',58,15,1313)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',58,16,1314)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a8bc948> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',58,16,1314)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bc948>] and goto state 108
Result : <list @ 0x7f0d4a8bcbc8> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',58,16,1314)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bcbc8>] and goto state 106
Result : <list @ 0x7f0d4a8bc888> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',58,16,1314)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8bc888>] and goto state 105
Result : <list @ 0x7f0d4a8bc988> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',58,16,1314)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8bc988>] and goto state 306
Result : <list @ 0x7f0d4a8bc548> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Fduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bc808>] and goto state 106
Result : <list @ 0x7f0d4a8bcfc8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(LBRACK,'[',58,14,1312)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK . LexToken(IDENT,'i',58,15,1313)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',58,16,1314)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a8bc948> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',58,16,1314)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bc948>] and goto state 108
Result : <list @ 0x7f0d4a8bcbc8> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',58,16,1314)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bcbc8>] and goto state 106
Result : <list @ 0x7f0d4a8bc888> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',58,16,1314)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8bc888>] and goto state 105
Result : <list @ 0x7f0d4a8bc988> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',58,16,1314)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8bc988>] and goto state 306
Result : <list @ 0x7f0d4a8bc548> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',58,16,1314)
OR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',58,16,1314)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',58,17,1315)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4a8bc548>,']'] and goto state 222
Result : <list @ 0x7f0d4a8bc408> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr Index . LexToken(PERIOD,'.',58,17,1315)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4a8bcfc8>,<list @ 0x7f0d4a8bc408>] and goto state 106
Result : <list @ 0x7f0d4a8bc688> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(PERIOD,'.',58,17,1315)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr PERIOD . LexToken(IDENT,'parent',58,18,1316)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',58,25,1323)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','parent'] and goto state 221
Result : <list @ 0x7f0d4a8bbf08> (['Selector', ['.'], ['parent']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr Selector . LexToken(ASSIGN,'=',58,25,1323)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4a8bc688>,<list @ 0x7f0d4a8bbf08>] and goto state 106
Result : <list @ 0x7f0d4a8bc088> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(ASSIGN,'=',58,25,1323)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8bc088>] and goto state 105
Result : <list @ 0x7f0d4a8bbbc8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON StAction : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',58,17,1315)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4a8bc548>,']'] and goto state 222
Result : <list @ 0x7f0d4a8bc408> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr Index . LexToken(PERIOD,'.',58,17,1315)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4a8bcfc8>,<list @ 0x7f0d4a8bc408>] and goto state 106
Result : <list @ 0x7f0d4a8bc688> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(PERIOD,'.',58,17,1315)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr PERIOD . LexToken(IDENT,'parent',58,18,1316)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',58,25,1323)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','parent'] and goto state 221
Result : <list @ 0x7f0d4a8bbf08> (['Selector', ['.'], ['parent']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr Selector . LexToken(ASSIGN,'=',58,25,1323)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4a8bc688>,<list @ 0x7f0d4a8bbf08>] and goto state 106
Result : <list @ 0x7f0d4a8bc088> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(ASSIGN,'=',58,25,1323)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8bc088>] and goto state 105
Result : <list @ 0x7f0d4a8bbbc8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON UnaryExpr . LexToken(ASSIGN,'=',58,25,1323)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8bbbc8>] and goto state 178
Result : <list @ 0x7f0d4a8bbb88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Expr . LexToken(ASSIGN,'=',58,25,1323)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a8bba88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Expr ExprOth . LexToken(ASSIGN,'=',58,25,1323)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a8bbb88>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4a8bbc08> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList . LexToken(ASSIGN,'=',58,25,1323)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList ASSIGN . LexToken(AND,'&',58,27,1325)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4a8bba48> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op . LexToken(AND,'&',58,27,1325)
Action : Shift and goto state 115
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op AND . LexToken(IDENT,'graph',58,28,1326)
Action : Reduce rule [UnaryOp -> AND] with ['&'] and goto state 107
Result : <list @ 0x7f0d4a8bb8c8> (['UnaryOp', ['&']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp . LexToken(IDENT,'graph',58,28,1326)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Expressionatement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON UnaryExpr . LexToken(ASSIGN,'=',58,25,1323)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8bbbc8>] and goto state 178
Result : <list @ 0x7f0d4a8bbb88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Expr . LexToken(ASSIGN,'=',58,25,1323)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a8bba88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Expr ExprOth . LexToken(ASSIGN,'=',58,25,1323)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a8bbb88>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4a8bbc08> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList . LexToken(ASSIGN,'=',58,25,1323)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList ASSIGN . LexToken(AND,'&',58,27,1325)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4a8bba48> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op . LexToken(AND,'&',58,27,1325)
Action : Shift and goto state 115
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op AND . LexToken(IDENT,'graph',58,28,1326)
Action : Reduce rule [UnaryOp -> AND] with ['&'] and goto state 107
Result : <list @ 0x7f0d4a8bb8c8> (['UnaryOp', ['&']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp . LexToken(IDENT,'graph',58,28,1326)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp IDENT . LexToken(LBRACK,'[',58,33,1331)
List assign_op UnaryOp IDENT . LexToken(LBRACK,'[',58,33,1331)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4a8bba08> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp OperandName . LexToken(LBRACK,'[',58,33,1331)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bba08>] and goto state 108
Result : <list @ 0x7f0d4a8bd388> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp Operand . LexToken(LBRACK,'[',58,33,1331)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bd388>] and goto state 106
Result : <list @ 0x7f0d4a8bb5c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr . LexToken(LBRACK,'[',58,33,1331)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK . LexToken(IDENT,'i',58,34,1332)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK IDENT . LexToken(QUO,'/',58,35,1333)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a8bb508> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK OperandName . LexToken(QUO,'/',58,35,1333)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bb508>] and goto state 108
Result : <list @ 0x7f0d4a8bb3c8> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Operand . LexToken(QUO,'/',58,35,1333)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bb3c8>] and goto state 106
Result : <list @ 0x7f0d4a8bb308> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLeveAction : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4a8bba08> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp OperandName . LexToken(LBRACK,'[',58,33,1331)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bba08>] and goto state 108
Result : <list @ 0x7f0d4a8bd388> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp Operand . LexToken(LBRACK,'[',58,33,1331)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bd388>] and goto state 106
Result : <list @ 0x7f0d4a8bb5c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr . LexToken(LBRACK,'[',58,33,1331)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK . LexToken(IDENT,'i',58,34,1332)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK IDENT . LexToken(QUO,'/',58,35,1333)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a8bb508> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK OperandName . LexToken(QUO,'/',58,35,1333)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8bb508>] and goto state 108
Result : <list @ 0x7f0d4a8bb3c8> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Operand . LexToken(QUO,'/',58,35,1333)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bb3c8>] and goto state 106
Result : <list @ 0x7f0d4a8bb308> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK PrimaryExpr . LexToken(QUO,'/',58,35,1333)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8bb308>] and goto state 105
Result : <list @ 0x7f0d4a8baf48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK UnaryExpr . LexToken(QUO,'/',58,35,1333)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8baf48>] and goto state 306
Result : <list @ 0x7f0d4a8bae08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr . LexToken(QUO,'/',58,35,1333)
Action : Shift and goto state 215
State  : 215
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr QUO . LexToken(INT,'2',58,36,1334)
Action : Reduce rule [MulOp -> QUO] with ['/'] and goto state 203
Result : <list @ 0x7f0d4a8babc8> (['MulOp', ['/']])
State  : 203
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr MulOp . LexToken(INT,'2',58,36,1334)
Action : Reduce rule [BinOp -> MulOp] with [<list @ 0x7f0d4a8babc8>] and goto state 198
Result : <list @ 0x7f0d4a8bae88> (['BinOp', ['MulOp', ['/']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp . LexToken(INT,'2',58,36,1334)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp INT . LexToken(RBRACK,']',58,37,1335)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 120
Result : <list @ 0x7f0d4a8baa88> (['BasicLit', ['2']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON StatementlDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK PrimaryExpr . LexToken(QUO,'/',58,35,1333)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8bb308>] and goto state 105
Result : <list @ 0x7f0d4a8baf48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK UnaryExpr . LexToken(QUO,'/',58,35,1333)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8baf48>] and goto state 306
Result : <list @ 0x7f0d4a8bae08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr . LexToken(QUO,'/',58,35,1333)
Action : Shift and goto state 215
State  : 215
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr QUO . LexToken(INT,'2',58,36,1334)
Action : Reduce rule [MulOp -> QUO] with ['/'] and goto state 203
Result : <list @ 0x7f0d4a8babc8> (['MulOp', ['/']])
State  : 203
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr MulOp . LexToken(INT,'2',58,36,1334)
Action : Reduce rule [BinOp -> MulOp] with [<list @ 0x7f0d4a8babc8>] and goto state 198
Result : <list @ 0x7f0d4a8bae88> (['BinOp', ['MulOp', ['/']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp . LexToken(INT,'2',58,36,1334)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp INT . LexToken(RBRACK,']',58,37,1335)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 120
Result : <list @ 0x7f0d4a8baa88> (['BasicLit', ['2']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp BasicLit . LexToken(RBRACK,']',58,37,1335)
 SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp BasicLit . LexToken(RBRACK,']',58,37,1335)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4a8baa88>] and goto state 116
Result : <list @ 0x7f0d4a8ba948> (['Lit', ['BasicLit', ['2']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Lit . LexToken(RBRACK,']',58,37,1335)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4a8ba948>] and goto state 108
Result : <list @ 0x7f0d4a8bb7c8> (['Operand', ['Lit', ['BasicLit', ['2']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Operand . LexToken(RBRACK,']',58,37,1335)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bb7c8>] and goto state 106
Result : <list @ 0x7f0d4a8ba848> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp PrimaryExpr . LexToken(RBRACK,']',58,37,1335)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8ba848>] and goto state 105
Result : <list @ 0x7f0d4a8ba448> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp UnaryExpr . LexToken(RBRACK,']',58,37,1335)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8ba448>] and goto state 304
Result : <list @ 0x7f0d4a8ba4c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr . LexToken(RBRACK,']',58,37,1335)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4a8bae08>,<list @ 0x7f0d4a8bae88>,<list @ 0x7f0d4a8ba4c8>] and goto state 306
Result : <list @ 0x7f0d4a8ba2c8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',58,37,1335)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SAction : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4a8baa88>] and goto state 116
Result : <list @ 0x7f0d4a8ba948> (['Lit', ['BasicLit', ['2']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Lit . LexToken(RBRACK,']',58,37,1335)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4a8ba948>] and goto state 108
Result : <list @ 0x7f0d4a8bb7c8> (['Operand', ['Lit', ['BasicLit', ['2']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Operand . LexToken(RBRACK,']',58,37,1335)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8bb7c8>] and goto state 106
Result : <list @ 0x7f0d4a8ba848> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp PrimaryExpr . LexToken(RBRACK,']',58,37,1335)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8ba848>] and goto state 105
Result : <list @ 0x7f0d4a8ba448> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp UnaryExpr . LexToken(RBRACK,']',58,37,1335)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8ba448>] and goto state 304
Result : <list @ 0x7f0d4a8ba4c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr BinOp Expr . LexToken(RBRACK,']',58,37,1335)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4a8bae08>,<list @ 0x7f0d4a8bae88>,<list @ 0x7f0d4a8ba4c8>] and goto state 306
Result : <list @ 0x7f0d4a8ba2c8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',58,37,1335)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr RBRACK . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4a8ba2c8>,']'] and goto state 222
Result : <list @ 0x7f0d4a8ba248> (['Index', ['['], ['Expr', ['Expr', ['Una ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr Index . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4a8bb5c8>,<list @ 0x7f0d4a8ba248>] and goto state 106
Result : <list @ 0x7f0d4a8b9f08> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8b9f08>] and goto state 228
Result : <list @ 0x7f0d4a8b9e48> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp UnaryExpr . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4a8bb8c8>,<list @ 0x7f0d4a8b9e48>] and goto state 105
Result : <list @ 0x7f0d4a8b9d08> (['UnaryExpr', ['UnaryOp', ['&']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8b9d08>] and goto state 146
Result : <list @ 0x7f0d4a8b9808> (['Expr', ['UnaryExpr', ['UnaryOp', ['&'] ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Expr . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a8b9c88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a8b9808>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4a8b9548> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement EMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr LBRACK Expr RBRACK . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4a8ba2c8>,']'] and goto state 222
Result : <list @ 0x7f0d4a8ba248> (['Index', ['['], ['Expr', ['Expr', ['Una ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr Index . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4a8bb5c8>,<list @ 0x7f0d4a8ba248>] and goto state 106
Result : <list @ 0x7f0d4a8b9f08> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp PrimaryExpr . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8b9f08>] and goto state 228
Result : <list @ 0x7f0d4a8b9e48> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryOp UnaryExpr . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4a8bb8c8>,<list @ 0x7f0d4a8b9e48>] and goto state 105
Result : <list @ 0x7f0d4a8b9d08> (['UnaryExpr', ['UnaryOp', ['&']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8b9d08>] and goto state 146
Result : <list @ 0x7f0d4a8b9808> (['Expr', ['UnaryExpr', ['UnaryOp', ['&'] ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Expr . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a8b9c88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a8b9808>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4a8b9548> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',58,38,1336)
SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4a8bbc08>,<list @ 0x7f0d4a8bba48>,<list @ 0x7f0d4a8b9548>] and goto state 169
Result : <list @ 0x7f0d4a8b9a08> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Assignment . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4a8b9a08>] and goto state 155
Result : <list @ 0x7f0d4a8ba888> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4a8ba888>] and goto state 152
Result : <list @ 0x7f0d4a8b9888> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',58,38,1336)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4a8b9688> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8b9888>,';',<list @ 0x7f0d4a8b9688>] and goto state 332
Result : <list @ 0x7f0d4a8b9108> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8bca88>,';',<list @ 0x7f0d4a8b9108>] and goto state 332
Result : <list @ 0x7f0d4a8b9148> (['StatementList', ['Statement', ['IfStmt ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4a8bbc08>,<list @ 0x7f0d4a8bba48>,<list @ 0x7f0d4a8b9548>] and goto state 169
Result : <list @ 0x7f0d4a8b9a08> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Assignment . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4a8b9a08>] and goto state 155
Result : <list @ 0x7f0d4a8ba888> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',58,38,1336)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4a8ba888>] and goto state 152
Result : <list @ 0x7f0d4a8b9888> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',58,38,1336)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4a8b9688> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8b9888>,';',<list @ 0x7f0d4a8b9688>] and goto state 332
Result : <list @ 0x7f0d4a8b9108> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8bca88>,';',<list @ 0x7f0d4a8b9108>] and goto state 332
Result : <list @ 0x7f0d4a8b9148> (['StatementList', ['Statement', ['IfStmt ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa9bcc8>,';',<list @ 0x7f0d4a8b9148>] and goto state 332
Result : <list @ 0x7f0d4a8b8e48> (['StatementList', ['Statement', ['IfStmt ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aaac708>,';',<list @ 0x7f0d4a8b8e48>] and goto state 332
Result : <list @ 0x7f0d4a8b8f48> (['StatementList', ['Statement', ['IfStmt ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa98048>,';',<list @ 0x7f0d4a8b8f48>] and goto state 332
Result : <list @ 0x7f0d4a8b8548> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aaa52c8>,';',<list @ 0x7f0d4a8b8548>] and goto state 151
Result : <list @ 0x7f0d4a8b8488> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',59,6,1343)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4a8b8488>,'}'] and goto state 338
Result : <list @ 0x7f0d4a8b8348> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 338
Defaulted state 338: Reduce using 254
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause Block . LexToken(SEMICOLON,';',59,6,1343)
Action : Reduce rule [ForStmt -> FOR ForClause Block] with ['for',<list @ 0x7f0d4aa96d48>,<list @ 0x7f0d4a8b8348>] and goto state 164
Result : <list @ 0x7f0d4a8b82c8> (['ForStmt', ['for'], ['ForClause', ['Ini ...)
State  : 164
Defaulted state 164: Reduce using 188
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ForStmt . LexToken(SEMICOLON,';',59,6,1343)
Action : Reduce rule [Statement -> ForStmt] with [<list @ 0x7f0d4a8b82c8>] and goto state 152
Result : <list @ 0x7f0d4a8b8b88> (['Statement', ['ForStmt', ['for'], ['For ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',59,6,1343)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionNa<list @ 0x7f0d4aa9bcc8>,';',<list @ 0x7f0d4a8b9148>] and goto state 332
Result : <list @ 0x7f0d4a8b8e48> (['StatementList', ['Statement', ['IfStmt ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aaac708>,';',<list @ 0x7f0d4a8b8e48>] and goto state 332
Result : <list @ 0x7f0d4a8b8f48> (['StatementList', ['Statement', ['IfStmt ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa98048>,';',<list @ 0x7f0d4a8b8f48>] and goto state 332
Result : <list @ 0x7f0d4a8b8548> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aaa52c8>,';',<list @ 0x7f0d4a8b8548>] and goto state 151
Result : <list @ 0x7f0d4a8b8488> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE StatementList . LexToken(RBRACE,'}',59,5,1342)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',59,6,1343)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4a8b8488>,'}'] and goto state 338
Result : <list @ 0x7f0d4a8b8348> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 338
Defaulted state 338: Reduce using 254
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause Block . LexToken(SEMICOLON,';',59,6,1343)
Action : Reduce rule [ForStmt -> FOR ForClause Block] with ['for',<list @ 0x7f0d4aa96d48>,<list @ 0x7f0d4a8b8348>] and goto state 164
Result : <list @ 0x7f0d4a8b82c8> (['ForStmt', ['for'], ['ForClause', ['Ini ...)
State  : 164
Defaulted state 164: Reduce using 188
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ForStmt . LexToken(SEMICOLON,';',59,6,1343)
Action : Reduce rule [Statement -> ForStmt] with [<list @ 0x7f0d4a8b82c8>] and goto state 152
Result : <list @ 0x7f0d4a8b8b88> (['Statement', ['ForStmt', ['for'], ['For ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',59,6,1343)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IDENT,'graph',60,5,1349)
me Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IDENT,'graph',60,5,1349)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IDENT . LexToken(LBRACK,'[',60,10,1354)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4a8b8cc8> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON OperandName . LexToken(LBRACK,'[',60,10,1354)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8b8cc8>] and goto state 108
Result : <list @ 0x7f0d4a8b8248> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Operand . LexToken(LBRACK,'[',60,10,1354)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8b8248>] and goto state 106
Result : <list @ 0x7f0d4a8b8408> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(LBRACK,'[',60,10,1354)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK . LexToken(INT,'1',60,11,1355)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK INT . LexToken(RBRACK,']',60,12,1356)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4a8b8208> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK BasicLit . LexToken(RBRACK,']',60,12,1356)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4a8b8208>] and goto state 116
Result : <list @ 0x7f0d4a8b8648> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Lit . LexToken(RBRACK,']',60,12,1356)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4a8b8648>] and goto state 108
Result : <list @ 0x7f0d4a8b7ec8> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',60,12,1356)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8b7ec8>] and goto state 106
Result : <list @ 0x7f0d4a8b7b08> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PAction : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IDENT . LexToken(LBRACK,'[',60,10,1354)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4a8b8cc8> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON OperandName . LexToken(LBRACK,'[',60,10,1354)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a8b8cc8>] and goto state 108
Result : <list @ 0x7f0d4a8b8248> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Operand . LexToken(LBRACK,'[',60,10,1354)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8b8248>] and goto state 106
Result : <list @ 0x7f0d4a8b8408> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(LBRACK,'[',60,10,1354)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK . LexToken(INT,'1',60,11,1355)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK INT . LexToken(RBRACK,']',60,12,1356)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4a8b8208> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK BasicLit . LexToken(RBRACK,']',60,12,1356)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4a8b8208>] and goto state 116
Result : <list @ 0x7f0d4a8b8648> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Lit . LexToken(RBRACK,']',60,12,1356)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4a8b8648>] and goto state 108
Result : <list @ 0x7f0d4a8b7ec8> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',60,12,1356)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8b7ec8>] and goto state 106
Result : <list @ 0x7f0d4a8b7b08> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',60,12,1356)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8b7b08>] and goto state 105
Result : <list @ 0x7f0d4a8b7e08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',60,12,1356)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8b7e08>] and goto state 306
Result : <list @ 0x7f0d4a8b78c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',60,12,1356)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',60,13,1357)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4a8b78c8>,']'] and goto state 222
Result : <list @ 0x7f0d4a8b7608> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr Index . LexToken(PERIOD,'.',60,13,1357)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4a8b8408>,<list @ 0x7f0d4a8b7608>] and goto state 106
Result : <list @ 0x7f0d4a8b74c8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(PERIOD,'.',60,13,1357)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr PERIOD . LexToken(IDENT,'parent',60,14,1358)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',60,21,1365)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','parent'] and goto state 221
Result : <list @ 0x7f0d4a8b7508> (['Selector', ['.'], ['parent']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr Selector . LexToken(ASSIGN,'=',60,21,1365)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4a8b74c8>,<list @ 0x7f0d4a8b7508>] and goto state 106
Result : <list @ 0x7f0d4a8b70c8> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(ASSIGN,'=',60,21,1365)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8b70c8>] and goto state 105
Result : <list @ 0x7f0d4a936f88> (rimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',60,12,1356)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8b7b08>] and goto state 105
Result : <list @ 0x7f0d4a8b7e08> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',60,12,1356)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8b7e08>] and goto state 306
Result : <list @ 0x7f0d4a8b78c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',60,12,1356)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',60,13,1357)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4a8b78c8>,']'] and goto state 222
Result : <list @ 0x7f0d4a8b7608> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr Index . LexToken(PERIOD,'.',60,13,1357)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4a8b8408>,<list @ 0x7f0d4a8b7608>] and goto state 106
Result : <list @ 0x7f0d4a8b74c8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(PERIOD,'.',60,13,1357)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr PERIOD . LexToken(IDENT,'parent',60,14,1358)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr PERIOD IDENT . LexToken(ASSIGN,'=',60,21,1365)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','parent'] and goto state 221
Result : <list @ 0x7f0d4a8b7508> (['Selector', ['.'], ['parent']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr Selector . LexToken(ASSIGN,'=',60,21,1365)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4a8b74c8>,<list @ 0x7f0d4a8b7508>] and goto state 106
Result : <list @ 0x7f0d4a8b70c8> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(ASSIGN,'=',60,21,1365)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8b70c8>] and goto state 105
Result : <list @ 0x7f0d4a936f88> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON UnaryExpr . LexToken(ASSIGN,'=',60,21,1365)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a936f88>] and goto state 178
Result : <list @ 0x7f0d4a936e88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Expr . LexToken(ASSIGN,'=',60,21,1365)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a936b88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Expr ExprOth . LexToken(ASSIGN,'=',60,21,1365)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a936e88>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4a9368c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList . LexToken(ASSIGN,'=',60,21,1365)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList ASSIGN . LexToken(IDENT,'nil',60,23,1367)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4a936a88> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op . LexToken(IDENT,'nil',60,23,1367)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op IDENT . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [OperandName -> IDENT] with ['nil'] and goto state 117
Result : <list @ 0x7f0d4a936f48> (['OperandName', ['nil']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op OperandName . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a936f48>] and goto state 108
Result : <list @ 0x7f0d4a936488> (['Operand', ['OperandName', ['nil']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Operand . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a936488>] and goto state 106
Result : <list @ 0x7f0d4a936e08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpState  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON UnaryExpr . LexToken(ASSIGN,'=',60,21,1365)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a936f88>] and goto state 178
Result : <list @ 0x7f0d4a936e88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Expr . LexToken(ASSIGN,'=',60,21,1365)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a936b88> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Expr ExprOth . LexToken(ASSIGN,'=',60,21,1365)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a936e88>,['ExprOth']] and goto state 173
Result : <list @ 0x7f0d4a9368c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 173
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList . LexToken(ASSIGN,'=',60,21,1365)
Action : Shift and goto state 270
State  : 270
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList ASSIGN . LexToken(IDENT,'nil',60,23,1367)
Action : Reduce rule [assign_op -> ASSIGN] with ['='] and goto state 267
Result : <list @ 0x7f0d4a936a88> (['assign_op', ['=']])
State  : 267
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op . LexToken(IDENT,'nil',60,23,1367)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op IDENT . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [OperandName -> IDENT] with ['nil'] and goto state 117
Result : <list @ 0x7f0d4a936f48> (['OperandName', ['nil']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op OperandName . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a936f48>] and goto state 108
Result : <list @ 0x7f0d4a936488> (['Operand', ['OperandName', ['nil']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Operand . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a936488>] and goto state 106
Result : <list @ 0x7f0d4a936e08> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a936e08>] and goto state 105
Result : <list @ 0x7f0d4a936288> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a936288>] and goto state 146
Result : <list @ 0x7f0d4a9361c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Expr . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a935ec8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a9361c8>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4a935fc8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4a9368c8>,<list @ 0x7f0d4a936a88>,<list @ 0x7f0d4a935fc8>] and goto state 169
Result : <list @ 0x7f0d4a935d08> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Assignment . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4a935d08>] and goto state 155
Result : <list @ 0x7f0d4a935c08> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4a935c08>] and goto state 152
Result : <list @ 0x7f0d4a935a88> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',60,26,1370)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IDENT,'visit',62,5,1415)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOressionList assign_op PrimaryExpr . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a936e08>] and goto state 105
Result : <list @ 0x7f0d4a936288> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op UnaryExpr . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a936288>] and goto state 146
Result : <list @ 0x7f0d4a9361c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Expr . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a935ec8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op Expr ExprOth . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a9361c8>,['ExprOth']] and goto state 334
Result : <list @ 0x7f0d4a935fc8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 334
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionList assign_op ExpressionList . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [Assignment -> ExpressionList assign_op ExpressionList] with [<list @ 0x7f0d4a9368c8>,<list @ 0x7f0d4a936a88>,<list @ 0x7f0d4a935fc8>] and goto state 169
Result : <list @ 0x7f0d4a935d08> (['Assignment', ['ExpressionList', ['Expr ...)
State  : 169
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Assignment . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [SimpleStmt -> Assignment] with [<list @ 0x7f0d4a935d08>] and goto state 155
Result : <list @ 0x7f0d4a935c08> (['SimpleStmt', ['Assignment', ['Expressi ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',60,26,1370)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4a935c08>] and goto state 152
Result : <list @ 0x7f0d4a935a88> (['Statement', ['SimpleStmt', ['Assignmen ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',60,26,1370)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(IDENT,'visit',62,5,1415)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON IDENT . LexToken(LPAREN,'(',62,10,1420)
LON Statement SEMICOLON Statement SEMICOLON IDENT . LexToken(LPAREN,'(',62,10,1420)
Action : Reduce rule [OperandName -> IDENT] with ['visit'] and goto state 117
Result : <list @ 0x7f0d4a935988> (['OperandName', ['visit']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON OperandName . LexToken(LPAREN,'(',62,10,1420)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a935988>] and goto state 108
Result : <list @ 0x7f0d4a8b92c8> (['Operand', ['OperandName', ['visit']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Operand . LexToken(LPAREN,'(',62,10,1420)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8b92c8>] and goto state 106
Result : <list @ 0x7f0d4a935548> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(LPAREN,'(',62,10,1420)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN . LexToken(AND,'&',62,11,1421)
Action : Shift and goto state 115
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN AND . LexToken(IDENT,'graph',62,12,1422)
Action : Reduce rule [UnaryOp -> AND] with ['&'] and goto state 107
Result : <list @ 0x7f0d4a9358c8> (['UnaryOp', ['&']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp . LexToken(IDENT,'graph',62,12,1422)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp IDENT . LexToken(LBRACK,'[',62,17,1427)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4a935208> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp OperandName . LexToken(LBRACK,'[',62,17,1427)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a935208>] and goto state 108
Result : <list @ 0x7f0d4a935148> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp Operand . LexToken(LBRACK,'[',62,17,1427)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a935148>] and goto state 106
Result : <list @ 0x7f0d4a9350c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack Action : Reduce rule [OperandName -> IDENT] with ['visit'] and goto state 117
Result : <list @ 0x7f0d4a935988> (['OperandName', ['visit']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON OperandName . LexToken(LPAREN,'(',62,10,1420)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a935988>] and goto state 108
Result : <list @ 0x7f0d4a8b92c8> (['Operand', ['OperandName', ['visit']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Operand . LexToken(LPAREN,'(',62,10,1420)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a8b92c8>] and goto state 106
Result : <list @ 0x7f0d4a935548> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(LPAREN,'(',62,10,1420)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN . LexToken(AND,'&',62,11,1421)
Action : Shift and goto state 115
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN AND . LexToken(IDENT,'graph',62,12,1422)
Action : Reduce rule [UnaryOp -> AND] with ['&'] and goto state 107
Result : <list @ 0x7f0d4a9358c8> (['UnaryOp', ['&']])
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp . LexToken(IDENT,'graph',62,12,1422)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp IDENT . LexToken(LBRACK,'[',62,17,1427)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4a935208> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp OperandName . LexToken(LBRACK,'[',62,17,1427)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a935208>] and goto state 108
Result : <list @ 0x7f0d4a935148> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp Operand . LexToken(LBRACK,'[',62,17,1427)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a935148>] and goto state 106
Result : <list @ 0x7f0d4a9350c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr . LexToken(LBRACK,'[',62,17,1427)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK . LexToken(INT,'1',62,18,1428)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK INT . LexToken(RBRACK,']',62,19,1429)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4a934f88> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK BasicLit . LexToken(RBRACK,']',62,19,1429)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4a934f88>] and goto state 116
Result : <list @ 0x7f0d4a934e48> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK Lit . LexToken(RBRACK,']',62,19,1429)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4a934e48>] and goto state 108
Result : <list @ 0x7f0d4a934c48> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',62,19,1429)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a934c48>] and goto state 106
Result : <list @ 0x7f0d4a934c88> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',62,19,1429)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a934c88>] and goto state 105
Result : <list @ 0x7f0d4a934a88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',62,19,1429)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a934a88>] and goto state 306
Result : <list @ 0x7f0d4a934988> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr . LexToken(LBRACK,'[',62,17,1427)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK . LexToken(INT,'1',62,18,1428)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK INT . LexToken(RBRACK,']',62,19,1429)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4a934f88> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK BasicLit . LexToken(RBRACK,']',62,19,1429)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4a934f88>] and goto state 116
Result : <list @ 0x7f0d4a934e48> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK Lit . LexToken(RBRACK,']',62,19,1429)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4a934e48>] and goto state 108
Result : <list @ 0x7f0d4a934c48> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',62,19,1429)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a934c48>] and goto state 106
Result : <list @ 0x7f0d4a934c88> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',62,19,1429)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a934c88>] and goto state 105
Result : <list @ 0x7f0d4a934a88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',62,19,1429)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a934a88>] and goto state 306
Result : <list @ 0x7f0d4a934988> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',62,19,1429)
 LBRACK Expr . LexToken(RBRACK,']',62,19,1429)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK Expr RBRACK . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4a934988>,']'] and goto state 222
Result : <list @ 0x7f0d4a934888> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr Index . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4a9350c8>,<list @ 0x7f0d4a934888>] and goto state 106
Result : <list @ 0x7f0d4a934688> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a934688>] and goto state 228
Result : <list @ 0x7f0d4a934488> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp UnaryExpr . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4a9358c8>,<list @ 0x7f0d4a934488>] and goto state 105
Result : <list @ 0x7f0d4a934a08> (['UnaryExpr', ['UnaryOp', ['&']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a934a08>] and goto state 146
Result : <list @ 0x7f0d4a934748> (['Expr', ['UnaryExpr', ['UnaryOp', ['&'] ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a934088> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a934748>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4a934188> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',62,20,1430)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevAction : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr LBRACK Expr RBRACK . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4a934988>,']'] and goto state 222
Result : <list @ 0x7f0d4a934888> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr Index . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4a9350c8>,<list @ 0x7f0d4a934888>] and goto state 106
Result : <list @ 0x7f0d4a934688> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp PrimaryExpr . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a934688>] and goto state 228
Result : <list @ 0x7f0d4a934488> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryOp UnaryExpr . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [UnaryExpr -> UnaryOp UnaryExpr] with [<list @ 0x7f0d4a9358c8>,<list @ 0x7f0d4a934488>] and goto state 105
Result : <list @ 0x7f0d4a934a08> (['UnaryExpr', ['UnaryOp', ['&']], ['Unar ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a934a08>] and goto state 146
Result : <list @ 0x7f0d4a934748> (['Expr', ['UnaryExpr', ['UnaryOp', ['&'] ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a934088> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',62,20,1430)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a934748>,['ExprOth']] and goto state 309
Result : <list @ 0x7f0d4a934188> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',62,20,1430)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4a934188>,')'] and goto state 224
Result : <list @ 0x7f0d4a934448> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr Arguments . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4a935548>,<list @ 0x7f0d4a934448>] and goto state 106
Result : <list @ 0x7f0d4a933c08> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a933c08>] and goto state 105
Result : <list @ 0x7f0d4a933dc8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON UnaryExpr . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a933dc8>] and goto state 178
Result : <list @ 0x7f0d4a933d88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Expr . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [ExpressionStmt -> Expr] with [<list @ 0x7f0d4a933d88>] and goto state 167
Result : <list @ 0x7f0d4a933b08> (['ExpressionStmt', ['Expr', ['UnaryExpr' ...)
State  : 167
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionStmt . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [SimpleStmt -> ExpressionStmt] with [<list @ 0x7f0d4a933b08>] and goto state 155
Result : <list @ 0x7f0d4a933888> (['SimpleStmt', ['ExpressionStmt', ['Expr ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4a933888>] and goto state 152
Result : <list @ 0x7f0d4a933a88> (['Statement', ['SimpleStmt', ['Expressio ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',62,21,1431)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexTokeelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4a934188>,')'] and goto state 224
Result : <list @ 0x7f0d4a934448> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr Arguments . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4a935548>,<list @ 0x7f0d4a934448>] and goto state 106
Result : <list @ 0x7f0d4a933c08> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON PrimaryExpr . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a933c08>] and goto state 105
Result : <list @ 0x7f0d4a933dc8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON UnaryExpr . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a933dc8>] and goto state 178
Result : <list @ 0x7f0d4a933d88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Expr . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [ExpressionStmt -> Expr] with [<list @ 0x7f0d4a933d88>] and goto state 167
Result : <list @ 0x7f0d4a933b08> (['ExpressionStmt', ['Expr', ['UnaryExpr' ...)
State  : 167
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ExpressionStmt . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [SimpleStmt -> ExpressionStmt] with [<list @ 0x7f0d4a933b08>] and goto state 155
Result : <list @ 0x7f0d4a933888> (['SimpleStmt', ['ExpressionStmt', ['Expr ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',62,21,1431)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4a933888>] and goto state 152
Result : <list @ 0x7f0d4a933a88> (['Statement', ['SimpleStmt', ['Expressio ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',62,21,1431)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(FOR,'for',64,5,1465)
n(FOR,'for',64,5,1465)
Action : Shift and goto state 181
State  : 181
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR . LexToken(IDENT,'i',64,9,1469)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IDENT . LexToken(DEFINE,':=',64,11,1471)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a933848> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IDENT IdentifierOth . LexToken(DEFINE,':=',64,11,1471)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['i',<list @ 0x7f0d4a933848>] and goto state 297
Result : <list @ 0x7f0d4a9335c8> (['IdentifierList', ['i'], ['IdentifierOt ...)
State  : 297
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList . LexToken(DEFINE,':=',64,11,1471)
Action : Shift and goto state 343
State  : 343
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE . LexToken(INT,'1',64,14,1474)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE INT . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4a933688> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE BasicLit . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4a933688>] and goto state 116
Result : <list @ 0x7f0d4a933908> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Lit . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4a933908>] and goto state 108
Result : <list @ 0x7f0d4a933448> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Operand . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a933448>] and goto state 106
Result : <list @ 0x7f0d4a933Action : Shift and goto state 181
State  : 181
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR . LexToken(IDENT,'i',64,9,1469)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IDENT . LexToken(DEFINE,':=',64,11,1471)
Action : Reduce rule [IdentifierOth -> <empty>] with [] and goto state 71
Result : <list @ 0x7f0d4a933848> (['IdentifierOth'])
State  : 71
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IDENT IdentifierOth . LexToken(DEFINE,':=',64,11,1471)
Action : Reduce rule [IdentifierList -> IDENT IdentifierOth] with ['i',<list @ 0x7f0d4a933848>] and goto state 297
Result : <list @ 0x7f0d4a9335c8> (['IdentifierList', ['i'], ['IdentifierOt ...)
State  : 297
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList . LexToken(DEFINE,':=',64,11,1471)
Action : Shift and goto state 343
State  : 343
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE . LexToken(INT,'1',64,14,1474)
Action : Shift and goto state 126
State  : 126
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE INT . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 120
Result : <list @ 0x7f0d4a933688> (['BasicLit', ['1']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE BasicLit . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4a933688>] and goto state 116
Result : <list @ 0x7f0d4a933908> (['Lit', ['BasicLit', ['1']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Lit . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4a933908>] and goto state 108
Result : <list @ 0x7f0d4a933448> (['Operand', ['Lit', ['BasicLit', ['1']]] ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Operand . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a933448>] and goto state 106
Result : <list @ 0x7f0d4a9337c8> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE PrimaryExpr . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a9337c8>] and goto state 105
Result : <list @ 0x7f0d4a933348> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE UnaryExpr . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a933348>] and goto state 146
Result : <list @ 0x7f0d4a933048> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Expr . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a9330c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Expr ExprOth . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a933048>,['ExprOth']] and goto state 344
Result : <list @ 0x7f0d4a932bc8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 344
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE ExpressionList . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [ShortVarDecl -> IdentifierList DEFINE ExpressionList] with [<list @ 0x7f0d4a9335c8>,':=',<list @ 0x7f0d4a932bc8>] and goto state 170
Result : <list @ 0x7f0d4a932d08> (['ShortVarDecl', ['IdentifierList', ['i' ...)
State  : 170
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ShortVarDecl . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [SimpleStmt -> ShortVarDecl] with [<list @ 0x7f0d4a932d08>] and goto state 295
Result : <list @ 0x7f0d4a932d88> (['SimpleStmt', ['ShortVarDecl', ['Identi ...)
State  : 295
Defaulted state 295: Reduce using 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR SimpleStmt . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [InitStmt -> SimpleStmt] with [<list @ 0x7f0d4a932d88>] and goto state 293
Result : <list @ 0x7f0d4a9329c8> (['InitStmt', ['SimpleStmt', ['ShortVarDe ...)
State  : 293
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt . Lex7c8> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE PrimaryExpr . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a9337c8>] and goto state 105
Result : <list @ 0x7f0d4a933348> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE UnaryExpr . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a933348>] and goto state 146
Result : <list @ 0x7f0d4a933048> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Expr . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 258
Result : <list @ 0x7f0d4a9330c8> (['ExprOth'])
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE Expr ExprOth . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a933048>,['ExprOth']] and goto state 344
Result : <list @ 0x7f0d4a932bc8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 344
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR IdentifierList DEFINE ExpressionList . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [ShortVarDecl -> IdentifierList DEFINE ExpressionList] with [<list @ 0x7f0d4a9335c8>,':=',<list @ 0x7f0d4a932bc8>] and goto state 170
Result : <list @ 0x7f0d4a932d08> (['ShortVarDecl', ['IdentifierList', ['i' ...)
State  : 170
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ShortVarDecl . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [SimpleStmt -> ShortVarDecl] with [<list @ 0x7f0d4a932d08>] and goto state 295
Result : <list @ 0x7f0d4a932d88> (['SimpleStmt', ['ShortVarDecl', ['Identi ...)
State  : 295
Defaulted state 295: Reduce using 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR SimpleStmt . LexToken(SEMICOLON,';',64,15,1475)
Action : Reduce rule [InitStmt -> SimpleStmt] with [<list @ 0x7f0d4a932d88>] and goto state 293
Result : <list @ 0x7f0d4a9329c8> (['InitStmt', ['SimpleStmt', ['ShortVarDe ...)
State  : 293
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt . LexToken(SEMICOLON,';',64,15,1475)
Token(SEMICOLON,';',64,15,1475)
Action : Shift and goto state 340
State  : 340
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON . LexToken(IDENT,'i',64,17,1477)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON IDENT . LexToken(LEQ,'<=',64,18,1478)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a932c88> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON OperandName . LexToken(LEQ,'<=',64,18,1478)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a932c88>] and goto state 108
Result : <list @ 0x7f0d4a932c48> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Operand . LexToken(LEQ,'<=',64,18,1478)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a932c48>] and goto state 106
Result : <list @ 0x7f0d4a9328c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON PrimaryExpr . LexToken(LEQ,'<=',64,18,1478)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a9328c8>] and goto state 105
Result : <list @ 0x7f0d4a932988> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON UnaryExpr . LexToken(LEQ,'<=',64,18,1478)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a932988>] and goto state 374
Result : <list @ 0x7f0d4a932848> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 374
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr . LexToken(LEQ,'<=',64,18,1478)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr LEQ . LexToken(IDENT,'n',64,20,1480)
Action : Reduce rule [RelOp -> LEQ] with ['<='] and goto state 201
Result : <list @ 0x7f0d4a9326c8> (['RelOp', ['<=']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR Action : Shift and goto state 340
State  : 340
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON . LexToken(IDENT,'i',64,17,1477)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON IDENT . LexToken(LEQ,'<=',64,18,1478)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a932c88> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON OperandName . LexToken(LEQ,'<=',64,18,1478)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a932c88>] and goto state 108
Result : <list @ 0x7f0d4a932c48> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Operand . LexToken(LEQ,'<=',64,18,1478)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a932c48>] and goto state 106
Result : <list @ 0x7f0d4a9328c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON PrimaryExpr . LexToken(LEQ,'<=',64,18,1478)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a9328c8>] and goto state 105
Result : <list @ 0x7f0d4a932988> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON UnaryExpr . LexToken(LEQ,'<=',64,18,1478)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a932988>] and goto state 374
Result : <list @ 0x7f0d4a932848> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 374
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr . LexToken(LEQ,'<=',64,18,1478)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr LEQ . LexToken(IDENT,'n',64,20,1480)
Action : Reduce rule [RelOp -> LEQ] with ['<='] and goto state 201
Result : <list @ 0x7f0d4a9326c8> (['RelOp', ['<=']])
State  : 201
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr RelOp . LexToken(IDENT,'n',64,20,1480)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4a9326c8>] and goto state 198
Result : <list @ 0x7f0d4a9323c8> (['BinOp', ['RelOp', ['<=']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp . LexToken(IDENT,'n',64,20,1480)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp IDENT . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [OperandName -> IDENT] with ['n'] and goto state 117
Result : <list @ 0x7f0d4a9325c8> (['OperandName', ['n']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp OperandName . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a9325c8>] and goto state 108
Result : <list @ 0x7f0d4a9322c8> (['Operand', ['OperandName', ['n']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp Operand . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a9322c8>] and goto state 106
Result : <list @ 0x7f0d4a932288> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp PrimaryExpr . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a932288>] and goto state 105
Result : <list @ 0x7f0d4a9321c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp UnaryExpr . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a9321c8>] and goto state 304
Result : <list @ 0x7f0d4a932148> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp Expr . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4a932848>,<list @ 0x7f0d4a9323c8>,<list @ 0x7f0d4a932148>] and goto state 374
Result : <list @ 0x7f0d4a932088> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 374
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEInitStmt SEMICOLON Expr RelOp . LexToken(IDENT,'n',64,20,1480)
Action : Reduce rule [BinOp -> RelOp] with [<list @ 0x7f0d4a9326c8>] and goto state 198
Result : <list @ 0x7f0d4a9323c8> (['BinOp', ['RelOp', ['<=']]])
State  : 198
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp . LexToken(IDENT,'n',64,20,1480)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp IDENT . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [OperandName -> IDENT] with ['n'] and goto state 117
Result : <list @ 0x7f0d4a9325c8> (['OperandName', ['n']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp OperandName . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a9325c8>] and goto state 108
Result : <list @ 0x7f0d4a9322c8> (['Operand', ['OperandName', ['n']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp Operand . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a9322c8>] and goto state 106
Result : <list @ 0x7f0d4a932288> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp PrimaryExpr . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a932288>] and goto state 105
Result : <list @ 0x7f0d4a9321c8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp UnaryExpr . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a9321c8>] and goto state 304
Result : <list @ 0x7f0d4a932148> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 304
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr BinOp Expr . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [Expr -> Expr BinOp Expr] with [<list @ 0x7f0d4a932848>,<list @ 0x7f0d4a9323c8>,<list @ 0x7f0d4a932148>] and goto state 374
Result : <list @ 0x7f0d4a932088> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 374
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Expr . LexToken(SEMICOLON,';',64,21,1481)
MICOLON FOR InitStmt SEMICOLON Expr . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [Condition -> Expr] with [<list @ 0x7f0d4a932088>] and goto state 373
Result : <list @ 0x7f0d4a932048> (['Condition', ['Expr', ['Expr', ['UnaryE ...)
State  : 373
Defaulted state 373: Reduce using 259
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Condition . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [ConditionOpt -> Condition] with [<list @ 0x7f0d4a932048>] and goto state 372
Result : <list @ 0x7f0d4a9352c8> (['ConditionOpt', ['Condition', ['Expr',  ...)
State  : 372
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt . LexToken(SEMICOLON,';',64,21,1481)
Action : Shift and goto state 396
State  : 396
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON . LexToken(IDENT,'i',64,23,1483)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON IDENT . LexToken(INC,'++',64,24,1484)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a932188> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON OperandName . LexToken(INC,'++',64,24,1484)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a932188>] and goto state 108
Result : <list @ 0x7f0d4a931ac8> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON Operand . LexToken(INC,'++',64,24,1484)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a931ac8>] and goto state 106
Result : <list @ 0x7f0d4a931f88> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON PrimaryExpr . LexToken(INC,'++',64,24,1484)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a931f88>] and goto state 105
Result : <list @ 0x7f0d4a931d48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON UnaryExpr . LexToken(INC,'++',64,24,1484)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a931dAction : Reduce rule [Condition -> Expr] with [<list @ 0x7f0d4a932088>] and goto state 373
Result : <list @ 0x7f0d4a932048> (['Condition', ['Expr', ['Expr', ['UnaryE ...)
State  : 373
Defaulted state 373: Reduce using 259
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON Condition . LexToken(SEMICOLON,';',64,21,1481)
Action : Reduce rule [ConditionOpt -> Condition] with [<list @ 0x7f0d4a932048>] and goto state 372
Result : <list @ 0x7f0d4a9352c8> (['ConditionOpt', ['Condition', ['Expr',  ...)
State  : 372
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt . LexToken(SEMICOLON,';',64,21,1481)
Action : Shift and goto state 396
State  : 396
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON . LexToken(IDENT,'i',64,23,1483)
Action : Shift and goto state 286
State  : 286
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON IDENT . LexToken(INC,'++',64,24,1484)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a932188> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON OperandName . LexToken(INC,'++',64,24,1484)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a932188>] and goto state 108
Result : <list @ 0x7f0d4a931ac8> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON Operand . LexToken(INC,'++',64,24,1484)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a931ac8>] and goto state 106
Result : <list @ 0x7f0d4a931f88> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON PrimaryExpr . LexToken(INC,'++',64,24,1484)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a931f88>] and goto state 105
Result : <list @ 0x7f0d4a931d48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON UnaryExpr . LexToken(INC,'++',64,24,1484)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a931d48>] and goto state 178
Result : <list @ 0x7f0d4a931c08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON Expr . LexToken(INC,'++',64,24,1484)
Action : Shift and goto state 287
State  : 287
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON Expr INC . LexToken(LBRACE,'{',64,27,1487)
Action : Reduce rule [IncDecStmt -> Expr INC] with [<list @ 0x7f0d4a931c08>,'++'] and goto state 168
Result : <list @ 0x7f0d4a9319c8> (['IncDecStmt', ['Expr', ['UnaryExpr', [' ...)
State  : 168
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON IncDecStmt . LexToken(LBRACE,'{',64,27,1487)
Action : Reduce rule [SimpleStmt -> IncDecStmt] with [<list @ 0x7f0d4a9319c8>] and goto state 414
Result : <list @ 0x7f0d4a931a88> (['SimpleStmt', ['IncDecStmt', ['Expr', [ ...)
State  : 414
Defaulted state 414: Reduce using 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt . LexToken(LBRACE,'{',64,27,1487)
Action : Reduce rule [PostStmt -> SimpleStmt] with [<list @ 0x7f0d4a931a88>] and goto state 413
Result : <list @ 0x7f0d4a9315c8> (['PostStmt', ['SimpleStmt', ['IncDecStmt ...)
State  : 413
Defaulted state 413: Reduce using 257
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt . LexToken(LBRACE,'{',64,27,1487)
Action : Reduce rule [ForClause -> InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt] with [<list @ 0x7f0d4a9329c8>,';',<list @ 0x7f0d4a9352c8>,';',<list @ 0x7f0d4a9315c8>] and goto state 290
Result : <list @ 0x7f0d4a9313c8> (['ForClause', ['InitStmt', ['SimpleStmt' ...)
State  : 290
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause . LexToken(LBRACE,'{',64,27,1487)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE . LexToken(IDENT,'fmt',65,9,1497)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE IDENT . LexToken(PERIOD,'.',65,12,1500)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON 48>] and goto state 178
Result : <list @ 0x7f0d4a931c08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON Expr . LexToken(INC,'++',64,24,1484)
Action : Shift and goto state 287
State  : 287
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON Expr INC . LexToken(LBRACE,'{',64,27,1487)
Action : Reduce rule [IncDecStmt -> Expr INC] with [<list @ 0x7f0d4a931c08>,'++'] and goto state 168
Result : <list @ 0x7f0d4a9319c8> (['IncDecStmt', ['Expr', ['UnaryExpr', [' ...)
State  : 168
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON IncDecStmt . LexToken(LBRACE,'{',64,27,1487)
Action : Reduce rule [SimpleStmt -> IncDecStmt] with [<list @ 0x7f0d4a9319c8>] and goto state 414
Result : <list @ 0x7f0d4a931a88> (['SimpleStmt', ['IncDecStmt', ['Expr', [ ...)
State  : 414
Defaulted state 414: Reduce using 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt . LexToken(LBRACE,'{',64,27,1487)
Action : Reduce rule [PostStmt -> SimpleStmt] with [<list @ 0x7f0d4a931a88>] and goto state 413
Result : <list @ 0x7f0d4a9315c8> (['PostStmt', ['SimpleStmt', ['IncDecStmt ...)
State  : 413
Defaulted state 413: Reduce using 257
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt . LexToken(LBRACE,'{',64,27,1487)
Action : Reduce rule [ForClause -> InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt] with [<list @ 0x7f0d4a9329c8>,';',<list @ 0x7f0d4a9352c8>,';',<list @ 0x7f0d4a9315c8>] and goto state 290
Result : <list @ 0x7f0d4a9313c8> (['ForClause', ['InitStmt', ['SimpleStmt' ...)
State  : 290
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause . LexToken(LBRACE,'{',64,27,1487)
Action : Shift and goto state 85
State  : 85
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE . LexToken(IDENT,'fmt',65,9,1497)
Action : Shift and goto state 182
State  : 182
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE IDENT . LexToken(PERIOD,'.',65,12,1500)
Action : Shift and goto state 101
State  : 101
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE IDENT PERIOD . LexToken(IDENT,'Println',65,13,1501)
FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE IDENT PERIOD . LexToken(IDENT,'Println',65,13,1501)
Action : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE IDENT PERIOD IDENT . LexToken(LPAREN,'(',65,20,1508)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['fmt','.','Println'] and goto state 124
Result : <list @ 0x7f0d4a931448> (['QualifiedIdent', ['fmt'], ['.'], ['Pri ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE QualifiedIdent . LexToken(LPAREN,'(',65,20,1508)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4a931448>] and goto state 117
Result : <list @ 0x7f0d4a9310c8> (['OperandName', ['QualifiedIdent', ['fmt ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE OperandName . LexToken(LPAREN,'(',65,20,1508)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a9310c8>] and goto state 108
Result : <list @ 0x7f0d4a930fc8> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Operand . LexToken(LPAREN,'(',65,20,1508)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a930fc8>] and goto state 106
Result : <list @ 0x7f0d4a930f48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr . LexToken(LPAREN,'(',65,20,1508)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN . LexToken(STRING,'" Subtree Sum for "',65,21,1509)
Action : Shift and goto state 130
State  : 130
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN STRING . LexToken(COMMA,',',65,40,1528)
Action : Reduce rule [BasicLit -> STRING] with [<str @ 0x7f0d4a90fbb8>] and goto state 120
Result : <list @ 0x7f0d4a931308> (['BasicLit', ['" Subtree Sum for "']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN BasicLit . LexToken(COMMA,',',65,40,1528)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4a931308>] and goto state 116
Result : <list @ 0x7f0d4a930ec8> (['Lit', ['BasicLit', ['" Subtree Sum for ...)
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TAction : Shift and goto state 194
State  : 194
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE IDENT PERIOD IDENT . LexToken(LPAREN,'(',65,20,1508)
Action : Reduce rule [QualifiedIdent -> IDENT PERIOD IDENT] with ['fmt','.','Println'] and goto state 124
Result : <list @ 0x7f0d4a931448> (['QualifiedIdent', ['fmt'], ['.'], ['Pri ...)
State  : 124
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE QualifiedIdent . LexToken(LPAREN,'(',65,20,1508)
Action : Reduce rule [OperandName -> QualifiedIdent] with [<list @ 0x7f0d4a931448>] and goto state 117
Result : <list @ 0x7f0d4a9310c8> (['OperandName', ['QualifiedIdent', ['fmt ...)
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE OperandName . LexToken(LPAREN,'(',65,20,1508)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a9310c8>] and goto state 108
Result : <list @ 0x7f0d4a930fc8> (['Operand', ['OperandName', ['QualifiedI ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Operand . LexToken(LPAREN,'(',65,20,1508)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a930fc8>] and goto state 106
Result : <list @ 0x7f0d4a930f48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr . LexToken(LPAREN,'(',65,20,1508)
Action : Shift and goto state 227
State  : 227
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN . LexToken(STRING,'" Subtree Sum for "',65,21,1509)
Action : Shift and goto state 130
State  : 130
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN STRING . LexToken(COMMA,',',65,40,1528)
Action : Reduce rule [BasicLit -> STRING] with [<str @ 0x7f0d4a90fbb8>] and goto state 120
Result : <list @ 0x7f0d4a931308> (['BasicLit', ['" Subtree Sum for "']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN BasicLit . LexToken(COMMA,',',65,40,1528)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4a931308>] and goto state 116
Result : <list @ 0x7f0d4a930ec8> (['Lit', ['BasicLit', ['" Subtree Sum for ...)
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Lit . LexToken(COMMA,',',65,40,1528)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4a930ec8>] and goto state 108
Result : <list @ 0x7f0d4a930e08> (['Operand', ['Lit', ['BasicLit', ['" Sub ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Operand . LexToken(COMMA,',',65,40,1528)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a930e08>] and goto state 106
Result : <list @ 0x7f0d4a930dc8> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN PrimaryExpr . LexToken(COMMA,',',65,40,1528)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a930dc8>] and goto state 105
Result : <list @ 0x7f0d4a930c88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN UnaryExpr . LexToken(COMMA,',',65,40,1528)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a930c88>] and goto state 146
Result : <list @ 0x7f0d4a930c08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr . LexToken(COMMA,',',65,40,1528)
Action : Shift and goto state 259
State  : 259
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA . LexToken(IDENT,'i',65,42,1530)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA IDENT . LexToken(COMMA,',',65,43,1531)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a930b88> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA OperandName . LexToken(COMMA,',',65,43,1531)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a930b88>] and goto state 108
Result : <list @ 0x7f0d4a930ac8> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON StateopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Lit . LexToken(COMMA,',',65,40,1528)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4a930ec8>] and goto state 108
Result : <list @ 0x7f0d4a930e08> (['Operand', ['Lit', ['BasicLit', ['" Sub ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Operand . LexToken(COMMA,',',65,40,1528)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a930e08>] and goto state 106
Result : <list @ 0x7f0d4a930dc8> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN PrimaryExpr . LexToken(COMMA,',',65,40,1528)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a930dc8>] and goto state 105
Result : <list @ 0x7f0d4a930c88> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN UnaryExpr . LexToken(COMMA,',',65,40,1528)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a930c88>] and goto state 146
Result : <list @ 0x7f0d4a930c08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 146
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr . LexToken(COMMA,',',65,40,1528)
Action : Shift and goto state 259
State  : 259
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA . LexToken(IDENT,'i',65,42,1530)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA IDENT . LexToken(COMMA,',',65,43,1531)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a930b88> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA OperandName . LexToken(COMMA,',',65,43,1531)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a930b88>] and goto state 108
Result : <list @ 0x7f0d4a930ac8> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Operand . LexToken(COMMA,',',65,43,1531)
ment SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Operand . LexToken(COMMA,',',65,43,1531)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a930ac8>] and goto state 106
Result : <list @ 0x7f0d4a930b48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA PrimaryExpr . LexToken(COMMA,',',65,43,1531)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a930b48>] and goto state 105
Result : <list @ 0x7f0d4a931fc8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA UnaryExpr . LexToken(COMMA,',',65,43,1531)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a931fc8>] and goto state 331
Result : <list @ 0x7f0d4a930b08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 331
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr . LexToken(COMMA,',',65,43,1531)
Action : Shift and goto state 259
State  : 259
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA . LexToken(STRING,'" = "',65,45,1533)
Action : Shift and goto state 130
State  : 130
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA STRING . LexToken(COMMA,',',65,50,1538)
Action : Reduce rule [BasicLit -> STRING] with ['" = "'] and goto state 120
Result : <list @ 0x7f0d4a930788> (['BasicLit', ['" = "']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA BasicLit . LexToken(COMMA,',',65,50,1538)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4a930788>] and goto state 116
Result : <list @ 0x7f0d4a9304c8> (['Lit', ['BasicLit', ['" = "']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Lit . LexToken(COMMA,',',65,50,1538)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4a9304c8>] and goto state 108
Result : <list @ 0x7f0d4a930688> (['Operand', ['Lit', ['BasicLit', ['" = " ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Operand . LexToken(COMMA,',',65,50,15Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a930ac8>] and goto state 106
Result : <list @ 0x7f0d4a930b48> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA PrimaryExpr . LexToken(COMMA,',',65,43,1531)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a930b48>] and goto state 105
Result : <list @ 0x7f0d4a931fc8> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA UnaryExpr . LexToken(COMMA,',',65,43,1531)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a931fc8>] and goto state 331
Result : <list @ 0x7f0d4a930b08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 331
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr . LexToken(COMMA,',',65,43,1531)
Action : Shift and goto state 259
State  : 259
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA . LexToken(STRING,'" = "',65,45,1533)
Action : Shift and goto state 130
State  : 130
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA STRING . LexToken(COMMA,',',65,50,1538)
Action : Reduce rule [BasicLit -> STRING] with ['" = "'] and goto state 120
Result : <list @ 0x7f0d4a930788> (['BasicLit', ['" = "']])
State  : 120
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA BasicLit . LexToken(COMMA,',',65,50,1538)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f0d4a930788>] and goto state 116
Result : <list @ 0x7f0d4a9304c8> (['Lit', ['BasicLit', ['" = "']]])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Lit . LexToken(COMMA,',',65,50,1538)
Action : Reduce rule [Operand -> Lit] with [<list @ 0x7f0d4a9304c8>] and goto state 108
Result : <list @ 0x7f0d4a930688> (['Operand', ['Lit', ['BasicLit', ['" = " ...)
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Operand . LexToken(COMMA,',',65,50,1538)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a930688>] and goto state 106
Result : <list @ 0x7f0d4a930448> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA PrimaryExpr . LexToken(COMMA,',',65,50,1538)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a930448>] and goto state 105
Result : <list @ 0x7f0d4a930308> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA UnaryExpr . LexToken(COMMA,',',65,50,1538)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a930308>] and goto state 331
Result : <list @ 0x7f0d4a9302c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 331
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr . LexToken(COMMA,',',65,50,1538)
Action : Shift and goto state 259
State  : 259
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA . LexToken(IDENT,'graph',65,51,1539)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA IDENT . LexToken(LBRACK,'[',65,56,1544)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4a930248> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA OperandName . LexToken(LBRACK,'[',65,56,1544)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a930248>] and goto state 108
Result : <list @ 0x7f0d4a930188> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA Operand . LexToken(LBRACK,'[',65,56,1544)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a930188>] and goto state 106
Result : <list @ 0x7f0d4a9301c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Sta38)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a930688>] and goto state 106
Result : <list @ 0x7f0d4a930448> (['PrimaryExpr', ['Operand', ['Lit', ['Ba ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA PrimaryExpr . LexToken(COMMA,',',65,50,1538)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a930448>] and goto state 105
Result : <list @ 0x7f0d4a930308> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA UnaryExpr . LexToken(COMMA,',',65,50,1538)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a930308>] and goto state 331
Result : <list @ 0x7f0d4a9302c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 331
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr . LexToken(COMMA,',',65,50,1538)
Action : Shift and goto state 259
State  : 259
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA . LexToken(IDENT,'graph',65,51,1539)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA IDENT . LexToken(LBRACK,'[',65,56,1544)
Action : Reduce rule [OperandName -> IDENT] with ['graph'] and goto state 117
Result : <list @ 0x7f0d4a930248> (['OperandName', ['graph']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA OperandName . LexToken(LBRACK,'[',65,56,1544)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a930248>] and goto state 108
Result : <list @ 0x7f0d4a930188> (['Operand', ['OperandName', ['graph']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA Operand . LexToken(LBRACK,'[',65,56,1544)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a930188>] and goto state 106
Result : <list @ 0x7f0d4a9301c8> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr . LexToken(LBRACK,'[',65,56,1544)
tement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr . LexToken(LBRACK,'[',65,56,1544)
Action : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK . LexToken(IDENT,'i',65,57,1545)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',65,58,1546)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a930148> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',65,58,1546)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a930148>] and goto state 108
Result : <list @ 0x7f0d4a92fe48> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',65,58,1546)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a92fe48>] and goto state 106
Result : <list @ 0x7f0d4a930088> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',65,58,1546)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a930088>] and goto state 105
Result : <list @ 0x7f0d4a92fb48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',65,58,1546)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a92fb48>] and goto state 306
Result : <list @ 0x7f0d4a92fac8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',65,58,1546)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOAction : Shift and goto state 226
State  : 226
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK . LexToken(IDENT,'i',65,57,1545)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK IDENT . LexToken(RBRACK,']',65,58,1546)
Action : Reduce rule [OperandName -> IDENT] with ['i'] and goto state 117
Result : <list @ 0x7f0d4a930148> (['OperandName', ['i']])
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK OperandName . LexToken(RBRACK,']',65,58,1546)
Action : Reduce rule [Operand -> OperandName] with [<list @ 0x7f0d4a930148>] and goto state 108
Result : <list @ 0x7f0d4a92fe48> (['Operand', ['OperandName', ['i']]])
State  : 108
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK Operand . LexToken(RBRACK,']',65,58,1546)
Action : Reduce rule [PrimaryExpr -> Operand] with [<list @ 0x7f0d4a92fe48>] and goto state 106
Result : <list @ 0x7f0d4a930088> (['PrimaryExpr', ['Operand', ['OperandNam ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK PrimaryExpr . LexToken(RBRACK,']',65,58,1546)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a930088>] and goto state 105
Result : <list @ 0x7f0d4a92fb48> (['UnaryExpr', ['PrimaryExpr', ['Operand' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK UnaryExpr . LexToken(RBRACK,']',65,58,1546)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a92fb48>] and goto state 306
Result : <list @ 0x7f0d4a92fac8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 306
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK Expr . LexToken(RBRACK,']',65,58,1546)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',65,59,1547)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4a92fac8>,']'] and goto state 222
Result : <list @ 0x7f0d4a92fa88> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr Index . LexToken(PERIOD,'.',65,59,1547)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4a9301c8>,<list @ 0x7f0d4a92fa88>] and goto state 106
Result : <list @ 0x7f0d4a92fbc8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr . LexToken(PERIOD,'.',65,59,1547)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',65,60,1548)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr PERIOD IDENT . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4a92f888> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr Selector . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4a92fbc8>,<list @ 0x7f0d4a92f888>] and goto state 106
Result : <list @ 0x7f0d4a92f808> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a92f808>] and goto state 105
Result : <list @ 0x7f0d4a92f7c8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA UnaryExpr . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0LON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr LBRACK Expr RBRACK . LexToken(PERIOD,'.',65,59,1547)
Action : Reduce rule [Index -> LBRACK Expr RBRACK] with ['[',<list @ 0x7f0d4a92fac8>,']'] and goto state 222
Result : <list @ 0x7f0d4a92fa88> (['Index', ['['], ['Expr', ['UnaryExpr',  ...)
State  : 222
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr Index . LexToken(PERIOD,'.',65,59,1547)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Index] with [<list @ 0x7f0d4a9301c8>,<list @ 0x7f0d4a92fa88>] and goto state 106
Result : <list @ 0x7f0d4a92fbc8> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr . LexToken(PERIOD,'.',65,59,1547)
Action : Shift and goto state 225
State  : 225
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr PERIOD . LexToken(IDENT,'sub_tree_sum',65,60,1548)
Action : Shift and goto state 305
State  : 305
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr PERIOD IDENT . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [Selector -> PERIOD IDENT] with ['.','sub_tree_sum'] and goto state 221
Result : <list @ 0x7f0d4a92f888> (['Selector', ['.'], ['sub_tree_sum']])
State  : 221
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr Selector . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Selector] with [<list @ 0x7f0d4a92fbc8>,<list @ 0x7f0d4a92f888>] and goto state 106
Result : <list @ 0x7f0d4a92f808> (['PrimaryExpr', ['PrimaryExpr', ['Primar ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA PrimaryExpr . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a92f808>] and goto state 105
Result : <list @ 0x7f0d4a92f7c8> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA UnaryExpr . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a92f7c8>] and goto state 331
x7f0d4a92f7c8>] and goto state 331
Result : <list @ 0x7f0d4a92f588> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 331
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA Expr . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 368
Result : <list @ 0x7f0d4a930908> (['ExprOth'])
State  : 368
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA Expr ExprOth . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [ExprOth -> COMMA Expr ExprOth] with [',',<list @ 0x7f0d4a92f588>,['ExprOth']] and goto state 368
Result : <list @ 0x7f0d4a92f2c8> (['ExprOth', [','], ['Expr', ['UnaryExpr' ...)
State  : 368
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr ExprOth . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [ExprOth -> COMMA Expr ExprOth] with [',',<list @ 0x7f0d4a9302c8>,<list @ 0x7f0d4a92f2c8>] and goto state 368
Result : <list @ 0x7f0d4a92f048> (['ExprOth', [','], ['Expr', ['UnaryExpr' ...)
State  : 368
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr ExprOth . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [ExprOth -> COMMA Expr ExprOth] with [',',<list @ 0x7f0d4a930b08>,<list @ 0x7f0d4a92f048>] and goto state 258
Result : <list @ 0x7f0d4a92f308> (['ExprOth', [','], ['Expr', ['UnaryExpr' ...)
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a930c08>,<list @ 0x7f0d4a92f308>] and goto state 309
Result : <list @ 0x7f0d4a8e0ac8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',65,72,1560)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4a8e0ac8>,')'] and goto state 224
Result : <list @ 0x7f0d4a8e0bc8> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Result : <list @ 0x7f0d4a92f588> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 331
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA Expr . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [ExprOth -> <empty>] with [] and goto state 368
Result : <list @ 0x7f0d4a930908> (['ExprOth'])
State  : 368
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr COMMA Expr ExprOth . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [ExprOth -> COMMA Expr ExprOth] with [',',<list @ 0x7f0d4a92f588>,['ExprOth']] and goto state 368
Result : <list @ 0x7f0d4a92f2c8> (['ExprOth', [','], ['Expr', ['UnaryExpr' ...)
State  : 368
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr COMMA Expr ExprOth . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [ExprOth -> COMMA Expr ExprOth] with [',',<list @ 0x7f0d4a9302c8>,<list @ 0x7f0d4a92f2c8>] and goto state 368
Result : <list @ 0x7f0d4a92f048> (['ExprOth', [','], ['Expr', ['UnaryExpr' ...)
State  : 368
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr COMMA Expr ExprOth . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [ExprOth -> COMMA Expr ExprOth] with [',',<list @ 0x7f0d4a930b08>,<list @ 0x7f0d4a92f048>] and goto state 258
Result : <list @ 0x7f0d4a92f308> (['ExprOth', [','], ['Expr', ['UnaryExpr' ...)
State  : 258
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN Expr ExprOth . LexToken(RPAREN,')',65,72,1560)
Action : Reduce rule [ExpressionList -> Expr ExprOth] with [<list @ 0x7f0d4a930c08>,<list @ 0x7f0d4a92f308>] and goto state 309
Result : <list @ 0x7f0d4a8e0ac8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 309
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',65,72,1560)
Action : Shift and goto state 355
State  : 355
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f0d4a8e0ac8>,')'] and goto state 224
Result : <list @ 0x7f0d4a8e0bc8> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 224
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr Arguments . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4a930f48>,<list @ 0x7f0d4a8e0bc8>] and goto state 106
Result : <list @ 0x7f0d4a8e0808> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8e0808>] and goto state 105
Result : <list @ 0x7f0d4a8e0748> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE UnaryExpr . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8e0748>] and goto state 178
Result : <list @ 0x7f0d4a8e0848> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Expr . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [ExpressionStmt -> Expr] with [<list @ 0x7f0d4a8e0848>] and goto state 167
Result : <list @ 0x7f0d4a8e0c48> (['ExpressionStmt', ['Expr', ['UnaryExpr' ...)
State  : 167
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionStmt . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [SimpleStmt -> ExpressionStmt] with [<list @ 0x7f0d4a8e0c48>] and goto state 155
Result : <list @ 0x7f0d4a8e04c8> (['SimpleStmt', ['ExpressionStmt', ['Expr ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE SimpleStmt . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4a8e04c8>] and goto state 152
Result : <list @ 0x7f0d4a8e0448> (['Statement', ['SimpleStmt', ['Expressio ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement . LexToken(SEMICOLON,';',65,73,1561)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',66,5,1567)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4a8e0488> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunStatement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr Arguments . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f0d4a930f48>,<list @ 0x7f0d4a8e0bc8>] and goto state 106
Result : <list @ 0x7f0d4a8e0808> (['PrimaryExpr', ['PrimaryExpr', ['Operan ...)
State  : 106
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE PrimaryExpr . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f0d4a8e0808>] and goto state 105
Result : <list @ 0x7f0d4a8e0748> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE UnaryExpr . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f0d4a8e0748>] and goto state 178
Result : <list @ 0x7f0d4a8e0848> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 178
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Expr . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [ExpressionStmt -> Expr] with [<list @ 0x7f0d4a8e0848>] and goto state 167
Result : <list @ 0x7f0d4a8e0c48> (['ExpressionStmt', ['Expr', ['UnaryExpr' ...)
State  : 167
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE ExpressionStmt . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [SimpleStmt -> ExpressionStmt] with [<list @ 0x7f0d4a8e0c48>] and goto state 155
Result : <list @ 0x7f0d4a8e04c8> (['SimpleStmt', ['ExpressionStmt', ['Expr ...)
State  : 155
Defaulted state 155: Reduce using 179
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE SimpleStmt . LexToken(SEMICOLON,';',65,73,1561)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f0d4a8e04c8>] and goto state 152
Result : <list @ 0x7f0d4a8e0448> (['Statement', ['SimpleStmt', ['Expressio ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement . LexToken(SEMICOLON,';',65,73,1561)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',66,5,1567)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4a8e0488> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',66,5,1567)
ctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',66,5,1567)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8e0448>,';',<list @ 0x7f0d4a8e0488>] and goto state 151
Result : <list @ 0x7f0d4a8e0088> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE StatementList . LexToken(RBRACE,'}',66,5,1567)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',66,6,1568)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4a8e0088>,'}'] and goto state 338
Result : <list @ 0x7f0d4a92f3c8> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 338
Defaulted state 338: Reduce using 254
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause Block . LexToken(SEMICOLON,';',66,6,1568)
Action : Reduce rule [ForStmt -> FOR ForClause Block] with ['for',<list @ 0x7f0d4a9313c8>,<list @ 0x7f0d4a92f3c8>] and goto state 164
Result : <list @ 0x7f0d4a8e0108> (['ForStmt', ['for'], ['ForClause', ['Ini ...)
State  : 164
Defaulted state 164: Reduce using 188
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ForStmt . LexToken(SEMICOLON,';',66,6,1568)
Action : Reduce rule [Statement -> ForStmt] with [<list @ 0x7f0d4a8e0108>] and goto state 152
Result : <list @ 0x7f0d4a8e0188> (['Statement', ['ForStmt', ['for'], ['For ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',66,6,1568)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4a8e0e48> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8e0188>,';',<list @ 0x7f0d4a8e0e48>] and goto state 332
Result : <list @ 0x7f0d4a8e0788> (['StatementList', ['Statement', ['ForStm ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOAction : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8e0448>,';',<list @ 0x7f0d4a8e0488>] and goto state 151
Result : <list @ 0x7f0d4a8e0088> (['StatementList', ['Statement', ['Simple ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE StatementList . LexToken(RBRACE,'}',66,5,1567)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',66,6,1568)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4a8e0088>,'}'] and goto state 338
Result : <list @ 0x7f0d4a92f3c8> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 338
Defaulted state 338: Reduce using 254
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON FOR ForClause Block . LexToken(SEMICOLON,';',66,6,1568)
Action : Reduce rule [ForStmt -> FOR ForClause Block] with ['for',<list @ 0x7f0d4a9313c8>,<list @ 0x7f0d4a92f3c8>] and goto state 164
Result : <list @ 0x7f0d4a8e0108> (['ForStmt', ['for'], ['ForClause', ['Ini ...)
State  : 164
Defaulted state 164: Reduce using 188
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON ForStmt . LexToken(SEMICOLON,';',66,6,1568)
Action : Reduce rule [Statement -> ForStmt] with [<list @ 0x7f0d4a8e0108>] and goto state 152
Result : <list @ 0x7f0d4a8e0188> (['Statement', ['ForStmt', ['for'], ['For ...)
State  : 152
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',66,6,1568)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 332
Result : <list @ 0x7f0d4a8e0e48> (['StatementList'])
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8e0188>,';',<list @ 0x7f0d4a8e0e48>] and goto state 332
Result : <list @ 0x7f0d4a8e0788> (['StatementList', ['Statement', ['ForStm ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a933a88>,';',<list @ 0x7f0d4a8e0788>] and goto state 332
Result : <list @ 0x7f0d4a8e0608> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a935a88>,';',<list @ 0x7f0d4a8e0608>] and goto state 332
Result : <list @ 0x7f0d4a8e00c8> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8b8b88>,';',<list @ 0x7f0d4a8e00c8>] and goto state 332
Result : <list @ 0x7f0d4a8e0ec8> (['StatementList', ['Statement', ['ForStm ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa92f88>,';',<list @ 0x7f0d4a8e0ec8>] and goto state 332
Result : <list @ 0x7f0d4a8e0d48> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa90288>,';',<list @ 0x7f0d4a8e0d48>] and goto state 332
Result : <list @ 0x7f0d4a8e0cc8> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa8de48>,';',<list @ 0x7f0d4a8e0cc8>] and goto state 332
Result : <list @ 0x7f0d4a8e0b48> (['StatementList', ['Statement', ['Decl', ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa8cf48>,';',<list @ 0x7f0d4a8e0b48>] and goto state 151
Result : <list @ 0x7f0d4a8e0fc8> (['StatementList', ['Statement', ['Decl', ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',67,2,1571)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4a8e0fc8>,'}'] and goto state 84
Result : <list @ 0x7f0d4a8e0a08> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 84
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature Block . LexToken(SEMICOLON,';',67,2,1571)
Action : Reduce rule [FunctionBody -> Block] with [<list @ 0x7f0d4a8e0a08>] and goto state 83
Result : <list @ 0x7f0d4a8e0708> (['FunctionBody', ['Block', ['{'], ['Stat ...)
LON StatementList] with [<list @ 0x7f0d4a933a88>,';',<list @ 0x7f0d4a8e0788>] and goto state 332
Result : <list @ 0x7f0d4a8e0608> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a935a88>,';',<list @ 0x7f0d4a8e0608>] and goto state 332
Result : <list @ 0x7f0d4a8e00c8> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4a8b8b88>,';',<list @ 0x7f0d4a8e00c8>] and goto state 332
Result : <list @ 0x7f0d4a8e0ec8> (['StatementList', ['Statement', ['ForStm ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa92f88>,';',<list @ 0x7f0d4a8e0ec8>] and goto state 332
Result : <list @ 0x7f0d4a8e0d48> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa90288>,';',<list @ 0x7f0d4a8e0d48>] and goto state 332
Result : <list @ 0x7f0d4a8e0cc8> (['StatementList', ['Statement', ['Simple ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa8de48>,';',<list @ 0x7f0d4a8e0cc8>] and goto state 332
Result : <list @ 0x7f0d4a8e0b48> (['StatementList', ['Statement', ['Decl', ...)
State  : 332
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f0d4aa8cf48>,';',<list @ 0x7f0d4a8e0b48>] and goto state 151
Result : <list @ 0x7f0d4a8e0fc8> (['StatementList', ['Statement', ['Decl', ...)
State  : 151
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE StatementList . LexToken(RBRACE,'}',67,1,1570)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',67,2,1571)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f0d4a8e0fc8>,'}'] and goto state 84
Result : <list @ 0x7f0d4a8e0a08> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 84
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature Block . LexToken(SEMICOLON,';',67,2,1571)
Action : Reduce rule [FunctionBody -> Block] with [<list @ 0x7f0d4a8e0a08>] and goto state 83
Result : <list @ 0x7f0d4a8e0708> (['FunctionBody', ['Block', ['{'], ['Stat ...)
State  : 83
State  : 83
Defaulted state 83: Reduce using 160
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature FunctionBody . LexToken(SEMICOLON,';',67,2,1571)
Action : Reduce rule [FuncDecl -> FUNC FunctionName Signature FunctionBody] with ['func',<list @ 0x7f0d4aa7a308>,<list @ 0x7f0d4aa7a9c8>,<list @ 0x7f0d4a8e0708>] and goto state 13
Result : <list @ 0x7f0d4a8dbd88> (['FuncDecl', ['func'], ['FunctionName',  ...)
State  : 13
Defaulted state 13: Reduce using 17
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FuncDecl . LexToken(SEMICOLON,';',67,2,1571)
Action : Reduce rule [TopLevelDecl -> FuncDecl] with [<list @ 0x7f0d4a8dbd88>] and goto state 11
Result : <list @ 0x7f0d4a8dbfc8> (['TopLevelDecl', ['FuncDecl', ['func'],  ...)
State  : 11
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON TopLevelDecl . LexToken(SEMICOLON,';',67,2,1571)
Action : Shift and goto state 28
State  : 28
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON . $end
Action : Reduce rule [TopLevelDeclMult -> <empty>] with [] and goto state 48
Result : <list @ 0x7f0d4a8db5c8> (['TopLevelDeclMult'])
State  : 48
Defaulted state 48: Reduce using 14
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON TopLevelDeclMult . $end
Action : Reduce rule [TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult] with [<list @ 0x7f0d4a8dbfc8>,';',<list @ 0x7f0d4a8db5c8>] and goto state 48
Result : <list @ 0x7f0d4a8db548> (['TopLevelDeclMult', ['TopLevelDecl', [' ...)
State  : 48
Defaulted state 48: Reduce using 14
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON TopLevelDeclMult . $end
Action : Reduce rule [TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult] with [<list @ 0x7f0d4aa7a348>,';',<list @ 0x7f0d4a8db548>] and goto state 48
Result : <list @ 0x7f0d4a8dbd08> (['TopLevelDeclMult', ['TopLevelDecl', [' ...)
State  : 48
Defaulted state 48: Reduce using 14
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDeclMult . $end
Action : Reduce rule [TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult] with [<list @ 0x7f0d4ae26588>,';',<list @ 0x7f0d4a8dbd08>] and goto state 10
Result : <list @ 0x7f0d4a8dbb08> (['TopLevelDeclMult', ['TopLevelDecl', [' ...)
State  : 10
Defaulted state 10: Reduce using 1
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult . $end
Action : Reduce rule [SourceFile -> PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult] with [<list @ 0x7f0d4a8c0fc8>,';',<list @ 0x7f0d4a8c1b88>,<list @ 0x7f0d4a8dbb08>] and goto state 1
Result : <list @ 0x7f0d4a8dbf08> (['SourceFile', ['PackageClause', ['packa ...)
State  : 1
Stack  : SourceFile . $end
Done   : Returning <list @ 0x7f0d4a8dbf08> (['SourceFile', ['PackageClause', ['packa ...)
PLY: PARSE DEBUG END
Defaulted state 83: Reduce using 160
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FUNC FunctionName Signature FunctionBody . LexToken(SEMICOLON,';',67,2,1571)
Action : Reduce rule [FuncDecl -> FUNC FunctionName Signature FunctionBody] with ['func',<list @ 0x7f0d4aa7a308>,<list @ 0x7f0d4aa7a9c8>,<list @ 0x7f0d4a8e0708>] and goto state 13
Result : <list @ 0x7f0d4a8dbd88> (['FuncDecl', ['func'], ['FunctionName',  ...)
State  : 13
Defaulted state 13: Reduce using 17
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON FuncDecl . LexToken(SEMICOLON,';',67,2,1571)
Action : Reduce rule [TopLevelDecl -> FuncDecl] with [<list @ 0x7f0d4a8dbd88>] and goto state 11
Result : <list @ 0x7f0d4a8dbfc8> (['TopLevelDecl', ['FuncDecl', ['func'],  ...)
State  : 11
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON TopLevelDecl . LexToken(SEMICOLON,';',67,2,1571)
Action : Shift and goto state 28
State  : 28
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON . $end
Action : Reduce rule [TopLevelDeclMult -> <empty>] with [] and goto state 48
Result : <list @ 0x7f0d4a8db5c8> (['TopLevelDeclMult'])
State  : 48
Defaulted state 48: Reduce using 14
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON TopLevelDeclMult . $end
Action : Reduce rule [TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult] with [<list @ 0x7f0d4a8dbfc8>,';',<list @ 0x7f0d4a8db5c8>] and goto state 48
Result : <list @ 0x7f0d4a8db548> (['TopLevelDeclMult', ['TopLevelDecl', [' ...)
State  : 48
Defaulted state 48: Reduce using 14
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDecl SEMICOLON TopLevelDeclMult . $end
Action : Reduce rule [TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult] with [<list @ 0x7f0d4aa7a348>,';',<list @ 0x7f0d4a8db548>] and goto state 48
Result : <list @ 0x7f0d4a8dbd08> (['TopLevelDeclMult', ['TopLevelDecl', [' ...)
State  : 48
Defaulted state 48: Reduce using 14
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDeclMult . $end
Action : Reduce rule [TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult] with [<list @ 0x7f0d4ae26588>,';',<list @ 0x7f0d4a8dbd08>] and goto state 10
Result : <list @ 0x7f0d4a8dbb08> (['TopLevelDeclMult', ['TopLevelDecl', [' ...)
State  : 10
Defaulted state 10: Reduce using 1
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult . $end
Action : Reduce rule [SourceFile -> PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult] with [<list @ 0x7f0d4a8c0fc8>,';',<list @ 0x7f0d4a8c1b88>,<list @ 0x7f0d4a8dbb08>] and goto state 1
Result : <list @ 0x7f0d4a8dbf08> (['SourceFile', ['PackageClause', ['packa ...)
State  : 1
Stack  : SourceFile . $end
Done   : Returning <list @ 0x7f0d4a8dbf08> (['SourceFile', ['PackageClause', ['packa ...)
PLY: PARSE DEBUG END
