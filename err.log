PLY: PARSE DEBUG START
State  : 0
Stack  : . LexToken(PACKAGE,'package',1,1,0)
Action : Shift and goto state 3
State  : 3
Stack  : PACKAGE . LexToken(IDENT,'main',1,9,8)
Action : Shift and goto state 5
State  : 5
Defaulted state 5: Reduce using 2
Stack  : PACKAGE IDENT . None
Action : Reduce rule [PackageClause -> PACKAGE IDENT] with ['package','main'] and goto state 2
Result : <list @ 0x7fec09f4c248> (['PackageClause', ['package'], ['main']])
State  : 2
Stack  : PackageClause . LexToken(SEMICOLON,';',1,13,12)
Action : Shift and goto state 4
State  : 4
Stack  : PackageClause SEMICOLON . LexToken(IMPORT,'import',3,1,15)
Action : Shift and goto state 8
State  : 8
Stack  : PackageClause SEMICOLON IMPORT . LexToken(STRING,'"fmt"',3,8,22)
Action : Shift and goto state 26
State  : 26
Defaulted state 26: Reduce using 12
Stack  : PackageClause SEMICOLON IMPORT STRING . None
Action : Reduce rule [ImportPath -> STRING] with ['"fmt"'] and goto state 24
Result : <list @ 0x7fec09ee2848> (['ImportPath', ['"fmt"']])
State  : 24
Defaulted state 24: Reduce using 11
Stack  : PackageClause SEMICOLON IMPORT ImportPath . None
Action : Reduce rule [ImportSpec -> ImportPath] with [<list @ 0x7fec09ee2848>] and goto state 21
Result : <list @ 0x7fec09f4c0c8> (['ImportSpec', ['ImportPath', ['"fmt"']] ...)
State  : 21
Defaulted state 21: Reduce using 5
Stack  : PackageClause SEMICOLON IMPORT ImportSpec . None
Action : Reduce rule [ImportDecl -> IMPORT ImportSpec] with ['import',<list @ 0x7fec09f4c0c8>] and goto state 7
Result : <list @ 0x7fec09ee2b48> (['ImportDecl', ['import'], ['ImportSpec' ...)
State  : 7
Stack  : PackageClause SEMICOLON ImportDecl . LexToken(SEMICOLON,';',3,13,27)
Action : Shift and goto state 20
State  : 20
Stack  : PackageClause SEMICOLON ImportDecl SEMICOLON . LexToken(FUNC,'func',5,1,30)
Action : Reduce rule [ImportDeclMult -> <empty>] with [] and goto state 42
Result : <list @ 0x7fec09ee2e08> (['ImportDeclMult'])
State  : 42
Stack  : PackageClause SEMICOLON ImportDecl SEMICOLON ImportDeclMult . LexToken(FUNC,'func',5,1,30)
Action : Reduce rule [ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult] with [<list @ 0x7fec09ee2b48>,';',<list @ 0x7fec09ee2e08>] and goto state 6
Result : <list @ 0x7fec09ee3148> (['ImportDeclMult', ['ImportDecl', ['impo ...)
State  : 6
Stack  : PackageClause SEMICOLON ImportDeclMult . LexToken(FUNC,'func',5,1,30)
Action : Shift and goto state 16
State  : 16
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC . LexToken(IDENT,'main',5,6,35)
Action : Shift and goto state 29
State  : 29
Defaulted state 29: Reduce using 171
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC IDENT . None
Action : Reduce rule [FunctionName -> IDENT] with ['main'] and goto state 28
Result : <list @ 0x7fec09f4c7c8> (['FunctionName', ['main']])
State  : 28
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName . LexToken(LPAREN,'(',5,10,39)
Action : Shift and goto state 50
State  : 50
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName LPAREN . LexToken(RPAREN,')',5,11,40)
Action : Shift and goto state 89
State  : 89
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName LPAREN RPAREN . LexToken(LBRACE,'{',5,13,42)
Action : Reduce rule [Parameters -> LPAREN RPAREN] with ['(',')'] and goto state 49
Result : <list @ 0x7fec09ee3348> (['Parameters'])
State  : 49
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Parameters . LexToken(LBRACE,'{',5,13,42)
Action : Reduce rule [Signature -> Parameters] with [['Parameters']] and goto state 48
Result : <list @ 0x7fec09ee3088> (['Signature', ['Parameters']])
State  : 48
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature . LexToken(LBRACE,'{',5,13,42)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE . LexToken(IF,'if',6,5,45)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF . LexToken(LPAREN,'(',6,8,48)
Action : Shift and goto state 117
StatPLY: PARSE DEBUG START
State  : 0
Stack  : . LexToken(PACKAGE,'package',1,1,0)
Action : Shift and goto state 3
State  : 3
Stack  : PACKAGE . LexToken(IDENT,'main',1,9,8)
Action : Shift and goto state 5
State  : 5
Defaulted state 5: Reduce using 2
Stack  : PACKAGE IDENT . None
Action : Reduce rule [PackageClause -> PACKAGE IDENT] with ['package','main'] and goto state 2
Result : <list @ 0x7fec09f4c248> (['PackageClause', ['package'], ['main']])
State  : 2
Stack  : PackageClause . LexToken(SEMICOLON,';',1,13,12)
Action : Shift and goto state 4
State  : 4
Stack  : PackageClause SEMICOLON . LexToken(IMPORT,'import',3,1,15)
Action : Shift and goto state 8
State  : 8
Stack  : PackageClause SEMICOLON IMPORT . LexToken(STRING,'"fmt"',3,8,22)
Action : Shift and goto state 26
State  : 26
Defaulted state 26: Reduce using 12
Stack  : PackageClause SEMICOLON IMPORT STRING . None
Action : Reduce rule [ImportPath -> STRING] with ['"fmt"'] and goto state 24
Result : <list @ 0x7fec09ee2848> (['ImportPath', ['"fmt"']])
State  : 24
Defaulted state 24: Reduce using 11
Stack  : PackageClause SEMICOLON IMPORT ImportPath . None
Action : Reduce rule [ImportSpec -> ImportPath] with [<list @ 0x7fec09ee2848>] and goto state 21
Result : <list @ 0x7fec09f4c0c8> (['ImportSpec', ['ImportPath', ['"fmt"']] ...)
State  : 21
Defaulted state 21: Reduce using 5
Stack  : PackageClause SEMICOLON IMPORT ImportSpec . None
Action : Reduce rule [ImportDecl -> IMPORT ImportSpec] with ['import',<list @ 0x7fec09f4c0c8>] and goto state 7
Result : <list @ 0x7fec09ee2b48> (['ImportDecl', ['import'], ['ImportSpec' ...)
State  : 7
Stack  : PackageClause SEMICOLON ImportDecl . LexToken(SEMICOLON,';',3,13,27)
Action : Shift and goto state 20
State  : 20
Stack  : PackageClause SEMICOLON ImportDecl SEMICOLON . LexToken(FUNC,'func',5,1,30)
Action : Reduce rule [ImportDeclMult -> <empty>] with [] and goto state 42
Result : <list @ 0x7fec09ee2e08> (['ImportDeclMult'])
State  : 42
Stack  : PackageClause SEMICOLON ImportDecl SEMICOLON ImportDeclMult . LexToken(FUNC,'func',5,1,30)
Action : Reduce rule [ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult] with [<list @ 0x7fec09ee2b48>,';',<list @ 0x7fec09ee2e08>] and goto state 6
Result : <list @ 0x7fec09ee3148> (['ImportDeclMult', ['ImportDecl', ['impo ...)
State  : 6
Stack  : PackageClause SEMICOLON ImportDeclMult . LexToken(FUNC,'func',5,1,30)
Action : Shift and goto state 16
State  : 16
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC . LexToken(IDENT,'main',5,6,35)
Action : Shift and goto state 29
State  : 29
Defaulted state 29: Reduce using 171
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC IDENT . None
Action : Reduce rule [FunctionName -> IDENT] with ['main'] and goto state 28
Result : <list @ 0x7fec09f4c7c8> (['FunctionName', ['main']])
State  : 28
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName . LexToken(LPAREN,'(',5,10,39)
Action : Shift and goto state 50
State  : 50
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName LPAREN . LexToken(RPAREN,')',5,11,40)
Action : Shift and goto state 89
State  : 89
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName LPAREN RPAREN . LexToken(LBRACE,'{',5,13,42)
Action : Reduce rule [Parameters -> LPAREN RPAREN] with ['(',')'] and goto state 49
Result : <list @ 0x7fec09ee3348> (['Parameters'])
State  : 49
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Parameters . LexToken(LBRACE,'{',5,13,42)
Action : Reduce rule [Signature -> Parameters] with [['Parameters']] and goto state 48
Result : <list @ 0x7fec09ee3088> (['Signature', ['Parameters']])
State  : 48
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature . LexToken(LBRACE,'{',5,13,42)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE . LexToken(IF,'if',6,5,45)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF . LexToken(LPAREN,'(',6,8,48)
Action : Shift and goto state 117
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN . LexToken(INT,'2',6,9,49)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN INT . LexToken(LSS,'<',6,11,51)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 118
Result : <list @ 0x7fec09ee3408> (['BasicLit', ['2']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN BasicLit . LexToken(LSS,'<',6,11,51)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec09ee3408>] and goto state 115
Result : <list @ 0x7fec09ee3708> (['Lit', ['BasicLit', ['2']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Lit . LexToken(LSS,'<',6,11,51)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec09ee3708>] and goto state 113
Result : <list @ 0x7fec09ee3648> (['PrimaryExpr', ['Lit', ['BasicLit', ['2 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN PrimaryExpr . LexToken(LSS,'<',6,11,51)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec09ee3648>] and goto state 107
Result : <list @ 0x7fec09ee3808> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN UnaryExpr . LexToken(LSS,'<',6,11,51)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec09ee3808>] and goto state 236
Result : <list @ 0x7fec09ee3a48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr . LexToken(LSS,'<',6,11,51)
Action : Shift and goto state 205
State  : 205
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS . LexToken(INT,'3',6,13,53)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS INT . LexToken(RPAREN,')',6,14,54)
Action : Reduce rule [BasicLit -> INT] with ['3'] and goto state 118
Result : <list @ 0x7fec09ee3a88> (['BasicLit', ['3']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS BasicLit . LexToken(RPAREN,')',6,14,54)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec09ee3a88>] and goto state 115
Result : <list @ 0x7fec09ee3b08> (['Lit', ['BasicLit', ['3']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS Lit . LexToken(RPAREN,')',6,14,54)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec09ee3b08>] and goto state 113
Result : <list @ 0x7fec09ee3c88> (['PrimaryExpr', ['Lit', ['BasicLit', ['3 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS PrimaryExpr . LexToken(RPAREN,')',6,14,54)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec09ee3c88>] and goto state 107
Result : <list @ 0x7fec09ee3d08> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS UnaryExpr . LexToken(RPAREN,')',6,14,54)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec09ee3d08>] and goto state 315
Result : <list @ 0x7fec09ee3e08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 315
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS Expr . LexToken(RPAREN,')',6,14,54)
Action : Reduce rule [Expr -> Expr LSS Expr] with [<list @ 0x7fec09ee3a48>,'<',<list @ 0x7fec09ee3e08>] and goto state 236
Result : <list @ 0x7fec09ee3dc8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr . LexToken(RPAREN,')',6,14,54)
Action : e  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN . LexToken(INT,'2',6,9,49)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN INT . LexToken(LSS,'<',6,11,51)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 118
Result : <list @ 0x7fec09ee3408> (['BasicLit', ['2']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN BasicLit . LexToken(LSS,'<',6,11,51)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec09ee3408>] and goto state 115
Result : <list @ 0x7fec09ee3708> (['Lit', ['BasicLit', ['2']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Lit . LexToken(LSS,'<',6,11,51)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec09ee3708>] and goto state 113
Result : <list @ 0x7fec09ee3648> (['PrimaryExpr', ['Lit', ['BasicLit', ['2 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN PrimaryExpr . LexToken(LSS,'<',6,11,51)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec09ee3648>] and goto state 107
Result : <list @ 0x7fec09ee3808> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN UnaryExpr . LexToken(LSS,'<',6,11,51)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec09ee3808>] and goto state 236
Result : <list @ 0x7fec09ee3a48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr . LexToken(LSS,'<',6,11,51)
Action : Shift and goto state 205
State  : 205
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS . LexToken(INT,'3',6,13,53)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS INT . LexToken(RPAREN,')',6,14,54)
Action : Reduce rule [BasicLit -> INT] with ['3'] and goto state 118
Result : <list @ 0x7fec09ee3a88> (['BasicLit', ['3']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS BasicLit . LexToken(RPAREN,')',6,14,54)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec09ee3a88>] and goto state 115
Result : <list @ 0x7fec09ee3b08> (['Lit', ['BasicLit', ['3']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS Lit . LexToken(RPAREN,')',6,14,54)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec09ee3b08>] and goto state 113
Result : <list @ 0x7fec09ee3c88> (['PrimaryExpr', ['Lit', ['BasicLit', ['3 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS PrimaryExpr . LexToken(RPAREN,')',6,14,54)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec09ee3c88>] and goto state 107
Result : <list @ 0x7fec09ee3d08> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS UnaryExpr . LexToken(RPAREN,')',6,14,54)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec09ee3d08>] and goto state 315
Result : <list @ 0x7fec09ee3e08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 315
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr LSS Expr . LexToken(RPAREN,')',6,14,54)
Action : Reduce rule [Expr -> Expr LSS Expr] with [<list @ 0x7fec09ee3a48>,'<',<list @ 0x7fec09ee3e08>] and goto state 236
Result : <list @ 0x7fec09ee3dc8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr . LexToken(RPAREN,')',6,14,54)
Action : Shift and goto state 351
Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr RPAREN . LexToken(LBRACE,'{',6,16,56)
Action : Reduce rule [PrimaryExpr -> LPAREN Expr RPAREN] with ['(',<list @ 0x7fec09ee3dc8>,')'] and goto state 113
Result : <list @ 0x7fec0a1919c8> (['PrimaryExpr', ['Expr', ['Expr', ['Unar ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF PrimaryExpr . LexToken(LBRACE,'{',6,16,56)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a1919c8>] and goto state 107
Result : <list @ 0x7fec0a191908> (['UnaryExpr', ['PrimaryExpr', ['Expr', [ ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF UnaryExpr . LexToken(LBRACE,'{',6,16,56)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a191908>] and goto state 277
Result : <list @ 0x7fec0a191948> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 277
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr . LexToken(LBRACE,'{',6,16,56)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE . LexToken(IDENT,'fmt',7,9,60)
Action : Shift and goto state 179
State  : 179
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IDENT . LexToken(PERIOD,'.',7,12,63)
Action : Shift and goto state 233
State  : 233
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IDENT PERIOD . LexToken(IDENT,'Println',7,13,64)
Action : Shift and goto state 343
State  : 343
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IDENT PERIOD IDENT . LexToken(LPAREN,'(',7,20,71)
Action : Reduce rule [PrimaryExpr -> IDENT PERIOD IDENT] with ['fmt','.','Println'] and goto state 113
Result : <list @ 0x7fec0a191888> (['PrimaryExpr', ['fmt'], ['.'], ['Printl ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr . LexToken(LPAREN,'(',7,20,71)
Action : Shift and goto state 231
State  : 231
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN . LexToken(STRING,'"Hello"',7,21,72)
Action : Shift and goto state 125
State  : 125
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN STRING . LexToken(RPAREN,')',7,28,79)
Action : Reduce rule [BasicLit -> STRING] with ['"Hello"'] and goto state 118
Result : <list @ 0x7fec09f49cc8> (['BasicLit', ['"Hello"']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN BasicLit . LexToken(RPAREN,')',7,28,79)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec09f49cc8>] and goto state 115
Result : <list @ 0x7fec0a191808> (['Lit', ['BasicLit', ['"Hello"']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN Lit . LexToken(RPAREN,')',7,28,79)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a191808>] and goto state 113
Result : <list @ 0x7fec0a191788> (['PrimaryExpr', ['Lit', ['BasicLit', ['" ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',7,28,79)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a191788>] and goto state 107
Result : <list @ 0x7fec0a191748> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',7,28,79)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a191748>] and goto state 139
Result : <list @ 0x7fec0a191708> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF LPAREN Expr RPAREN . LexToken(LBRACE,'{',6,16,56)
Action : Reduce rule [PrimaryExpr -> LPAREN Expr RPAREN] with ['(',<list @ 0x7fec09ee3dc8>,')'] and goto state 113
Result : <list @ 0x7fec0a1919c8> (['PrimaryExpr', ['Expr', ['Expr', ['Unar ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF PrimaryExpr . LexToken(LBRACE,'{',6,16,56)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a1919c8>] and goto state 107
Result : <list @ 0x7fec0a191908> (['UnaryExpr', ['PrimaryExpr', ['Expr', [ ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF UnaryExpr . LexToken(LBRACE,'{',6,16,56)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a191908>] and goto state 277
Result : <list @ 0x7fec0a191948> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 277
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr . LexToken(LBRACE,'{',6,16,56)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE . LexToken(IDENT,'fmt',7,9,60)
Action : Shift and goto state 179
State  : 179
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IDENT . LexToken(PERIOD,'.',7,12,63)
Action : Shift and goto state 233
State  : 233
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IDENT PERIOD . LexToken(IDENT,'Println',7,13,64)
Action : Shift and goto state 343
State  : 343
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IDENT PERIOD IDENT . LexToken(LPAREN,'(',7,20,71)
Action : Reduce rule [PrimaryExpr -> IDENT PERIOD IDENT] with ['fmt','.','Println'] and goto state 113
Result : <list @ 0x7fec0a191888> (['PrimaryExpr', ['fmt'], ['.'], ['Printl ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr . LexToken(LPAREN,'(',7,20,71)
Action : Shift and goto state 231
State  : 231
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN . LexToken(STRING,'"Hello"',7,21,72)
Action : Shift and goto state 125
State  : 125
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN STRING . LexToken(RPAREN,')',7,28,79)
Action : Reduce rule [BasicLit -> STRING] with ['"Hello"'] and goto state 118
Result : <list @ 0x7fec09f49cc8> (['BasicLit', ['"Hello"']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN BasicLit . LexToken(RPAREN,')',7,28,79)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec09f49cc8>] and goto state 115
Result : <list @ 0x7fec0a191808> (['Lit', ['BasicLit', ['"Hello"']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN Lit . LexToken(RPAREN,')',7,28,79)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a191808>] and goto state 113
Result : <list @ 0x7fec0a191788> (['PrimaryExpr', ['Lit', ['BasicLit', ['" ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',7,28,79)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a191788>] and goto state 107
Result : <list @ 0x7fec0a191748> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',7,28,79)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a191748>] and goto state 139
Result : <list @ 0x7fec0a191708> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 139
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',7,28,79)
Action : Reduce rule [ExpressionList -> Expr] with [<list @ 0x7fec0a191708>] and goto state 335
Result : <list @ 0x7fec0a1916c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',7,28,79)
Action : Shift and goto state 397
State  : 397
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7fec0a1916c8>,')'] and goto state 228
Result : <list @ 0x7fec0a191688> (['Arguments', ['ExpressionList', ['Expr' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr Arguments . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7fec0a191888>,<list @ 0x7fec0a191688>] and goto state 113
Result : <list @ 0x7fec0a191608> (['PrimaryExpr', ['PrimaryExpr', ['fmt'], ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a191608>] and goto state 107
Result : <list @ 0x7fec0a191648> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE UnaryExpr . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a191648>] and goto state 175
Result : <list @ 0x7fec0a1915c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 175
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Expr . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [ExpressionStmt -> Expr] with [<list @ 0x7fec0a1915c8>] and goto state 164
Result : <list @ 0x7fec0a191588> (['ExpressionStmt', ['Expr', ['UnaryExpr' ...)
State  : 164
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE ExpressionStmt . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [SimpleStmt -> ExpressionStmt] with [<list @ 0x7fec0a191588>] and goto state 152
Result : <list @ 0x7fec0a191548> (['SimpleStmt', ['ExpressionStmt', ['Expr ...)
State  : 152
Defaulted state 152: Reduce using 194
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE SimpleStmt . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7fec0a191548>] and goto state 149
Result : <list @ 0x7fec0a1914c8> (['Statement', ['SimpleStmt', ['Expressio ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement . LexToken(SEMICOLON,';',7,29,80)
Action : Shift and goto state 255
State  : 255
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON . LexToken(IF,'if',8,9,84)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF . LexToken(LPAREN,'(',8,12,87)
Action : Shift and goto state 117
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN . LexToken(INT,'4',8,13,88)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN INT . LexToken(LSS,'<',8,15,90)
Action : Reduce rule [BasicLit -> INT] with ['4'] and goto state 118
Result : <list @ 0x7fec0a191508> (['BasicLit
State  : 139
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',7,28,79)
Action : Reduce rule [ExpressionList -> Expr] with [<list @ 0x7fec0a191708>] and goto state 335
Result : <list @ 0x7fec0a1916c8> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 335
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',7,28,79)
Action : Shift and goto state 397
State  : 397
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7fec0a1916c8>,')'] and goto state 228
Result : <list @ 0x7fec0a191688> (['Arguments', ['ExpressionList', ['Expr' ...)
State  : 228
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr Arguments . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7fec0a191888>,<list @ 0x7fec0a191688>] and goto state 113
Result : <list @ 0x7fec0a191608> (['PrimaryExpr', ['PrimaryExpr', ['fmt'], ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE PrimaryExpr . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a191608>] and goto state 107
Result : <list @ 0x7fec0a191648> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE UnaryExpr . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a191648>] and goto state 175
Result : <list @ 0x7fec0a1915c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 175
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Expr . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [ExpressionStmt -> Expr] with [<list @ 0x7fec0a1915c8>] and goto state 164
Result : <list @ 0x7fec0a191588> (['ExpressionStmt', ['Expr', ['UnaryExpr' ...)
State  : 164
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE ExpressionStmt . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [SimpleStmt -> ExpressionStmt] with [<list @ 0x7fec0a191588>] and goto state 152
Result : <list @ 0x7fec0a191548> (['SimpleStmt', ['ExpressionStmt', ['Expr ...)
State  : 152
Defaulted state 152: Reduce using 194
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE SimpleStmt . LexToken(SEMICOLON,';',7,29,80)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7fec0a191548>] and goto state 149
Result : <list @ 0x7fec0a1914c8> (['Statement', ['SimpleStmt', ['Expressio ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement . LexToken(SEMICOLON,';',7,29,80)
Action : Shift and goto state 255
State  : 255
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON . LexToken(IF,'if',8,9,84)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF . LexToken(LPAREN,'(',8,12,87)
Action : Shift and goto state 117
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN . LexToken(INT,'4',8,13,88)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN INT . LexToken(LSS,'<',8,15,90)
Action : Reduce rule [BasicLit -> INT] with ['4'] and goto state 118
Result : <list @ 0x7fec0a191508> (['BasicLit', ['4']])
', ['4']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN BasicLit . LexToken(LSS,'<',8,15,90)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a191508>] and goto state 115
Result : <list @ 0x7fec0a191448> (['Lit', ['BasicLit', ['4']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Lit . LexToken(LSS,'<',8,15,90)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a191448>] and goto state 113
Result : <list @ 0x7fec0a191488> (['PrimaryExpr', ['Lit', ['BasicLit', ['4 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN PrimaryExpr . LexToken(LSS,'<',8,15,90)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a191488>] and goto state 107
Result : <list @ 0x7fec0a191408> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN UnaryExpr . LexToken(LSS,'<',8,15,90)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a191408>] and goto state 236
Result : <list @ 0x7fec0a1913c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr . LexToken(LSS,'<',8,15,90)
Action : Shift and goto state 205
State  : 205
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS . LexToken(INT,'5',8,17,92)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS INT . LexToken(RPAREN,')',8,18,93)
Action : Reduce rule [BasicLit -> INT] with ['5'] and goto state 118
Result : <list @ 0x7fec0a191388> (['BasicLit', ['5']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS BasicLit . LexToken(RPAREN,')',8,18,93)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a191388>] and goto state 115
Result : <list @ 0x7fec0a191348> (['Lit', ['BasicLit', ['5']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS Lit . LexToken(RPAREN,')',8,18,93)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a191348>] and goto state 113
Result : <list @ 0x7fec0a1912c8> (['PrimaryExpr', ['Lit', ['BasicLit', ['5 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS PrimaryExpr . LexToken(RPAREN,')',8,18,93)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a1912c8>] and goto state 107
Result : <list @ 0x7fec0a191288> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS UnaryExpr . LexToken(RPAREN,')',8,18,93)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a191288>] and goto state 315
Result : <list @ 0x7fec0a191208> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 315
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS Expr . LexToken(RPAREN,')',8,18,93)
Action : Reduce rule [Expr -> Expr LSS Expr] with [<list @ 0x7fec0a1913c8>,'<',<list @ 0x7fec0a191208>] and goto state 236
Result : <list @ 0x7fec0a1911c8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr . LexTokenState  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN BasicLit . LexToken(LSS,'<',8,15,90)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a191508>] and goto state 115
Result : <list @ 0x7fec0a191448> (['Lit', ['BasicLit', ['4']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Lit . LexToken(LSS,'<',8,15,90)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a191448>] and goto state 113
Result : <list @ 0x7fec0a191488> (['PrimaryExpr', ['Lit', ['BasicLit', ['4 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN PrimaryExpr . LexToken(LSS,'<',8,15,90)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a191488>] and goto state 107
Result : <list @ 0x7fec0a191408> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN UnaryExpr . LexToken(LSS,'<',8,15,90)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a191408>] and goto state 236
Result : <list @ 0x7fec0a1913c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr . LexToken(LSS,'<',8,15,90)
Action : Shift and goto state 205
State  : 205
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS . LexToken(INT,'5',8,17,92)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS INT . LexToken(RPAREN,')',8,18,93)
Action : Reduce rule [BasicLit -> INT] with ['5'] and goto state 118
Result : <list @ 0x7fec0a191388> (['BasicLit', ['5']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS BasicLit . LexToken(RPAREN,')',8,18,93)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a191388>] and goto state 115
Result : <list @ 0x7fec0a191348> (['Lit', ['BasicLit', ['5']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS Lit . LexToken(RPAREN,')',8,18,93)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a191348>] and goto state 113
Result : <list @ 0x7fec0a1912c8> (['PrimaryExpr', ['Lit', ['BasicLit', ['5 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS PrimaryExpr . LexToken(RPAREN,')',8,18,93)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a1912c8>] and goto state 107
Result : <list @ 0x7fec0a191288> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS UnaryExpr . LexToken(RPAREN,')',8,18,93)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a191288>] and goto state 315
Result : <list @ 0x7fec0a191208> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 315
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr LSS Expr . LexToken(RPAREN,')',8,18,93)
Action : Reduce rule [Expr -> Expr LSS Expr] with [<list @ 0x7fec0a1913c8>,'<',<list @ 0x7fec0a191208>] and goto state 236
Result : <list @ 0x7fec0a1911c8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr . LexToken(RPAREN,')',8,18,93)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr RPAREN . LexToken(LBRACE,'{',8,20,95)
Action : Reduce rule [PrimaryExpr -> LPAREN Expr RPAREN] with ['(',<list @ 0x7fec0a1911c8>,')'] and goto state 113
Result : <list @ 0x7fec0a191188> (['PrimaryExpr', ['Expr', ['Expr', ['Unar ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF PrimaryExpr . LexToken(LBRACE,'{',8,20,95)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a191188>] and goto state 107
Result : <list @ 0x7fec0a1910c8> (['UnaryExpr', ['PrimaryExpr', ['Expr', [ ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF UnaryExpr . LexToken(LBRACE,'{',8,20,95)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a1910c8>] and goto state 277
Result : <list @ 0x7fec0a191248> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 277
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr . LexToken(LBRACE,'{',8,20,95)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE . LexToken(IF,'if',10,13,119)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF . LexToken(LPAREN,'(',10,16,122)
Action : Shift and goto state 117
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN . LexToken(INT,'5',10,17,123)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN INT . LexToken(LSS,'<',10,19,125)
Action : Reduce rule [BasicLit -> INT] with ['5'] and goto state 118
Result : <list @ 0x7fec0a191048> (['BasicLit', ['5']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN BasicLit . LexToken(LSS,'<',10,19,125)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a191048>] and goto state 115
Result : <list @ 0x7fec0a191108> (['Lit', ['BasicLit', ['5']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Lit . LexToken(LSS,'<',10,19,125)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a191108>] and goto state 113
Result : <list @ 0x7fec0a191088> (['PrimaryExpr', ['Lit', ['BasicLit', ['5 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN PrimaryExpr . LexToken(LSS,'<',10,19,125)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a191088>] and goto state 107
Result : <list @ 0x7fec0a18dfc8> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN UnaryExpr . LexToken(LSS,'<',10,19,125)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a18dfc8>] and goto state 236
Result : <list @ 0x7fec0a18df08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr . LexToken(LSS,'<',10,19,125)
Action : Shift and goto state 205
State  : 205
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statem(RPAREN,')',8,18,93)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF LPAREN Expr RPAREN . LexToken(LBRACE,'{',8,20,95)
Action : Reduce rule [PrimaryExpr -> LPAREN Expr RPAREN] with ['(',<list @ 0x7fec0a1911c8>,')'] and goto state 113
Result : <list @ 0x7fec0a191188> (['PrimaryExpr', ['Expr', ['Expr', ['Unar ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF PrimaryExpr . LexToken(LBRACE,'{',8,20,95)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a191188>] and goto state 107
Result : <list @ 0x7fec0a1910c8> (['UnaryExpr', ['PrimaryExpr', ['Expr', [ ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF UnaryExpr . LexToken(LBRACE,'{',8,20,95)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a1910c8>] and goto state 277
Result : <list @ 0x7fec0a191248> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 277
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr . LexToken(LBRACE,'{',8,20,95)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE . LexToken(IF,'if',10,13,119)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF . LexToken(LPAREN,'(',10,16,122)
Action : Shift and goto state 117
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN . LexToken(INT,'5',10,17,123)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN INT . LexToken(LSS,'<',10,19,125)
Action : Reduce rule [BasicLit -> INT] with ['5'] and goto state 118
Result : <list @ 0x7fec0a191048> (['BasicLit', ['5']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN BasicLit . LexToken(LSS,'<',10,19,125)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a191048>] and goto state 115
Result : <list @ 0x7fec0a191108> (['Lit', ['BasicLit', ['5']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Lit . LexToken(LSS,'<',10,19,125)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a191108>] and goto state 113
Result : <list @ 0x7fec0a191088> (['PrimaryExpr', ['Lit', ['BasicLit', ['5 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN PrimaryExpr . LexToken(LSS,'<',10,19,125)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a191088>] and goto state 107
Result : <list @ 0x7fec0a18dfc8> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN UnaryExpr . LexToken(LSS,'<',10,19,125)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a18dfc8>] and goto state 236
Result : <list @ 0x7fec0a18df08> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr . LexToken(LSS,'<',10,19,125)
Action : Shift and goto state 205
State  : 205
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS . LexToken(INT,'6',10,21,127)
ent SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS . LexToken(INT,'6',10,21,127)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS INT . LexToken(RPAREN,')',10,22,128)
Action : Reduce rule [BasicLit -> INT] with ['6'] and goto state 118
Result : <list @ 0x7fec0a18df48> (['BasicLit', ['6']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS BasicLit . LexToken(RPAREN,')',10,22,128)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a18df48>] and goto state 115
Result : <list @ 0x7fec0a18dec8> (['Lit', ['BasicLit', ['6']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS Lit . LexToken(RPAREN,')',10,22,128)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a18dec8>] and goto state 113
Result : <list @ 0x7fec0a18de48> (['PrimaryExpr', ['Lit', ['BasicLit', ['6 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS PrimaryExpr . LexToken(RPAREN,')',10,22,128)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a18de48>] and goto state 107
Result : <list @ 0x7fec0a18de08> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS UnaryExpr . LexToken(RPAREN,')',10,22,128)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a18de08>] and goto state 315
Result : <list @ 0x7fec0a18dd48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 315
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS Expr . LexToken(RPAREN,')',10,22,128)
Action : Reduce rule [Expr -> Expr LSS Expr] with [<list @ 0x7fec0a18df08>,'<',<list @ 0x7fec0a18dd48>] and goto state 236
Result : <list @ 0x7fec0a18ddc8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr . LexToken(RPAREN,')',10,22,128)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr RPAREN . LexToken(LBRACE,'{',10,24,130)
Action : Reduce rule [PrimaryExpr -> LPAREN Expr RPAREN] with ['(',<list @ 0x7fec0a18ddc8>,')'] and goto state 113
Result : <list @ 0x7fec0a20fd88> (['PrimaryExpr', ['Expr', ['Expr', ['Unar ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF PrimaryExpr . LexToken(LBRACE,'{',10,24,130)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a20fd88>] and goto state 107
Result : <list @ 0x7fec0a0a3088> (['UnaryExpr', ['PrimaryExpr', ['Expr', [ ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF UnaryExpr . LexToken(LBRACE,'{',10,24,130)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a0a3088>] and goto state 277
Result : <list @ 0x7fec0a0a6c88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 277
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF Expr . LexToken(LBRACE,'{',10,24,130)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF Expr LBRACE . LexToken(RBRACE,'}',12,13,159)
Action : Reduce rule [StatementList -> <empty>] with Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS INT . LexToken(RPAREN,')',10,22,128)
Action : Reduce rule [BasicLit -> INT] with ['6'] and goto state 118
Result : <list @ 0x7fec0a18df48> (['BasicLit', ['6']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS BasicLit . LexToken(RPAREN,')',10,22,128)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a18df48>] and goto state 115
Result : <list @ 0x7fec0a18dec8> (['Lit', ['BasicLit', ['6']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS Lit . LexToken(RPAREN,')',10,22,128)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a18dec8>] and goto state 113
Result : <list @ 0x7fec0a18de48> (['PrimaryExpr', ['Lit', ['BasicLit', ['6 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS PrimaryExpr . LexToken(RPAREN,')',10,22,128)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a18de48>] and goto state 107
Result : <list @ 0x7fec0a18de08> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS UnaryExpr . LexToken(RPAREN,')',10,22,128)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a18de08>] and goto state 315
Result : <list @ 0x7fec0a18dd48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 315
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr LSS Expr . LexToken(RPAREN,')',10,22,128)
Action : Reduce rule [Expr -> Expr LSS Expr] with [<list @ 0x7fec0a18df08>,'<',<list @ 0x7fec0a18dd48>] and goto state 236
Result : <list @ 0x7fec0a18ddc8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr . LexToken(RPAREN,')',10,22,128)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF LPAREN Expr RPAREN . LexToken(LBRACE,'{',10,24,130)
Action : Reduce rule [PrimaryExpr -> LPAREN Expr RPAREN] with ['(',<list @ 0x7fec0a18ddc8>,')'] and goto state 113
Result : <list @ 0x7fec0a20fd88> (['PrimaryExpr', ['Expr', ['Expr', ['Unar ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF PrimaryExpr . LexToken(LBRACE,'{',10,24,130)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a20fd88>] and goto state 107
Result : <list @ 0x7fec0a0a3088> (['UnaryExpr', ['PrimaryExpr', ['Expr', [ ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF UnaryExpr . LexToken(LBRACE,'{',10,24,130)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a0a3088>] and goto state 277
Result : <list @ 0x7fec0a0a6c88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 277
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF Expr . LexToken(LBRACE,'{',10,24,130)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF Expr LBRACE . LexToken(RBRACE,'}',12,13,159)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 148
Result : <list @ 0x7fec09f49dc8> (['StatementList'])
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',12,13,159)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF Expr LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',12,14,160)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec09f49dc8>,'}'] and goto state 367
Result : <list @ 0x7fec09f49408> (['Block', ['StatementList']])
State  : 367
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF Expr Block . LexToken(SEMICOLON,';',12,14,160)
Action : Reduce rule [else_stmt -> <empty>] with [] and goto state 419
Result : <list @ 0x7fec09f49f48> (['else_stmt'])
State  : 419
Defaulted state 419: Reduce using 239
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF Expr Block else_stmt . LexToken(SEMICOLON,';',12,14,160)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7fec0a0a6c88>,<list @ 0x7fec09f49408>,['else_stmt']] and goto state 159
Result : <list @ 0x7fec09f49108> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 159
Defaulted state 159: Reduce using 201
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IfStmt . LexToken(SEMICOLON,';',12,14,160)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7fec09f49108>] and goto state 149
Result : <list @ 0x7fec09f49308> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE Statement . LexToken(SEMICOLON,';',12,14,160)
Action : Shift and goto state 255
State  : 255
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',13,9,164)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 364
Result : <list @ 0x7fec09f492c8> (['StatementList'])
State  : 364
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',13,9,164)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7fec09f49308>,';',<list @ 0x7fec09f492c8>] and goto state 148
Result : <list @ 0x7fec09f49448> (['StatementList', ['Statement', ['IfStmt ...)
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE StatementList . LexToken(RBRACE,'}',13,9,164)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',13,11,166)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec09f49448>,'}'] and goto state 367
Result : <list @ 0x7fec09f49648> (['Block', ['StatementList', ['Statement' ...)
State  : 367
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block . LexToken(ELSE,'else',13,11,166)
Action : Shift and goto state 420
State  : 420
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE . LexToken(IF,'if',13,16,171)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Exp[] and goto state 148
Result : <list @ 0x7fec09f49dc8> (['StatementList'])
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',12,13,159)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF Expr LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',12,14,160)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec09f49dc8>,'}'] and goto state 367
Result : <list @ 0x7fec09f49408> (['Block', ['StatementList']])
State  : 367
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF Expr Block . LexToken(SEMICOLON,';',12,14,160)
Action : Reduce rule [else_stmt -> <empty>] with [] and goto state 419
Result : <list @ 0x7fec09f49f48> (['else_stmt'])
State  : 419
Defaulted state 419: Reduce using 239
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IF Expr Block else_stmt . LexToken(SEMICOLON,';',12,14,160)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7fec0a0a6c88>,<list @ 0x7fec09f49408>,['else_stmt']] and goto state 159
Result : <list @ 0x7fec09f49108> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 159
Defaulted state 159: Reduce using 201
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE IfStmt . LexToken(SEMICOLON,';',12,14,160)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7fec09f49108>] and goto state 149
Result : <list @ 0x7fec09f49308> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE Statement . LexToken(SEMICOLON,';',12,14,160)
Action : Shift and goto state 255
State  : 255
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',13,9,164)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 364
Result : <list @ 0x7fec09f492c8> (['StatementList'])
State  : 364
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',13,9,164)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7fec09f49308>,';',<list @ 0x7fec09f492c8>] and goto state 148
Result : <list @ 0x7fec09f49448> (['StatementList', ['Statement', ['IfStmt ...)
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE StatementList . LexToken(RBRACE,'}',13,9,164)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',13,11,166)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec09f49448>,'}'] and goto state 367
Result : <list @ 0x7fec09f49648> (['Block', ['StatementList', ['Statement' ...)
State  : 367
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block . LexToken(ELSE,'else',13,11,166)
Action : Shift and goto state 420
State  : 420
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE . LexToken(IF,'if',13,16,171)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF . LexToken(LPAREN,'(',13,19,174)
r Block ELSE IF . LexToken(LPAREN,'(',13,19,174)
Action : Shift and goto state 117
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN . LexToken(INT,'6',13,20,175)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN INT . LexToken(GTR,'>',13,22,177)
Action : Reduce rule [BasicLit -> INT] with ['6'] and goto state 118
Result : <list @ 0x7fec09f49088> (['BasicLit', ['6']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN BasicLit . LexToken(GTR,'>',13,22,177)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec09f49088>] and goto state 115
Result : <list @ 0x7fec09f49188> (['Lit', ['BasicLit', ['6']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Lit . LexToken(GTR,'>',13,22,177)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec09f49188>] and goto state 113
Result : <list @ 0x7fec09f49bc8> (['PrimaryExpr', ['Lit', ['BasicLit', ['6 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN PrimaryExpr . LexToken(GTR,'>',13,22,177)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec09f49bc8>] and goto state 107
Result : <list @ 0x7fec09f494c8> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN UnaryExpr . LexToken(GTR,'>',13,22,177)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec09f494c8>] and goto state 236
Result : <list @ 0x7fec0a0a6fc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr . LexToken(GTR,'>',13,22,177)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR . LexToken(INT,'9',13,24,179)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR INT . LexToken(RPAREN,')',13,25,180)
Action : Reduce rule [BasicLit -> INT] with ['9'] and goto state 118
Result : <list @ 0x7fec0a0a6f88> (['BasicLit', ['9']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR BasicLit . LexToken(RPAREN,')',13,25,180)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a0a6f88>] and goto state 115
Result : <list @ 0x7fec0a191b48> (['Lit', ['BasicLit', ['9']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR Lit . LexToken(RPAREN,')',13,25,180)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a191b48>] and goto state 113
Result : <list @ 0x7fec0a18d948> (['PrimaryExpr', ['Lit', ['BasicLit', ['9 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR PrimaryExpr . LexToken(RPAREN,')',13,25,180)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a18d948>] and goto state 107
Result : <list @ 0x7fec0a18da08> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement Action : Shift and goto state 117
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN . LexToken(INT,'6',13,20,175)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN INT . LexToken(GTR,'>',13,22,177)
Action : Reduce rule [BasicLit -> INT] with ['6'] and goto state 118
Result : <list @ 0x7fec09f49088> (['BasicLit', ['6']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN BasicLit . LexToken(GTR,'>',13,22,177)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec09f49088>] and goto state 115
Result : <list @ 0x7fec09f49188> (['Lit', ['BasicLit', ['6']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Lit . LexToken(GTR,'>',13,22,177)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec09f49188>] and goto state 113
Result : <list @ 0x7fec09f49bc8> (['PrimaryExpr', ['Lit', ['BasicLit', ['6 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN PrimaryExpr . LexToken(GTR,'>',13,22,177)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec09f49bc8>] and goto state 107
Result : <list @ 0x7fec09f494c8> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN UnaryExpr . LexToken(GTR,'>',13,22,177)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec09f494c8>] and goto state 236
Result : <list @ 0x7fec0a0a6fc8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr . LexToken(GTR,'>',13,22,177)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR . LexToken(INT,'9',13,24,179)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR INT . LexToken(RPAREN,')',13,25,180)
Action : Reduce rule [BasicLit -> INT] with ['9'] and goto state 118
Result : <list @ 0x7fec0a0a6f88> (['BasicLit', ['9']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR BasicLit . LexToken(RPAREN,')',13,25,180)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a0a6f88>] and goto state 115
Result : <list @ 0x7fec0a191b48> (['Lit', ['BasicLit', ['9']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR Lit . LexToken(RPAREN,')',13,25,180)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a191b48>] and goto state 113
Result : <list @ 0x7fec0a18d948> (['PrimaryExpr', ['Lit', ['BasicLit', ['9 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR PrimaryExpr . LexToken(RPAREN,')',13,25,180)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a18d948>] and goto state 107
Result : <list @ 0x7fec0a18da08> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR UnaryExpr . LexToken(RPAREN,')',13,25,180)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a18da08>] and goto state 317
Result : <list @ 0x7fec0a18d9c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 317
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR Expr . LexToken(RPAREN,')',13,25,180)
Action : Reduce rule [Expr -> Expr GTR Expr] with [<list @ 0x7fec0a0a6fc8>,'>',<list @ 0x7fec0a18d9c8>] and goto state 236
Result : <list @ 0x7fec0a18dcc8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr . LexToken(RPAREN,')',13,25,180)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr RPAREN . LexToken(LBRACE,'{',13,27,182)
Action : Reduce rule [PrimaryExpr -> LPAREN Expr RPAREN] with ['(',<list @ 0x7fec0a18dcc8>,')'] and goto state 113
Result : <list @ 0x7fec0a18dd08> (['PrimaryExpr', ['Expr', ['Expr', ['Unar ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF PrimaryExpr . LexToken(LBRACE,'{',13,27,182)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a18dd08>] and goto state 107
Result : <list @ 0x7fec0a18d848> (['UnaryExpr', ['PrimaryExpr', ['Expr', [ ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF UnaryExpr . LexToken(LBRACE,'{',13,27,182)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a18d848>] and goto state 277
Result : <list @ 0x7fec0a18dd88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 277
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr . LexToken(LBRACE,'{',13,27,182)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr LBRACE . LexToken(RBRACE,'}',15,9,203)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 148
Result : <list @ 0x7fec0a18d8c8> (['StatementList'])
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',15,9,203)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',15,11,205)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a18d8c8>,'}'] and goto state 367
Result : <list @ 0x7fec0a18d988> (['Block', ['StatementList']])
State  : 367
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block . LexToken(ELSE,'else',15,11,205)
Action : Shift and goto state 420
State  : 420
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE . LexToken(LBRACE,'{',15,16,210)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE . LexToken(IF,'if',16,13,215)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr BlockSEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR UnaryExpr . LexToken(RPAREN,')',13,25,180)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a18da08>] and goto state 317
Result : <list @ 0x7fec0a18d9c8> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 317
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr GTR Expr . LexToken(RPAREN,')',13,25,180)
Action : Reduce rule [Expr -> Expr GTR Expr] with [<list @ 0x7fec0a0a6fc8>,'>',<list @ 0x7fec0a18d9c8>] and goto state 236
Result : <list @ 0x7fec0a18dcc8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr . LexToken(RPAREN,')',13,25,180)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF LPAREN Expr RPAREN . LexToken(LBRACE,'{',13,27,182)
Action : Reduce rule [PrimaryExpr -> LPAREN Expr RPAREN] with ['(',<list @ 0x7fec0a18dcc8>,')'] and goto state 113
Result : <list @ 0x7fec0a18dd08> (['PrimaryExpr', ['Expr', ['Expr', ['Unar ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF PrimaryExpr . LexToken(LBRACE,'{',13,27,182)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a18dd08>] and goto state 107
Result : <list @ 0x7fec0a18d848> (['UnaryExpr', ['PrimaryExpr', ['Expr', [ ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF UnaryExpr . LexToken(LBRACE,'{',13,27,182)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a18d848>] and goto state 277
Result : <list @ 0x7fec0a18dd88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 277
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr . LexToken(LBRACE,'{',13,27,182)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr LBRACE . LexToken(RBRACE,'}',15,9,203)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 148
Result : <list @ 0x7fec0a18d8c8> (['StatementList'])
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',15,9,203)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',15,11,205)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a18d8c8>,'}'] and goto state 367
Result : <list @ 0x7fec0a18d988> (['Block', ['StatementList']])
State  : 367
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block . LexToken(ELSE,'else',15,11,205)
Action : Shift and goto state 420
State  : 420
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE . LexToken(LBRACE,'{',15,16,210)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE . LexToken(IF,'if',16,13,215)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF . LexToken(LPAREN,'(',16,16,218)
 ELSE IF Expr Block ELSE LBRACE IF . LexToken(LPAREN,'(',16,16,218)
Action : Shift and goto state 117
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN . LexToken(INT,'5',16,17,219)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN INT . LexToken(GTR,'>',16,19,221)
Action : Reduce rule [BasicLit -> INT] with ['5'] and goto state 118
Result : <list @ 0x7fec0a18d788> (['BasicLit', ['5']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN BasicLit . LexToken(GTR,'>',16,19,221)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a18d788>] and goto state 115
Result : <list @ 0x7fec0a18db08> (['Lit', ['BasicLit', ['5']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Lit . LexToken(GTR,'>',16,19,221)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a18db08>] and goto state 113
Result : <list @ 0x7fec0a18d7c8> (['PrimaryExpr', ['Lit', ['BasicLit', ['5 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN PrimaryExpr . LexToken(GTR,'>',16,19,221)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a18d7c8>] and goto state 107
Result : <list @ 0x7fec0a18dc48> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN UnaryExpr . LexToken(GTR,'>',16,19,221)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a18dc48>] and goto state 236
Result : <list @ 0x7fec0a18db88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr . LexToken(GTR,'>',16,19,221)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR . LexToken(INT,'0',16,21,223)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR INT . LexToken(RPAREN,')',16,22,224)
Action : Reduce rule [BasicLit -> INT] with ['0'] and goto state 118
Result : <list @ 0x7fec0a18dbc8> (['BasicLit', ['0']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR BasicLit . LexToken(RPAREN,')',16,22,224)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a18dbc8>] and goto state 115
Result : <list @ 0x7fec0a18dc88> (['Lit', ['BasicLit', ['0']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR Lit . LexToken(RPAREN,')',16,22,224)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a18dc88>] and goto state 113
Result : <list @ 0x7fec0a4bbdc8> (['PrimaryExpr', ['Lit', ['BasicLit', ['0 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR PrimaryExpr . LexToken(RPAREN,')Action : Shift and goto state 117
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN . LexToken(INT,'5',16,17,219)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN INT . LexToken(GTR,'>',16,19,221)
Action : Reduce rule [BasicLit -> INT] with ['5'] and goto state 118
Result : <list @ 0x7fec0a18d788> (['BasicLit', ['5']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN BasicLit . LexToken(GTR,'>',16,19,221)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a18d788>] and goto state 115
Result : <list @ 0x7fec0a18db08> (['Lit', ['BasicLit', ['5']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Lit . LexToken(GTR,'>',16,19,221)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a18db08>] and goto state 113
Result : <list @ 0x7fec0a18d7c8> (['PrimaryExpr', ['Lit', ['BasicLit', ['5 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN PrimaryExpr . LexToken(GTR,'>',16,19,221)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a18d7c8>] and goto state 107
Result : <list @ 0x7fec0a18dc48> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN UnaryExpr . LexToken(GTR,'>',16,19,221)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a18dc48>] and goto state 236
Result : <list @ 0x7fec0a18db88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr . LexToken(GTR,'>',16,19,221)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR . LexToken(INT,'0',16,21,223)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR INT . LexToken(RPAREN,')',16,22,224)
Action : Reduce rule [BasicLit -> INT] with ['0'] and goto state 118
Result : <list @ 0x7fec0a18dbc8> (['BasicLit', ['0']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR BasicLit . LexToken(RPAREN,')',16,22,224)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a18dbc8>] and goto state 115
Result : <list @ 0x7fec0a18dc88> (['Lit', ['BasicLit', ['0']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR Lit . LexToken(RPAREN,')',16,22,224)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a18dc88>] and goto state 113
Result : <list @ 0x7fec0a4bbdc8> (['PrimaryExpr', ['Lit', ['BasicLit', ['0 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR PrimaryExpr . LexToken(RPAREN,')',16,22,224)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a4bbdc8>] and goto state 107
Result : <list @ 0x7fec0a18d688> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR UnaryExpr . LexToken(RPAREN,')',16,22,224)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a18d688>] and goto state 317
Result : <list @ 0x7fec0a4c9f88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 317
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR Expr . LexToken(RPAREN,')',16,22,224)
Action : Reduce rule [Expr -> Expr GTR Expr] with [<list @ 0x7fec0a18db88>,'>',<list @ 0x7fec0a4c9f88>] and goto state 236
Result : <list @ 0x7fec0a4d3bc8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr . LexToken(RPAREN,')',16,22,224)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr RPAREN . LexToken(LBRACE,'{',16,24,226)
Action : Reduce rule [PrimaryExpr -> LPAREN Expr RPAREN] with ['(',<list @ 0x7fec0a4d3bc8>,')'] and goto state 113
Result : <list @ 0x7fec0a4d3c88> (['PrimaryExpr', ['Expr', ['Expr', ['Unar ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF PrimaryExpr . LexToken(LBRACE,'{',16,24,226)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a4d3c88>] and goto state 107
Result : <list @ 0x7fec0a4d3f08> (['UnaryExpr', ['PrimaryExpr', ['Expr', [ ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF UnaryExpr . LexToken(LBRACE,'{',16,24,226)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a4d3f08>] and goto state 277
Result : <list @ 0x7fec0a4d3b48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 277
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF Expr . LexToken(LBRACE,'{',16,24,226)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF Expr LBRACE . LexToken(RBRACE,'}',18,13,244)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 148
Result : <list @ 0x7fec0a4df7c8> (['StatementList'])
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',18,13,244)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF Expr LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',18,14,245)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a4df7c8>,'}'] and goto state 367
Result : <list @ 0x7fec0a4dfb88> (['Block', ['StatementList']])
State  : 367
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF Expr Block . LexToken(SEMICOLON,';',18,14,245)
Action : Reduce rule [else_stmt -> <empty>] with',16,22,224)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a4bbdc8>] and goto state 107
Result : <list @ 0x7fec0a18d688> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR UnaryExpr . LexToken(RPAREN,')',16,22,224)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a18d688>] and goto state 317
Result : <list @ 0x7fec0a4c9f88> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 317
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR Expr . LexToken(RPAREN,')',16,22,224)
Action : Reduce rule [Expr -> Expr GTR Expr] with [<list @ 0x7fec0a18db88>,'>',<list @ 0x7fec0a4c9f88>] and goto state 236
Result : <list @ 0x7fec0a4d3bc8> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr . LexToken(RPAREN,')',16,22,224)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF LPAREN Expr RPAREN . LexToken(LBRACE,'{',16,24,226)
Action : Reduce rule [PrimaryExpr -> LPAREN Expr RPAREN] with ['(',<list @ 0x7fec0a4d3bc8>,')'] and goto state 113
Result : <list @ 0x7fec0a4d3c88> (['PrimaryExpr', ['Expr', ['Expr', ['Unar ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF PrimaryExpr . LexToken(LBRACE,'{',16,24,226)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a4d3c88>] and goto state 107
Result : <list @ 0x7fec0a4d3f08> (['UnaryExpr', ['PrimaryExpr', ['Expr', [ ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF UnaryExpr . LexToken(LBRACE,'{',16,24,226)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a4d3f08>] and goto state 277
Result : <list @ 0x7fec0a4d3b48> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 277
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF Expr . LexToken(LBRACE,'{',16,24,226)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF Expr LBRACE . LexToken(RBRACE,'}',18,13,244)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 148
Result : <list @ 0x7fec0a4df7c8> (['StatementList'])
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',18,13,244)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF Expr LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',18,14,245)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a4df7c8>,'}'] and goto state 367
Result : <list @ 0x7fec0a4dfb88> (['Block', ['StatementList']])
State  : 367
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF Expr Block . LexToken(SEMICOLON,';',18,14,245)
Action : Reduce rule [else_stmt -> <empty>] with [] and goto state 419
 [] and goto state 419
Result : <list @ 0x7fec0a4df408> (['else_stmt'])
State  : 419
Defaulted state 419: Reduce using 239
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF Expr Block else_stmt . LexToken(SEMICOLON,';',18,14,245)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7fec0a4d3b48>,<list @ 0x7fec0a4dfb88>,['else_stmt']] and goto state 159
Result : <list @ 0x7fec0a4df1c8> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 159
Defaulted state 159: Reduce using 201
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IfStmt . LexToken(SEMICOLON,';',18,14,245)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7fec0a4df1c8>] and goto state 149
Result : <list @ 0x7fec0a4df3c8> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE Statement . LexToken(SEMICOLON,';',18,14,245)
Action : Shift and goto state 255
State  : 255
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',19,9,249)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 364
Result : <list @ 0x7fec0a4dfdc8> (['StatementList'])
State  : 364
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',19,9,249)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7fec0a4df3c8>,';',<list @ 0x7fec0a4dfdc8>] and goto state 148
Result : <list @ 0x7fec0a4df548> (['StatementList', ['Statement', ['IfStmt ...)
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE StatementList . LexToken(RBRACE,'}',19,9,249)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',19,10,250)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a4df548>,'}'] and goto state 464
Result : <list @ 0x7fec0a1ebf88> (['Block', ['StatementList', ['Statement' ...)
State  : 464
Defaulted state 464: Reduce using 242
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE Block . LexToken(SEMICOLON,';',19,10,250)
Action : Reduce rule [else_stmt -> ELSE Block] with ['else',<list @ 0x7fec0a1ebf88>] and goto state 419
Result : <list @ 0x7fec0a1ebcc8> (['else_stmt', ['else'], ['Block', ['Stat ...)
State  : 419
Defaulted state 419: Reduce using 239
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block else_stmt . LexToken(SEMICOLON,';',19,10,250)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7fec0a18dd88>,<list @ 0x7fec0a18d988>,<list @ 0x7fec0a1ebcc8>] and goto state 463
Result : <list @ 0x7fec0a1eb748> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 463
Defaulted state 463: Reduce using 241
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IfStmt . LexToken(SEMICOLON,';',19,10,250)
Action : Reduce rule [else_stmt -> ELSE IfStmt] with ['else',<list @ 0x7fec0a1eb748>] and goto state 419
Result : <list @ 0x7fec0a1eba08> (['else_stmt', ['else'], ['IfStmt', ['if' ...)Result : <list @ 0x7fec0a4df408> (['else_stmt'])
State  : 419
Defaulted state 419: Reduce using 239
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IF Expr Block else_stmt . LexToken(SEMICOLON,';',18,14,245)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7fec0a4d3b48>,<list @ 0x7fec0a4dfb88>,['else_stmt']] and goto state 159
Result : <list @ 0x7fec0a4df1c8> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 159
Defaulted state 159: Reduce using 201
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE IfStmt . LexToken(SEMICOLON,';',18,14,245)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7fec0a4df1c8>] and goto state 149
Result : <list @ 0x7fec0a4df3c8> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE Statement . LexToken(SEMICOLON,';',18,14,245)
Action : Shift and goto state 255
State  : 255
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',19,9,249)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 364
Result : <list @ 0x7fec0a4dfdc8> (['StatementList'])
State  : 364
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',19,9,249)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7fec0a4df3c8>,';',<list @ 0x7fec0a4dfdc8>] and goto state 148
Result : <list @ 0x7fec0a4df548> (['StatementList', ['Statement', ['IfStmt ...)
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE StatementList . LexToken(RBRACE,'}',19,9,249)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',19,10,250)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a4df548>,'}'] and goto state 464
Result : <list @ 0x7fec0a1ebf88> (['Block', ['StatementList', ['Statement' ...)
State  : 464
Defaulted state 464: Reduce using 242
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block ELSE Block . LexToken(SEMICOLON,';',19,10,250)
Action : Reduce rule [else_stmt -> ELSE Block] with ['else',<list @ 0x7fec0a1ebf88>] and goto state 419
Result : <list @ 0x7fec0a1ebcc8> (['else_stmt', ['else'], ['Block', ['Stat ...)
State  : 419
Defaulted state 419: Reduce using 239
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IF Expr Block else_stmt . LexToken(SEMICOLON,';',19,10,250)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7fec0a18dd88>,<list @ 0x7fec0a18d988>,<list @ 0x7fec0a1ebcc8>] and goto state 463
Result : <list @ 0x7fec0a1eb748> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 463
Defaulted state 463: Reduce using 241
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block ELSE IfStmt . LexToken(SEMICOLON,';',19,10,250)
Action : Reduce rule [else_stmt -> ELSE IfStmt] with ['else',<list @ 0x7fec0a1eb748>] and goto state 419
Result : <list @ 0x7fec0a1eba08> (['else_stmt', ['else'], ['IfStmt', ['if' ...)
State  : 419
Defaulted state 419: Reduce using 239
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block else_stmt . LexToken(SEMICOLON,';',19,10,250)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7fec0a191248>,<list @ 0x7fec09f49648>,<list @ 0x7fec0a1eba08>] and goto state 159
Result : <list @ 0x7fec0a1eb988> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 159
Defaulted state 159: Reduce using 201
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IfStmt . LexToken(SEMICOLON,';',19,10,250)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7fec0a1eb988>] and goto state 149
Result : <list @ 0x7fec0a1ebb08> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON Statement . LexToken(SEMICOLON,';',19,10,250)
Action : Shift and goto state 255
State  : 255
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON Statement SEMICOLON . LexToken(RBRACE,'}',20,5,253)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 364
Result : <list @ 0x7fec0a1ebac8> (['StatementList'])
State  : 364
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',20,5,253)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7fec0a1ebb08>,';',<list @ 0x7fec0a1ebac8>] and goto state 364
Result : <list @ 0x7fec0a1eb708> (['StatementList', ['Statement', ['IfStmt ...)
State  : 364
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',20,5,253)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7fec0a1914c8>,';',<list @ 0x7fec0a1eb708>] and goto state 148
Result : <list @ 0x7fec0a1eb808> (['StatementList', ['Statement', ['Simple ...)
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',20,5,253)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',20,7,255)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a1eb808>,'}'] and goto state 367
Result : <list @ 0x7fec0a1eb8c8> (['Block', ['StatementList', ['Statement' ...)
State  : 367
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block . LexToken(ELSE,'else',20,7,255)
Action : Shift and goto state 420
State  : 420
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE . LexToken(LBRACE,'{',20,12,260)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE . LexToken(IF,'if',21,9,264)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF . LexToken(LPAREN,'(',21,12,267)
Action : Shift and goto state 117
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN . LexToken(INT,'5',21,13,268)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN INT . LexToken(GTR,'>',21,15,270)
Action : Reduce rule [BasicLit -> INT] with ['5'] and goto state 118
Result : <list @ 0x7fec0a1eb848> (['BasicLit', ['5']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr
State  : 419
Defaulted state 419: Reduce using 239
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IF Expr Block else_stmt . LexToken(SEMICOLON,';',19,10,250)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7fec0a191248>,<list @ 0x7fec09f49648>,<list @ 0x7fec0a1eba08>] and goto state 159
Result : <list @ 0x7fec0a1eb988> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 159
Defaulted state 159: Reduce using 201
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON IfStmt . LexToken(SEMICOLON,';',19,10,250)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7fec0a1eb988>] and goto state 149
Result : <list @ 0x7fec0a1ebb08> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON Statement . LexToken(SEMICOLON,';',19,10,250)
Action : Shift and goto state 255
State  : 255
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON Statement SEMICOLON . LexToken(RBRACE,'}',20,5,253)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 364
Result : <list @ 0x7fec0a1ebac8> (['StatementList'])
State  : 364
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',20,5,253)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7fec0a1ebb08>,';',<list @ 0x7fec0a1ebac8>] and goto state 364
Result : <list @ 0x7fec0a1eb708> (['StatementList', ['Statement', ['IfStmt ...)
State  : 364
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',20,5,253)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7fec0a1914c8>,';',<list @ 0x7fec0a1eb708>] and goto state 148
Result : <list @ 0x7fec0a1eb808> (['StatementList', ['Statement', ['Simple ...)
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',20,5,253)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',20,7,255)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a1eb808>,'}'] and goto state 367
Result : <list @ 0x7fec0a1eb8c8> (['Block', ['StatementList', ['Statement' ...)
State  : 367
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block . LexToken(ELSE,'else',20,7,255)
Action : Shift and goto state 420
State  : 420
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE . LexToken(LBRACE,'{',20,12,260)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE . LexToken(IF,'if',21,9,264)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF . LexToken(LPAREN,'(',21,12,267)
Action : Shift and goto state 117
State  : 117
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN . LexToken(INT,'5',21,13,268)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN INT . LexToken(GTR,'>',21,15,270)
Action : Reduce rule [BasicLit -> INT] with ['5'] and goto state 118
Result : <list @ 0x7fec0a1eb848> (['BasicLit', ['5']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN BasicLit . LexToken(GTR,'>',21,15,270)
 Block ELSE LBRACE IF LPAREN BasicLit . LexToken(GTR,'>',21,15,270)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a1eb848>] and goto state 115
Result : <list @ 0x7fec0a1ebd88> (['Lit', ['BasicLit', ['5']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Lit . LexToken(GTR,'>',21,15,270)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a1ebd88>] and goto state 113
Result : <list @ 0x7fec09ee2888> (['PrimaryExpr', ['Lit', ['BasicLit', ['5 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN PrimaryExpr . LexToken(GTR,'>',21,15,270)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec09ee2888>] and goto state 107
Result : <list @ 0x7fec0a1ebd48> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN UnaryExpr . LexToken(GTR,'>',21,15,270)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a1ebd48>] and goto state 236
Result : <list @ 0x7fec0a1eb948> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr . LexToken(GTR,'>',21,15,270)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR . LexToken(INT,'9',21,17,272)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR INT . LexToken(RPAREN,')',21,18,273)
Action : Reduce rule [BasicLit -> INT] with ['9'] and goto state 118
Result : <list @ 0x7fec0a200288> (['BasicLit', ['9']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR BasicLit . LexToken(RPAREN,')',21,18,273)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a200288>] and goto state 115
Result : <list @ 0x7fec0a200b48> (['Lit', ['BasicLit', ['9']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR Lit . LexToken(RPAREN,')',21,18,273)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a200b48>] and goto state 113
Result : <list @ 0x7fec0a200c48> (['PrimaryExpr', ['Lit', ['BasicLit', ['9 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR PrimaryExpr . LexToken(RPAREN,')',21,18,273)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a200c48>] and goto state 107
Result : <list @ 0x7fec0a200dc8> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR UnaryExpr . LexToken(RPAREN,')',21,18,273)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a200dc8>] and goto state 317
Result : <list @ 0x7fec0a200208> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 317
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR Expr . LexToken(RPAREN,')',21,18,273)
Action : Reduce rule [Expr -> Expr GTR Expr] with [<list @ 0x7fec0a1eb948>,'>',<list @ 0x7fec0a200208>] and goto state 236
Result : <list @ 0x7fec0a200d48> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr . LexToken(RPAREN,')',21,18,273)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr RPAREN . LexToken(LBRACE,'{',21,20,275)
Action : Reduce rule [PrimaryEAction : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a1eb848>] and goto state 115
Result : <list @ 0x7fec0a1ebd88> (['Lit', ['BasicLit', ['5']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Lit . LexToken(GTR,'>',21,15,270)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a1ebd88>] and goto state 113
Result : <list @ 0x7fec09ee2888> (['PrimaryExpr', ['Lit', ['BasicLit', ['5 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN PrimaryExpr . LexToken(GTR,'>',21,15,270)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec09ee2888>] and goto state 107
Result : <list @ 0x7fec0a1ebd48> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN UnaryExpr . LexToken(GTR,'>',21,15,270)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a1ebd48>] and goto state 236
Result : <list @ 0x7fec0a1eb948> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr . LexToken(GTR,'>',21,15,270)
Action : Shift and goto state 207
State  : 207
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR . LexToken(INT,'9',21,17,272)
Action : Shift and goto state 121
State  : 121
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR INT . LexToken(RPAREN,')',21,18,273)
Action : Reduce rule [BasicLit -> INT] with ['9'] and goto state 118
Result : <list @ 0x7fec0a200288> (['BasicLit', ['9']])
State  : 118
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR BasicLit . LexToken(RPAREN,')',21,18,273)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7fec0a200288>] and goto state 115
Result : <list @ 0x7fec0a200b48> (['Lit', ['BasicLit', ['9']]])
State  : 115
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR Lit . LexToken(RPAREN,')',21,18,273)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7fec0a200b48>] and goto state 113
Result : <list @ 0x7fec0a200c48> (['PrimaryExpr', ['Lit', ['BasicLit', ['9 ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR PrimaryExpr . LexToken(RPAREN,')',21,18,273)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a200c48>] and goto state 107
Result : <list @ 0x7fec0a200dc8> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR UnaryExpr . LexToken(RPAREN,')',21,18,273)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a200dc8>] and goto state 317
Result : <list @ 0x7fec0a200208> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 317
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr GTR Expr . LexToken(RPAREN,')',21,18,273)
Action : Reduce rule [Expr -> Expr GTR Expr] with [<list @ 0x7fec0a1eb948>,'>',<list @ 0x7fec0a200208>] and goto state 236
Result : <list @ 0x7fec0a200d48> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 236
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr . LexToken(RPAREN,')',21,18,273)
Action : Shift and goto state 351
State  : 351
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF LPAREN Expr RPAREN . LexToken(LBRACE,'{',21,20,275)
Action : Reduce rule [PrimaryExpr -> LPAREN Expr RPAREN] with ['(',<list @ 0x7fec0a200d48>,')'] and goto state 113
Result : <list @ 0x7fec0a200bc8> (['PrimaryExpr', ['Expr', ['Expr', ['Unar ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF PrimaryExpr . LexToken(LBRACE,'{',21,20,275)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a200bc8>] and goto state 107
Result : <list @ 0x7fec0a200fc8> (['UnaryExpr', ['PrimaryExpr', ['Expr', [ ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF UnaryExpr . LexToken(LBRACE,'{',21,20,275)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a200fc8>] and goto state 277
Result : <list @ 0x7fec0a200088> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 277
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF Expr . LexToken(LBRACE,'{',21,20,275)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF Expr LBRACE . LexToken(RBRACE,'}',23,9,302)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 148
Result : <list @ 0x7fec0a2000c8> (['StatementList'])
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',23,9,302)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF Expr LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',23,10,303)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a2000c8>,'}'] and goto state 367
Result : <list @ 0x7fec0a200148> (['Block', ['StatementList']])
State  : 367
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF Expr Block . LexToken(SEMICOLON,';',23,10,303)
Action : Reduce rule [else_stmt -> <empty>] with [] and goto state 419
Result : <list @ 0x7fec0a202e08> (['else_stmt'])
State  : 419
Defaulted state 419: Reduce using 239
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF Expr Block else_stmt . LexToken(SEMICOLON,';',23,10,303)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7fec0a200088>,<list @ 0x7fec0a200148>,['else_stmt']] and goto state 159
Result : <list @ 0x7fec0a202648> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 159
Defaulted state 159: Reduce using 201
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IfStmt . LexToken(SEMICOLON,';',23,10,303)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7fec0a202648>] and goto state 149
Result : <list @ 0x7fec0a2004c8> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE Statement . LexToken(SEMICOLON,';',23,10,303)
Action : Shift and goto state 255
State  : 255
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',25,5,330)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 364
Result : <list @ 0x7fec0a202dc8> (['StatementList'])
State  : 364
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',25,5,330)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7fec0a2004c8>,';',<list @ 0x7fec0a202dc8>] and goto state 148
Result : <list @ 0x7fec0a202688> (['StatementList', ['Statement', ['IfStmt ...)
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSxpr -> LPAREN Expr RPAREN] with ['(',<list @ 0x7fec0a200d48>,')'] and goto state 113
Result : <list @ 0x7fec0a200bc8> (['PrimaryExpr', ['Expr', ['Expr', ['Unar ...)
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF PrimaryExpr . LexToken(LBRACE,'{',21,20,275)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7fec0a200bc8>] and goto state 107
Result : <list @ 0x7fec0a200fc8> (['UnaryExpr', ['PrimaryExpr', ['Expr', [ ...)
State  : 107
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF UnaryExpr . LexToken(LBRACE,'{',21,20,275)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7fec0a200fc8>] and goto state 277
Result : <list @ 0x7fec0a200088> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 277
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF Expr . LexToken(LBRACE,'{',21,20,275)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF Expr LBRACE . LexToken(RBRACE,'}',23,9,302)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 148
Result : <list @ 0x7fec0a2000c8> (['StatementList'])
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',23,9,302)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF Expr LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',23,10,303)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a2000c8>,'}'] and goto state 367
Result : <list @ 0x7fec0a200148> (['Block', ['StatementList']])
State  : 367
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF Expr Block . LexToken(SEMICOLON,';',23,10,303)
Action : Reduce rule [else_stmt -> <empty>] with [] and goto state 419
Result : <list @ 0x7fec0a202e08> (['else_stmt'])
State  : 419
Defaulted state 419: Reduce using 239
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IF Expr Block else_stmt . LexToken(SEMICOLON,';',23,10,303)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7fec0a200088>,<list @ 0x7fec0a200148>,['else_stmt']] and goto state 159
Result : <list @ 0x7fec0a202648> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 159
Defaulted state 159: Reduce using 201
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE IfStmt . LexToken(SEMICOLON,';',23,10,303)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7fec0a202648>] and goto state 149
Result : <list @ 0x7fec0a2004c8> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE Statement . LexToken(SEMICOLON,';',23,10,303)
Action : Shift and goto state 255
State  : 255
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',25,5,330)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 364
Result : <list @ 0x7fec0a202dc8> (['StatementList'])
State  : 364
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',25,5,330)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7fec0a2004c8>,';',<list @ 0x7fec0a202dc8>] and goto state 148
Result : <list @ 0x7fec0a202688> (['StatementList', ['Statement', ['IfStmt ...)
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE StatementList . LexToken(RBRACE,'}',25,5,330)
E LBRACE StatementList . LexToken(RBRACE,'}',25,5,330)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',25,6,331)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a202688>,'}'] and goto state 464
Result : <list @ 0x7fec0a202788> (['Block', ['StatementList', ['Statement' ...)
State  : 464
Defaulted state 464: Reduce using 242
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE Block . LexToken(SEMICOLON,';',25,6,331)
Action : Reduce rule [else_stmt -> ELSE Block] with ['else',<list @ 0x7fec0a202788>] and goto state 419
Result : <list @ 0x7fec0a202508> (['else_stmt', ['else'], ['Block', ['Stat ...)
State  : 419
Defaulted state 419: Reduce using 239
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block else_stmt . LexToken(SEMICOLON,';',25,6,331)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7fec0a191948>,<list @ 0x7fec0a1eb8c8>,<list @ 0x7fec0a202508>] and goto state 159
Result : <list @ 0x7fec0a202f88> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 159
Defaulted state 159: Reduce using 201
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IfStmt . LexToken(SEMICOLON,';',25,6,331)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7fec0a202f88>] and goto state 149
Result : <list @ 0x7fec0a2027c8> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement . LexToken(SEMICOLON,';',25,6,331)
Action : Shift and goto state 255
State  : 255
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',26,1,333)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 364
Result : <list @ 0x7fec0a202a08> (['StatementList'])
State  : 364
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',26,1,333)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7fec0a2027c8>,';',<list @ 0x7fec0a202a08>] and goto state 148
Result : <list @ 0x7fec0a202388> (['StatementList', ['Statement', ['IfStmt ...)
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE StatementList . LexToken(RBRACE,'}',26,1,333)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',26,2,334)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a202388>,'}'] and goto state 82
Result : <list @ 0x7fec0a202d08> (['Block', ['StatementList', ['Statement' ...)
State  : 82
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature Block . LexToken(SEMICOLON,';',26,2,334)
Action : Reduce rule [FunctionBody -> Block] with [<list @ 0x7fec0a202d08>] and goto state 81
Result : <list @ 0x7fec0a202888> (['FunctionBody', ['Block', ['StatementLi ...)
State  : 81
Defaulted state 81: Reduce using 169
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature FunctionBody . LexToken(SEMICOLON,';',26,2,334)
Action : Reduce rule [FuncDecl -> FUNC FunctionName Signature FunctionBody] with ['func',<list @ 0x7fec09f4c7c8>,<list @ 0x7fec09ee3088>,<list @ 0x7fec0a202888>] and goto state 12
Result : <list @ 0x7fec0a2025c8> (['FuncDecl', ['func'], ['FunctionName',  ...)
State  : 12
Defaulted state 12: Reduce using 16
Stack  : PackageClause SEMICOLON ImportDeclMult FuncDecl . LexToken(SEMICOLON,';',26,2,334)
Action : Reduce rule [TopLevelDecl -> FuncDecl] with [<list @ 0x7fec0a2025c8>] and goto state 10
Result : <list @ 0x7fec0a202048> (['TopLevelDecl', ['FuncDecl', ['func'],  ...)
State  : 10
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl . LexToken(SEMICOLON,';',2Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',25,6,331)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a202688>,'}'] and goto state 464
Result : <list @ 0x7fec0a202788> (['Block', ['StatementList', ['Statement' ...)
State  : 464
Defaulted state 464: Reduce using 242
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block ELSE Block . LexToken(SEMICOLON,';',25,6,331)
Action : Reduce rule [else_stmt -> ELSE Block] with ['else',<list @ 0x7fec0a202788>] and goto state 419
Result : <list @ 0x7fec0a202508> (['else_stmt', ['else'], ['Block', ['Stat ...)
State  : 419
Defaulted state 419: Reduce using 239
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block else_stmt . LexToken(SEMICOLON,';',25,6,331)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7fec0a191948>,<list @ 0x7fec0a1eb8c8>,<list @ 0x7fec0a202508>] and goto state 159
Result : <list @ 0x7fec0a202f88> (['IfStmt', ['if'], ['Expr', ['UnaryExpr' ...)
State  : 159
Defaulted state 159: Reduce using 201
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IfStmt . LexToken(SEMICOLON,';',25,6,331)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7fec0a202f88>] and goto state 149
Result : <list @ 0x7fec0a2027c8> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement . LexToken(SEMICOLON,';',25,6,331)
Action : Shift and goto state 255
State  : 255
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',26,1,333)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 364
Result : <list @ 0x7fec0a202a08> (['StatementList'])
State  : 364
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',26,1,333)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7fec0a2027c8>,';',<list @ 0x7fec0a202a08>] and goto state 148
Result : <list @ 0x7fec0a202388> (['StatementList', ['Statement', ['IfStmt ...)
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE StatementList . LexToken(RBRACE,'}',26,1,333)
Action : Shift and goto state 254
State  : 254
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',26,2,334)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7fec0a202388>,'}'] and goto state 82
Result : <list @ 0x7fec0a202d08> (['Block', ['StatementList', ['Statement' ...)
State  : 82
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature Block . LexToken(SEMICOLON,';',26,2,334)
Action : Reduce rule [FunctionBody -> Block] with [<list @ 0x7fec0a202d08>] and goto state 81
Result : <list @ 0x7fec0a202888> (['FunctionBody', ['Block', ['StatementLi ...)
State  : 81
Defaulted state 81: Reduce using 169
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature FunctionBody . LexToken(SEMICOLON,';',26,2,334)
Action : Reduce rule [FuncDecl -> FUNC FunctionName Signature FunctionBody] with ['func',<list @ 0x7fec09f4c7c8>,<list @ 0x7fec09ee3088>,<list @ 0x7fec0a202888>] and goto state 12
Result : <list @ 0x7fec0a2025c8> (['FuncDecl', ['func'], ['FunctionName',  ...)
State  : 12
Defaulted state 12: Reduce using 16
Stack  : PackageClause SEMICOLON ImportDeclMult FuncDecl . LexToken(SEMICOLON,';',26,2,334)
Action : Reduce rule [TopLevelDecl -> FuncDecl] with [<list @ 0x7fec0a2025c8>] and goto state 10
Result : <list @ 0x7fec0a202048> (['TopLevelDecl', ['FuncDecl', ['func'],  ...)
State  : 10
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl . LexToken(SEMICOLON,';',26,2,334)
Action : Shift and goto state 27
State  : 27
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON . $end
Action : Reduce rule [TopLevelDeclMult -> <empty>] with [] and goto state 47
Result : <list @ 0x7fec0a209f48> (['TopLevelDeclMult'])
State  : 47
Defaulted state 47: Reduce using 13
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDeclMult . $end
Action : Reduce rule [TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult] with [<list @ 0x7fec0a202048>,';',<list @ 0x7fec0a209f48>] and goto state 9
Result : <list @ 0x7fec0a209d08> (['TopLevelDeclMult', ['TopLevelDecl', [' ...)
State  : 9
Defaulted state 9: Reduce using 1
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult . $end
Action : Reduce rule [SourceFile -> PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult] with [<list @ 0x7fec09f4c248>,';',<list @ 0x7fec09ee3148>,<list @ 0x7fec0a209d08>] and goto state 1
Result : <list @ 0x7fec0a2099c8> (['SourceFile', ['PackageClause', ['packa ...)
State  : 1
Stack  : SourceFile . $end
Done   : Returning <list @ 0x7fec0a2099c8> (['SourceFile', ['PackageClause', ['packa ...)
PLY: PARSE DEBUG END
6,2,334)
Action : Shift and goto state 27
State  : 27
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON . $end
Action : Reduce rule [TopLevelDeclMult -> <empty>] with [] and goto state 47
Result : <list @ 0x7fec0a209f48> (['TopLevelDeclMult'])
State  : 47
Defaulted state 47: Reduce using 13
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDeclMult . $end
Action : Reduce rule [TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult] with [<list @ 0x7fec0a202048>,';',<list @ 0x7fec0a209f48>] and goto state 9
Result : <list @ 0x7fec0a209d08> (['TopLevelDeclMult', ['TopLevelDecl', [' ...)
State  : 9
Defaulted state 9: Reduce using 1
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult . $end
Action : Reduce rule [SourceFile -> PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult] with [<list @ 0x7fec09f4c248>,';',<list @ 0x7fec09ee3148>,<list @ 0x7fec0a209d08>] and goto state 1
Result : <list @ 0x7fec0a2099c8> (['SourceFile', ['PackageClause', ['packa ...)
State  : 1
Stack  : SourceFile . $end
Done   : Returning <list @ 0x7fec0a2099c8> (['SourceFile', ['PackageClause', ['packa ...)
PLY: PARSE DEBUG END
