Created by PLY (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> SourceFile
Rule 1     SourceFile -> PackageStat SEMICOLON ImportDeclMult TopLevelDeclMult
Rule 2     PackageStat -> PACKAGE PackageName
Rule 3     PackageName -> IDENT
Rule 4     ImportDeclMult -> ImportDeclMult ImportDecl SEMICOLON
Rule 5     ImportDeclMult -> <empty>
Rule 6     ImportDecl -> IMPORT ImportSpec
Rule 7     ImportDecl -> IMPORT LPAREN ImportSpecMult RPAREN
Rule 8     ImportSpecMult -> ImportSpecMult ImportSpec SEMICOLON
Rule 9     ImportSpecMult -> <empty>
Rule 10    ImportSpec -> PERIOD ImportPath
Rule 11    ImportSpec -> IDENT ImportPath
Rule 12    ImportSpec -> ImportPath
Rule 13    ImportPath -> STRING
Rule 14    TopLevelDeclMult -> TopLevelDeclMult TopLevelDecl SEMICOLON
Rule 15    TopLevelDeclMult -> <empty>
Rule 16    TopLevelDecl -> Decl
Rule 17    TopLevelDecl -> FuncDecl
Rule 18    Decl -> ConstDecl
Rule 19    Decl -> VarDecl
Rule 20    Decl -> TypeDecl
Rule 21    ConstDecl -> CONST ConstSpec
Rule 22    ConstDecl -> CONST LPAREN ConstSpecMult RPAREN
Rule 23    ConstSpecMult -> ConstSpecMult ConstSpec SEMICOLON
Rule 24    ConstSpecMult -> <empty>
Rule 25    ConstSpec -> IdentifierList Type ASSIGN ExpressionList
Rule 26    IdentifierList -> IDENT IdentifierOth
Rule 27    IdentifierOth -> IdentifierOth COMMA IDENT
Rule 28    IdentifierOth -> <empty>
Rule 29    Type -> TypeName
Rule 30    Type -> TypeLit
Rule 31    Type -> LPAREN Type RPAREN
Rule 32    TypeName -> IDENT
Rule 33    TypeName -> QualifiedIdent
Rule 34    QualifiedIdent -> IDENT PERIOD IDENT
Rule 35    TypeLit -> ArrayType
Rule 36    TypeLit -> StructType
Rule 37    TypeLit -> PointerType
Rule 38    TypeLit -> SliceType
Rule 39    TypeLit -> MapType
Rule 40    TypeLit -> FunctionType
Rule 41    ArrayType -> LBRACK ArrayLength RBRACK ElementType
Rule 42    ArrayLength -> Expr
Rule 43    ElementType -> Type
Rule 44    StructType -> STRUCT LBRACE FieldDeclMult RBRACE
Rule 45    FieldDeclMult -> FieldDeclMult FieldDecl SEMICOLON
Rule 46    FieldDeclMult -> <empty>
Rule 47    FieldDecl -> IdentifierList Type
Rule 48    FieldDecl -> EmbeddedField
Rule 49    FieldDecl -> IdentifierList Type Tag
Rule 50    FieldDecl -> EmbeddedField Tag
Rule 51    Tag -> STRING
Rule 52    EmbeddedField -> MUL TypeName
Rule 53    EmbeddedField -> TypeName
Rule 54    PointerType -> MUL BaseType
Rule 55    BaseType -> Type
Rule 56    SliceType -> LBRACK RBRACK ElementType
Rule 57    MapType -> MAP LBRACK KeyType RBRACK ElementType
Rule 58    KeyType -> Type
Rule 59    FunctionType -> FUNC Signature
Rule 60    ExpressionList -> Expr ExprOth
Rule 61    Expr -> UnaryExpr
Rule 62    Expr -> Expr BinOp Expr
Rule 63    UnaryExpr -> PrimaryExpr
Rule 64    UnaryExpr -> UnaryOp UnaryExpr
Rule 65    BinOp -> LOR
Rule 66    BinOp -> LAND
Rule 67    BinOp -> RelOp
Rule 68    BinOp -> AddOp
Rule 69    BinOp -> MulOp
Rule 70    RelOp -> EQL
Rule 71    RelOp -> NEQ
Rule 72    RelOp -> LSS
Rule 73    RelOp -> LEQ
Rule 74    RelOp -> GTR
Rule 75    RelOp -> GEQ
Rule 76    AddOp -> ADD
Rule 77    AddOp -> SUB
Rule 78    AddOp -> OR
Rule 79    AddOp -> XOR
Rule 80    MulOp -> MUL
Rule 81    MulOp -> QUO
Rule 82    MulOp -> REM
Rule 83    MulOp -> SHL
Rule 84    MulOp -> SHR
Rule 85    MulOp -> AND
Rule 86    MulOp -> AND_NOT
Rule 87    UnaryOp -> ADD
Rule 88    UnaryOp -> SUB
Rule 89    UnaryOp -> NOT
Rule 90    UnaryOp -> XOR
Rule 91    UnaryOp -> MUL
Rule 92    UnaryOp -> AND
Rule 93    ExprOth -> ExprOth COMMA Expr
Rule 94    ExprOth -> <empty>
Rule 95    Operand -> Lit
Rule 96    Operand -> OperandName
Rule 97    Operand -> LPAREN Expr RPAREN
Rule 98    Lit -> BasicLit
Rule 99    Lit -> CompositeLit
Rule 100   Lit -> FunctionLit
Rule 101   BasicLit -> INT
Rule 102   BasicLit -> FLOAT
Rule 103   BasicLit -> IMAG
Rule 104   BasicLit -> RUNE
Rule 105   BasicLit -> STRING
Rule 106   CompositeLit -> StructType LiteralValue
Rule 107   CompositeLit -> ArrayType LiteralValue
Rule 108   CompositeLit -> SliceType LiteralValue
Rule 109   CompositeLit -> MapType LiteralValue
Rule 110   CompositeLit -> TypeName LiteralValue
Rule 111   LiteralValue -> LBRACE ElementList COMMA RBRACE
Rule 112   LiteralValue -> LBRACE ElementList RBRACE
Rule 113   LiteralValue -> LBRACE RBRACE
Rule 114   ElementList -> KeyedElement
Rule 115   ElementList -> ElementList COMMA KeyedElement
Rule 116   KeyedElement -> Element
Rule 117   KeyedElement -> Key COLON Element
Rule 118   Key -> IDENT
Rule 119   Key -> Expr
Rule 120   Key -> LiteralValue
Rule 121   Element -> Expr
Rule 122   Element -> LiteralValue
Rule 123   OperandName -> IDENT
Rule 124   FunctionLit -> FUNC Signature FunctionBody
Rule 125   PrimaryExpr -> Operand
Rule 126   PrimaryExpr -> Conversion
Rule 127   PrimaryExpr -> PrimaryExpr Selector
Rule 128   PrimaryExpr -> PrimaryExpr Slice
Rule 129   PrimaryExpr -> PrimaryExpr Arguments
Rule 130   Conversion -> Type LPAREN Expr RPAREN
Rule 131   Conversion -> Type LPAREN Expr COMMA RPAREN
Rule 132   Selector -> PERIOD IDENT
Rule 133   Slice -> LBRACK Expr COLON Expr RBRACK
Rule 134   Slice -> LBRACK COLON Expr RBRACK
Rule 135   Slice -> LBRACK Expr COLON RBRACK
Rule 136   Slice -> LBRACK COLON RBRACK
Rule 137   Slice -> LBRACK COLON Expr COLON Expr RBRACK
Rule 138   Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK
Rule 139   Arguments -> LPAREN RPAREN
Rule 140   Arguments -> LPAREN ExpressionList RPAREN
Rule 141   Arguments -> LPAREN ExpressionList COMMA RPAREN
Rule 142   Arguments -> LPAREN Type RPAREN
Rule 143   Arguments -> LPAREN Type COMMA RPAREN
Rule 144   Arguments -> LPAREN Type COMMA ExpressionList RPAREN
Rule 145   Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN
Rule 146   TypeDecl -> TYPE TypeSpec
Rule 147   TypeDecl -> TYPE LPAREN TypeSpecMult RPAREN
Rule 148   TypeSpecMult -> TypeSpecMult TypeSpec SEMICOLON
Rule 149   TypeSpecMult -> <empty>
Rule 150   TypeSpec -> AliasDecl
Rule 151   TypeSpec -> Typedef
Rule 152   AliasDecl -> IDENT ASSIGN Type
Rule 153   Typedef -> IDENT Type
Rule 154   VarDecl -> VAR VarSpec
Rule 155   VarDecl -> VAR LPAREN VarMult RPAREN
Rule 156   VarMult -> VarMult VarSpec SEMICOLON
Rule 157   VarMult -> <empty>
Rule 158   VarSpec -> IdentifierList Type ASSIGN ExpressionList
Rule 159   VarSpec -> IdentifierList ASSIGN ExpressionList
Rule 160   VarSpec -> IdentifierList Type
Rule 161   ShortVarDecl -> IdentifierList DEFINE ExpressionList
Rule 162   FuncDecl -> FUNC FunctionName Signature FunctionBody
Rule 163   FuncDecl -> FUNC FunctionName Signature
Rule 164   FunctionName -> IDENT
Rule 165   FunctionBody -> Block
Rule 166   Signature -> Parameters Result
Rule 167   Signature -> Parameters
Rule 168   Parameters -> LPAREN RPAREN
Rule 169   Parameters -> LPAREN ParameterList RPAREN
Rule 170   Parameters -> LPAREN ParameterList COMMA RPAREN
Rule 171   ParameterList -> ParameterList COMMA ParameterDecl
Rule 172   ParameterList -> ParameterDecl
Rule 173   ParameterDecl -> Type
Rule 174   ParameterDecl -> IdentifierList Type
Rule 175   Result -> Parameters
Rule 176   Result -> Type
Rule 177   StatementList -> StatementList Statement SEMICOLON
Rule 178   StatementList -> <empty>
Rule 179   Statement -> Decl
Rule 180   Statement -> LabeledStmt
Rule 181   Statement -> SimpleStmt
Rule 182   Statement -> GotoStmt
Rule 183   Statement -> ReturnStmt
Rule 184   Statement -> BreakStmt
Rule 185   Statement -> ContinueStmt
Rule 186   Statement -> FallthroughStmt
Rule 187   Statement -> Block
Rule 188   Statement -> IfStmt
Rule 189   Statement -> SwitchStmt
Rule 190   Statement -> ForStmt
Rule 191   LabeledStmt -> Label COLON Statement
Rule 192   Label -> IDENT
Rule 193   SimpleStmt -> EmptyStmt
Rule 194   SimpleStmt -> ExpressionStmt
Rule 195   SimpleStmt -> IncDecStmt
Rule 196   SimpleStmt -> Assignment
Rule 197   SimpleStmt -> ShortVarDecl
Rule 198   EmptyStmt -> <empty>
Rule 199   ExpressionStmt -> Expr
Rule 200   IncDecStmt -> Expr INC
Rule 201   IncDecStmt -> Expr DEC
Rule 202   Assignment -> ExpressionList assign_op ExpressionList
Rule 203   assign_op -> add_op_assign
Rule 204   assign_op -> mul_op_assign
Rule 205   assign_op -> ASSIGN
Rule 206   add_op_assign -> ADD_ASSIGN
Rule 207   add_op_assign -> SUB_ASSIGN
Rule 208   add_op_assign -> OR_ASSIGN
Rule 209   add_op_assign -> XOR_ASSIGN
Rule 210   mul_op_assign -> MUL_ASSIGN
Rule 211   mul_op_assign -> QUO_ASSIGN
Rule 212   mul_op_assign -> REM_ASSIGN
Rule 213   mul_op_assign -> AND_ASSIGN
Rule 214   mul_op_assign -> SHL_ASSIGN
Rule 215   mul_op_assign -> SHR_ASSIGN
Rule 216   mul_op_assign -> AND_NOT_ASSIGN
Rule 217   ReturnStmt -> RETURN ExpressionList
Rule 218   ReturnStmt -> RETURN
Rule 219   BreakStmt -> BREAK Label
Rule 220   BreakStmt -> BREAK
Rule 221   ContinueStmt -> CONTINUE Label
Rule 222   ContinueStmt -> CONTINUE
Rule 223   GotoStmt -> GOTO Label
Rule 224   FallthroughStmt -> FALLTHROUGH
Rule 225   Block -> LBRACE StatementList RBRACE
Rule 226   IfStmt -> IF SimpleStmtOpt Expr Block else_stmt
Rule 227   else_stmt -> ELSE IfStmt
Rule 228   else_stmt -> ELSE Block
Rule 229   else_stmt -> <empty>
Rule 230   SimpleStmtOpt -> SimpleStmt SEMICOLON
Rule 231   SimpleStmtOpt -> <empty>
Rule 232   SwitchStmt -> ExprSwitchStmt
Rule 233   SwitchStmt -> TypeSwitchStmt
Rule 234   ExprSwitchStmt -> SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE
Rule 235   ExprOpt -> Expr
Rule 236   ExprOpt -> <empty>
Rule 237   ExprCaseClauseMult -> ExprCaseClauseMult ExprCaseClause
Rule 238   ExprCaseClauseMult -> <empty>
Rule 239   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 240   ExprSwitchCase -> CASE ExpressionList
Rule 241   ExprSwitchCase -> DEFAULT
Rule 242   TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
Rule 243   TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN
Rule 244   ShortVarDeclOpt -> IDENT DEFINE
Rule 245   ShortVarDeclOpt -> <empty>
Rule 246   TypeCaseClauseMult -> TypeCaseClauseMult TypeCaseClause
Rule 247   TypeCaseClauseMult -> <empty>
Rule 248   TypeCaseClause -> TypeSwitchCase COLON StatementList
Rule 249   TypeSwitchCase -> CASE TypeList
Rule 250   TypeSwitchCase -> DEFAULT
Rule 251   TypeList -> Type TypeOth
Rule 252   TypeOth -> COMMA Type TypeOth
Rule 253   TypeOth -> <empty>
Rule 254   ForStmt -> FOR Condition Block
Rule 255   ForStmt -> FOR ForClause Block
Rule 256   ForStmt -> FOR RangeClause Block
Rule 257   Condition -> Expr
Rule 258   ForClause -> InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt
Rule 259   InitStmt -> SimpleStmt
Rule 260   ConditionOpt -> Condition
Rule 261   ConditionOpt -> <empty>
Rule 262   PostStmt -> SimpleStmt
Rule 263   RangeClause -> RangeList RANGE Expr
Rule 264   RangeList -> ExpressionList ASSIGN
Rule 265   RangeList -> IdentifierList DEFINE
Rule 266   RangeList -> <empty>

Terminals, with rules where they appear

ADD                  : 76 87
ADD_ASSIGN           : 206
AND                  : 85 92
AND_ASSIGN           : 213
AND_NOT              : 86
AND_NOT_ASSIGN       : 216
ASSIGN               : 25 152 158 159 205 264
BREAK                : 219 220
CASE                 : 240 249
COLON                : 117 133 134 135 136 137 137 138 138 191 239 248
COMMA                : 27 93 111 115 131 141 143 144 145 145 170 171 252
COMMENT              : 
CONST                : 21 22
CONTINUE             : 221 222
DEC                  : 201
DEFAULT              : 241 250
DEFINE               : 161 244 265
ELSE                 : 227 228
EQL                  : 70
FALLTHROUGH          : 224
FLOAT                : 102
FOR                  : 254 255 256
FUNC                 : 59 124 162 163
GEQ                  : 75
GOTO                 : 223
GTR                  : 74
IDENT                : 3 11 26 27 32 34 34 118 123 132 152 153 164 192 244
IF                   : 226
IMAG                 : 103
IMPORT               : 6 7
INC                  : 200
INT                  : 101
LAND                 : 66
LBRACE               : 44 111 112 113 225 234 242
LBRACK               : 41 56 57 133 134 135 136 137 138
LEQ                  : 73
LOR                  : 65
LPAREN               : 7 22 31 97 130 131 139 140 141 142 143 144 145 147 155 168 169 170 243
LSS                  : 72
MAP                  : 57
MUL                  : 52 54 80 91
MUL_ASSIGN           : 210
NEQ                  : 71
NOT                  : 89
OR                   : 78
OR_ASSIGN            : 208
PACKAGE              : 2
PERIOD               : 10 34 132 243
QUO                  : 81
QUO_ASSIGN           : 211
RANGE                : 263
RBRACE               : 44 111 112 113 225 234 242
RBRACK               : 41 56 57 133 134 135 136 137 138
REM                  : 82
REM_ASSIGN           : 212
RETURN               : 217 218
RPAREN               : 7 22 31 97 130 131 139 140 141 142 143 144 145 147 155 168 169 170 243
RUNE                 : 104
SEMICOLON            : 1 4 8 14 23 45 148 156 177 230 258 258
SHL                  : 83
SHL_ASSIGN           : 214
SHR                  : 84
SHR_ASSIGN           : 215
STRING               : 13 51 105
STRUCT               : 44
SUB                  : 77 88
SUB_ASSIGN           : 207
SWITCH               : 234 242
TYPE                 : 146 147 243
VAR                  : 154 155
XOR                  : 79 90
XOR_ASSIGN           : 209
error                : 

Nonterminals, with rules where they appear

AddOp                : 68
AliasDecl            : 150
Arguments            : 129
ArrayLength          : 41
ArrayType            : 35 107
Assignment           : 196
BaseType             : 54
BasicLit             : 98
BinOp                : 62
Block                : 165 187 226 228 254 255 256
BreakStmt            : 184
CompositeLit         : 99
Condition            : 254 260
ConditionOpt         : 258
ConstDecl            : 18
ConstSpec            : 21 23
ConstSpecMult        : 22 23
ContinueStmt         : 185
Conversion           : 126
Decl                 : 16 179
Element              : 116 117
ElementList          : 111 112 115
ElementType          : 41 56 57
EmbeddedField        : 48 50
EmptyStmt            : 193
Expr                 : 42 60 62 62 93 97 119 121 130 131 133 133 134 135 137 137 138 138 138 199 200 201 226 235 257 263
ExprCaseClause       : 237
ExprCaseClauseMult   : 234 237
ExprOpt              : 234
ExprOth              : 60 93
ExprSwitchCase       : 239
ExprSwitchStmt       : 232
ExpressionList       : 25 140 141 144 145 158 159 161 202 202 217 240 264
ExpressionStmt       : 194
FallthroughStmt      : 186
FieldDecl            : 45
FieldDeclMult        : 44 45
ForClause            : 255
ForStmt              : 190
FuncDecl             : 17
FunctionBody         : 124 162
FunctionLit          : 100
FunctionName         : 162 163
FunctionType         : 40
GotoStmt             : 182
IdentifierList       : 25 47 49 158 159 160 161 174 265
IdentifierOth        : 26 27
IfStmt               : 188 227
ImportDecl           : 4
ImportDeclMult       : 1 4
ImportPath           : 10 11 12
ImportSpec           : 6 8
ImportSpecMult       : 7 8
IncDecStmt           : 195
InitStmt             : 258
Key                  : 117
KeyType              : 57
KeyedElement         : 114 115
Label                : 191 219 221 223
LabeledStmt          : 180
Lit                  : 95
LiteralValue         : 106 107 108 109 110 120 122
MapType              : 39 109
MulOp                : 69
Operand              : 125
OperandName          : 96
PackageName          : 2
PackageStat          : 1
ParameterDecl        : 171 172
ParameterList        : 169 170 171
Parameters           : 166 167 175
PointerType          : 37
PostStmt             : 258
PrimaryExpr          : 63 127 128 129 243
QualifiedIdent       : 33
RangeClause          : 256
RangeList            : 263
RelOp                : 67
Result               : 166
ReturnStmt           : 183
Selector             : 127
ShortVarDecl         : 197
ShortVarDeclOpt      : 243
Signature            : 59 124 162 163
SimpleStmt           : 181 230 259 262
SimpleStmtOpt        : 226 234 242
Slice                : 128
SliceType            : 38 108
SourceFile           : 0
Statement            : 177 191
StatementList        : 177 225 239 248
StructType           : 36 106
SwitchStmt           : 189
Tag                  : 49 50
TopLevelDecl         : 14
TopLevelDeclMult     : 1 14
Type                 : 25 31 43 47 49 55 58 130 131 142 143 144 145 152 153 158 160 173 174 176 251 252
TypeCaseClause       : 246
TypeCaseClauseMult   : 242 246
TypeDecl             : 20
TypeList             : 249
TypeLit              : 30
TypeName             : 29 52 53 110
TypeOth              : 251 252
TypeSpec             : 146 148
TypeSpecMult         : 147 148
TypeSwitchCase       : 248
TypeSwitchGuard      : 242
TypeSwitchStmt       : 233
Typedef              : 151
UnaryExpr            : 61 64
UnaryOp              : 64
VarDecl              : 19
VarMult              : 155 156
VarSpec              : 154 156
add_op_assign        : 203
assign_op            : 202
else_stmt            : 226
mul_op_assign        : 204


state 0

    (0) S' -> . SourceFile
    (1) SourceFile -> . PackageStat SEMICOLON ImportDeclMult TopLevelDeclMult
    (2) PackageStat -> . PACKAGE PackageName

    PACKAGE         shift and go to state 3

    SourceFile                     shift and go to state 1
    PackageStat                    shift and go to state 2

state 1

    (0) S' -> SourceFile .



state 2

    (1) SourceFile -> PackageStat . SEMICOLON ImportDeclMult TopLevelDeclMult

    SEMICOLON       shift and go to state 4


state 3

    (2) PackageStat -> PACKAGE . PackageName
    (3) PackageName -> . IDENT

    IDENT           shift and go to state 6

    PackageName                    shift and go to state 5

state 4

    (1) SourceFile -> PackageStat SEMICOLON . ImportDeclMult TopLevelDeclMult
    (4) ImportDeclMult -> . ImportDeclMult ImportDecl SEMICOLON
    (5) ImportDeclMult -> .

    IMPORT          reduce using rule 5 (ImportDeclMult -> .)
    FUNC            reduce using rule 5 (ImportDeclMult -> .)
    CONST           reduce using rule 5 (ImportDeclMult -> .)
    VAR             reduce using rule 5 (ImportDeclMult -> .)
    TYPE            reduce using rule 5 (ImportDeclMult -> .)
    $end            reduce using rule 5 (ImportDeclMult -> .)

    ImportDeclMult                 shift and go to state 7

state 5

    (2) PackageStat -> PACKAGE PackageName .

    SEMICOLON       reduce using rule 2 (PackageStat -> PACKAGE PackageName .)


state 6

    (3) PackageName -> IDENT .

    SEMICOLON       reduce using rule 3 (PackageName -> IDENT .)


state 7

    (1) SourceFile -> PackageStat SEMICOLON ImportDeclMult . TopLevelDeclMult
    (4) ImportDeclMult -> ImportDeclMult . ImportDecl SEMICOLON
    (14) TopLevelDeclMult -> . TopLevelDeclMult TopLevelDecl SEMICOLON
    (15) TopLevelDeclMult -> .
    (6) ImportDecl -> . IMPORT ImportSpec
    (7) ImportDecl -> . IMPORT LPAREN ImportSpecMult RPAREN

    FUNC            reduce using rule 15 (TopLevelDeclMult -> .)
    CONST           reduce using rule 15 (TopLevelDeclMult -> .)
    VAR             reduce using rule 15 (TopLevelDeclMult -> .)
    TYPE            reduce using rule 15 (TopLevelDeclMult -> .)
    $end            reduce using rule 15 (TopLevelDeclMult -> .)
    IMPORT          shift and go to state 10

    TopLevelDeclMult               shift and go to state 8
    ImportDecl                     shift and go to state 9

state 8

    (1) SourceFile -> PackageStat SEMICOLON ImportDeclMult TopLevelDeclMult .
    (14) TopLevelDeclMult -> TopLevelDeclMult . TopLevelDecl SEMICOLON
    (16) TopLevelDecl -> . Decl
    (17) TopLevelDecl -> . FuncDecl
    (18) Decl -> . ConstDecl
    (19) Decl -> . VarDecl
    (20) Decl -> . TypeDecl
    (162) FuncDecl -> . FUNC FunctionName Signature FunctionBody
    (163) FuncDecl -> . FUNC FunctionName Signature
    (21) ConstDecl -> . CONST ConstSpec
    (22) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (154) VarDecl -> . VAR VarSpec
    (155) VarDecl -> . VAR LPAREN VarMult RPAREN
    (146) TypeDecl -> . TYPE TypeSpec
    (147) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN

    $end            reduce using rule 1 (SourceFile -> PackageStat SEMICOLON ImportDeclMult TopLevelDeclMult .)
    FUNC            shift and go to state 17
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20

    TopLevelDecl                   shift and go to state 11
    Decl                           shift and go to state 12
    FuncDecl                       shift and go to state 13
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16

state 9

    (4) ImportDeclMult -> ImportDeclMult ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 21


state 10

    (6) ImportDecl -> IMPORT . ImportSpec
    (7) ImportDecl -> IMPORT . LPAREN ImportSpecMult RPAREN
    (10) ImportSpec -> . PERIOD ImportPath
    (11) ImportSpec -> . IDENT ImportPath
    (12) ImportSpec -> . ImportPath
    (13) ImportPath -> . STRING

    LPAREN          shift and go to state 23
    PERIOD          shift and go to state 24
    IDENT           shift and go to state 26
    STRING          shift and go to state 27

    ImportSpec                     shift and go to state 22
    ImportPath                     shift and go to state 25

state 11

    (14) TopLevelDeclMult -> TopLevelDeclMult TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 28


state 12

    (16) TopLevelDecl -> Decl .

    SEMICOLON       reduce using rule 16 (TopLevelDecl -> Decl .)


state 13

    (17) TopLevelDecl -> FuncDecl .

    SEMICOLON       reduce using rule 17 (TopLevelDecl -> FuncDecl .)


state 14

    (18) Decl -> ConstDecl .

    SEMICOLON       reduce using rule 18 (Decl -> ConstDecl .)


state 15

    (19) Decl -> VarDecl .

    SEMICOLON       reduce using rule 19 (Decl -> VarDecl .)


state 16

    (20) Decl -> TypeDecl .

    SEMICOLON       reduce using rule 20 (Decl -> TypeDecl .)


state 17

    (162) FuncDecl -> FUNC . FunctionName Signature FunctionBody
    (163) FuncDecl -> FUNC . FunctionName Signature
    (164) FunctionName -> . IDENT

    IDENT           shift and go to state 30

    FunctionName                   shift and go to state 29

state 18

    (21) ConstDecl -> CONST . ConstSpec
    (22) ConstDecl -> CONST . LPAREN ConstSpecMult RPAREN
    (25) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (26) IdentifierList -> . IDENT IdentifierOth

    LPAREN          shift and go to state 32
    IDENT           shift and go to state 34

    ConstSpec                      shift and go to state 31
    IdentifierList                 shift and go to state 33

state 19

    (154) VarDecl -> VAR . VarSpec
    (155) VarDecl -> VAR . LPAREN VarMult RPAREN
    (158) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (159) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (160) VarSpec -> . IdentifierList Type
    (26) IdentifierList -> . IDENT IdentifierOth

    LPAREN          shift and go to state 36
    IDENT           shift and go to state 34

    VarSpec                        shift and go to state 35
    IdentifierList                 shift and go to state 37

state 20

    (146) TypeDecl -> TYPE . TypeSpec
    (147) TypeDecl -> TYPE . LPAREN TypeSpecMult RPAREN
    (150) TypeSpec -> . AliasDecl
    (151) TypeSpec -> . Typedef
    (152) AliasDecl -> . IDENT ASSIGN Type
    (153) Typedef -> . IDENT Type

    LPAREN          shift and go to state 39
    IDENT           shift and go to state 42

    TypeSpec                       shift and go to state 38
    AliasDecl                      shift and go to state 40
    Typedef                        shift and go to state 41

state 21

    (4) ImportDeclMult -> ImportDeclMult ImportDecl SEMICOLON .

    IMPORT          reduce using rule 4 (ImportDeclMult -> ImportDeclMult ImportDecl SEMICOLON .)
    FUNC            reduce using rule 4 (ImportDeclMult -> ImportDeclMult ImportDecl SEMICOLON .)
    CONST           reduce using rule 4 (ImportDeclMult -> ImportDeclMult ImportDecl SEMICOLON .)
    VAR             reduce using rule 4 (ImportDeclMult -> ImportDeclMult ImportDecl SEMICOLON .)
    TYPE            reduce using rule 4 (ImportDeclMult -> ImportDeclMult ImportDecl SEMICOLON .)
    $end            reduce using rule 4 (ImportDeclMult -> ImportDeclMult ImportDecl SEMICOLON .)


state 22

    (6) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 6 (ImportDecl -> IMPORT ImportSpec .)


state 23

    (7) ImportDecl -> IMPORT LPAREN . ImportSpecMult RPAREN
    (8) ImportSpecMult -> . ImportSpecMult ImportSpec SEMICOLON
    (9) ImportSpecMult -> .

    RPAREN          reduce using rule 9 (ImportSpecMult -> .)
    PERIOD          reduce using rule 9 (ImportSpecMult -> .)
    IDENT           reduce using rule 9 (ImportSpecMult -> .)
    STRING          reduce using rule 9 (ImportSpecMult -> .)

    ImportSpecMult                 shift and go to state 43

state 24

    (10) ImportSpec -> PERIOD . ImportPath
    (13) ImportPath -> . STRING

    STRING          shift and go to state 27

    ImportPath                     shift and go to state 44

state 25

    (12) ImportSpec -> ImportPath .

    SEMICOLON       reduce using rule 12 (ImportSpec -> ImportPath .)


state 26

    (11) ImportSpec -> IDENT . ImportPath
    (13) ImportPath -> . STRING

    STRING          shift and go to state 27

    ImportPath                     shift and go to state 45

state 27

    (13) ImportPath -> STRING .

    SEMICOLON       reduce using rule 13 (ImportPath -> STRING .)


state 28

    (14) TopLevelDeclMult -> TopLevelDeclMult TopLevelDecl SEMICOLON .

    FUNC            reduce using rule 14 (TopLevelDeclMult -> TopLevelDeclMult TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 14 (TopLevelDeclMult -> TopLevelDeclMult TopLevelDecl SEMICOLON .)
    VAR             reduce using rule 14 (TopLevelDeclMult -> TopLevelDeclMult TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 14 (TopLevelDeclMult -> TopLevelDeclMult TopLevelDecl SEMICOLON .)
    $end            reduce using rule 14 (TopLevelDeclMult -> TopLevelDeclMult TopLevelDecl SEMICOLON .)


state 29

    (162) FuncDecl -> FUNC FunctionName . Signature FunctionBody
    (163) FuncDecl -> FUNC FunctionName . Signature
    (166) Signature -> . Parameters Result
    (167) Signature -> . Parameters
    (168) Parameters -> . LPAREN RPAREN
    (169) Parameters -> . LPAREN ParameterList RPAREN
    (170) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 48

    Signature                      shift and go to state 46
    Parameters                     shift and go to state 47

state 30

    (164) FunctionName -> IDENT .

    LPAREN          reduce using rule 164 (FunctionName -> IDENT .)


state 31

    (21) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 21 (ConstDecl -> CONST ConstSpec .)


state 32

    (22) ConstDecl -> CONST LPAREN . ConstSpecMult RPAREN
    (23) ConstSpecMult -> . ConstSpecMult ConstSpec SEMICOLON
    (24) ConstSpecMult -> .

    RPAREN          reduce using rule 24 (ConstSpecMult -> .)
    IDENT           reduce using rule 24 (ConstSpecMult -> .)

    ConstSpecMult                  shift and go to state 49

state 33

    (25) ConstSpec -> IdentifierList . Type ASSIGN ExpressionList
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 50
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 34

    (26) IdentifierList -> IDENT . IdentifierOth
    (27) IdentifierOth -> . IdentifierOth COMMA IDENT
    (28) IdentifierOth -> .

    COMMA           reduce using rule 28 (IdentifierOth -> .)
    LPAREN          reduce using rule 28 (IdentifierOth -> .)
    IDENT           reduce using rule 28 (IdentifierOth -> .)
    LBRACK          reduce using rule 28 (IdentifierOth -> .)
    STRUCT          reduce using rule 28 (IdentifierOth -> .)
    MUL             reduce using rule 28 (IdentifierOth -> .)
    MAP             reduce using rule 28 (IdentifierOth -> .)
    FUNC            reduce using rule 28 (IdentifierOth -> .)
    ASSIGN          reduce using rule 28 (IdentifierOth -> .)

    IdentifierOth                  shift and go to state 67

state 35

    (154) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 154 (VarDecl -> VAR VarSpec .)


state 36

    (155) VarDecl -> VAR LPAREN . VarMult RPAREN
    (156) VarMult -> . VarMult VarSpec SEMICOLON
    (157) VarMult -> .

    RPAREN          reduce using rule 157 (VarMult -> .)
    IDENT           reduce using rule 157 (VarMult -> .)

    VarMult                        shift and go to state 68

state 37

    (158) VarSpec -> IdentifierList . Type ASSIGN ExpressionList
    (159) VarSpec -> IdentifierList . ASSIGN ExpressionList
    (160) VarSpec -> IdentifierList . Type
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    ASSIGN          shift and go to state 70
    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 69
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 38

    (146) TypeDecl -> TYPE TypeSpec .

    SEMICOLON       reduce using rule 146 (TypeDecl -> TYPE TypeSpec .)


state 39

    (147) TypeDecl -> TYPE LPAREN . TypeSpecMult RPAREN
    (148) TypeSpecMult -> . TypeSpecMult TypeSpec SEMICOLON
    (149) TypeSpecMult -> .

    RPAREN          reduce using rule 149 (TypeSpecMult -> .)
    IDENT           reduce using rule 149 (TypeSpecMult -> .)

    TypeSpecMult                   shift and go to state 71

state 40

    (150) TypeSpec -> AliasDecl .

    SEMICOLON       reduce using rule 150 (TypeSpec -> AliasDecl .)


state 41

    (151) TypeSpec -> Typedef .

    SEMICOLON       reduce using rule 151 (TypeSpec -> Typedef .)


state 42

    (152) AliasDecl -> IDENT . ASSIGN Type
    (153) Typedef -> IDENT . Type
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    ASSIGN          shift and go to state 72
    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 73
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 43

    (7) ImportDecl -> IMPORT LPAREN ImportSpecMult . RPAREN
    (8) ImportSpecMult -> ImportSpecMult . ImportSpec SEMICOLON
    (10) ImportSpec -> . PERIOD ImportPath
    (11) ImportSpec -> . IDENT ImportPath
    (12) ImportSpec -> . ImportPath
    (13) ImportPath -> . STRING

    RPAREN          shift and go to state 74
    PERIOD          shift and go to state 24
    IDENT           shift and go to state 26
    STRING          shift and go to state 27

    ImportSpec                     shift and go to state 75
    ImportPath                     shift and go to state 25

state 44

    (10) ImportSpec -> PERIOD ImportPath .

    SEMICOLON       reduce using rule 10 (ImportSpec -> PERIOD ImportPath .)


state 45

    (11) ImportSpec -> IDENT ImportPath .

    SEMICOLON       reduce using rule 11 (ImportSpec -> IDENT ImportPath .)


state 46

    (162) FuncDecl -> FUNC FunctionName Signature . FunctionBody
    (163) FuncDecl -> FUNC FunctionName Signature .
    (165) FunctionBody -> . Block
    (225) Block -> . LBRACE StatementList RBRACE

    SEMICOLON       reduce using rule 163 (FuncDecl -> FUNC FunctionName Signature .)
    LBRACE          shift and go to state 78

    FunctionBody                   shift and go to state 76
    Block                          shift and go to state 77

state 47

    (166) Signature -> Parameters . Result
    (167) Signature -> Parameters .
    (175) Result -> . Parameters
    (176) Result -> . Type
    (168) Parameters -> . LPAREN RPAREN
    (169) Parameters -> . LPAREN ParameterList RPAREN
    (170) Parameters -> . LPAREN ParameterList COMMA RPAREN
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for LPAREN resolved as shift
    LBRACE          reduce using rule 167 (Signature -> Parameters .)
    SEMICOLON       reduce using rule 167 (Signature -> Parameters .)
    ASSIGN          reduce using rule 167 (Signature -> Parameters .)
    RPAREN          reduce using rule 167 (Signature -> Parameters .)
    COMMA           reduce using rule 167 (Signature -> Parameters .)
    RBRACK          reduce using rule 167 (Signature -> Parameters .)
    STRING          reduce using rule 167 (Signature -> Parameters .)
    COLON           reduce using rule 167 (Signature -> Parameters .)
    LPAREN          shift and go to state 82
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

  ! LPAREN          [ reduce using rule 167 (Signature -> Parameters .) ]

    Parameters                     shift and go to state 79
    Result                         shift and go to state 80
    Type                           shift and go to state 81
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 48

    (168) Parameters -> LPAREN . RPAREN
    (169) Parameters -> LPAREN . ParameterList RPAREN
    (170) Parameters -> LPAREN . ParameterList COMMA RPAREN
    (171) ParameterList -> . ParameterList COMMA ParameterDecl
    (172) ParameterList -> . ParameterDecl
    (173) ParameterDecl -> . Type
    (174) ParameterDecl -> . IdentifierList Type
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (26) IdentifierList -> . IDENT IdentifierOth
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    RPAREN          shift and go to state 83
    LPAREN          shift and go to state 53
    IDENT           shift and go to state 88
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    ParameterList                  shift and go to state 84
    ParameterDecl                  shift and go to state 85
    Type                           shift and go to state 86
    IdentifierList                 shift and go to state 87
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 49

    (22) ConstDecl -> CONST LPAREN ConstSpecMult . RPAREN
    (23) ConstSpecMult -> ConstSpecMult . ConstSpec SEMICOLON
    (25) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (26) IdentifierList -> . IDENT IdentifierOth

    RPAREN          shift and go to state 89
    IDENT           shift and go to state 34

    ConstSpec                      shift and go to state 90
    IdentifierList                 shift and go to state 33

state 50

    (25) ConstSpec -> IdentifierList Type . ASSIGN ExpressionList

    ASSIGN          shift and go to state 91


state 51

    (29) Type -> TypeName .

    ASSIGN          reduce using rule 29 (Type -> TypeName .)
    SEMICOLON       reduce using rule 29 (Type -> TypeName .)
    LBRACE          reduce using rule 29 (Type -> TypeName .)
    RPAREN          reduce using rule 29 (Type -> TypeName .)
    COMMA           reduce using rule 29 (Type -> TypeName .)
    LPAREN          reduce using rule 29 (Type -> TypeName .)
    RBRACK          reduce using rule 29 (Type -> TypeName .)
    STRING          reduce using rule 29 (Type -> TypeName .)
    COLON           reduce using rule 29 (Type -> TypeName .)


state 52

    (30) Type -> TypeLit .

    ASSIGN          reduce using rule 30 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 30 (Type -> TypeLit .)
    LBRACE          reduce using rule 30 (Type -> TypeLit .)
    RPAREN          reduce using rule 30 (Type -> TypeLit .)
    COMMA           reduce using rule 30 (Type -> TypeLit .)
    LPAREN          reduce using rule 30 (Type -> TypeLit .)
    RBRACK          reduce using rule 30 (Type -> TypeLit .)
    STRING          reduce using rule 30 (Type -> TypeLit .)
    COLON           reduce using rule 30 (Type -> TypeLit .)


state 53

    (31) Type -> LPAREN . Type RPAREN
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 92
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 54

    (32) TypeName -> IDENT .
    (34) QualifiedIdent -> IDENT . PERIOD IDENT

    ASSIGN          reduce using rule 32 (TypeName -> IDENT .)
    SEMICOLON       reduce using rule 32 (TypeName -> IDENT .)
    LBRACE          reduce using rule 32 (TypeName -> IDENT .)
    RPAREN          reduce using rule 32 (TypeName -> IDENT .)
    COMMA           reduce using rule 32 (TypeName -> IDENT .)
    LPAREN          reduce using rule 32 (TypeName -> IDENT .)
    RBRACK          reduce using rule 32 (TypeName -> IDENT .)
    STRING          reduce using rule 32 (TypeName -> IDENT .)
    COLON           reduce using rule 32 (TypeName -> IDENT .)
    PERIOD          shift and go to state 93


state 55

    (33) TypeName -> QualifiedIdent .

    ASSIGN          reduce using rule 33 (TypeName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 33 (TypeName -> QualifiedIdent .)
    LBRACE          reduce using rule 33 (TypeName -> QualifiedIdent .)
    RPAREN          reduce using rule 33 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 33 (TypeName -> QualifiedIdent .)
    LPAREN          reduce using rule 33 (TypeName -> QualifiedIdent .)
    RBRACK          reduce using rule 33 (TypeName -> QualifiedIdent .)
    STRING          reduce using rule 33 (TypeName -> QualifiedIdent .)
    COLON           reduce using rule 33 (TypeName -> QualifiedIdent .)


state 56

    (35) TypeLit -> ArrayType .

    ASSIGN          reduce using rule 35 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 35 (TypeLit -> ArrayType .)
    LBRACE          reduce using rule 35 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 35 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 35 (TypeLit -> ArrayType .)
    LPAREN          reduce using rule 35 (TypeLit -> ArrayType .)
    RBRACK          reduce using rule 35 (TypeLit -> ArrayType .)
    STRING          reduce using rule 35 (TypeLit -> ArrayType .)
    COLON           reduce using rule 35 (TypeLit -> ArrayType .)


state 57

    (36) TypeLit -> StructType .

    ASSIGN          reduce using rule 36 (TypeLit -> StructType .)
    SEMICOLON       reduce using rule 36 (TypeLit -> StructType .)
    LBRACE          reduce using rule 36 (TypeLit -> StructType .)
    RPAREN          reduce using rule 36 (TypeLit -> StructType .)
    COMMA           reduce using rule 36 (TypeLit -> StructType .)
    LPAREN          reduce using rule 36 (TypeLit -> StructType .)
    RBRACK          reduce using rule 36 (TypeLit -> StructType .)
    STRING          reduce using rule 36 (TypeLit -> StructType .)
    COLON           reduce using rule 36 (TypeLit -> StructType .)


state 58

    (37) TypeLit -> PointerType .

    ASSIGN          reduce using rule 37 (TypeLit -> PointerType .)
    SEMICOLON       reduce using rule 37 (TypeLit -> PointerType .)
    LBRACE          reduce using rule 37 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 37 (TypeLit -> PointerType .)
    COMMA           reduce using rule 37 (TypeLit -> PointerType .)
    LPAREN          reduce using rule 37 (TypeLit -> PointerType .)
    RBRACK          reduce using rule 37 (TypeLit -> PointerType .)
    STRING          reduce using rule 37 (TypeLit -> PointerType .)
    COLON           reduce using rule 37 (TypeLit -> PointerType .)


state 59

    (38) TypeLit -> SliceType .

    ASSIGN          reduce using rule 38 (TypeLit -> SliceType .)
    SEMICOLON       reduce using rule 38 (TypeLit -> SliceType .)
    LBRACE          reduce using rule 38 (TypeLit -> SliceType .)
    RPAREN          reduce using rule 38 (TypeLit -> SliceType .)
    COMMA           reduce using rule 38 (TypeLit -> SliceType .)
    LPAREN          reduce using rule 38 (TypeLit -> SliceType .)
    RBRACK          reduce using rule 38 (TypeLit -> SliceType .)
    STRING          reduce using rule 38 (TypeLit -> SliceType .)
    COLON           reduce using rule 38 (TypeLit -> SliceType .)


state 60

    (39) TypeLit -> MapType .

    ASSIGN          reduce using rule 39 (TypeLit -> MapType .)
    SEMICOLON       reduce using rule 39 (TypeLit -> MapType .)
    LBRACE          reduce using rule 39 (TypeLit -> MapType .)
    RPAREN          reduce using rule 39 (TypeLit -> MapType .)
    COMMA           reduce using rule 39 (TypeLit -> MapType .)
    LPAREN          reduce using rule 39 (TypeLit -> MapType .)
    RBRACK          reduce using rule 39 (TypeLit -> MapType .)
    STRING          reduce using rule 39 (TypeLit -> MapType .)
    COLON           reduce using rule 39 (TypeLit -> MapType .)


state 61

    (40) TypeLit -> FunctionType .

    ASSIGN          reduce using rule 40 (TypeLit -> FunctionType .)
    SEMICOLON       reduce using rule 40 (TypeLit -> FunctionType .)
    LBRACE          reduce using rule 40 (TypeLit -> FunctionType .)
    RPAREN          reduce using rule 40 (TypeLit -> FunctionType .)
    COMMA           reduce using rule 40 (TypeLit -> FunctionType .)
    LPAREN          reduce using rule 40 (TypeLit -> FunctionType .)
    RBRACK          reduce using rule 40 (TypeLit -> FunctionType .)
    STRING          reduce using rule 40 (TypeLit -> FunctionType .)
    COLON           reduce using rule 40 (TypeLit -> FunctionType .)


state 62

    (41) ArrayType -> LBRACK . ArrayLength RBRACK ElementType
    (56) SliceType -> LBRACK . RBRACK ElementType
    (42) ArrayLength -> . Expr
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    RBRACK          shift and go to state 95
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    ArrayLength                    shift and go to state 94
    Expr                           shift and go to state 96
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 63

    (44) StructType -> STRUCT . LBRACE FieldDeclMult RBRACE

    LBRACE          shift and go to state 127


state 64

    (54) PointerType -> MUL . BaseType
    (55) BaseType -> . Type
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    BaseType                       shift and go to state 128
    Type                           shift and go to state 129
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 65

    (57) MapType -> MAP . LBRACK KeyType RBRACK ElementType

    LBRACK          shift and go to state 130


state 66

    (59) FunctionType -> FUNC . Signature
    (166) Signature -> . Parameters Result
    (167) Signature -> . Parameters
    (168) Parameters -> . LPAREN RPAREN
    (169) Parameters -> . LPAREN ParameterList RPAREN
    (170) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 48

    Signature                      shift and go to state 131
    Parameters                     shift and go to state 47

state 67

    (26) IdentifierList -> IDENT IdentifierOth .
    (27) IdentifierOth -> IdentifierOth . COMMA IDENT

    LPAREN          reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    IDENT           reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    LBRACK          reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    STRUCT          reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    MUL             reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    MAP             reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    FUNC            reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    ASSIGN          reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    DEFINE          reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    COMMA           shift and go to state 132


state 68

    (155) VarDecl -> VAR LPAREN VarMult . RPAREN
    (156) VarMult -> VarMult . VarSpec SEMICOLON
    (158) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (159) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (160) VarSpec -> . IdentifierList Type
    (26) IdentifierList -> . IDENT IdentifierOth

    RPAREN          shift and go to state 133
    IDENT           shift and go to state 34

    VarSpec                        shift and go to state 134
    IdentifierList                 shift and go to state 37

state 69

    (158) VarSpec -> IdentifierList Type . ASSIGN ExpressionList
    (160) VarSpec -> IdentifierList Type .

    ASSIGN          shift and go to state 135
    SEMICOLON       reduce using rule 160 (VarSpec -> IdentifierList Type .)


state 70

    (159) VarSpec -> IdentifierList ASSIGN . ExpressionList
    (60) ExpressionList -> . Expr ExprOth
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 136
    Expr                           shift and go to state 137
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 71

    (147) TypeDecl -> TYPE LPAREN TypeSpecMult . RPAREN
    (148) TypeSpecMult -> TypeSpecMult . TypeSpec SEMICOLON
    (150) TypeSpec -> . AliasDecl
    (151) TypeSpec -> . Typedef
    (152) AliasDecl -> . IDENT ASSIGN Type
    (153) Typedef -> . IDENT Type

    RPAREN          shift and go to state 138
    IDENT           shift and go to state 42

    TypeSpec                       shift and go to state 139
    AliasDecl                      shift and go to state 40
    Typedef                        shift and go to state 41

state 72

    (152) AliasDecl -> IDENT ASSIGN . Type
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 140
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 73

    (153) Typedef -> IDENT Type .

    SEMICOLON       reduce using rule 153 (Typedef -> IDENT Type .)


state 74

    (7) ImportDecl -> IMPORT LPAREN ImportSpecMult RPAREN .

    SEMICOLON       reduce using rule 7 (ImportDecl -> IMPORT LPAREN ImportSpecMult RPAREN .)


state 75

    (8) ImportSpecMult -> ImportSpecMult ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 141


state 76

    (162) FuncDecl -> FUNC FunctionName Signature FunctionBody .

    SEMICOLON       reduce using rule 162 (FuncDecl -> FUNC FunctionName Signature FunctionBody .)


state 77

    (165) FunctionBody -> Block .

    SEMICOLON       reduce using rule 165 (FunctionBody -> Block .)
    PERIOD          reduce using rule 165 (FunctionBody -> Block .)
    LBRACK          reduce using rule 165 (FunctionBody -> Block .)
    LPAREN          reduce using rule 165 (FunctionBody -> Block .)
    LOR             reduce using rule 165 (FunctionBody -> Block .)
    LAND            reduce using rule 165 (FunctionBody -> Block .)
    EQL             reduce using rule 165 (FunctionBody -> Block .)
    NEQ             reduce using rule 165 (FunctionBody -> Block .)
    LSS             reduce using rule 165 (FunctionBody -> Block .)
    LEQ             reduce using rule 165 (FunctionBody -> Block .)
    GTR             reduce using rule 165 (FunctionBody -> Block .)
    GEQ             reduce using rule 165 (FunctionBody -> Block .)
    ADD             reduce using rule 165 (FunctionBody -> Block .)
    SUB             reduce using rule 165 (FunctionBody -> Block .)
    OR              reduce using rule 165 (FunctionBody -> Block .)
    XOR             reduce using rule 165 (FunctionBody -> Block .)
    MUL             reduce using rule 165 (FunctionBody -> Block .)
    QUO             reduce using rule 165 (FunctionBody -> Block .)
    REM             reduce using rule 165 (FunctionBody -> Block .)
    SHL             reduce using rule 165 (FunctionBody -> Block .)
    SHR             reduce using rule 165 (FunctionBody -> Block .)
    AND             reduce using rule 165 (FunctionBody -> Block .)
    AND_NOT         reduce using rule 165 (FunctionBody -> Block .)
    RBRACK          reduce using rule 165 (FunctionBody -> Block .)
    COMMA           reduce using rule 165 (FunctionBody -> Block .)
    RPAREN          reduce using rule 165 (FunctionBody -> Block .)
    INC             reduce using rule 165 (FunctionBody -> Block .)
    DEC             reduce using rule 165 (FunctionBody -> Block .)
    ASSIGN          reduce using rule 165 (FunctionBody -> Block .)
    ADD_ASSIGN      reduce using rule 165 (FunctionBody -> Block .)
    SUB_ASSIGN      reduce using rule 165 (FunctionBody -> Block .)
    OR_ASSIGN       reduce using rule 165 (FunctionBody -> Block .)
    XOR_ASSIGN      reduce using rule 165 (FunctionBody -> Block .)
    MUL_ASSIGN      reduce using rule 165 (FunctionBody -> Block .)
    QUO_ASSIGN      reduce using rule 165 (FunctionBody -> Block .)
    REM_ASSIGN      reduce using rule 165 (FunctionBody -> Block .)
    AND_ASSIGN      reduce using rule 165 (FunctionBody -> Block .)
    SHL_ASSIGN      reduce using rule 165 (FunctionBody -> Block .)
    SHR_ASSIGN      reduce using rule 165 (FunctionBody -> Block .)
    AND_NOT_ASSIGN  reduce using rule 165 (FunctionBody -> Block .)
    COLON           reduce using rule 165 (FunctionBody -> Block .)
    RBRACE          reduce using rule 165 (FunctionBody -> Block .)
    LBRACE          reduce using rule 165 (FunctionBody -> Block .)


state 78

    (225) Block -> LBRACE . StatementList RBRACE
    (177) StatementList -> . StatementList Statement SEMICOLON
    (178) StatementList -> .

    RBRACE          reduce using rule 178 (StatementList -> .)
    GOTO            reduce using rule 178 (StatementList -> .)
    RETURN          reduce using rule 178 (StatementList -> .)
    BREAK           reduce using rule 178 (StatementList -> .)
    CONTINUE        reduce using rule 178 (StatementList -> .)
    FALLTHROUGH     reduce using rule 178 (StatementList -> .)
    LBRACE          reduce using rule 178 (StatementList -> .)
    IF              reduce using rule 178 (StatementList -> .)
    FOR             reduce using rule 178 (StatementList -> .)
    CONST           reduce using rule 178 (StatementList -> .)
    VAR             reduce using rule 178 (StatementList -> .)
    TYPE            reduce using rule 178 (StatementList -> .)
    IDENT           reduce using rule 178 (StatementList -> .)
    SWITCH          reduce using rule 178 (StatementList -> .)
    ADD             reduce using rule 178 (StatementList -> .)
    SUB             reduce using rule 178 (StatementList -> .)
    NOT             reduce using rule 178 (StatementList -> .)
    XOR             reduce using rule 178 (StatementList -> .)
    MUL             reduce using rule 178 (StatementList -> .)
    AND             reduce using rule 178 (StatementList -> .)
    LPAREN          reduce using rule 178 (StatementList -> .)
    INT             reduce using rule 178 (StatementList -> .)
    FLOAT           reduce using rule 178 (StatementList -> .)
    IMAG            reduce using rule 178 (StatementList -> .)
    RUNE            reduce using rule 178 (StatementList -> .)
    STRING          reduce using rule 178 (StatementList -> .)
    FUNC            reduce using rule 178 (StatementList -> .)
    STRUCT          reduce using rule 178 (StatementList -> .)
    LBRACK          reduce using rule 178 (StatementList -> .)
    MAP             reduce using rule 178 (StatementList -> .)
    SEMICOLON       reduce using rule 178 (StatementList -> .)

    StatementList                  shift and go to state 142

state 79

    (175) Result -> Parameters .

    LBRACE          reduce using rule 175 (Result -> Parameters .)
    SEMICOLON       reduce using rule 175 (Result -> Parameters .)
    ASSIGN          reduce using rule 175 (Result -> Parameters .)
    RPAREN          reduce using rule 175 (Result -> Parameters .)
    COMMA           reduce using rule 175 (Result -> Parameters .)
    LPAREN          reduce using rule 175 (Result -> Parameters .)
    RBRACK          reduce using rule 175 (Result -> Parameters .)
    STRING          reduce using rule 175 (Result -> Parameters .)
    COLON           reduce using rule 175 (Result -> Parameters .)


state 80

    (166) Signature -> Parameters Result .

    LBRACE          reduce using rule 166 (Signature -> Parameters Result .)
    SEMICOLON       reduce using rule 166 (Signature -> Parameters Result .)
    ASSIGN          reduce using rule 166 (Signature -> Parameters Result .)
    RPAREN          reduce using rule 166 (Signature -> Parameters Result .)
    COMMA           reduce using rule 166 (Signature -> Parameters Result .)
    LPAREN          reduce using rule 166 (Signature -> Parameters Result .)
    RBRACK          reduce using rule 166 (Signature -> Parameters Result .)
    STRING          reduce using rule 166 (Signature -> Parameters Result .)
    COLON           reduce using rule 166 (Signature -> Parameters Result .)


state 81

    (176) Result -> Type .

    LBRACE          reduce using rule 176 (Result -> Type .)
    SEMICOLON       reduce using rule 176 (Result -> Type .)
    ASSIGN          reduce using rule 176 (Result -> Type .)
    RPAREN          reduce using rule 176 (Result -> Type .)
    COMMA           reduce using rule 176 (Result -> Type .)
    LPAREN          reduce using rule 176 (Result -> Type .)
    RBRACK          reduce using rule 176 (Result -> Type .)
    STRING          reduce using rule 176 (Result -> Type .)
    COLON           reduce using rule 176 (Result -> Type .)


state 82

    (168) Parameters -> LPAREN . RPAREN
    (169) Parameters -> LPAREN . ParameterList RPAREN
    (170) Parameters -> LPAREN . ParameterList COMMA RPAREN
    (31) Type -> LPAREN . Type RPAREN
    (171) ParameterList -> . ParameterList COMMA ParameterDecl
    (172) ParameterList -> . ParameterDecl
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (173) ParameterDecl -> . Type
    (174) ParameterDecl -> . IdentifierList Type
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (26) IdentifierList -> . IDENT IdentifierOth
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    RPAREN          shift and go to state 83
    LPAREN          shift and go to state 53
    IDENT           shift and go to state 144
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    ParameterList                  shift and go to state 84
    Type                           shift and go to state 143
    ParameterDecl                  shift and go to state 85
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    IdentifierList                 shift and go to state 87
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 83

    (168) Parameters -> LPAREN RPAREN .

    LPAREN          reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    IDENT           reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    LBRACK          reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    STRUCT          reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    MUL             reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    MAP             reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    FUNC            reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    LBRACE          reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    SEMICOLON       reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    ASSIGN          reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    RPAREN          reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    COMMA           reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    RBRACK          reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    STRING          reduce using rule 168 (Parameters -> LPAREN RPAREN .)
    COLON           reduce using rule 168 (Parameters -> LPAREN RPAREN .)


state 84

    (169) Parameters -> LPAREN ParameterList . RPAREN
    (170) Parameters -> LPAREN ParameterList . COMMA RPAREN
    (171) ParameterList -> ParameterList . COMMA ParameterDecl

    RPAREN          shift and go to state 145
    COMMA           shift and go to state 146


state 85

    (172) ParameterList -> ParameterDecl .

    RPAREN          reduce using rule 172 (ParameterList -> ParameterDecl .)
    COMMA           reduce using rule 172 (ParameterList -> ParameterDecl .)


state 86

    (173) ParameterDecl -> Type .

    RPAREN          reduce using rule 173 (ParameterDecl -> Type .)
    COMMA           reduce using rule 173 (ParameterDecl -> Type .)


state 87

    (174) ParameterDecl -> IdentifierList . Type
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 147
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 88

    (26) IdentifierList -> IDENT . IdentifierOth
    (32) TypeName -> IDENT .
    (34) QualifiedIdent -> IDENT . PERIOD IDENT
    (27) IdentifierOth -> . IdentifierOth COMMA IDENT
    (28) IdentifierOth -> .

  ! reduce/reduce conflict for COMMA resolved using rule 28 (IdentifierOth -> .)
    RPAREN          reduce using rule 32 (TypeName -> IDENT .)
    STRING          reduce using rule 32 (TypeName -> IDENT .)
    SEMICOLON       reduce using rule 32 (TypeName -> IDENT .)
    PERIOD          shift and go to state 93
    COMMA           reduce using rule 28 (IdentifierOth -> .)
    LPAREN          reduce using rule 28 (IdentifierOth -> .)
    IDENT           reduce using rule 28 (IdentifierOth -> .)
    LBRACK          reduce using rule 28 (IdentifierOth -> .)
    STRUCT          reduce using rule 28 (IdentifierOth -> .)
    MUL             reduce using rule 28 (IdentifierOth -> .)
    MAP             reduce using rule 28 (IdentifierOth -> .)
    FUNC            reduce using rule 28 (IdentifierOth -> .)

  ! COMMA           [ reduce using rule 32 (TypeName -> IDENT .) ]

    IdentifierOth                  shift and go to state 67

state 89

    (22) ConstDecl -> CONST LPAREN ConstSpecMult RPAREN .

    SEMICOLON       reduce using rule 22 (ConstDecl -> CONST LPAREN ConstSpecMult RPAREN .)


state 90

    (23) ConstSpecMult -> ConstSpecMult ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 148


state 91

    (25) ConstSpec -> IdentifierList Type ASSIGN . ExpressionList
    (60) ExpressionList -> . Expr ExprOth
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Type                           shift and go to state 111
    ExpressionList                 shift and go to state 149
    Expr                           shift and go to state 137
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 92

    (31) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 150


state 93

    (34) QualifiedIdent -> IDENT PERIOD . IDENT

    IDENT           shift and go to state 151


state 94

    (41) ArrayType -> LBRACK ArrayLength . RBRACK ElementType

    RBRACK          shift and go to state 152


state 95

    (56) SliceType -> LBRACK RBRACK . ElementType
    (43) ElementType -> . Type
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    ElementType                    shift and go to state 153
    Type                           shift and go to state 154
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 96

    (42) ArrayLength -> Expr .
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    RBRACK          reduce using rule 42 (ArrayLength -> Expr .)
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 97

    (61) Expr -> UnaryExpr .

    LOR             reduce using rule 61 (Expr -> UnaryExpr .)
    LAND            reduce using rule 61 (Expr -> UnaryExpr .)
    EQL             reduce using rule 61 (Expr -> UnaryExpr .)
    NEQ             reduce using rule 61 (Expr -> UnaryExpr .)
    LSS             reduce using rule 61 (Expr -> UnaryExpr .)
    LEQ             reduce using rule 61 (Expr -> UnaryExpr .)
    GTR             reduce using rule 61 (Expr -> UnaryExpr .)
    GEQ             reduce using rule 61 (Expr -> UnaryExpr .)
    ADD             reduce using rule 61 (Expr -> UnaryExpr .)
    SUB             reduce using rule 61 (Expr -> UnaryExpr .)
    OR              reduce using rule 61 (Expr -> UnaryExpr .)
    XOR             reduce using rule 61 (Expr -> UnaryExpr .)
    MUL             reduce using rule 61 (Expr -> UnaryExpr .)
    QUO             reduce using rule 61 (Expr -> UnaryExpr .)
    REM             reduce using rule 61 (Expr -> UnaryExpr .)
    SHL             reduce using rule 61 (Expr -> UnaryExpr .)
    SHR             reduce using rule 61 (Expr -> UnaryExpr .)
    AND             reduce using rule 61 (Expr -> UnaryExpr .)
    AND_NOT         reduce using rule 61 (Expr -> UnaryExpr .)
    RBRACK          reduce using rule 61 (Expr -> UnaryExpr .)
    COMMA           reduce using rule 61 (Expr -> UnaryExpr .)
    SEMICOLON       reduce using rule 61 (Expr -> UnaryExpr .)
    RPAREN          reduce using rule 61 (Expr -> UnaryExpr .)
    INC             reduce using rule 61 (Expr -> UnaryExpr .)
    DEC             reduce using rule 61 (Expr -> UnaryExpr .)
    ASSIGN          reduce using rule 61 (Expr -> UnaryExpr .)
    ADD_ASSIGN      reduce using rule 61 (Expr -> UnaryExpr .)
    SUB_ASSIGN      reduce using rule 61 (Expr -> UnaryExpr .)
    OR_ASSIGN       reduce using rule 61 (Expr -> UnaryExpr .)
    XOR_ASSIGN      reduce using rule 61 (Expr -> UnaryExpr .)
    MUL_ASSIGN      reduce using rule 61 (Expr -> UnaryExpr .)
    QUO_ASSIGN      reduce using rule 61 (Expr -> UnaryExpr .)
    REM_ASSIGN      reduce using rule 61 (Expr -> UnaryExpr .)
    AND_ASSIGN      reduce using rule 61 (Expr -> UnaryExpr .)
    SHL_ASSIGN      reduce using rule 61 (Expr -> UnaryExpr .)
    SHR_ASSIGN      reduce using rule 61 (Expr -> UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 61 (Expr -> UnaryExpr .)
    COLON           reduce using rule 61 (Expr -> UnaryExpr .)
    RBRACE          reduce using rule 61 (Expr -> UnaryExpr .)
    LBRACE          reduce using rule 61 (Expr -> UnaryExpr .)


state 98

    (63) UnaryExpr -> PrimaryExpr .
    (127) PrimaryExpr -> PrimaryExpr . Selector
    (128) PrimaryExpr -> PrimaryExpr . Slice
    (129) PrimaryExpr -> PrimaryExpr . Arguments
    (132) Selector -> . PERIOD IDENT
    (133) Slice -> . LBRACK Expr COLON Expr RBRACK
    (134) Slice -> . LBRACK COLON Expr RBRACK
    (135) Slice -> . LBRACK Expr COLON RBRACK
    (136) Slice -> . LBRACK COLON RBRACK
    (137) Slice -> . LBRACK COLON Expr COLON Expr RBRACK
    (138) Slice -> . LBRACK Expr COLON Expr COLON Expr RBRACK
    (139) Arguments -> . LPAREN RPAREN
    (140) Arguments -> . LPAREN ExpressionList RPAREN
    (141) Arguments -> . LPAREN ExpressionList COMMA RPAREN
    (142) Arguments -> . LPAREN Type RPAREN
    (143) Arguments -> . LPAREN Type COMMA RPAREN
    (144) Arguments -> . LPAREN Type COMMA ExpressionList RPAREN
    (145) Arguments -> . LPAREN Type COMMA ExpressionList COMMA RPAREN

    LOR             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    LAND            reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    EQL             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    NEQ             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    LSS             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    GTR             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    SUB             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    MUL             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    QUO             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    REM             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    SHL             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    SHR             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    AND_NOT         reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    INC             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    DEC             reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    ADD_ASSIGN      reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    SUB_ASSIGN      reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGN       reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGN      reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    MUL_ASSIGN      reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    QUO_ASSIGN      reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    REM_ASSIGN      reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    AND_ASSIGN      reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    SHL_ASSIGN      reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    SHR_ASSIGN      reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    RBRACE          reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 63 (UnaryExpr -> PrimaryExpr .)
    PERIOD          shift and go to state 181
    LBRACK          shift and go to state 182
    LPAREN          shift and go to state 183

    Selector                       shift and go to state 178
    Slice                          shift and go to state 179
    Arguments                      shift and go to state 180

state 99

    (64) UnaryExpr -> UnaryOp . UnaryExpr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    UnaryOp                        shift and go to state 99
    UnaryExpr                      shift and go to state 184
    PrimaryExpr                    shift and go to state 98
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 100

    (125) PrimaryExpr -> Operand .

    PERIOD          reduce using rule 125 (PrimaryExpr -> Operand .)
    LBRACK          reduce using rule 125 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 125 (PrimaryExpr -> Operand .)
    LOR             reduce using rule 125 (PrimaryExpr -> Operand .)
    LAND            reduce using rule 125 (PrimaryExpr -> Operand .)
    EQL             reduce using rule 125 (PrimaryExpr -> Operand .)
    NEQ             reduce using rule 125 (PrimaryExpr -> Operand .)
    LSS             reduce using rule 125 (PrimaryExpr -> Operand .)
    LEQ             reduce using rule 125 (PrimaryExpr -> Operand .)
    GTR             reduce using rule 125 (PrimaryExpr -> Operand .)
    GEQ             reduce using rule 125 (PrimaryExpr -> Operand .)
    ADD             reduce using rule 125 (PrimaryExpr -> Operand .)
    SUB             reduce using rule 125 (PrimaryExpr -> Operand .)
    OR              reduce using rule 125 (PrimaryExpr -> Operand .)
    XOR             reduce using rule 125 (PrimaryExpr -> Operand .)
    MUL             reduce using rule 125 (PrimaryExpr -> Operand .)
    QUO             reduce using rule 125 (PrimaryExpr -> Operand .)
    REM             reduce using rule 125 (PrimaryExpr -> Operand .)
    SHL             reduce using rule 125 (PrimaryExpr -> Operand .)
    SHR             reduce using rule 125 (PrimaryExpr -> Operand .)
    AND             reduce using rule 125 (PrimaryExpr -> Operand .)
    AND_NOT         reduce using rule 125 (PrimaryExpr -> Operand .)
    RBRACK          reduce using rule 125 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 125 (PrimaryExpr -> Operand .)
    SEMICOLON       reduce using rule 125 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 125 (PrimaryExpr -> Operand .)
    INC             reduce using rule 125 (PrimaryExpr -> Operand .)
    DEC             reduce using rule 125 (PrimaryExpr -> Operand .)
    ASSIGN          reduce using rule 125 (PrimaryExpr -> Operand .)
    ADD_ASSIGN      reduce using rule 125 (PrimaryExpr -> Operand .)
    SUB_ASSIGN      reduce using rule 125 (PrimaryExpr -> Operand .)
    OR_ASSIGN       reduce using rule 125 (PrimaryExpr -> Operand .)
    XOR_ASSIGN      reduce using rule 125 (PrimaryExpr -> Operand .)
    MUL_ASSIGN      reduce using rule 125 (PrimaryExpr -> Operand .)
    QUO_ASSIGN      reduce using rule 125 (PrimaryExpr -> Operand .)
    REM_ASSIGN      reduce using rule 125 (PrimaryExpr -> Operand .)
    AND_ASSIGN      reduce using rule 125 (PrimaryExpr -> Operand .)
    SHL_ASSIGN      reduce using rule 125 (PrimaryExpr -> Operand .)
    SHR_ASSIGN      reduce using rule 125 (PrimaryExpr -> Operand .)
    AND_NOT_ASSIGN  reduce using rule 125 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 125 (PrimaryExpr -> Operand .)
    RBRACE          reduce using rule 125 (PrimaryExpr -> Operand .)
    LBRACE          reduce using rule 125 (PrimaryExpr -> Operand .)


state 101

    (126) PrimaryExpr -> Conversion .

    PERIOD          reduce using rule 126 (PrimaryExpr -> Conversion .)
    LBRACK          reduce using rule 126 (PrimaryExpr -> Conversion .)
    LPAREN          reduce using rule 126 (PrimaryExpr -> Conversion .)
    LOR             reduce using rule 126 (PrimaryExpr -> Conversion .)
    LAND            reduce using rule 126 (PrimaryExpr -> Conversion .)
    EQL             reduce using rule 126 (PrimaryExpr -> Conversion .)
    NEQ             reduce using rule 126 (PrimaryExpr -> Conversion .)
    LSS             reduce using rule 126 (PrimaryExpr -> Conversion .)
    LEQ             reduce using rule 126 (PrimaryExpr -> Conversion .)
    GTR             reduce using rule 126 (PrimaryExpr -> Conversion .)
    GEQ             reduce using rule 126 (PrimaryExpr -> Conversion .)
    ADD             reduce using rule 126 (PrimaryExpr -> Conversion .)
    SUB             reduce using rule 126 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 126 (PrimaryExpr -> Conversion .)
    XOR             reduce using rule 126 (PrimaryExpr -> Conversion .)
    MUL             reduce using rule 126 (PrimaryExpr -> Conversion .)
    QUO             reduce using rule 126 (PrimaryExpr -> Conversion .)
    REM             reduce using rule 126 (PrimaryExpr -> Conversion .)
    SHL             reduce using rule 126 (PrimaryExpr -> Conversion .)
    SHR             reduce using rule 126 (PrimaryExpr -> Conversion .)
    AND             reduce using rule 126 (PrimaryExpr -> Conversion .)
    AND_NOT         reduce using rule 126 (PrimaryExpr -> Conversion .)
    RBRACK          reduce using rule 126 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 126 (PrimaryExpr -> Conversion .)
    SEMICOLON       reduce using rule 126 (PrimaryExpr -> Conversion .)
    RPAREN          reduce using rule 126 (PrimaryExpr -> Conversion .)
    INC             reduce using rule 126 (PrimaryExpr -> Conversion .)
    DEC             reduce using rule 126 (PrimaryExpr -> Conversion .)
    ASSIGN          reduce using rule 126 (PrimaryExpr -> Conversion .)
    ADD_ASSIGN      reduce using rule 126 (PrimaryExpr -> Conversion .)
    SUB_ASSIGN      reduce using rule 126 (PrimaryExpr -> Conversion .)
    OR_ASSIGN       reduce using rule 126 (PrimaryExpr -> Conversion .)
    XOR_ASSIGN      reduce using rule 126 (PrimaryExpr -> Conversion .)
    MUL_ASSIGN      reduce using rule 126 (PrimaryExpr -> Conversion .)
    QUO_ASSIGN      reduce using rule 126 (PrimaryExpr -> Conversion .)
    REM_ASSIGN      reduce using rule 126 (PrimaryExpr -> Conversion .)
    AND_ASSIGN      reduce using rule 126 (PrimaryExpr -> Conversion .)
    SHL_ASSIGN      reduce using rule 126 (PrimaryExpr -> Conversion .)
    SHR_ASSIGN      reduce using rule 126 (PrimaryExpr -> Conversion .)
    AND_NOT_ASSIGN  reduce using rule 126 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 126 (PrimaryExpr -> Conversion .)
    RBRACE          reduce using rule 126 (PrimaryExpr -> Conversion .)
    LBRACE          reduce using rule 126 (PrimaryExpr -> Conversion .)


state 102

    (87) UnaryOp -> ADD .

    ADD             reduce using rule 87 (UnaryOp -> ADD .)
    SUB             reduce using rule 87 (UnaryOp -> ADD .)
    NOT             reduce using rule 87 (UnaryOp -> ADD .)
    XOR             reduce using rule 87 (UnaryOp -> ADD .)
    MUL             reduce using rule 87 (UnaryOp -> ADD .)
    AND             reduce using rule 87 (UnaryOp -> ADD .)
    LPAREN          reduce using rule 87 (UnaryOp -> ADD .)
    IDENT           reduce using rule 87 (UnaryOp -> ADD .)
    INT             reduce using rule 87 (UnaryOp -> ADD .)
    FLOAT           reduce using rule 87 (UnaryOp -> ADD .)
    IMAG            reduce using rule 87 (UnaryOp -> ADD .)
    RUNE            reduce using rule 87 (UnaryOp -> ADD .)
    STRING          reduce using rule 87 (UnaryOp -> ADD .)
    FUNC            reduce using rule 87 (UnaryOp -> ADD .)
    STRUCT          reduce using rule 87 (UnaryOp -> ADD .)
    LBRACK          reduce using rule 87 (UnaryOp -> ADD .)
    MAP             reduce using rule 87 (UnaryOp -> ADD .)


state 103

    (88) UnaryOp -> SUB .

    ADD             reduce using rule 88 (UnaryOp -> SUB .)
    SUB             reduce using rule 88 (UnaryOp -> SUB .)
    NOT             reduce using rule 88 (UnaryOp -> SUB .)
    XOR             reduce using rule 88 (UnaryOp -> SUB .)
    MUL             reduce using rule 88 (UnaryOp -> SUB .)
    AND             reduce using rule 88 (UnaryOp -> SUB .)
    LPAREN          reduce using rule 88 (UnaryOp -> SUB .)
    IDENT           reduce using rule 88 (UnaryOp -> SUB .)
    INT             reduce using rule 88 (UnaryOp -> SUB .)
    FLOAT           reduce using rule 88 (UnaryOp -> SUB .)
    IMAG            reduce using rule 88 (UnaryOp -> SUB .)
    RUNE            reduce using rule 88 (UnaryOp -> SUB .)
    STRING          reduce using rule 88 (UnaryOp -> SUB .)
    FUNC            reduce using rule 88 (UnaryOp -> SUB .)
    STRUCT          reduce using rule 88 (UnaryOp -> SUB .)
    LBRACK          reduce using rule 88 (UnaryOp -> SUB .)
    MAP             reduce using rule 88 (UnaryOp -> SUB .)


state 104

    (89) UnaryOp -> NOT .

    ADD             reduce using rule 89 (UnaryOp -> NOT .)
    SUB             reduce using rule 89 (UnaryOp -> NOT .)
    NOT             reduce using rule 89 (UnaryOp -> NOT .)
    XOR             reduce using rule 89 (UnaryOp -> NOT .)
    MUL             reduce using rule 89 (UnaryOp -> NOT .)
    AND             reduce using rule 89 (UnaryOp -> NOT .)
    LPAREN          reduce using rule 89 (UnaryOp -> NOT .)
    IDENT           reduce using rule 89 (UnaryOp -> NOT .)
    INT             reduce using rule 89 (UnaryOp -> NOT .)
    FLOAT           reduce using rule 89 (UnaryOp -> NOT .)
    IMAG            reduce using rule 89 (UnaryOp -> NOT .)
    RUNE            reduce using rule 89 (UnaryOp -> NOT .)
    STRING          reduce using rule 89 (UnaryOp -> NOT .)
    FUNC            reduce using rule 89 (UnaryOp -> NOT .)
    STRUCT          reduce using rule 89 (UnaryOp -> NOT .)
    LBRACK          reduce using rule 89 (UnaryOp -> NOT .)
    MAP             reduce using rule 89 (UnaryOp -> NOT .)


state 105

    (90) UnaryOp -> XOR .

    ADD             reduce using rule 90 (UnaryOp -> XOR .)
    SUB             reduce using rule 90 (UnaryOp -> XOR .)
    NOT             reduce using rule 90 (UnaryOp -> XOR .)
    XOR             reduce using rule 90 (UnaryOp -> XOR .)
    MUL             reduce using rule 90 (UnaryOp -> XOR .)
    AND             reduce using rule 90 (UnaryOp -> XOR .)
    LPAREN          reduce using rule 90 (UnaryOp -> XOR .)
    IDENT           reduce using rule 90 (UnaryOp -> XOR .)
    INT             reduce using rule 90 (UnaryOp -> XOR .)
    FLOAT           reduce using rule 90 (UnaryOp -> XOR .)
    IMAG            reduce using rule 90 (UnaryOp -> XOR .)
    RUNE            reduce using rule 90 (UnaryOp -> XOR .)
    STRING          reduce using rule 90 (UnaryOp -> XOR .)
    FUNC            reduce using rule 90 (UnaryOp -> XOR .)
    STRUCT          reduce using rule 90 (UnaryOp -> XOR .)
    LBRACK          reduce using rule 90 (UnaryOp -> XOR .)
    MAP             reduce using rule 90 (UnaryOp -> XOR .)


state 106

    (91) UnaryOp -> MUL .
    (54) PointerType -> MUL . BaseType
    (55) BaseType -> . Type
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    ADD             reduce using rule 91 (UnaryOp -> MUL .)
    SUB             reduce using rule 91 (UnaryOp -> MUL .)
    NOT             reduce using rule 91 (UnaryOp -> MUL .)
    XOR             reduce using rule 91 (UnaryOp -> MUL .)
    MUL             reduce using rule 91 (UnaryOp -> MUL .)
    AND             reduce using rule 91 (UnaryOp -> MUL .)
    LPAREN          reduce using rule 91 (UnaryOp -> MUL .)
    IDENT           reduce using rule 91 (UnaryOp -> MUL .)
    INT             reduce using rule 91 (UnaryOp -> MUL .)
    FLOAT           reduce using rule 91 (UnaryOp -> MUL .)
    IMAG            reduce using rule 91 (UnaryOp -> MUL .)
    RUNE            reduce using rule 91 (UnaryOp -> MUL .)
    STRING          reduce using rule 91 (UnaryOp -> MUL .)
    FUNC            reduce using rule 91 (UnaryOp -> MUL .)
    STRUCT          reduce using rule 91 (UnaryOp -> MUL .)
    LBRACK          reduce using rule 91 (UnaryOp -> MUL .)
    MAP             reduce using rule 91 (UnaryOp -> MUL .)

  ! LPAREN          [ shift and go to state 53 ]
  ! IDENT           [ shift and go to state 54 ]
  ! LBRACK          [ shift and go to state 62 ]
  ! STRUCT          [ shift and go to state 63 ]
  ! MUL             [ shift and go to state 64 ]
  ! MAP             [ shift and go to state 65 ]
  ! FUNC            [ shift and go to state 66 ]

    BaseType                       shift and go to state 128
    Type                           shift and go to state 129
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 107

    (92) UnaryOp -> AND .

    ADD             reduce using rule 92 (UnaryOp -> AND .)
    SUB             reduce using rule 92 (UnaryOp -> AND .)
    NOT             reduce using rule 92 (UnaryOp -> AND .)
    XOR             reduce using rule 92 (UnaryOp -> AND .)
    MUL             reduce using rule 92 (UnaryOp -> AND .)
    AND             reduce using rule 92 (UnaryOp -> AND .)
    LPAREN          reduce using rule 92 (UnaryOp -> AND .)
    IDENT           reduce using rule 92 (UnaryOp -> AND .)
    INT             reduce using rule 92 (UnaryOp -> AND .)
    FLOAT           reduce using rule 92 (UnaryOp -> AND .)
    IMAG            reduce using rule 92 (UnaryOp -> AND .)
    RUNE            reduce using rule 92 (UnaryOp -> AND .)
    STRING          reduce using rule 92 (UnaryOp -> AND .)
    FUNC            reduce using rule 92 (UnaryOp -> AND .)
    STRUCT          reduce using rule 92 (UnaryOp -> AND .)
    LBRACK          reduce using rule 92 (UnaryOp -> AND .)
    MAP             reduce using rule 92 (UnaryOp -> AND .)


state 108

    (95) Operand -> Lit .

    PERIOD          reduce using rule 95 (Operand -> Lit .)
    LBRACK          reduce using rule 95 (Operand -> Lit .)
    LPAREN          reduce using rule 95 (Operand -> Lit .)
    LOR             reduce using rule 95 (Operand -> Lit .)
    LAND            reduce using rule 95 (Operand -> Lit .)
    EQL             reduce using rule 95 (Operand -> Lit .)
    NEQ             reduce using rule 95 (Operand -> Lit .)
    LSS             reduce using rule 95 (Operand -> Lit .)
    LEQ             reduce using rule 95 (Operand -> Lit .)
    GTR             reduce using rule 95 (Operand -> Lit .)
    GEQ             reduce using rule 95 (Operand -> Lit .)
    ADD             reduce using rule 95 (Operand -> Lit .)
    SUB             reduce using rule 95 (Operand -> Lit .)
    OR              reduce using rule 95 (Operand -> Lit .)
    XOR             reduce using rule 95 (Operand -> Lit .)
    MUL             reduce using rule 95 (Operand -> Lit .)
    QUO             reduce using rule 95 (Operand -> Lit .)
    REM             reduce using rule 95 (Operand -> Lit .)
    SHL             reduce using rule 95 (Operand -> Lit .)
    SHR             reduce using rule 95 (Operand -> Lit .)
    AND             reduce using rule 95 (Operand -> Lit .)
    AND_NOT         reduce using rule 95 (Operand -> Lit .)
    RBRACK          reduce using rule 95 (Operand -> Lit .)
    COMMA           reduce using rule 95 (Operand -> Lit .)
    SEMICOLON       reduce using rule 95 (Operand -> Lit .)
    RPAREN          reduce using rule 95 (Operand -> Lit .)
    INC             reduce using rule 95 (Operand -> Lit .)
    DEC             reduce using rule 95 (Operand -> Lit .)
    ASSIGN          reduce using rule 95 (Operand -> Lit .)
    ADD_ASSIGN      reduce using rule 95 (Operand -> Lit .)
    SUB_ASSIGN      reduce using rule 95 (Operand -> Lit .)
    OR_ASSIGN       reduce using rule 95 (Operand -> Lit .)
    XOR_ASSIGN      reduce using rule 95 (Operand -> Lit .)
    MUL_ASSIGN      reduce using rule 95 (Operand -> Lit .)
    QUO_ASSIGN      reduce using rule 95 (Operand -> Lit .)
    REM_ASSIGN      reduce using rule 95 (Operand -> Lit .)
    AND_ASSIGN      reduce using rule 95 (Operand -> Lit .)
    SHL_ASSIGN      reduce using rule 95 (Operand -> Lit .)
    SHR_ASSIGN      reduce using rule 95 (Operand -> Lit .)
    AND_NOT_ASSIGN  reduce using rule 95 (Operand -> Lit .)
    COLON           reduce using rule 95 (Operand -> Lit .)
    RBRACE          reduce using rule 95 (Operand -> Lit .)
    LBRACE          reduce using rule 95 (Operand -> Lit .)


state 109

    (96) Operand -> OperandName .

    PERIOD          reduce using rule 96 (Operand -> OperandName .)
    LBRACK          reduce using rule 96 (Operand -> OperandName .)
    LPAREN          reduce using rule 96 (Operand -> OperandName .)
    LOR             reduce using rule 96 (Operand -> OperandName .)
    LAND            reduce using rule 96 (Operand -> OperandName .)
    EQL             reduce using rule 96 (Operand -> OperandName .)
    NEQ             reduce using rule 96 (Operand -> OperandName .)
    LSS             reduce using rule 96 (Operand -> OperandName .)
    LEQ             reduce using rule 96 (Operand -> OperandName .)
    GTR             reduce using rule 96 (Operand -> OperandName .)
    GEQ             reduce using rule 96 (Operand -> OperandName .)
    ADD             reduce using rule 96 (Operand -> OperandName .)
    SUB             reduce using rule 96 (Operand -> OperandName .)
    OR              reduce using rule 96 (Operand -> OperandName .)
    XOR             reduce using rule 96 (Operand -> OperandName .)
    MUL             reduce using rule 96 (Operand -> OperandName .)
    QUO             reduce using rule 96 (Operand -> OperandName .)
    REM             reduce using rule 96 (Operand -> OperandName .)
    SHL             reduce using rule 96 (Operand -> OperandName .)
    SHR             reduce using rule 96 (Operand -> OperandName .)
    AND             reduce using rule 96 (Operand -> OperandName .)
    AND_NOT         reduce using rule 96 (Operand -> OperandName .)
    RBRACK          reduce using rule 96 (Operand -> OperandName .)
    COMMA           reduce using rule 96 (Operand -> OperandName .)
    SEMICOLON       reduce using rule 96 (Operand -> OperandName .)
    RPAREN          reduce using rule 96 (Operand -> OperandName .)
    INC             reduce using rule 96 (Operand -> OperandName .)
    DEC             reduce using rule 96 (Operand -> OperandName .)
    ASSIGN          reduce using rule 96 (Operand -> OperandName .)
    ADD_ASSIGN      reduce using rule 96 (Operand -> OperandName .)
    SUB_ASSIGN      reduce using rule 96 (Operand -> OperandName .)
    OR_ASSIGN       reduce using rule 96 (Operand -> OperandName .)
    XOR_ASSIGN      reduce using rule 96 (Operand -> OperandName .)
    MUL_ASSIGN      reduce using rule 96 (Operand -> OperandName .)
    QUO_ASSIGN      reduce using rule 96 (Operand -> OperandName .)
    REM_ASSIGN      reduce using rule 96 (Operand -> OperandName .)
    AND_ASSIGN      reduce using rule 96 (Operand -> OperandName .)
    SHL_ASSIGN      reduce using rule 96 (Operand -> OperandName .)
    SHR_ASSIGN      reduce using rule 96 (Operand -> OperandName .)
    AND_NOT_ASSIGN  reduce using rule 96 (Operand -> OperandName .)
    COLON           reduce using rule 96 (Operand -> OperandName .)
    RBRACE          reduce using rule 96 (Operand -> OperandName .)
    LBRACE          reduce using rule 96 (Operand -> OperandName .)


state 110

    (97) Operand -> LPAREN . Expr RPAREN
    (31) Type -> LPAREN . Type RPAREN
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody

    LPAREN          shift and go to state 185
    IDENT           shift and go to state 188
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MAP             shift and go to state 65
    FUNC            shift and go to state 193
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121

    Expr                           shift and go to state 186
    Type                           shift and go to state 187
    UnaryExpr                      shift and go to state 97
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 189
    StructType                     shift and go to state 190
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 191
    MapType                        shift and go to state 192
    FunctionType                   shift and go to state 61
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114

state 111

    (130) Conversion -> Type . LPAREN Expr RPAREN
    (131) Conversion -> Type . LPAREN Expr COMMA RPAREN

    LPAREN          shift and go to state 194


state 112

    (98) Lit -> BasicLit .

    PERIOD          reduce using rule 98 (Lit -> BasicLit .)
    LBRACK          reduce using rule 98 (Lit -> BasicLit .)
    LPAREN          reduce using rule 98 (Lit -> BasicLit .)
    LOR             reduce using rule 98 (Lit -> BasicLit .)
    LAND            reduce using rule 98 (Lit -> BasicLit .)
    EQL             reduce using rule 98 (Lit -> BasicLit .)
    NEQ             reduce using rule 98 (Lit -> BasicLit .)
    LSS             reduce using rule 98 (Lit -> BasicLit .)
    LEQ             reduce using rule 98 (Lit -> BasicLit .)
    GTR             reduce using rule 98 (Lit -> BasicLit .)
    GEQ             reduce using rule 98 (Lit -> BasicLit .)
    ADD             reduce using rule 98 (Lit -> BasicLit .)
    SUB             reduce using rule 98 (Lit -> BasicLit .)
    OR              reduce using rule 98 (Lit -> BasicLit .)
    XOR             reduce using rule 98 (Lit -> BasicLit .)
    MUL             reduce using rule 98 (Lit -> BasicLit .)
    QUO             reduce using rule 98 (Lit -> BasicLit .)
    REM             reduce using rule 98 (Lit -> BasicLit .)
    SHL             reduce using rule 98 (Lit -> BasicLit .)
    SHR             reduce using rule 98 (Lit -> BasicLit .)
    AND             reduce using rule 98 (Lit -> BasicLit .)
    AND_NOT         reduce using rule 98 (Lit -> BasicLit .)
    RBRACK          reduce using rule 98 (Lit -> BasicLit .)
    COMMA           reduce using rule 98 (Lit -> BasicLit .)
    SEMICOLON       reduce using rule 98 (Lit -> BasicLit .)
    RPAREN          reduce using rule 98 (Lit -> BasicLit .)
    INC             reduce using rule 98 (Lit -> BasicLit .)
    DEC             reduce using rule 98 (Lit -> BasicLit .)
    ASSIGN          reduce using rule 98 (Lit -> BasicLit .)
    ADD_ASSIGN      reduce using rule 98 (Lit -> BasicLit .)
    SUB_ASSIGN      reduce using rule 98 (Lit -> BasicLit .)
    OR_ASSIGN       reduce using rule 98 (Lit -> BasicLit .)
    XOR_ASSIGN      reduce using rule 98 (Lit -> BasicLit .)
    MUL_ASSIGN      reduce using rule 98 (Lit -> BasicLit .)
    QUO_ASSIGN      reduce using rule 98 (Lit -> BasicLit .)
    REM_ASSIGN      reduce using rule 98 (Lit -> BasicLit .)
    AND_ASSIGN      reduce using rule 98 (Lit -> BasicLit .)
    SHL_ASSIGN      reduce using rule 98 (Lit -> BasicLit .)
    SHR_ASSIGN      reduce using rule 98 (Lit -> BasicLit .)
    AND_NOT_ASSIGN  reduce using rule 98 (Lit -> BasicLit .)
    COLON           reduce using rule 98 (Lit -> BasicLit .)
    RBRACE          reduce using rule 98 (Lit -> BasicLit .)
    LBRACE          reduce using rule 98 (Lit -> BasicLit .)


state 113

    (99) Lit -> CompositeLit .

    PERIOD          reduce using rule 99 (Lit -> CompositeLit .)
    LBRACK          reduce using rule 99 (Lit -> CompositeLit .)
    LPAREN          reduce using rule 99 (Lit -> CompositeLit .)
    LOR             reduce using rule 99 (Lit -> CompositeLit .)
    LAND            reduce using rule 99 (Lit -> CompositeLit .)
    EQL             reduce using rule 99 (Lit -> CompositeLit .)
    NEQ             reduce using rule 99 (Lit -> CompositeLit .)
    LSS             reduce using rule 99 (Lit -> CompositeLit .)
    LEQ             reduce using rule 99 (Lit -> CompositeLit .)
    GTR             reduce using rule 99 (Lit -> CompositeLit .)
    GEQ             reduce using rule 99 (Lit -> CompositeLit .)
    ADD             reduce using rule 99 (Lit -> CompositeLit .)
    SUB             reduce using rule 99 (Lit -> CompositeLit .)
    OR              reduce using rule 99 (Lit -> CompositeLit .)
    XOR             reduce using rule 99 (Lit -> CompositeLit .)
    MUL             reduce using rule 99 (Lit -> CompositeLit .)
    QUO             reduce using rule 99 (Lit -> CompositeLit .)
    REM             reduce using rule 99 (Lit -> CompositeLit .)
    SHL             reduce using rule 99 (Lit -> CompositeLit .)
    SHR             reduce using rule 99 (Lit -> CompositeLit .)
    AND             reduce using rule 99 (Lit -> CompositeLit .)
    AND_NOT         reduce using rule 99 (Lit -> CompositeLit .)
    RBRACK          reduce using rule 99 (Lit -> CompositeLit .)
    COMMA           reduce using rule 99 (Lit -> CompositeLit .)
    SEMICOLON       reduce using rule 99 (Lit -> CompositeLit .)
    RPAREN          reduce using rule 99 (Lit -> CompositeLit .)
    INC             reduce using rule 99 (Lit -> CompositeLit .)
    DEC             reduce using rule 99 (Lit -> CompositeLit .)
    ASSIGN          reduce using rule 99 (Lit -> CompositeLit .)
    ADD_ASSIGN      reduce using rule 99 (Lit -> CompositeLit .)
    SUB_ASSIGN      reduce using rule 99 (Lit -> CompositeLit .)
    OR_ASSIGN       reduce using rule 99 (Lit -> CompositeLit .)
    XOR_ASSIGN      reduce using rule 99 (Lit -> CompositeLit .)
    MUL_ASSIGN      reduce using rule 99 (Lit -> CompositeLit .)
    QUO_ASSIGN      reduce using rule 99 (Lit -> CompositeLit .)
    REM_ASSIGN      reduce using rule 99 (Lit -> CompositeLit .)
    AND_ASSIGN      reduce using rule 99 (Lit -> CompositeLit .)
    SHL_ASSIGN      reduce using rule 99 (Lit -> CompositeLit .)
    SHR_ASSIGN      reduce using rule 99 (Lit -> CompositeLit .)
    AND_NOT_ASSIGN  reduce using rule 99 (Lit -> CompositeLit .)
    COLON           reduce using rule 99 (Lit -> CompositeLit .)
    RBRACE          reduce using rule 99 (Lit -> CompositeLit .)
    LBRACE          reduce using rule 99 (Lit -> CompositeLit .)


state 114

    (100) Lit -> FunctionLit .

    PERIOD          reduce using rule 100 (Lit -> FunctionLit .)
    LBRACK          reduce using rule 100 (Lit -> FunctionLit .)
    LPAREN          reduce using rule 100 (Lit -> FunctionLit .)
    LOR             reduce using rule 100 (Lit -> FunctionLit .)
    LAND            reduce using rule 100 (Lit -> FunctionLit .)
    EQL             reduce using rule 100 (Lit -> FunctionLit .)
    NEQ             reduce using rule 100 (Lit -> FunctionLit .)
    LSS             reduce using rule 100 (Lit -> FunctionLit .)
    LEQ             reduce using rule 100 (Lit -> FunctionLit .)
    GTR             reduce using rule 100 (Lit -> FunctionLit .)
    GEQ             reduce using rule 100 (Lit -> FunctionLit .)
    ADD             reduce using rule 100 (Lit -> FunctionLit .)
    SUB             reduce using rule 100 (Lit -> FunctionLit .)
    OR              reduce using rule 100 (Lit -> FunctionLit .)
    XOR             reduce using rule 100 (Lit -> FunctionLit .)
    MUL             reduce using rule 100 (Lit -> FunctionLit .)
    QUO             reduce using rule 100 (Lit -> FunctionLit .)
    REM             reduce using rule 100 (Lit -> FunctionLit .)
    SHL             reduce using rule 100 (Lit -> FunctionLit .)
    SHR             reduce using rule 100 (Lit -> FunctionLit .)
    AND             reduce using rule 100 (Lit -> FunctionLit .)
    AND_NOT         reduce using rule 100 (Lit -> FunctionLit .)
    RBRACK          reduce using rule 100 (Lit -> FunctionLit .)
    COMMA           reduce using rule 100 (Lit -> FunctionLit .)
    SEMICOLON       reduce using rule 100 (Lit -> FunctionLit .)
    RPAREN          reduce using rule 100 (Lit -> FunctionLit .)
    INC             reduce using rule 100 (Lit -> FunctionLit .)
    DEC             reduce using rule 100 (Lit -> FunctionLit .)
    ASSIGN          reduce using rule 100 (Lit -> FunctionLit .)
    ADD_ASSIGN      reduce using rule 100 (Lit -> FunctionLit .)
    SUB_ASSIGN      reduce using rule 100 (Lit -> FunctionLit .)
    OR_ASSIGN       reduce using rule 100 (Lit -> FunctionLit .)
    XOR_ASSIGN      reduce using rule 100 (Lit -> FunctionLit .)
    MUL_ASSIGN      reduce using rule 100 (Lit -> FunctionLit .)
    QUO_ASSIGN      reduce using rule 100 (Lit -> FunctionLit .)
    REM_ASSIGN      reduce using rule 100 (Lit -> FunctionLit .)
    AND_ASSIGN      reduce using rule 100 (Lit -> FunctionLit .)
    SHL_ASSIGN      reduce using rule 100 (Lit -> FunctionLit .)
    SHR_ASSIGN      reduce using rule 100 (Lit -> FunctionLit .)
    AND_NOT_ASSIGN  reduce using rule 100 (Lit -> FunctionLit .)
    COLON           reduce using rule 100 (Lit -> FunctionLit .)
    RBRACE          reduce using rule 100 (Lit -> FunctionLit .)
    LBRACE          reduce using rule 100 (Lit -> FunctionLit .)


state 115

    (123) OperandName -> IDENT .
    (32) TypeName -> IDENT .
    (34) QualifiedIdent -> IDENT . PERIOD IDENT

  ! reduce/reduce conflict for LBRACE resolved using rule 32 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LPAREN resolved using rule 32 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
    LBRACK          reduce using rule 123 (OperandName -> IDENT .)
    LOR             reduce using rule 123 (OperandName -> IDENT .)
    LAND            reduce using rule 123 (OperandName -> IDENT .)
    EQL             reduce using rule 123 (OperandName -> IDENT .)
    NEQ             reduce using rule 123 (OperandName -> IDENT .)
    LSS             reduce using rule 123 (OperandName -> IDENT .)
    LEQ             reduce using rule 123 (OperandName -> IDENT .)
    GTR             reduce using rule 123 (OperandName -> IDENT .)
    GEQ             reduce using rule 123 (OperandName -> IDENT .)
    ADD             reduce using rule 123 (OperandName -> IDENT .)
    SUB             reduce using rule 123 (OperandName -> IDENT .)
    OR              reduce using rule 123 (OperandName -> IDENT .)
    XOR             reduce using rule 123 (OperandName -> IDENT .)
    MUL             reduce using rule 123 (OperandName -> IDENT .)
    QUO             reduce using rule 123 (OperandName -> IDENT .)
    REM             reduce using rule 123 (OperandName -> IDENT .)
    SHL             reduce using rule 123 (OperandName -> IDENT .)
    SHR             reduce using rule 123 (OperandName -> IDENT .)
    AND             reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 123 (OperandName -> IDENT .)
    RBRACK          reduce using rule 123 (OperandName -> IDENT .)
    COMMA           reduce using rule 123 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 123 (OperandName -> IDENT .)
    RPAREN          reduce using rule 123 (OperandName -> IDENT .)
    INC             reduce using rule 123 (OperandName -> IDENT .)
    DEC             reduce using rule 123 (OperandName -> IDENT .)
    ASSIGN          reduce using rule 123 (OperandName -> IDENT .)
    ADD_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    SUB_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    OR_ASSIGN       reduce using rule 123 (OperandName -> IDENT .)
    XOR_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    MUL_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    QUO_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    REM_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    AND_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    SHL_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    SHR_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT_ASSIGN  reduce using rule 123 (OperandName -> IDENT .)
    COLON           reduce using rule 123 (OperandName -> IDENT .)
    RBRACE          reduce using rule 123 (OperandName -> IDENT .)
    LBRACE          reduce using rule 32 (TypeName -> IDENT .)
    LPAREN          reduce using rule 32 (TypeName -> IDENT .)
    PERIOD          shift and go to state 93

  ! PERIOD          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LPAREN          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LBRACE          [ reduce using rule 123 (OperandName -> IDENT .) ]


state 116

    (29) Type -> TypeName .
    (110) CompositeLit -> TypeName . LiteralValue
    (111) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (112) LiteralValue -> . LBRACE ElementList RBRACE
    (113) LiteralValue -> . LBRACE RBRACE

    LPAREN          reduce using rule 29 (Type -> TypeName .)
    RPAREN          reduce using rule 29 (Type -> TypeName .)
    COMMA           reduce using rule 29 (Type -> TypeName .)
    LBRACE          shift and go to state 196

    LiteralValue                   shift and go to state 195

state 117

    (101) BasicLit -> INT .

    PERIOD          reduce using rule 101 (BasicLit -> INT .)
    LBRACK          reduce using rule 101 (BasicLit -> INT .)
    LPAREN          reduce using rule 101 (BasicLit -> INT .)
    LOR             reduce using rule 101 (BasicLit -> INT .)
    LAND            reduce using rule 101 (BasicLit -> INT .)
    EQL             reduce using rule 101 (BasicLit -> INT .)
    NEQ             reduce using rule 101 (BasicLit -> INT .)
    LSS             reduce using rule 101 (BasicLit -> INT .)
    LEQ             reduce using rule 101 (BasicLit -> INT .)
    GTR             reduce using rule 101 (BasicLit -> INT .)
    GEQ             reduce using rule 101 (BasicLit -> INT .)
    ADD             reduce using rule 101 (BasicLit -> INT .)
    SUB             reduce using rule 101 (BasicLit -> INT .)
    OR              reduce using rule 101 (BasicLit -> INT .)
    XOR             reduce using rule 101 (BasicLit -> INT .)
    MUL             reduce using rule 101 (BasicLit -> INT .)
    QUO             reduce using rule 101 (BasicLit -> INT .)
    REM             reduce using rule 101 (BasicLit -> INT .)
    SHL             reduce using rule 101 (BasicLit -> INT .)
    SHR             reduce using rule 101 (BasicLit -> INT .)
    AND             reduce using rule 101 (BasicLit -> INT .)
    AND_NOT         reduce using rule 101 (BasicLit -> INT .)
    RBRACK          reduce using rule 101 (BasicLit -> INT .)
    COMMA           reduce using rule 101 (BasicLit -> INT .)
    SEMICOLON       reduce using rule 101 (BasicLit -> INT .)
    RPAREN          reduce using rule 101 (BasicLit -> INT .)
    INC             reduce using rule 101 (BasicLit -> INT .)
    DEC             reduce using rule 101 (BasicLit -> INT .)
    ASSIGN          reduce using rule 101 (BasicLit -> INT .)
    ADD_ASSIGN      reduce using rule 101 (BasicLit -> INT .)
    SUB_ASSIGN      reduce using rule 101 (BasicLit -> INT .)
    OR_ASSIGN       reduce using rule 101 (BasicLit -> INT .)
    XOR_ASSIGN      reduce using rule 101 (BasicLit -> INT .)
    MUL_ASSIGN      reduce using rule 101 (BasicLit -> INT .)
    QUO_ASSIGN      reduce using rule 101 (BasicLit -> INT .)
    REM_ASSIGN      reduce using rule 101 (BasicLit -> INT .)
    AND_ASSIGN      reduce using rule 101 (BasicLit -> INT .)
    SHL_ASSIGN      reduce using rule 101 (BasicLit -> INT .)
    SHR_ASSIGN      reduce using rule 101 (BasicLit -> INT .)
    AND_NOT_ASSIGN  reduce using rule 101 (BasicLit -> INT .)
    COLON           reduce using rule 101 (BasicLit -> INT .)
    RBRACE          reduce using rule 101 (BasicLit -> INT .)
    LBRACE          reduce using rule 101 (BasicLit -> INT .)


state 118

    (102) BasicLit -> FLOAT .

    PERIOD          reduce using rule 102 (BasicLit -> FLOAT .)
    LBRACK          reduce using rule 102 (BasicLit -> FLOAT .)
    LPAREN          reduce using rule 102 (BasicLit -> FLOAT .)
    LOR             reduce using rule 102 (BasicLit -> FLOAT .)
    LAND            reduce using rule 102 (BasicLit -> FLOAT .)
    EQL             reduce using rule 102 (BasicLit -> FLOAT .)
    NEQ             reduce using rule 102 (BasicLit -> FLOAT .)
    LSS             reduce using rule 102 (BasicLit -> FLOAT .)
    LEQ             reduce using rule 102 (BasicLit -> FLOAT .)
    GTR             reduce using rule 102 (BasicLit -> FLOAT .)
    GEQ             reduce using rule 102 (BasicLit -> FLOAT .)
    ADD             reduce using rule 102 (BasicLit -> FLOAT .)
    SUB             reduce using rule 102 (BasicLit -> FLOAT .)
    OR              reduce using rule 102 (BasicLit -> FLOAT .)
    XOR             reduce using rule 102 (BasicLit -> FLOAT .)
    MUL             reduce using rule 102 (BasicLit -> FLOAT .)
    QUO             reduce using rule 102 (BasicLit -> FLOAT .)
    REM             reduce using rule 102 (BasicLit -> FLOAT .)
    SHL             reduce using rule 102 (BasicLit -> FLOAT .)
    SHR             reduce using rule 102 (BasicLit -> FLOAT .)
    AND             reduce using rule 102 (BasicLit -> FLOAT .)
    AND_NOT         reduce using rule 102 (BasicLit -> FLOAT .)
    RBRACK          reduce using rule 102 (BasicLit -> FLOAT .)
    COMMA           reduce using rule 102 (BasicLit -> FLOAT .)
    SEMICOLON       reduce using rule 102 (BasicLit -> FLOAT .)
    RPAREN          reduce using rule 102 (BasicLit -> FLOAT .)
    INC             reduce using rule 102 (BasicLit -> FLOAT .)
    DEC             reduce using rule 102 (BasicLit -> FLOAT .)
    ASSIGN          reduce using rule 102 (BasicLit -> FLOAT .)
    ADD_ASSIGN      reduce using rule 102 (BasicLit -> FLOAT .)
    SUB_ASSIGN      reduce using rule 102 (BasicLit -> FLOAT .)
    OR_ASSIGN       reduce using rule 102 (BasicLit -> FLOAT .)
    XOR_ASSIGN      reduce using rule 102 (BasicLit -> FLOAT .)
    MUL_ASSIGN      reduce using rule 102 (BasicLit -> FLOAT .)
    QUO_ASSIGN      reduce using rule 102 (BasicLit -> FLOAT .)
    REM_ASSIGN      reduce using rule 102 (BasicLit -> FLOAT .)
    AND_ASSIGN      reduce using rule 102 (BasicLit -> FLOAT .)
    SHL_ASSIGN      reduce using rule 102 (BasicLit -> FLOAT .)
    SHR_ASSIGN      reduce using rule 102 (BasicLit -> FLOAT .)
    AND_NOT_ASSIGN  reduce using rule 102 (BasicLit -> FLOAT .)
    COLON           reduce using rule 102 (BasicLit -> FLOAT .)
    RBRACE          reduce using rule 102 (BasicLit -> FLOAT .)
    LBRACE          reduce using rule 102 (BasicLit -> FLOAT .)


state 119

    (103) BasicLit -> IMAG .

    PERIOD          reduce using rule 103 (BasicLit -> IMAG .)
    LBRACK          reduce using rule 103 (BasicLit -> IMAG .)
    LPAREN          reduce using rule 103 (BasicLit -> IMAG .)
    LOR             reduce using rule 103 (BasicLit -> IMAG .)
    LAND            reduce using rule 103 (BasicLit -> IMAG .)
    EQL             reduce using rule 103 (BasicLit -> IMAG .)
    NEQ             reduce using rule 103 (BasicLit -> IMAG .)
    LSS             reduce using rule 103 (BasicLit -> IMAG .)
    LEQ             reduce using rule 103 (BasicLit -> IMAG .)
    GTR             reduce using rule 103 (BasicLit -> IMAG .)
    GEQ             reduce using rule 103 (BasicLit -> IMAG .)
    ADD             reduce using rule 103 (BasicLit -> IMAG .)
    SUB             reduce using rule 103 (BasicLit -> IMAG .)
    OR              reduce using rule 103 (BasicLit -> IMAG .)
    XOR             reduce using rule 103 (BasicLit -> IMAG .)
    MUL             reduce using rule 103 (BasicLit -> IMAG .)
    QUO             reduce using rule 103 (BasicLit -> IMAG .)
    REM             reduce using rule 103 (BasicLit -> IMAG .)
    SHL             reduce using rule 103 (BasicLit -> IMAG .)
    SHR             reduce using rule 103 (BasicLit -> IMAG .)
    AND             reduce using rule 103 (BasicLit -> IMAG .)
    AND_NOT         reduce using rule 103 (BasicLit -> IMAG .)
    RBRACK          reduce using rule 103 (BasicLit -> IMAG .)
    COMMA           reduce using rule 103 (BasicLit -> IMAG .)
    SEMICOLON       reduce using rule 103 (BasicLit -> IMAG .)
    RPAREN          reduce using rule 103 (BasicLit -> IMAG .)
    INC             reduce using rule 103 (BasicLit -> IMAG .)
    DEC             reduce using rule 103 (BasicLit -> IMAG .)
    ASSIGN          reduce using rule 103 (BasicLit -> IMAG .)
    ADD_ASSIGN      reduce using rule 103 (BasicLit -> IMAG .)
    SUB_ASSIGN      reduce using rule 103 (BasicLit -> IMAG .)
    OR_ASSIGN       reduce using rule 103 (BasicLit -> IMAG .)
    XOR_ASSIGN      reduce using rule 103 (BasicLit -> IMAG .)
    MUL_ASSIGN      reduce using rule 103 (BasicLit -> IMAG .)
    QUO_ASSIGN      reduce using rule 103 (BasicLit -> IMAG .)
    REM_ASSIGN      reduce using rule 103 (BasicLit -> IMAG .)
    AND_ASSIGN      reduce using rule 103 (BasicLit -> IMAG .)
    SHL_ASSIGN      reduce using rule 103 (BasicLit -> IMAG .)
    SHR_ASSIGN      reduce using rule 103 (BasicLit -> IMAG .)
    AND_NOT_ASSIGN  reduce using rule 103 (BasicLit -> IMAG .)
    COLON           reduce using rule 103 (BasicLit -> IMAG .)
    RBRACE          reduce using rule 103 (BasicLit -> IMAG .)
    LBRACE          reduce using rule 103 (BasicLit -> IMAG .)


state 120

    (104) BasicLit -> RUNE .

    PERIOD          reduce using rule 104 (BasicLit -> RUNE .)
    LBRACK          reduce using rule 104 (BasicLit -> RUNE .)
    LPAREN          reduce using rule 104 (BasicLit -> RUNE .)
    LOR             reduce using rule 104 (BasicLit -> RUNE .)
    LAND            reduce using rule 104 (BasicLit -> RUNE .)
    EQL             reduce using rule 104 (BasicLit -> RUNE .)
    NEQ             reduce using rule 104 (BasicLit -> RUNE .)
    LSS             reduce using rule 104 (BasicLit -> RUNE .)
    LEQ             reduce using rule 104 (BasicLit -> RUNE .)
    GTR             reduce using rule 104 (BasicLit -> RUNE .)
    GEQ             reduce using rule 104 (BasicLit -> RUNE .)
    ADD             reduce using rule 104 (BasicLit -> RUNE .)
    SUB             reduce using rule 104 (BasicLit -> RUNE .)
    OR              reduce using rule 104 (BasicLit -> RUNE .)
    XOR             reduce using rule 104 (BasicLit -> RUNE .)
    MUL             reduce using rule 104 (BasicLit -> RUNE .)
    QUO             reduce using rule 104 (BasicLit -> RUNE .)
    REM             reduce using rule 104 (BasicLit -> RUNE .)
    SHL             reduce using rule 104 (BasicLit -> RUNE .)
    SHR             reduce using rule 104 (BasicLit -> RUNE .)
    AND             reduce using rule 104 (BasicLit -> RUNE .)
    AND_NOT         reduce using rule 104 (BasicLit -> RUNE .)
    RBRACK          reduce using rule 104 (BasicLit -> RUNE .)
    COMMA           reduce using rule 104 (BasicLit -> RUNE .)
    SEMICOLON       reduce using rule 104 (BasicLit -> RUNE .)
    RPAREN          reduce using rule 104 (BasicLit -> RUNE .)
    INC             reduce using rule 104 (BasicLit -> RUNE .)
    DEC             reduce using rule 104 (BasicLit -> RUNE .)
    ASSIGN          reduce using rule 104 (BasicLit -> RUNE .)
    ADD_ASSIGN      reduce using rule 104 (BasicLit -> RUNE .)
    SUB_ASSIGN      reduce using rule 104 (BasicLit -> RUNE .)
    OR_ASSIGN       reduce using rule 104 (BasicLit -> RUNE .)
    XOR_ASSIGN      reduce using rule 104 (BasicLit -> RUNE .)
    MUL_ASSIGN      reduce using rule 104 (BasicLit -> RUNE .)
    QUO_ASSIGN      reduce using rule 104 (BasicLit -> RUNE .)
    REM_ASSIGN      reduce using rule 104 (BasicLit -> RUNE .)
    AND_ASSIGN      reduce using rule 104 (BasicLit -> RUNE .)
    SHL_ASSIGN      reduce using rule 104 (BasicLit -> RUNE .)
    SHR_ASSIGN      reduce using rule 104 (BasicLit -> RUNE .)
    AND_NOT_ASSIGN  reduce using rule 104 (BasicLit -> RUNE .)
    COLON           reduce using rule 104 (BasicLit -> RUNE .)
    RBRACE          reduce using rule 104 (BasicLit -> RUNE .)
    LBRACE          reduce using rule 104 (BasicLit -> RUNE .)


state 121

    (105) BasicLit -> STRING .

    PERIOD          reduce using rule 105 (BasicLit -> STRING .)
    LBRACK          reduce using rule 105 (BasicLit -> STRING .)
    LPAREN          reduce using rule 105 (BasicLit -> STRING .)
    LOR             reduce using rule 105 (BasicLit -> STRING .)
    LAND            reduce using rule 105 (BasicLit -> STRING .)
    EQL             reduce using rule 105 (BasicLit -> STRING .)
    NEQ             reduce using rule 105 (BasicLit -> STRING .)
    LSS             reduce using rule 105 (BasicLit -> STRING .)
    LEQ             reduce using rule 105 (BasicLit -> STRING .)
    GTR             reduce using rule 105 (BasicLit -> STRING .)
    GEQ             reduce using rule 105 (BasicLit -> STRING .)
    ADD             reduce using rule 105 (BasicLit -> STRING .)
    SUB             reduce using rule 105 (BasicLit -> STRING .)
    OR              reduce using rule 105 (BasicLit -> STRING .)
    XOR             reduce using rule 105 (BasicLit -> STRING .)
    MUL             reduce using rule 105 (BasicLit -> STRING .)
    QUO             reduce using rule 105 (BasicLit -> STRING .)
    REM             reduce using rule 105 (BasicLit -> STRING .)
    SHL             reduce using rule 105 (BasicLit -> STRING .)
    SHR             reduce using rule 105 (BasicLit -> STRING .)
    AND             reduce using rule 105 (BasicLit -> STRING .)
    AND_NOT         reduce using rule 105 (BasicLit -> STRING .)
    RBRACK          reduce using rule 105 (BasicLit -> STRING .)
    COMMA           reduce using rule 105 (BasicLit -> STRING .)
    SEMICOLON       reduce using rule 105 (BasicLit -> STRING .)
    RPAREN          reduce using rule 105 (BasicLit -> STRING .)
    INC             reduce using rule 105 (BasicLit -> STRING .)
    DEC             reduce using rule 105 (BasicLit -> STRING .)
    ASSIGN          reduce using rule 105 (BasicLit -> STRING .)
    ADD_ASSIGN      reduce using rule 105 (BasicLit -> STRING .)
    SUB_ASSIGN      reduce using rule 105 (BasicLit -> STRING .)
    OR_ASSIGN       reduce using rule 105 (BasicLit -> STRING .)
    XOR_ASSIGN      reduce using rule 105 (BasicLit -> STRING .)
    MUL_ASSIGN      reduce using rule 105 (BasicLit -> STRING .)
    QUO_ASSIGN      reduce using rule 105 (BasicLit -> STRING .)
    REM_ASSIGN      reduce using rule 105 (BasicLit -> STRING .)
    AND_ASSIGN      reduce using rule 105 (BasicLit -> STRING .)
    SHL_ASSIGN      reduce using rule 105 (BasicLit -> STRING .)
    SHR_ASSIGN      reduce using rule 105 (BasicLit -> STRING .)
    AND_NOT_ASSIGN  reduce using rule 105 (BasicLit -> STRING .)
    COLON           reduce using rule 105 (BasicLit -> STRING .)
    RBRACE          reduce using rule 105 (BasicLit -> STRING .)
    LBRACE          reduce using rule 105 (BasicLit -> STRING .)


state 122

    (106) CompositeLit -> StructType . LiteralValue
    (36) TypeLit -> StructType .
    (111) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (112) LiteralValue -> . LBRACE ElementList RBRACE
    (113) LiteralValue -> . LBRACE RBRACE

    LPAREN          reduce using rule 36 (TypeLit -> StructType .)
    LBRACE          shift and go to state 196

    LiteralValue                   shift and go to state 197

state 123

    (107) CompositeLit -> ArrayType . LiteralValue
    (35) TypeLit -> ArrayType .
    (111) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (112) LiteralValue -> . LBRACE ElementList RBRACE
    (113) LiteralValue -> . LBRACE RBRACE

    LPAREN          reduce using rule 35 (TypeLit -> ArrayType .)
    LBRACE          shift and go to state 196

    LiteralValue                   shift and go to state 198

state 124

    (108) CompositeLit -> SliceType . LiteralValue
    (38) TypeLit -> SliceType .
    (111) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (112) LiteralValue -> . LBRACE ElementList RBRACE
    (113) LiteralValue -> . LBRACE RBRACE

    LPAREN          reduce using rule 38 (TypeLit -> SliceType .)
    LBRACE          shift and go to state 196

    LiteralValue                   shift and go to state 199

state 125

    (109) CompositeLit -> MapType . LiteralValue
    (39) TypeLit -> MapType .
    (111) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (112) LiteralValue -> . LBRACE ElementList RBRACE
    (113) LiteralValue -> . LBRACE RBRACE

    LPAREN          reduce using rule 39 (TypeLit -> MapType .)
    LBRACE          shift and go to state 196

    LiteralValue                   shift and go to state 200

state 126

    (124) FunctionLit -> FUNC . Signature FunctionBody
    (59) FunctionType -> FUNC . Signature
    (166) Signature -> . Parameters Result
    (167) Signature -> . Parameters
    (168) Parameters -> . LPAREN RPAREN
    (169) Parameters -> . LPAREN ParameterList RPAREN
    (170) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 48

    Signature                      shift and go to state 201
    Parameters                     shift and go to state 47

state 127

    (44) StructType -> STRUCT LBRACE . FieldDeclMult RBRACE
    (45) FieldDeclMult -> . FieldDeclMult FieldDecl SEMICOLON
    (46) FieldDeclMult -> .

    RBRACE          reduce using rule 46 (FieldDeclMult -> .)
    IDENT           reduce using rule 46 (FieldDeclMult -> .)
    MUL             reduce using rule 46 (FieldDeclMult -> .)

    FieldDeclMult                  shift and go to state 202

state 128

    (54) PointerType -> MUL BaseType .

    ASSIGN          reduce using rule 54 (PointerType -> MUL BaseType .)
    SEMICOLON       reduce using rule 54 (PointerType -> MUL BaseType .)
    LBRACE          reduce using rule 54 (PointerType -> MUL BaseType .)
    RPAREN          reduce using rule 54 (PointerType -> MUL BaseType .)
    COMMA           reduce using rule 54 (PointerType -> MUL BaseType .)
    LPAREN          reduce using rule 54 (PointerType -> MUL BaseType .)
    RBRACK          reduce using rule 54 (PointerType -> MUL BaseType .)
    STRING          reduce using rule 54 (PointerType -> MUL BaseType .)
    COLON           reduce using rule 54 (PointerType -> MUL BaseType .)


state 129

    (55) BaseType -> Type .

    LBRACE          reduce using rule 55 (BaseType -> Type .)
    SEMICOLON       reduce using rule 55 (BaseType -> Type .)
    ASSIGN          reduce using rule 55 (BaseType -> Type .)
    RPAREN          reduce using rule 55 (BaseType -> Type .)
    COMMA           reduce using rule 55 (BaseType -> Type .)
    LPAREN          reduce using rule 55 (BaseType -> Type .)
    RBRACK          reduce using rule 55 (BaseType -> Type .)
    STRING          reduce using rule 55 (BaseType -> Type .)
    COLON           reduce using rule 55 (BaseType -> Type .)


state 130

    (57) MapType -> MAP LBRACK . KeyType RBRACK ElementType
    (58) KeyType -> . Type
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    KeyType                        shift and go to state 203
    Type                           shift and go to state 204
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 131

    (59) FunctionType -> FUNC Signature .

    ASSIGN          reduce using rule 59 (FunctionType -> FUNC Signature .)
    SEMICOLON       reduce using rule 59 (FunctionType -> FUNC Signature .)
    LBRACE          reduce using rule 59 (FunctionType -> FUNC Signature .)
    RPAREN          reduce using rule 59 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 59 (FunctionType -> FUNC Signature .)
    LPAREN          reduce using rule 59 (FunctionType -> FUNC Signature .)
    RBRACK          reduce using rule 59 (FunctionType -> FUNC Signature .)
    STRING          reduce using rule 59 (FunctionType -> FUNC Signature .)
    COLON           reduce using rule 59 (FunctionType -> FUNC Signature .)


state 132

    (27) IdentifierOth -> IdentifierOth COMMA . IDENT

    IDENT           shift and go to state 205


state 133

    (155) VarDecl -> VAR LPAREN VarMult RPAREN .

    SEMICOLON       reduce using rule 155 (VarDecl -> VAR LPAREN VarMult RPAREN .)


state 134

    (156) VarMult -> VarMult VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 206


state 135

    (158) VarSpec -> IdentifierList Type ASSIGN . ExpressionList
    (60) ExpressionList -> . Expr ExprOth
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Type                           shift and go to state 111
    ExpressionList                 shift and go to state 207
    Expr                           shift and go to state 137
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 136

    (159) VarSpec -> IdentifierList ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 159 (VarSpec -> IdentifierList ASSIGN ExpressionList .)


state 137

    (60) ExpressionList -> Expr . ExprOth
    (62) Expr -> Expr . BinOp Expr
    (93) ExprOth -> . ExprOth COMMA Expr
    (94) ExprOth -> .
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    COMMA           reduce using rule 94 (ExprOth -> .)
    SEMICOLON       reduce using rule 94 (ExprOth -> .)
    RPAREN          reduce using rule 94 (ExprOth -> .)
    LBRACE          reduce using rule 94 (ExprOth -> .)
    COLON           reduce using rule 94 (ExprOth -> .)
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    ExprOth                        shift and go to state 208
    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 138

    (147) TypeDecl -> TYPE LPAREN TypeSpecMult RPAREN .

    SEMICOLON       reduce using rule 147 (TypeDecl -> TYPE LPAREN TypeSpecMult RPAREN .)


state 139

    (148) TypeSpecMult -> TypeSpecMult TypeSpec . SEMICOLON

    SEMICOLON       shift and go to state 209


state 140

    (152) AliasDecl -> IDENT ASSIGN Type .

    SEMICOLON       reduce using rule 152 (AliasDecl -> IDENT ASSIGN Type .)


state 141

    (8) ImportSpecMult -> ImportSpecMult ImportSpec SEMICOLON .

    RPAREN          reduce using rule 8 (ImportSpecMult -> ImportSpecMult ImportSpec SEMICOLON .)
    PERIOD          reduce using rule 8 (ImportSpecMult -> ImportSpecMult ImportSpec SEMICOLON .)
    IDENT           reduce using rule 8 (ImportSpecMult -> ImportSpecMult ImportSpec SEMICOLON .)
    STRING          reduce using rule 8 (ImportSpecMult -> ImportSpecMult ImportSpec SEMICOLON .)


state 142

    (225) Block -> LBRACE StatementList . RBRACE
    (177) StatementList -> StatementList . Statement SEMICOLON
    (179) Statement -> . Decl
    (180) Statement -> . LabeledStmt
    (181) Statement -> . SimpleStmt
    (182) Statement -> . GotoStmt
    (183) Statement -> . ReturnStmt
    (184) Statement -> . BreakStmt
    (185) Statement -> . ContinueStmt
    (186) Statement -> . FallthroughStmt
    (187) Statement -> . Block
    (188) Statement -> . IfStmt
    (189) Statement -> . SwitchStmt
    (190) Statement -> . ForStmt
    (18) Decl -> . ConstDecl
    (19) Decl -> . VarDecl
    (20) Decl -> . TypeDecl
    (191) LabeledStmt -> . Label COLON Statement
    (193) SimpleStmt -> . EmptyStmt
    (194) SimpleStmt -> . ExpressionStmt
    (195) SimpleStmt -> . IncDecStmt
    (196) SimpleStmt -> . Assignment
    (197) SimpleStmt -> . ShortVarDecl
    (223) GotoStmt -> . GOTO Label
    (217) ReturnStmt -> . RETURN ExpressionList
    (218) ReturnStmt -> . RETURN
    (219) BreakStmt -> . BREAK Label
    (220) BreakStmt -> . BREAK
    (221) ContinueStmt -> . CONTINUE Label
    (222) ContinueStmt -> . CONTINUE
    (224) FallthroughStmt -> . FALLTHROUGH
    (225) Block -> . LBRACE StatementList RBRACE
    (226) IfStmt -> . IF SimpleStmtOpt Expr Block else_stmt
    (232) SwitchStmt -> . ExprSwitchStmt
    (233) SwitchStmt -> . TypeSwitchStmt
    (254) ForStmt -> . FOR Condition Block
    (255) ForStmt -> . FOR ForClause Block
    (256) ForStmt -> . FOR RangeClause Block
    (21) ConstDecl -> . CONST ConstSpec
    (22) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (154) VarDecl -> . VAR VarSpec
    (155) VarDecl -> . VAR LPAREN VarMult RPAREN
    (146) TypeDecl -> . TYPE TypeSpec
    (147) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (192) Label -> . IDENT
    (198) EmptyStmt -> .
    (199) ExpressionStmt -> . Expr
    (200) IncDecStmt -> . Expr INC
    (201) IncDecStmt -> . Expr DEC
    (202) Assignment -> . ExpressionList assign_op ExpressionList
    (161) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (234) ExprSwitchStmt -> . SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE
    (242) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (60) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    RBRACE          shift and go to state 210
    GOTO            shift and go to state 230
    RETURN          shift and go to state 231
    BREAK           shift and go to state 233
    CONTINUE        shift and go to state 234
    FALLTHROUGH     shift and go to state 235
    LBRACE          shift and go to state 78
    IF              shift and go to state 236
    FOR             shift and go to state 240
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 241
    SEMICOLON       reduce using rule 198 (EmptyStmt -> .)
    SWITCH          shift and go to state 243
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Statement                      shift and go to state 211
    Decl                           shift and go to state 212
    LabeledStmt                    shift and go to state 213
    SimpleStmt                     shift and go to state 214
    GotoStmt                       shift and go to state 215
    ReturnStmt                     shift and go to state 216
    BreakStmt                      shift and go to state 217
    ContinueStmt                   shift and go to state 218
    FallthroughStmt                shift and go to state 219
    Block                          shift and go to state 220
    IfStmt                         shift and go to state 221
    SwitchStmt                     shift and go to state 222
    ForStmt                        shift and go to state 223
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    Label                          shift and go to state 224
    EmptyStmt                      shift and go to state 225
    ExpressionStmt                 shift and go to state 226
    IncDecStmt                     shift and go to state 227
    Assignment                     shift and go to state 228
    ShortVarDecl                   shift and go to state 229
    ExpressionList                 shift and go to state 232
    Expr                           shift and go to state 237
    ExprSwitchStmt                 shift and go to state 238
    TypeSwitchStmt                 shift and go to state 239
    IdentifierList                 shift and go to state 242
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 143

    (31) Type -> LPAREN Type . RPAREN
    (173) ParameterDecl -> Type .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 150
    COMMA           reduce using rule 173 (ParameterDecl -> Type .)

  ! RPAREN          [ reduce using rule 173 (ParameterDecl -> Type .) ]


state 144

    (32) TypeName -> IDENT .
    (26) IdentifierList -> IDENT . IdentifierOth
    (34) QualifiedIdent -> IDENT . PERIOD IDENT
    (27) IdentifierOth -> . IdentifierOth COMMA IDENT
    (28) IdentifierOth -> .

  ! reduce/reduce conflict for COMMA resolved using rule 28 (IdentifierOth -> .)
    RPAREN          reduce using rule 32 (TypeName -> IDENT .)
    PERIOD          shift and go to state 93
    COMMA           reduce using rule 28 (IdentifierOth -> .)
    LPAREN          reduce using rule 28 (IdentifierOth -> .)
    IDENT           reduce using rule 28 (IdentifierOth -> .)
    LBRACK          reduce using rule 28 (IdentifierOth -> .)
    STRUCT          reduce using rule 28 (IdentifierOth -> .)
    MUL             reduce using rule 28 (IdentifierOth -> .)
    MAP             reduce using rule 28 (IdentifierOth -> .)
    FUNC            reduce using rule 28 (IdentifierOth -> .)

  ! COMMA           [ reduce using rule 32 (TypeName -> IDENT .) ]

    IdentifierOth                  shift and go to state 67

state 145

    (169) Parameters -> LPAREN ParameterList RPAREN .

    LPAREN          reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    IDENT           reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    LBRACK          reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    STRUCT          reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    MUL             reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    MAP             reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    FUNC            reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    LBRACE          reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    SEMICOLON       reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    ASSIGN          reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    RPAREN          reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    COMMA           reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    RBRACK          reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    STRING          reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)
    COLON           reduce using rule 169 (Parameters -> LPAREN ParameterList RPAREN .)


state 146

    (170) Parameters -> LPAREN ParameterList COMMA . RPAREN
    (171) ParameterList -> ParameterList COMMA . ParameterDecl
    (173) ParameterDecl -> . Type
    (174) ParameterDecl -> . IdentifierList Type
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (26) IdentifierList -> . IDENT IdentifierOth
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    RPAREN          shift and go to state 244
    LPAREN          shift and go to state 53
    IDENT           shift and go to state 88
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    ParameterDecl                  shift and go to state 245
    Type                           shift and go to state 86
    IdentifierList                 shift and go to state 87
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 147

    (174) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 174 (ParameterDecl -> IdentifierList Type .)
    COMMA           reduce using rule 174 (ParameterDecl -> IdentifierList Type .)


state 148

    (23) ConstSpecMult -> ConstSpecMult ConstSpec SEMICOLON .

    RPAREN          reduce using rule 23 (ConstSpecMult -> ConstSpecMult ConstSpec SEMICOLON .)
    IDENT           reduce using rule 23 (ConstSpecMult -> ConstSpecMult ConstSpec SEMICOLON .)


state 149

    (25) ConstSpec -> IdentifierList Type ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 25 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)


state 150

    (31) Type -> LPAREN Type RPAREN .

    ASSIGN          reduce using rule 31 (Type -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 31 (Type -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 31 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 31 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 31 (Type -> LPAREN Type RPAREN .)
    LPAREN          reduce using rule 31 (Type -> LPAREN Type RPAREN .)
    RBRACK          reduce using rule 31 (Type -> LPAREN Type RPAREN .)
    STRING          reduce using rule 31 (Type -> LPAREN Type RPAREN .)
    COLON           reduce using rule 31 (Type -> LPAREN Type RPAREN .)


state 151

    (34) QualifiedIdent -> IDENT PERIOD IDENT .

    ASSIGN          reduce using rule 34 (QualifiedIdent -> IDENT PERIOD IDENT .)
    SEMICOLON       reduce using rule 34 (QualifiedIdent -> IDENT PERIOD IDENT .)
    LBRACE          reduce using rule 34 (QualifiedIdent -> IDENT PERIOD IDENT .)
    RPAREN          reduce using rule 34 (QualifiedIdent -> IDENT PERIOD IDENT .)
    COMMA           reduce using rule 34 (QualifiedIdent -> IDENT PERIOD IDENT .)
    LPAREN          reduce using rule 34 (QualifiedIdent -> IDENT PERIOD IDENT .)
    RBRACK          reduce using rule 34 (QualifiedIdent -> IDENT PERIOD IDENT .)
    STRING          reduce using rule 34 (QualifiedIdent -> IDENT PERIOD IDENT .)
    COLON           reduce using rule 34 (QualifiedIdent -> IDENT PERIOD IDENT .)


state 152

    (41) ArrayType -> LBRACK ArrayLength RBRACK . ElementType
    (43) ElementType -> . Type
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    ElementType                    shift and go to state 246
    Type                           shift and go to state 154
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 153

    (56) SliceType -> LBRACK RBRACK ElementType .

    ASSIGN          reduce using rule 56 (SliceType -> LBRACK RBRACK ElementType .)
    SEMICOLON       reduce using rule 56 (SliceType -> LBRACK RBRACK ElementType .)
    LBRACE          reduce using rule 56 (SliceType -> LBRACK RBRACK ElementType .)
    RPAREN          reduce using rule 56 (SliceType -> LBRACK RBRACK ElementType .)
    COMMA           reduce using rule 56 (SliceType -> LBRACK RBRACK ElementType .)
    LPAREN          reduce using rule 56 (SliceType -> LBRACK RBRACK ElementType .)
    RBRACK          reduce using rule 56 (SliceType -> LBRACK RBRACK ElementType .)
    STRING          reduce using rule 56 (SliceType -> LBRACK RBRACK ElementType .)
    COLON           reduce using rule 56 (SliceType -> LBRACK RBRACK ElementType .)


state 154

    (43) ElementType -> Type .

    LBRACE          reduce using rule 43 (ElementType -> Type .)
    SEMICOLON       reduce using rule 43 (ElementType -> Type .)
    ASSIGN          reduce using rule 43 (ElementType -> Type .)
    RPAREN          reduce using rule 43 (ElementType -> Type .)
    COMMA           reduce using rule 43 (ElementType -> Type .)
    LPAREN          reduce using rule 43 (ElementType -> Type .)
    RBRACK          reduce using rule 43 (ElementType -> Type .)
    STRING          reduce using rule 43 (ElementType -> Type .)
    COLON           reduce using rule 43 (ElementType -> Type .)


state 155

    (62) Expr -> Expr BinOp . Expr
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Expr                           shift and go to state 247
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 156

    (65) BinOp -> LOR .

    ADD             reduce using rule 65 (BinOp -> LOR .)
    SUB             reduce using rule 65 (BinOp -> LOR .)
    NOT             reduce using rule 65 (BinOp -> LOR .)
    XOR             reduce using rule 65 (BinOp -> LOR .)
    MUL             reduce using rule 65 (BinOp -> LOR .)
    AND             reduce using rule 65 (BinOp -> LOR .)
    LPAREN          reduce using rule 65 (BinOp -> LOR .)
    IDENT           reduce using rule 65 (BinOp -> LOR .)
    INT             reduce using rule 65 (BinOp -> LOR .)
    FLOAT           reduce using rule 65 (BinOp -> LOR .)
    IMAG            reduce using rule 65 (BinOp -> LOR .)
    RUNE            reduce using rule 65 (BinOp -> LOR .)
    STRING          reduce using rule 65 (BinOp -> LOR .)
    FUNC            reduce using rule 65 (BinOp -> LOR .)
    STRUCT          reduce using rule 65 (BinOp -> LOR .)
    LBRACK          reduce using rule 65 (BinOp -> LOR .)
    MAP             reduce using rule 65 (BinOp -> LOR .)


state 157

    (66) BinOp -> LAND .

    ADD             reduce using rule 66 (BinOp -> LAND .)
    SUB             reduce using rule 66 (BinOp -> LAND .)
    NOT             reduce using rule 66 (BinOp -> LAND .)
    XOR             reduce using rule 66 (BinOp -> LAND .)
    MUL             reduce using rule 66 (BinOp -> LAND .)
    AND             reduce using rule 66 (BinOp -> LAND .)
    LPAREN          reduce using rule 66 (BinOp -> LAND .)
    IDENT           reduce using rule 66 (BinOp -> LAND .)
    INT             reduce using rule 66 (BinOp -> LAND .)
    FLOAT           reduce using rule 66 (BinOp -> LAND .)
    IMAG            reduce using rule 66 (BinOp -> LAND .)
    RUNE            reduce using rule 66 (BinOp -> LAND .)
    STRING          reduce using rule 66 (BinOp -> LAND .)
    FUNC            reduce using rule 66 (BinOp -> LAND .)
    STRUCT          reduce using rule 66 (BinOp -> LAND .)
    LBRACK          reduce using rule 66 (BinOp -> LAND .)
    MAP             reduce using rule 66 (BinOp -> LAND .)


state 158

    (67) BinOp -> RelOp .

    ADD             reduce using rule 67 (BinOp -> RelOp .)
    SUB             reduce using rule 67 (BinOp -> RelOp .)
    NOT             reduce using rule 67 (BinOp -> RelOp .)
    XOR             reduce using rule 67 (BinOp -> RelOp .)
    MUL             reduce using rule 67 (BinOp -> RelOp .)
    AND             reduce using rule 67 (BinOp -> RelOp .)
    LPAREN          reduce using rule 67 (BinOp -> RelOp .)
    IDENT           reduce using rule 67 (BinOp -> RelOp .)
    INT             reduce using rule 67 (BinOp -> RelOp .)
    FLOAT           reduce using rule 67 (BinOp -> RelOp .)
    IMAG            reduce using rule 67 (BinOp -> RelOp .)
    RUNE            reduce using rule 67 (BinOp -> RelOp .)
    STRING          reduce using rule 67 (BinOp -> RelOp .)
    FUNC            reduce using rule 67 (BinOp -> RelOp .)
    STRUCT          reduce using rule 67 (BinOp -> RelOp .)
    LBRACK          reduce using rule 67 (BinOp -> RelOp .)
    MAP             reduce using rule 67 (BinOp -> RelOp .)


state 159

    (68) BinOp -> AddOp .

    ADD             reduce using rule 68 (BinOp -> AddOp .)
    SUB             reduce using rule 68 (BinOp -> AddOp .)
    NOT             reduce using rule 68 (BinOp -> AddOp .)
    XOR             reduce using rule 68 (BinOp -> AddOp .)
    MUL             reduce using rule 68 (BinOp -> AddOp .)
    AND             reduce using rule 68 (BinOp -> AddOp .)
    LPAREN          reduce using rule 68 (BinOp -> AddOp .)
    IDENT           reduce using rule 68 (BinOp -> AddOp .)
    INT             reduce using rule 68 (BinOp -> AddOp .)
    FLOAT           reduce using rule 68 (BinOp -> AddOp .)
    IMAG            reduce using rule 68 (BinOp -> AddOp .)
    RUNE            reduce using rule 68 (BinOp -> AddOp .)
    STRING          reduce using rule 68 (BinOp -> AddOp .)
    FUNC            reduce using rule 68 (BinOp -> AddOp .)
    STRUCT          reduce using rule 68 (BinOp -> AddOp .)
    LBRACK          reduce using rule 68 (BinOp -> AddOp .)
    MAP             reduce using rule 68 (BinOp -> AddOp .)


state 160

    (69) BinOp -> MulOp .

    ADD             reduce using rule 69 (BinOp -> MulOp .)
    SUB             reduce using rule 69 (BinOp -> MulOp .)
    NOT             reduce using rule 69 (BinOp -> MulOp .)
    XOR             reduce using rule 69 (BinOp -> MulOp .)
    MUL             reduce using rule 69 (BinOp -> MulOp .)
    AND             reduce using rule 69 (BinOp -> MulOp .)
    LPAREN          reduce using rule 69 (BinOp -> MulOp .)
    IDENT           reduce using rule 69 (BinOp -> MulOp .)
    INT             reduce using rule 69 (BinOp -> MulOp .)
    FLOAT           reduce using rule 69 (BinOp -> MulOp .)
    IMAG            reduce using rule 69 (BinOp -> MulOp .)
    RUNE            reduce using rule 69 (BinOp -> MulOp .)
    STRING          reduce using rule 69 (BinOp -> MulOp .)
    FUNC            reduce using rule 69 (BinOp -> MulOp .)
    STRUCT          reduce using rule 69 (BinOp -> MulOp .)
    LBRACK          reduce using rule 69 (BinOp -> MulOp .)
    MAP             reduce using rule 69 (BinOp -> MulOp .)


state 161

    (70) RelOp -> EQL .

    ADD             reduce using rule 70 (RelOp -> EQL .)
    SUB             reduce using rule 70 (RelOp -> EQL .)
    NOT             reduce using rule 70 (RelOp -> EQL .)
    XOR             reduce using rule 70 (RelOp -> EQL .)
    MUL             reduce using rule 70 (RelOp -> EQL .)
    AND             reduce using rule 70 (RelOp -> EQL .)
    LPAREN          reduce using rule 70 (RelOp -> EQL .)
    IDENT           reduce using rule 70 (RelOp -> EQL .)
    INT             reduce using rule 70 (RelOp -> EQL .)
    FLOAT           reduce using rule 70 (RelOp -> EQL .)
    IMAG            reduce using rule 70 (RelOp -> EQL .)
    RUNE            reduce using rule 70 (RelOp -> EQL .)
    STRING          reduce using rule 70 (RelOp -> EQL .)
    FUNC            reduce using rule 70 (RelOp -> EQL .)
    STRUCT          reduce using rule 70 (RelOp -> EQL .)
    LBRACK          reduce using rule 70 (RelOp -> EQL .)
    MAP             reduce using rule 70 (RelOp -> EQL .)


state 162

    (71) RelOp -> NEQ .

    ADD             reduce using rule 71 (RelOp -> NEQ .)
    SUB             reduce using rule 71 (RelOp -> NEQ .)
    NOT             reduce using rule 71 (RelOp -> NEQ .)
    XOR             reduce using rule 71 (RelOp -> NEQ .)
    MUL             reduce using rule 71 (RelOp -> NEQ .)
    AND             reduce using rule 71 (RelOp -> NEQ .)
    LPAREN          reduce using rule 71 (RelOp -> NEQ .)
    IDENT           reduce using rule 71 (RelOp -> NEQ .)
    INT             reduce using rule 71 (RelOp -> NEQ .)
    FLOAT           reduce using rule 71 (RelOp -> NEQ .)
    IMAG            reduce using rule 71 (RelOp -> NEQ .)
    RUNE            reduce using rule 71 (RelOp -> NEQ .)
    STRING          reduce using rule 71 (RelOp -> NEQ .)
    FUNC            reduce using rule 71 (RelOp -> NEQ .)
    STRUCT          reduce using rule 71 (RelOp -> NEQ .)
    LBRACK          reduce using rule 71 (RelOp -> NEQ .)
    MAP             reduce using rule 71 (RelOp -> NEQ .)


state 163

    (72) RelOp -> LSS .

    ADD             reduce using rule 72 (RelOp -> LSS .)
    SUB             reduce using rule 72 (RelOp -> LSS .)
    NOT             reduce using rule 72 (RelOp -> LSS .)
    XOR             reduce using rule 72 (RelOp -> LSS .)
    MUL             reduce using rule 72 (RelOp -> LSS .)
    AND             reduce using rule 72 (RelOp -> LSS .)
    LPAREN          reduce using rule 72 (RelOp -> LSS .)
    IDENT           reduce using rule 72 (RelOp -> LSS .)
    INT             reduce using rule 72 (RelOp -> LSS .)
    FLOAT           reduce using rule 72 (RelOp -> LSS .)
    IMAG            reduce using rule 72 (RelOp -> LSS .)
    RUNE            reduce using rule 72 (RelOp -> LSS .)
    STRING          reduce using rule 72 (RelOp -> LSS .)
    FUNC            reduce using rule 72 (RelOp -> LSS .)
    STRUCT          reduce using rule 72 (RelOp -> LSS .)
    LBRACK          reduce using rule 72 (RelOp -> LSS .)
    MAP             reduce using rule 72 (RelOp -> LSS .)


state 164

    (73) RelOp -> LEQ .

    ADD             reduce using rule 73 (RelOp -> LEQ .)
    SUB             reduce using rule 73 (RelOp -> LEQ .)
    NOT             reduce using rule 73 (RelOp -> LEQ .)
    XOR             reduce using rule 73 (RelOp -> LEQ .)
    MUL             reduce using rule 73 (RelOp -> LEQ .)
    AND             reduce using rule 73 (RelOp -> LEQ .)
    LPAREN          reduce using rule 73 (RelOp -> LEQ .)
    IDENT           reduce using rule 73 (RelOp -> LEQ .)
    INT             reduce using rule 73 (RelOp -> LEQ .)
    FLOAT           reduce using rule 73 (RelOp -> LEQ .)
    IMAG            reduce using rule 73 (RelOp -> LEQ .)
    RUNE            reduce using rule 73 (RelOp -> LEQ .)
    STRING          reduce using rule 73 (RelOp -> LEQ .)
    FUNC            reduce using rule 73 (RelOp -> LEQ .)
    STRUCT          reduce using rule 73 (RelOp -> LEQ .)
    LBRACK          reduce using rule 73 (RelOp -> LEQ .)
    MAP             reduce using rule 73 (RelOp -> LEQ .)


state 165

    (74) RelOp -> GTR .

    ADD             reduce using rule 74 (RelOp -> GTR .)
    SUB             reduce using rule 74 (RelOp -> GTR .)
    NOT             reduce using rule 74 (RelOp -> GTR .)
    XOR             reduce using rule 74 (RelOp -> GTR .)
    MUL             reduce using rule 74 (RelOp -> GTR .)
    AND             reduce using rule 74 (RelOp -> GTR .)
    LPAREN          reduce using rule 74 (RelOp -> GTR .)
    IDENT           reduce using rule 74 (RelOp -> GTR .)
    INT             reduce using rule 74 (RelOp -> GTR .)
    FLOAT           reduce using rule 74 (RelOp -> GTR .)
    IMAG            reduce using rule 74 (RelOp -> GTR .)
    RUNE            reduce using rule 74 (RelOp -> GTR .)
    STRING          reduce using rule 74 (RelOp -> GTR .)
    FUNC            reduce using rule 74 (RelOp -> GTR .)
    STRUCT          reduce using rule 74 (RelOp -> GTR .)
    LBRACK          reduce using rule 74 (RelOp -> GTR .)
    MAP             reduce using rule 74 (RelOp -> GTR .)


state 166

    (75) RelOp -> GEQ .

    ADD             reduce using rule 75 (RelOp -> GEQ .)
    SUB             reduce using rule 75 (RelOp -> GEQ .)
    NOT             reduce using rule 75 (RelOp -> GEQ .)
    XOR             reduce using rule 75 (RelOp -> GEQ .)
    MUL             reduce using rule 75 (RelOp -> GEQ .)
    AND             reduce using rule 75 (RelOp -> GEQ .)
    LPAREN          reduce using rule 75 (RelOp -> GEQ .)
    IDENT           reduce using rule 75 (RelOp -> GEQ .)
    INT             reduce using rule 75 (RelOp -> GEQ .)
    FLOAT           reduce using rule 75 (RelOp -> GEQ .)
    IMAG            reduce using rule 75 (RelOp -> GEQ .)
    RUNE            reduce using rule 75 (RelOp -> GEQ .)
    STRING          reduce using rule 75 (RelOp -> GEQ .)
    FUNC            reduce using rule 75 (RelOp -> GEQ .)
    STRUCT          reduce using rule 75 (RelOp -> GEQ .)
    LBRACK          reduce using rule 75 (RelOp -> GEQ .)
    MAP             reduce using rule 75 (RelOp -> GEQ .)


state 167

    (76) AddOp -> ADD .

    ADD             reduce using rule 76 (AddOp -> ADD .)
    SUB             reduce using rule 76 (AddOp -> ADD .)
    NOT             reduce using rule 76 (AddOp -> ADD .)
    XOR             reduce using rule 76 (AddOp -> ADD .)
    MUL             reduce using rule 76 (AddOp -> ADD .)
    AND             reduce using rule 76 (AddOp -> ADD .)
    LPAREN          reduce using rule 76 (AddOp -> ADD .)
    IDENT           reduce using rule 76 (AddOp -> ADD .)
    INT             reduce using rule 76 (AddOp -> ADD .)
    FLOAT           reduce using rule 76 (AddOp -> ADD .)
    IMAG            reduce using rule 76 (AddOp -> ADD .)
    RUNE            reduce using rule 76 (AddOp -> ADD .)
    STRING          reduce using rule 76 (AddOp -> ADD .)
    FUNC            reduce using rule 76 (AddOp -> ADD .)
    STRUCT          reduce using rule 76 (AddOp -> ADD .)
    LBRACK          reduce using rule 76 (AddOp -> ADD .)
    MAP             reduce using rule 76 (AddOp -> ADD .)


state 168

    (77) AddOp -> SUB .

    ADD             reduce using rule 77 (AddOp -> SUB .)
    SUB             reduce using rule 77 (AddOp -> SUB .)
    NOT             reduce using rule 77 (AddOp -> SUB .)
    XOR             reduce using rule 77 (AddOp -> SUB .)
    MUL             reduce using rule 77 (AddOp -> SUB .)
    AND             reduce using rule 77 (AddOp -> SUB .)
    LPAREN          reduce using rule 77 (AddOp -> SUB .)
    IDENT           reduce using rule 77 (AddOp -> SUB .)
    INT             reduce using rule 77 (AddOp -> SUB .)
    FLOAT           reduce using rule 77 (AddOp -> SUB .)
    IMAG            reduce using rule 77 (AddOp -> SUB .)
    RUNE            reduce using rule 77 (AddOp -> SUB .)
    STRING          reduce using rule 77 (AddOp -> SUB .)
    FUNC            reduce using rule 77 (AddOp -> SUB .)
    STRUCT          reduce using rule 77 (AddOp -> SUB .)
    LBRACK          reduce using rule 77 (AddOp -> SUB .)
    MAP             reduce using rule 77 (AddOp -> SUB .)


state 169

    (78) AddOp -> OR .

    ADD             reduce using rule 78 (AddOp -> OR .)
    SUB             reduce using rule 78 (AddOp -> OR .)
    NOT             reduce using rule 78 (AddOp -> OR .)
    XOR             reduce using rule 78 (AddOp -> OR .)
    MUL             reduce using rule 78 (AddOp -> OR .)
    AND             reduce using rule 78 (AddOp -> OR .)
    LPAREN          reduce using rule 78 (AddOp -> OR .)
    IDENT           reduce using rule 78 (AddOp -> OR .)
    INT             reduce using rule 78 (AddOp -> OR .)
    FLOAT           reduce using rule 78 (AddOp -> OR .)
    IMAG            reduce using rule 78 (AddOp -> OR .)
    RUNE            reduce using rule 78 (AddOp -> OR .)
    STRING          reduce using rule 78 (AddOp -> OR .)
    FUNC            reduce using rule 78 (AddOp -> OR .)
    STRUCT          reduce using rule 78 (AddOp -> OR .)
    LBRACK          reduce using rule 78 (AddOp -> OR .)
    MAP             reduce using rule 78 (AddOp -> OR .)


state 170

    (79) AddOp -> XOR .

    ADD             reduce using rule 79 (AddOp -> XOR .)
    SUB             reduce using rule 79 (AddOp -> XOR .)
    NOT             reduce using rule 79 (AddOp -> XOR .)
    XOR             reduce using rule 79 (AddOp -> XOR .)
    MUL             reduce using rule 79 (AddOp -> XOR .)
    AND             reduce using rule 79 (AddOp -> XOR .)
    LPAREN          reduce using rule 79 (AddOp -> XOR .)
    IDENT           reduce using rule 79 (AddOp -> XOR .)
    INT             reduce using rule 79 (AddOp -> XOR .)
    FLOAT           reduce using rule 79 (AddOp -> XOR .)
    IMAG            reduce using rule 79 (AddOp -> XOR .)
    RUNE            reduce using rule 79 (AddOp -> XOR .)
    STRING          reduce using rule 79 (AddOp -> XOR .)
    FUNC            reduce using rule 79 (AddOp -> XOR .)
    STRUCT          reduce using rule 79 (AddOp -> XOR .)
    LBRACK          reduce using rule 79 (AddOp -> XOR .)
    MAP             reduce using rule 79 (AddOp -> XOR .)


state 171

    (80) MulOp -> MUL .

    ADD             reduce using rule 80 (MulOp -> MUL .)
    SUB             reduce using rule 80 (MulOp -> MUL .)
    NOT             reduce using rule 80 (MulOp -> MUL .)
    XOR             reduce using rule 80 (MulOp -> MUL .)
    MUL             reduce using rule 80 (MulOp -> MUL .)
    AND             reduce using rule 80 (MulOp -> MUL .)
    LPAREN          reduce using rule 80 (MulOp -> MUL .)
    IDENT           reduce using rule 80 (MulOp -> MUL .)
    INT             reduce using rule 80 (MulOp -> MUL .)
    FLOAT           reduce using rule 80 (MulOp -> MUL .)
    IMAG            reduce using rule 80 (MulOp -> MUL .)
    RUNE            reduce using rule 80 (MulOp -> MUL .)
    STRING          reduce using rule 80 (MulOp -> MUL .)
    FUNC            reduce using rule 80 (MulOp -> MUL .)
    STRUCT          reduce using rule 80 (MulOp -> MUL .)
    LBRACK          reduce using rule 80 (MulOp -> MUL .)
    MAP             reduce using rule 80 (MulOp -> MUL .)


state 172

    (81) MulOp -> QUO .

    ADD             reduce using rule 81 (MulOp -> QUO .)
    SUB             reduce using rule 81 (MulOp -> QUO .)
    NOT             reduce using rule 81 (MulOp -> QUO .)
    XOR             reduce using rule 81 (MulOp -> QUO .)
    MUL             reduce using rule 81 (MulOp -> QUO .)
    AND             reduce using rule 81 (MulOp -> QUO .)
    LPAREN          reduce using rule 81 (MulOp -> QUO .)
    IDENT           reduce using rule 81 (MulOp -> QUO .)
    INT             reduce using rule 81 (MulOp -> QUO .)
    FLOAT           reduce using rule 81 (MulOp -> QUO .)
    IMAG            reduce using rule 81 (MulOp -> QUO .)
    RUNE            reduce using rule 81 (MulOp -> QUO .)
    STRING          reduce using rule 81 (MulOp -> QUO .)
    FUNC            reduce using rule 81 (MulOp -> QUO .)
    STRUCT          reduce using rule 81 (MulOp -> QUO .)
    LBRACK          reduce using rule 81 (MulOp -> QUO .)
    MAP             reduce using rule 81 (MulOp -> QUO .)


state 173

    (82) MulOp -> REM .

    ADD             reduce using rule 82 (MulOp -> REM .)
    SUB             reduce using rule 82 (MulOp -> REM .)
    NOT             reduce using rule 82 (MulOp -> REM .)
    XOR             reduce using rule 82 (MulOp -> REM .)
    MUL             reduce using rule 82 (MulOp -> REM .)
    AND             reduce using rule 82 (MulOp -> REM .)
    LPAREN          reduce using rule 82 (MulOp -> REM .)
    IDENT           reduce using rule 82 (MulOp -> REM .)
    INT             reduce using rule 82 (MulOp -> REM .)
    FLOAT           reduce using rule 82 (MulOp -> REM .)
    IMAG            reduce using rule 82 (MulOp -> REM .)
    RUNE            reduce using rule 82 (MulOp -> REM .)
    STRING          reduce using rule 82 (MulOp -> REM .)
    FUNC            reduce using rule 82 (MulOp -> REM .)
    STRUCT          reduce using rule 82 (MulOp -> REM .)
    LBRACK          reduce using rule 82 (MulOp -> REM .)
    MAP             reduce using rule 82 (MulOp -> REM .)


state 174

    (83) MulOp -> SHL .

    ADD             reduce using rule 83 (MulOp -> SHL .)
    SUB             reduce using rule 83 (MulOp -> SHL .)
    NOT             reduce using rule 83 (MulOp -> SHL .)
    XOR             reduce using rule 83 (MulOp -> SHL .)
    MUL             reduce using rule 83 (MulOp -> SHL .)
    AND             reduce using rule 83 (MulOp -> SHL .)
    LPAREN          reduce using rule 83 (MulOp -> SHL .)
    IDENT           reduce using rule 83 (MulOp -> SHL .)
    INT             reduce using rule 83 (MulOp -> SHL .)
    FLOAT           reduce using rule 83 (MulOp -> SHL .)
    IMAG            reduce using rule 83 (MulOp -> SHL .)
    RUNE            reduce using rule 83 (MulOp -> SHL .)
    STRING          reduce using rule 83 (MulOp -> SHL .)
    FUNC            reduce using rule 83 (MulOp -> SHL .)
    STRUCT          reduce using rule 83 (MulOp -> SHL .)
    LBRACK          reduce using rule 83 (MulOp -> SHL .)
    MAP             reduce using rule 83 (MulOp -> SHL .)


state 175

    (84) MulOp -> SHR .

    ADD             reduce using rule 84 (MulOp -> SHR .)
    SUB             reduce using rule 84 (MulOp -> SHR .)
    NOT             reduce using rule 84 (MulOp -> SHR .)
    XOR             reduce using rule 84 (MulOp -> SHR .)
    MUL             reduce using rule 84 (MulOp -> SHR .)
    AND             reduce using rule 84 (MulOp -> SHR .)
    LPAREN          reduce using rule 84 (MulOp -> SHR .)
    IDENT           reduce using rule 84 (MulOp -> SHR .)
    INT             reduce using rule 84 (MulOp -> SHR .)
    FLOAT           reduce using rule 84 (MulOp -> SHR .)
    IMAG            reduce using rule 84 (MulOp -> SHR .)
    RUNE            reduce using rule 84 (MulOp -> SHR .)
    STRING          reduce using rule 84 (MulOp -> SHR .)
    FUNC            reduce using rule 84 (MulOp -> SHR .)
    STRUCT          reduce using rule 84 (MulOp -> SHR .)
    LBRACK          reduce using rule 84 (MulOp -> SHR .)
    MAP             reduce using rule 84 (MulOp -> SHR .)


state 176

    (85) MulOp -> AND .

    ADD             reduce using rule 85 (MulOp -> AND .)
    SUB             reduce using rule 85 (MulOp -> AND .)
    NOT             reduce using rule 85 (MulOp -> AND .)
    XOR             reduce using rule 85 (MulOp -> AND .)
    MUL             reduce using rule 85 (MulOp -> AND .)
    AND             reduce using rule 85 (MulOp -> AND .)
    LPAREN          reduce using rule 85 (MulOp -> AND .)
    IDENT           reduce using rule 85 (MulOp -> AND .)
    INT             reduce using rule 85 (MulOp -> AND .)
    FLOAT           reduce using rule 85 (MulOp -> AND .)
    IMAG            reduce using rule 85 (MulOp -> AND .)
    RUNE            reduce using rule 85 (MulOp -> AND .)
    STRING          reduce using rule 85 (MulOp -> AND .)
    FUNC            reduce using rule 85 (MulOp -> AND .)
    STRUCT          reduce using rule 85 (MulOp -> AND .)
    LBRACK          reduce using rule 85 (MulOp -> AND .)
    MAP             reduce using rule 85 (MulOp -> AND .)


state 177

    (86) MulOp -> AND_NOT .

    ADD             reduce using rule 86 (MulOp -> AND_NOT .)
    SUB             reduce using rule 86 (MulOp -> AND_NOT .)
    NOT             reduce using rule 86 (MulOp -> AND_NOT .)
    XOR             reduce using rule 86 (MulOp -> AND_NOT .)
    MUL             reduce using rule 86 (MulOp -> AND_NOT .)
    AND             reduce using rule 86 (MulOp -> AND_NOT .)
    LPAREN          reduce using rule 86 (MulOp -> AND_NOT .)
    IDENT           reduce using rule 86 (MulOp -> AND_NOT .)
    INT             reduce using rule 86 (MulOp -> AND_NOT .)
    FLOAT           reduce using rule 86 (MulOp -> AND_NOT .)
    IMAG            reduce using rule 86 (MulOp -> AND_NOT .)
    RUNE            reduce using rule 86 (MulOp -> AND_NOT .)
    STRING          reduce using rule 86 (MulOp -> AND_NOT .)
    FUNC            reduce using rule 86 (MulOp -> AND_NOT .)
    STRUCT          reduce using rule 86 (MulOp -> AND_NOT .)
    LBRACK          reduce using rule 86 (MulOp -> AND_NOT .)
    MAP             reduce using rule 86 (MulOp -> AND_NOT .)


state 178

    (127) PrimaryExpr -> PrimaryExpr Selector .

    PERIOD          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACK          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    LOR             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    LAND            reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    EQL             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    NEQ             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    LSS             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    LEQ             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    GTR             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    GEQ             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    SUB             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    MUL             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    QUO             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    REM             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    SHL             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    SHR             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_NOT         reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACK          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOLON       reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    INC             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    DEC             reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    ASSIGN          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    SUB_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    OR_ASSIGN       reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    MUL_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    QUO_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    REM_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    SHL_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    SHR_ASSIGN      reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_NOT_ASSIGN  reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACE          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 127 (PrimaryExpr -> PrimaryExpr Selector .)


state 179

    (128) PrimaryExpr -> PrimaryExpr Slice .

    PERIOD          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACK          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    LOR             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    LAND            reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    EQL             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    NEQ             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    LSS             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    LEQ             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    GTR             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    GEQ             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    QUO             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    REM             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT         reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    INC             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    DEC             reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    ASSIGN          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    OR_ASSIGN       reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    QUO_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    REM_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR_ASSIGN      reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT_ASSIGN  reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACE          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 128 (PrimaryExpr -> PrimaryExpr Slice .)


state 180

    (129) PrimaryExpr -> PrimaryExpr Arguments .

    PERIOD          reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOR             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    LAND            reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQL             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    NEQ             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSS             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    GTR             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUO             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    REM             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT         reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    INC             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    DEC             reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGN          reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD_ASSIGN      reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB_ASSIGN      reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR_ASSIGN       reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR_ASSIGN      reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL_ASSIGN      reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUO_ASSIGN      reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    REM_ASSIGN      reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_ASSIGN      reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL_ASSIGN      reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR_ASSIGN      reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT_ASSIGN  reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACE          reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 129 (PrimaryExpr -> PrimaryExpr Arguments .)


state 181

    (132) Selector -> PERIOD . IDENT

    IDENT           shift and go to state 248


state 182

    (133) Slice -> LBRACK . Expr COLON Expr RBRACK
    (134) Slice -> LBRACK . COLON Expr RBRACK
    (135) Slice -> LBRACK . Expr COLON RBRACK
    (136) Slice -> LBRACK . COLON RBRACK
    (137) Slice -> LBRACK . COLON Expr COLON Expr RBRACK
    (138) Slice -> LBRACK . Expr COLON Expr COLON Expr RBRACK
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    COLON           shift and go to state 250
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Expr                           shift and go to state 249
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 183

    (139) Arguments -> LPAREN . RPAREN
    (140) Arguments -> LPAREN . ExpressionList RPAREN
    (141) Arguments -> LPAREN . ExpressionList COMMA RPAREN
    (142) Arguments -> LPAREN . Type RPAREN
    (143) Arguments -> LPAREN . Type COMMA RPAREN
    (144) Arguments -> LPAREN . Type COMMA ExpressionList RPAREN
    (145) Arguments -> LPAREN . Type COMMA ExpressionList COMMA RPAREN
    (60) ExpressionList -> . Expr ExprOth
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody

    RPAREN          shift and go to state 251
    LPAREN          shift and go to state 185
    IDENT           shift and go to state 188
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 254
    MAP             shift and go to state 65
    FUNC            shift and go to state 193
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    AND             shift and go to state 107
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121

    ExpressionList                 shift and go to state 252
    Type                           shift and go to state 253
    Expr                           shift and go to state 137
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    UnaryExpr                      shift and go to state 97
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 189
    StructType                     shift and go to state 190
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 191
    MapType                        shift and go to state 192
    FunctionType                   shift and go to state 61
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114

state 184

    (64) UnaryExpr -> UnaryOp UnaryExpr .

    LOR             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    LAND            reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQL             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    NEQ             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSS             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEQ             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    GTR             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    GEQ             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    QUO             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    REM             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_NOT         reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    INC             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    DEC             reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    ASSIGN          reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD_ASSIGN      reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB_ASSIGN      reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL_ASSIGN      reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    QUO_ASSIGN      reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    REM_ASSIGN      reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_ASSIGN      reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL_ASSIGN      reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR_ASSIGN      reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACE          reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 64 (UnaryExpr -> UnaryOp UnaryExpr .)


state 185

    (31) Type -> LPAREN . Type RPAREN
    (97) Operand -> LPAREN . Expr RPAREN
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody

    LPAREN          shift and go to state 185
    IDENT           shift and go to state 188
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 254
    MAP             shift and go to state 65
    FUNC            shift and go to state 193
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    AND             shift and go to state 107
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121

    Type                           shift and go to state 187
    Expr                           shift and go to state 186
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    UnaryExpr                      shift and go to state 97
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 189
    StructType                     shift and go to state 190
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 191
    MapType                        shift and go to state 192
    FunctionType                   shift and go to state 61
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114

state 186

    (97) Operand -> LPAREN Expr . RPAREN
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    RPAREN          shift and go to state 255
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 187

    (31) Type -> LPAREN Type . RPAREN
    (130) Conversion -> Type . LPAREN Expr RPAREN
    (131) Conversion -> Type . LPAREN Expr COMMA RPAREN

    RPAREN          shift and go to state 150
    LPAREN          shift and go to state 194


state 188

    (32) TypeName -> IDENT .
    (34) QualifiedIdent -> IDENT . PERIOD IDENT
    (123) OperandName -> IDENT .

  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 32 (TypeName -> IDENT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 32 (TypeName -> IDENT .)
  ! reduce/reduce conflict for COMMA resolved using rule 32 (TypeName -> IDENT .)
    LBRACE          reduce using rule 32 (TypeName -> IDENT .)
    RPAREN          reduce using rule 32 (TypeName -> IDENT .)
    LPAREN          reduce using rule 32 (TypeName -> IDENT .)
    COMMA           reduce using rule 32 (TypeName -> IDENT .)
    PERIOD          shift and go to state 93
    LBRACK          reduce using rule 123 (OperandName -> IDENT .)
    LOR             reduce using rule 123 (OperandName -> IDENT .)
    LAND            reduce using rule 123 (OperandName -> IDENT .)
    EQL             reduce using rule 123 (OperandName -> IDENT .)
    NEQ             reduce using rule 123 (OperandName -> IDENT .)
    LSS             reduce using rule 123 (OperandName -> IDENT .)
    LEQ             reduce using rule 123 (OperandName -> IDENT .)
    GTR             reduce using rule 123 (OperandName -> IDENT .)
    GEQ             reduce using rule 123 (OperandName -> IDENT .)
    ADD             reduce using rule 123 (OperandName -> IDENT .)
    SUB             reduce using rule 123 (OperandName -> IDENT .)
    OR              reduce using rule 123 (OperandName -> IDENT .)
    XOR             reduce using rule 123 (OperandName -> IDENT .)
    MUL             reduce using rule 123 (OperandName -> IDENT .)
    QUO             reduce using rule 123 (OperandName -> IDENT .)
    REM             reduce using rule 123 (OperandName -> IDENT .)
    SHL             reduce using rule 123 (OperandName -> IDENT .)
    SHR             reduce using rule 123 (OperandName -> IDENT .)
    AND             reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 123 (OperandName -> IDENT .)

  ! PERIOD          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LPAREN          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! RPAREN          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! COMMA           [ reduce using rule 123 (OperandName -> IDENT .) ]


state 189

    (35) TypeLit -> ArrayType .
    (107) CompositeLit -> ArrayType . LiteralValue
    (111) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (112) LiteralValue -> . LBRACE ElementList RBRACE
    (113) LiteralValue -> . LBRACE RBRACE

    RPAREN          reduce using rule 35 (TypeLit -> ArrayType .)
    LPAREN          reduce using rule 35 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 35 (TypeLit -> ArrayType .)
    LBRACE          shift and go to state 196

    LiteralValue                   shift and go to state 198

state 190

    (36) TypeLit -> StructType .
    (106) CompositeLit -> StructType . LiteralValue
    (111) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (112) LiteralValue -> . LBRACE ElementList RBRACE
    (113) LiteralValue -> . LBRACE RBRACE

    RPAREN          reduce using rule 36 (TypeLit -> StructType .)
    LPAREN          reduce using rule 36 (TypeLit -> StructType .)
    COMMA           reduce using rule 36 (TypeLit -> StructType .)
    LBRACE          shift and go to state 196

    LiteralValue                   shift and go to state 197

state 191

    (38) TypeLit -> SliceType .
    (108) CompositeLit -> SliceType . LiteralValue
    (111) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (112) LiteralValue -> . LBRACE ElementList RBRACE
    (113) LiteralValue -> . LBRACE RBRACE

    RPAREN          reduce using rule 38 (TypeLit -> SliceType .)
    LPAREN          reduce using rule 38 (TypeLit -> SliceType .)
    COMMA           reduce using rule 38 (TypeLit -> SliceType .)
    LBRACE          shift and go to state 196

    LiteralValue                   shift and go to state 199

state 192

    (39) TypeLit -> MapType .
    (109) CompositeLit -> MapType . LiteralValue
    (111) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (112) LiteralValue -> . LBRACE ElementList RBRACE
    (113) LiteralValue -> . LBRACE RBRACE

    RPAREN          reduce using rule 39 (TypeLit -> MapType .)
    LPAREN          reduce using rule 39 (TypeLit -> MapType .)
    COMMA           reduce using rule 39 (TypeLit -> MapType .)
    LBRACE          shift and go to state 196

    LiteralValue                   shift and go to state 200

state 193

    (59) FunctionType -> FUNC . Signature
    (124) FunctionLit -> FUNC . Signature FunctionBody
    (166) Signature -> . Parameters Result
    (167) Signature -> . Parameters
    (168) Parameters -> . LPAREN RPAREN
    (169) Parameters -> . LPAREN ParameterList RPAREN
    (170) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 48

    Signature                      shift and go to state 256
    Parameters                     shift and go to state 47

state 194

    (130) Conversion -> Type LPAREN . Expr RPAREN
    (131) Conversion -> Type LPAREN . Expr COMMA RPAREN
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Type                           shift and go to state 111
    Expr                           shift and go to state 257
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 195

    (110) CompositeLit -> TypeName LiteralValue .

    PERIOD          reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    LBRACK          reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    LPAREN          reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    LOR             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    LAND            reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    EQL             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    NEQ             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    LSS             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    LEQ             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    GTR             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    GEQ             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    ADD             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    SUB             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    OR              reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    XOR             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    MUL             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    QUO             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    REM             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    SHL             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    SHR             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    AND             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    AND_NOT         reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    RBRACK          reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    COMMA           reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    SEMICOLON       reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    RPAREN          reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    INC             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    DEC             reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    ASSIGN          reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    ADD_ASSIGN      reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    SUB_ASSIGN      reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    OR_ASSIGN       reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    XOR_ASSIGN      reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    MUL_ASSIGN      reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    QUO_ASSIGN      reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    REM_ASSIGN      reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    AND_ASSIGN      reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    SHL_ASSIGN      reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    SHR_ASSIGN      reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    COLON           reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    RBRACE          reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)
    LBRACE          reduce using rule 110 (CompositeLit -> TypeName LiteralValue .)


state 196

    (111) LiteralValue -> LBRACE . ElementList COMMA RBRACE
    (112) LiteralValue -> LBRACE . ElementList RBRACE
    (113) LiteralValue -> LBRACE . RBRACE
    (114) ElementList -> . KeyedElement
    (115) ElementList -> . ElementList COMMA KeyedElement
    (116) KeyedElement -> . Element
    (117) KeyedElement -> . Key COLON Element
    (121) Element -> . Expr
    (122) Element -> . LiteralValue
    (118) Key -> . IDENT
    (119) Key -> . Expr
    (120) Key -> . LiteralValue
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (111) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (112) LiteralValue -> . LBRACE ElementList RBRACE
    (113) LiteralValue -> . LBRACE RBRACE
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    RBRACE          shift and go to state 259
    IDENT           shift and go to state 265
    LBRACE          shift and go to state 196
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    ElementList                    shift and go to state 258
    KeyedElement                   shift and go to state 260
    Element                        shift and go to state 261
    Key                            shift and go to state 262
    Expr                           shift and go to state 263
    LiteralValue                   shift and go to state 264
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 197

    (106) CompositeLit -> StructType LiteralValue .

    PERIOD          reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    LBRACK          reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    LPAREN          reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    LOR             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    LAND            reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    EQL             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    NEQ             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    LSS             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    LEQ             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    GTR             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    GEQ             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    ADD             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    SUB             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    OR              reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    XOR             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    MUL             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    QUO             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    REM             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    SHL             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    SHR             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    AND             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    AND_NOT         reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    RBRACK          reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    COMMA           reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    SEMICOLON       reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    RPAREN          reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    INC             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    DEC             reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    ASSIGN          reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    ADD_ASSIGN      reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    SUB_ASSIGN      reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    OR_ASSIGN       reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    XOR_ASSIGN      reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    MUL_ASSIGN      reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    QUO_ASSIGN      reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    REM_ASSIGN      reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    AND_ASSIGN      reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    SHL_ASSIGN      reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    SHR_ASSIGN      reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    COLON           reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    RBRACE          reduce using rule 106 (CompositeLit -> StructType LiteralValue .)
    LBRACE          reduce using rule 106 (CompositeLit -> StructType LiteralValue .)


state 198

    (107) CompositeLit -> ArrayType LiteralValue .

    PERIOD          reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    LBRACK          reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    LPAREN          reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    LOR             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    LAND            reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    EQL             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    NEQ             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    LSS             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    LEQ             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    GTR             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    GEQ             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    ADD             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    SUB             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    OR              reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    XOR             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    MUL             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    QUO             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    REM             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    SHL             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    SHR             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    AND             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    AND_NOT         reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    RBRACK          reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    COMMA           reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    SEMICOLON       reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    RPAREN          reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    INC             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    DEC             reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    ASSIGN          reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    ADD_ASSIGN      reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    SUB_ASSIGN      reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    OR_ASSIGN       reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    XOR_ASSIGN      reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    MUL_ASSIGN      reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    QUO_ASSIGN      reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    REM_ASSIGN      reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    AND_ASSIGN      reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    SHL_ASSIGN      reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    SHR_ASSIGN      reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    COLON           reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    RBRACE          reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)
    LBRACE          reduce using rule 107 (CompositeLit -> ArrayType LiteralValue .)


state 199

    (108) CompositeLit -> SliceType LiteralValue .

    PERIOD          reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    LBRACK          reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    LPAREN          reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    LOR             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    LAND            reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    EQL             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    NEQ             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    LSS             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    LEQ             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    GTR             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    GEQ             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    ADD             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    SUB             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    OR              reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    XOR             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    MUL             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    QUO             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    REM             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    SHL             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    SHR             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    AND             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    AND_NOT         reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    RBRACK          reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    COMMA           reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    SEMICOLON       reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    RPAREN          reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    INC             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    DEC             reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    ASSIGN          reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    ADD_ASSIGN      reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    SUB_ASSIGN      reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    OR_ASSIGN       reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    XOR_ASSIGN      reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    MUL_ASSIGN      reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    QUO_ASSIGN      reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    REM_ASSIGN      reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    AND_ASSIGN      reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    SHL_ASSIGN      reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    SHR_ASSIGN      reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    COLON           reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    RBRACE          reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)
    LBRACE          reduce using rule 108 (CompositeLit -> SliceType LiteralValue .)


state 200

    (109) CompositeLit -> MapType LiteralValue .

    PERIOD          reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    LBRACK          reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    LPAREN          reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    LOR             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    LAND            reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    EQL             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    NEQ             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    LSS             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    LEQ             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    GTR             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    GEQ             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    ADD             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    SUB             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    OR              reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    XOR             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    MUL             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    QUO             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    REM             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    SHL             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    SHR             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    AND             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    AND_NOT         reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    RBRACK          reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    COMMA           reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    SEMICOLON       reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    RPAREN          reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    INC             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    DEC             reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    ASSIGN          reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    ADD_ASSIGN      reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    SUB_ASSIGN      reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    OR_ASSIGN       reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    XOR_ASSIGN      reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    MUL_ASSIGN      reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    QUO_ASSIGN      reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    REM_ASSIGN      reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    AND_ASSIGN      reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    SHL_ASSIGN      reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    SHR_ASSIGN      reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    COLON           reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    RBRACE          reduce using rule 109 (CompositeLit -> MapType LiteralValue .)
    LBRACE          reduce using rule 109 (CompositeLit -> MapType LiteralValue .)


state 201

    (124) FunctionLit -> FUNC Signature . FunctionBody
    (59) FunctionType -> FUNC Signature .
    (165) FunctionBody -> . Block
    (225) Block -> . LBRACE StatementList RBRACE

    LPAREN          reduce using rule 59 (FunctionType -> FUNC Signature .)
    LBRACE          shift and go to state 78

    FunctionBody                   shift and go to state 266
    Block                          shift and go to state 77

state 202

    (44) StructType -> STRUCT LBRACE FieldDeclMult . RBRACE
    (45) FieldDeclMult -> FieldDeclMult . FieldDecl SEMICOLON
    (47) FieldDecl -> . IdentifierList Type
    (48) FieldDecl -> . EmbeddedField
    (49) FieldDecl -> . IdentifierList Type Tag
    (50) FieldDecl -> . EmbeddedField Tag
    (26) IdentifierList -> . IDENT IdentifierOth
    (52) EmbeddedField -> . MUL TypeName
    (53) EmbeddedField -> . TypeName
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (34) QualifiedIdent -> . IDENT PERIOD IDENT

    RBRACE          shift and go to state 267
    IDENT           shift and go to state 88
    MUL             shift and go to state 271

    FieldDecl                      shift and go to state 268
    IdentifierList                 shift and go to state 269
    EmbeddedField                  shift and go to state 270
    TypeName                       shift and go to state 272
    QualifiedIdent                 shift and go to state 55

state 203

    (57) MapType -> MAP LBRACK KeyType . RBRACK ElementType

    RBRACK          shift and go to state 273


state 204

    (58) KeyType -> Type .

    RBRACK          reduce using rule 58 (KeyType -> Type .)


state 205

    (27) IdentifierOth -> IdentifierOth COMMA IDENT .

    COMMA           reduce using rule 27 (IdentifierOth -> IdentifierOth COMMA IDENT .)
    LPAREN          reduce using rule 27 (IdentifierOth -> IdentifierOth COMMA IDENT .)
    IDENT           reduce using rule 27 (IdentifierOth -> IdentifierOth COMMA IDENT .)
    LBRACK          reduce using rule 27 (IdentifierOth -> IdentifierOth COMMA IDENT .)
    STRUCT          reduce using rule 27 (IdentifierOth -> IdentifierOth COMMA IDENT .)
    MUL             reduce using rule 27 (IdentifierOth -> IdentifierOth COMMA IDENT .)
    MAP             reduce using rule 27 (IdentifierOth -> IdentifierOth COMMA IDENT .)
    FUNC            reduce using rule 27 (IdentifierOth -> IdentifierOth COMMA IDENT .)
    ASSIGN          reduce using rule 27 (IdentifierOth -> IdentifierOth COMMA IDENT .)
    DEFINE          reduce using rule 27 (IdentifierOth -> IdentifierOth COMMA IDENT .)


state 206

    (156) VarMult -> VarMult VarSpec SEMICOLON .

    RPAREN          reduce using rule 156 (VarMult -> VarMult VarSpec SEMICOLON .)
    IDENT           reduce using rule 156 (VarMult -> VarMult VarSpec SEMICOLON .)


state 207

    (158) VarSpec -> IdentifierList Type ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 158 (VarSpec -> IdentifierList Type ASSIGN ExpressionList .)


state 208

    (60) ExpressionList -> Expr ExprOth .
    (93) ExprOth -> ExprOth . COMMA Expr

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    ASSIGN          reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    ADD_ASSIGN      reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    SUB_ASSIGN      reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    OR_ASSIGN       reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    XOR_ASSIGN      reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    MUL_ASSIGN      reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    QUO_ASSIGN      reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    REM_ASSIGN      reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    AND_ASSIGN      reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    SHL_ASSIGN      reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    SHR_ASSIGN      reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    AND_NOT_ASSIGN  reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    RPAREN          reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    LBRACE          reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    COLON           reduce using rule 60 (ExpressionList -> Expr ExprOth .)
    COMMA           shift and go to state 274

  ! COMMA           [ reduce using rule 60 (ExpressionList -> Expr ExprOth .) ]


state 209

    (148) TypeSpecMult -> TypeSpecMult TypeSpec SEMICOLON .

    RPAREN          reduce using rule 148 (TypeSpecMult -> TypeSpecMult TypeSpec SEMICOLON .)
    IDENT           reduce using rule 148 (TypeSpecMult -> TypeSpecMult TypeSpec SEMICOLON .)


state 210

    (225) Block -> LBRACE StatementList RBRACE .

    SEMICOLON       reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    PERIOD          reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    LBRACK          reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    LPAREN          reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    LOR             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    LAND            reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    EQL             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    NEQ             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    LSS             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    LEQ             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    GTR             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    GEQ             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    ADD             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    SUB             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    OR              reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    XOR             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    MUL             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    QUO             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    REM             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    SHL             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    SHR             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    AND             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    AND_NOT         reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    RBRACK          reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    COMMA           reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    RPAREN          reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    INC             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    DEC             reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    ASSIGN          reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    ADD_ASSIGN      reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    SUB_ASSIGN      reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    OR_ASSIGN       reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    XOR_ASSIGN      reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    MUL_ASSIGN      reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    QUO_ASSIGN      reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    REM_ASSIGN      reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    AND_ASSIGN      reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    SHL_ASSIGN      reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    SHR_ASSIGN      reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    AND_NOT_ASSIGN  reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    COLON           reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    RBRACE          reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    LBRACE          reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 225 (Block -> LBRACE StatementList RBRACE .)


state 211

    (177) StatementList -> StatementList Statement . SEMICOLON

    SEMICOLON       shift and go to state 275


state 212

    (179) Statement -> Decl .

    SEMICOLON       reduce using rule 179 (Statement -> Decl .)


state 213

    (180) Statement -> LabeledStmt .

    SEMICOLON       reduce using rule 180 (Statement -> LabeledStmt .)


state 214

    (181) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 181 (Statement -> SimpleStmt .)


state 215

    (182) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 182 (Statement -> GotoStmt .)


state 216

    (183) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 183 (Statement -> ReturnStmt .)


state 217

    (184) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 184 (Statement -> BreakStmt .)


state 218

    (185) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 185 (Statement -> ContinueStmt .)


state 219

    (186) Statement -> FallthroughStmt .

    SEMICOLON       reduce using rule 186 (Statement -> FallthroughStmt .)


state 220

    (187) Statement -> Block .

    SEMICOLON       reduce using rule 187 (Statement -> Block .)


state 221

    (188) Statement -> IfStmt .

    SEMICOLON       reduce using rule 188 (Statement -> IfStmt .)


state 222

    (189) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 189 (Statement -> SwitchStmt .)


state 223

    (190) Statement -> ForStmt .

    SEMICOLON       reduce using rule 190 (Statement -> ForStmt .)


state 224

    (191) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 276


state 225

    (193) SimpleStmt -> EmptyStmt .

    SEMICOLON       reduce using rule 193 (SimpleStmt -> EmptyStmt .)
    LBRACE          reduce using rule 193 (SimpleStmt -> EmptyStmt .)


state 226

    (194) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 194 (SimpleStmt -> ExpressionStmt .)
    LBRACE          reduce using rule 194 (SimpleStmt -> ExpressionStmt .)


state 227

    (195) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 195 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 195 (SimpleStmt -> IncDecStmt .)


state 228

    (196) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 196 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 196 (SimpleStmt -> Assignment .)


state 229

    (197) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 197 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 197 (SimpleStmt -> ShortVarDecl .)


state 230

    (223) GotoStmt -> GOTO . Label
    (192) Label -> . IDENT

    IDENT           shift and go to state 278

    Label                          shift and go to state 277

state 231

    (217) ReturnStmt -> RETURN . ExpressionList
    (218) ReturnStmt -> RETURN .
    (60) ExpressionList -> . Expr ExprOth
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    SEMICOLON       reduce using rule 218 (ReturnStmt -> RETURN .)
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 279
    Expr                           shift and go to state 137
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 232

    (202) Assignment -> ExpressionList . assign_op ExpressionList
    (203) assign_op -> . add_op_assign
    (204) assign_op -> . mul_op_assign
    (205) assign_op -> . ASSIGN
    (206) add_op_assign -> . ADD_ASSIGN
    (207) add_op_assign -> . SUB_ASSIGN
    (208) add_op_assign -> . OR_ASSIGN
    (209) add_op_assign -> . XOR_ASSIGN
    (210) mul_op_assign -> . MUL_ASSIGN
    (211) mul_op_assign -> . QUO_ASSIGN
    (212) mul_op_assign -> . REM_ASSIGN
    (213) mul_op_assign -> . AND_ASSIGN
    (214) mul_op_assign -> . SHL_ASSIGN
    (215) mul_op_assign -> . SHR_ASSIGN
    (216) mul_op_assign -> . AND_NOT_ASSIGN

    ASSIGN          shift and go to state 283
    ADD_ASSIGN      shift and go to state 284
    SUB_ASSIGN      shift and go to state 285
    OR_ASSIGN       shift and go to state 286
    XOR_ASSIGN      shift and go to state 287
    MUL_ASSIGN      shift and go to state 288
    QUO_ASSIGN      shift and go to state 289
    REM_ASSIGN      shift and go to state 290
    AND_ASSIGN      shift and go to state 291
    SHL_ASSIGN      shift and go to state 292
    SHR_ASSIGN      shift and go to state 293
    AND_NOT_ASSIGN  shift and go to state 294

    assign_op                      shift and go to state 280
    add_op_assign                  shift and go to state 281
    mul_op_assign                  shift and go to state 282

state 233

    (219) BreakStmt -> BREAK . Label
    (220) BreakStmt -> BREAK .
    (192) Label -> . IDENT

    SEMICOLON       reduce using rule 220 (BreakStmt -> BREAK .)
    IDENT           shift and go to state 278

    Label                          shift and go to state 295

state 234

    (221) ContinueStmt -> CONTINUE . Label
    (222) ContinueStmt -> CONTINUE .
    (192) Label -> . IDENT

    SEMICOLON       reduce using rule 222 (ContinueStmt -> CONTINUE .)
    IDENT           shift and go to state 278

    Label                          shift and go to state 296

state 235

    (224) FallthroughStmt -> FALLTHROUGH .

    SEMICOLON       reduce using rule 224 (FallthroughStmt -> FALLTHROUGH .)


state 236

    (226) IfStmt -> IF . SimpleStmtOpt Expr Block else_stmt
    (230) SimpleStmtOpt -> . SimpleStmt SEMICOLON
    (231) SimpleStmtOpt -> .
    (193) SimpleStmt -> . EmptyStmt
    (194) SimpleStmt -> . ExpressionStmt
    (195) SimpleStmt -> . IncDecStmt
    (196) SimpleStmt -> . Assignment
    (197) SimpleStmt -> . ShortVarDecl
    (198) EmptyStmt -> .
    (199) ExpressionStmt -> . Expr
    (200) IncDecStmt -> . Expr INC
    (201) IncDecStmt -> . Expr DEC
    (202) Assignment -> . ExpressionList assign_op ExpressionList
    (161) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (60) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAG resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
    SEMICOLON       reduce using rule 198 (EmptyStmt -> .)
    IDENT           shift and go to state 299
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

  ! ADD             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! SUB             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! NOT             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! XOR             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! MUL             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! AND             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! LPAREN          [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! IDENT           [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! INT             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! FLOAT           [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! IMAG            [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! RUNE            [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! STRING          [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! FUNC            [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! STRUCT          [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! LBRACK          [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! MAP             [ reduce using rule 231 (SimpleStmtOpt -> .) ]

    SimpleStmtOpt                  shift and go to state 297
    Expr                           shift and go to state 237
    SimpleStmt                     shift and go to state 298
    EmptyStmt                      shift and go to state 225
    ExpressionStmt                 shift and go to state 226
    IncDecStmt                     shift and go to state 227
    Assignment                     shift and go to state 228
    ShortVarDecl                   shift and go to state 229
    ExpressionList                 shift and go to state 232
    IdentifierList                 shift and go to state 242
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 237

    (199) ExpressionStmt -> Expr .
    (200) IncDecStmt -> Expr . INC
    (201) IncDecStmt -> Expr . DEC
    (62) Expr -> Expr . BinOp Expr
    (60) ExpressionList -> Expr . ExprOth
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (93) ExprOth -> . ExprOth COMMA Expr
    (94) ExprOth -> .
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    SEMICOLON       reduce using rule 199 (ExpressionStmt -> Expr .)
    LBRACE          reduce using rule 199 (ExpressionStmt -> Expr .)
    INC             shift and go to state 300
    DEC             shift and go to state 301
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    COMMA           reduce using rule 94 (ExprOth -> .)
    ASSIGN          reduce using rule 94 (ExprOth -> .)
    ADD_ASSIGN      reduce using rule 94 (ExprOth -> .)
    SUB_ASSIGN      reduce using rule 94 (ExprOth -> .)
    OR_ASSIGN       reduce using rule 94 (ExprOth -> .)
    XOR_ASSIGN      reduce using rule 94 (ExprOth -> .)
    MUL_ASSIGN      reduce using rule 94 (ExprOth -> .)
    QUO_ASSIGN      reduce using rule 94 (ExprOth -> .)
    REM_ASSIGN      reduce using rule 94 (ExprOth -> .)
    AND_ASSIGN      reduce using rule 94 (ExprOth -> .)
    SHL_ASSIGN      reduce using rule 94 (ExprOth -> .)
    SHR_ASSIGN      reduce using rule 94 (ExprOth -> .)
    AND_NOT_ASSIGN  reduce using rule 94 (ExprOth -> .)
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    ExprOth                        shift and go to state 208
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 238

    (232) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 232 (SwitchStmt -> ExprSwitchStmt .)


state 239

    (233) SwitchStmt -> TypeSwitchStmt .

    SEMICOLON       reduce using rule 233 (SwitchStmt -> TypeSwitchStmt .)


state 240

    (254) ForStmt -> FOR . Condition Block
    (255) ForStmt -> FOR . ForClause Block
    (256) ForStmt -> FOR . RangeClause Block
    (257) Condition -> . Expr
    (258) ForClause -> . InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt
    (263) RangeClause -> . RangeList RANGE Expr
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (259) InitStmt -> . SimpleStmt
    (264) RangeList -> . ExpressionList ASSIGN
    (265) RangeList -> . IdentifierList DEFINE
    (266) RangeList -> .
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (193) SimpleStmt -> . EmptyStmt
    (194) SimpleStmt -> . ExpressionStmt
    (195) SimpleStmt -> . IncDecStmt
    (196) SimpleStmt -> . Assignment
    (197) SimpleStmt -> . ShortVarDecl
    (60) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (198) EmptyStmt -> .
    (199) ExpressionStmt -> . Expr
    (200) IncDecStmt -> . Expr INC
    (201) IncDecStmt -> . Expr DEC
    (202) Assignment -> . ExpressionList assign_op ExpressionList
    (161) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    RANGE           reduce using rule 266 (RangeList -> .)
    IDENT           shift and go to state 299
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    SEMICOLON       reduce using rule 198 (EmptyStmt -> .)
    LPAREN          shift and go to state 110
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Condition                      shift and go to state 302
    ForClause                      shift and go to state 303
    RangeClause                    shift and go to state 304
    Expr                           shift and go to state 305
    InitStmt                       shift and go to state 306
    RangeList                      shift and go to state 307
    UnaryExpr                      shift and go to state 97
    SimpleStmt                     shift and go to state 308
    ExpressionList                 shift and go to state 309
    IdentifierList                 shift and go to state 310
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    EmptyStmt                      shift and go to state 225
    ExpressionStmt                 shift and go to state 226
    IncDecStmt                     shift and go to state 227
    Assignment                     shift and go to state 228
    ShortVarDecl                   shift and go to state 229
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 241

    (192) Label -> IDENT .
    (26) IdentifierList -> IDENT . IdentifierOth
    (123) OperandName -> IDENT .
    (32) TypeName -> IDENT .
    (34) QualifiedIdent -> IDENT . PERIOD IDENT
    (27) IdentifierOth -> . IdentifierOth COMMA IDENT
    (28) IdentifierOth -> .

  ! reduce/reduce conflict for LPAREN resolved using rule 32 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 28 (IdentifierOth -> .)
    COLON           reduce using rule 192 (Label -> IDENT .)
    LBRACK          reduce using rule 123 (OperandName -> IDENT .)
    INC             reduce using rule 123 (OperandName -> IDENT .)
    DEC             reduce using rule 123 (OperandName -> IDENT .)
    LOR             reduce using rule 123 (OperandName -> IDENT .)
    LAND            reduce using rule 123 (OperandName -> IDENT .)
    EQL             reduce using rule 123 (OperandName -> IDENT .)
    NEQ             reduce using rule 123 (OperandName -> IDENT .)
    LSS             reduce using rule 123 (OperandName -> IDENT .)
    LEQ             reduce using rule 123 (OperandName -> IDENT .)
    GTR             reduce using rule 123 (OperandName -> IDENT .)
    GEQ             reduce using rule 123 (OperandName -> IDENT .)
    ADD             reduce using rule 123 (OperandName -> IDENT .)
    SUB             reduce using rule 123 (OperandName -> IDENT .)
    OR              reduce using rule 123 (OperandName -> IDENT .)
    XOR             reduce using rule 123 (OperandName -> IDENT .)
    MUL             reduce using rule 123 (OperandName -> IDENT .)
    QUO             reduce using rule 123 (OperandName -> IDENT .)
    REM             reduce using rule 123 (OperandName -> IDENT .)
    SHL             reduce using rule 123 (OperandName -> IDENT .)
    SHR             reduce using rule 123 (OperandName -> IDENT .)
    AND             reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 123 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 123 (OperandName -> IDENT .)
    ASSIGN          reduce using rule 123 (OperandName -> IDENT .)
    ADD_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    SUB_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    OR_ASSIGN       reduce using rule 123 (OperandName -> IDENT .)
    XOR_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    MUL_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    QUO_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    REM_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    AND_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    SHL_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    SHR_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT_ASSIGN  reduce using rule 123 (OperandName -> IDENT .)
    LBRACE          reduce using rule 32 (TypeName -> IDENT .)
    LPAREN          reduce using rule 32 (TypeName -> IDENT .)
    PERIOD          shift and go to state 93
    COMMA           reduce using rule 28 (IdentifierOth -> .)
    DEFINE          reduce using rule 28 (IdentifierOth -> .)

  ! PERIOD          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LPAREN          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! COMMA           [ reduce using rule 123 (OperandName -> IDENT .) ]

    IdentifierOth                  shift and go to state 67

state 242

    (161) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 311


state 243

    (234) ExprSwitchStmt -> SWITCH . SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE
    (242) TypeSwitchStmt -> SWITCH . SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (230) SimpleStmtOpt -> . SimpleStmt SEMICOLON
    (231) SimpleStmtOpt -> .
    (193) SimpleStmt -> . EmptyStmt
    (194) SimpleStmt -> . ExpressionStmt
    (195) SimpleStmt -> . IncDecStmt
    (196) SimpleStmt -> . Assignment
    (197) SimpleStmt -> . ShortVarDecl
    (198) EmptyStmt -> .
    (199) ExpressionStmt -> . Expr
    (200) IncDecStmt -> . Expr INC
    (201) IncDecStmt -> . Expr DEC
    (202) Assignment -> . ExpressionList assign_op ExpressionList
    (161) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (60) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAG resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
    LBRACE          reduce using rule 231 (SimpleStmtOpt -> .)
    SEMICOLON       reduce using rule 198 (EmptyStmt -> .)
    IDENT           shift and go to state 299
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

  ! IDENT           [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! ADD             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! SUB             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! NOT             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! XOR             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! MUL             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! AND             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! LPAREN          [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! INT             [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! FLOAT           [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! IMAG            [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! RUNE            [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! STRING          [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! FUNC            [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! STRUCT          [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! LBRACK          [ reduce using rule 231 (SimpleStmtOpt -> .) ]
  ! MAP             [ reduce using rule 231 (SimpleStmtOpt -> .) ]

    SimpleStmtOpt                  shift and go to state 312
    SimpleStmt                     shift and go to state 298
    EmptyStmt                      shift and go to state 225
    ExpressionStmt                 shift and go to state 226
    IncDecStmt                     shift and go to state 227
    Assignment                     shift and go to state 228
    ShortVarDecl                   shift and go to state 229
    Expr                           shift and go to state 237
    ExpressionList                 shift and go to state 232
    IdentifierList                 shift and go to state 242
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 244

    (170) Parameters -> LPAREN ParameterList COMMA RPAREN .

    LPAREN          reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    IDENT           reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    LBRACK          reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    STRUCT          reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    MUL             reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    MAP             reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    FUNC            reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    LBRACE          reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    SEMICOLON       reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    ASSIGN          reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    RPAREN          reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    COMMA           reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    RBRACK          reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    STRING          reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    COLON           reduce using rule 170 (Parameters -> LPAREN ParameterList COMMA RPAREN .)


state 245

    (171) ParameterList -> ParameterList COMMA ParameterDecl .

    RPAREN          reduce using rule 171 (ParameterList -> ParameterList COMMA ParameterDecl .)
    COMMA           reduce using rule 171 (ParameterList -> ParameterList COMMA ParameterDecl .)


state 246

    (41) ArrayType -> LBRACK ArrayLength RBRACK ElementType .

    ASSIGN          reduce using rule 41 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    SEMICOLON       reduce using rule 41 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACE          reduce using rule 41 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RPAREN          reduce using rule 41 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COMMA           reduce using rule 41 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LPAREN          reduce using rule 41 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RBRACK          reduce using rule 41 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRING          reduce using rule 41 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COLON           reduce using rule 41 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)


state 247

    (62) Expr -> Expr BinOp Expr .
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for EQL resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GTR resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    RBRACK          reduce using rule 62 (Expr -> Expr BinOp Expr .)
    COMMA           reduce using rule 62 (Expr -> Expr BinOp Expr .)
    SEMICOLON       reduce using rule 62 (Expr -> Expr BinOp Expr .)
    RPAREN          reduce using rule 62 (Expr -> Expr BinOp Expr .)
    INC             reduce using rule 62 (Expr -> Expr BinOp Expr .)
    DEC             reduce using rule 62 (Expr -> Expr BinOp Expr .)
    ASSIGN          reduce using rule 62 (Expr -> Expr BinOp Expr .)
    ADD_ASSIGN      reduce using rule 62 (Expr -> Expr BinOp Expr .)
    SUB_ASSIGN      reduce using rule 62 (Expr -> Expr BinOp Expr .)
    OR_ASSIGN       reduce using rule 62 (Expr -> Expr BinOp Expr .)
    XOR_ASSIGN      reduce using rule 62 (Expr -> Expr BinOp Expr .)
    MUL_ASSIGN      reduce using rule 62 (Expr -> Expr BinOp Expr .)
    QUO_ASSIGN      reduce using rule 62 (Expr -> Expr BinOp Expr .)
    REM_ASSIGN      reduce using rule 62 (Expr -> Expr BinOp Expr .)
    AND_ASSIGN      reduce using rule 62 (Expr -> Expr BinOp Expr .)
    SHL_ASSIGN      reduce using rule 62 (Expr -> Expr BinOp Expr .)
    SHR_ASSIGN      reduce using rule 62 (Expr -> Expr BinOp Expr .)
    AND_NOT_ASSIGN  reduce using rule 62 (Expr -> Expr BinOp Expr .)
    COLON           reduce using rule 62 (Expr -> Expr BinOp Expr .)
    RBRACE          reduce using rule 62 (Expr -> Expr BinOp Expr .)
    LBRACE          reduce using rule 62 (Expr -> Expr BinOp Expr .)
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

  ! LOR             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! LAND            [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! EQL             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! NEQ             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! LSS             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! LEQ             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! GTR             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! GEQ             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! ADD             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! SUB             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! OR              [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! XOR             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! MUL             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! QUO             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! REM             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! SHL             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! SHR             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! AND             [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]
  ! AND_NOT         [ reduce using rule 62 (Expr -> Expr BinOp Expr .) ]

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 248

    (132) Selector -> PERIOD IDENT .

    PERIOD          reduce using rule 132 (Selector -> PERIOD IDENT .)
    LBRACK          reduce using rule 132 (Selector -> PERIOD IDENT .)
    LPAREN          reduce using rule 132 (Selector -> PERIOD IDENT .)
    LOR             reduce using rule 132 (Selector -> PERIOD IDENT .)
    LAND            reduce using rule 132 (Selector -> PERIOD IDENT .)
    EQL             reduce using rule 132 (Selector -> PERIOD IDENT .)
    NEQ             reduce using rule 132 (Selector -> PERIOD IDENT .)
    LSS             reduce using rule 132 (Selector -> PERIOD IDENT .)
    LEQ             reduce using rule 132 (Selector -> PERIOD IDENT .)
    GTR             reduce using rule 132 (Selector -> PERIOD IDENT .)
    GEQ             reduce using rule 132 (Selector -> PERIOD IDENT .)
    ADD             reduce using rule 132 (Selector -> PERIOD IDENT .)
    SUB             reduce using rule 132 (Selector -> PERIOD IDENT .)
    OR              reduce using rule 132 (Selector -> PERIOD IDENT .)
    XOR             reduce using rule 132 (Selector -> PERIOD IDENT .)
    MUL             reduce using rule 132 (Selector -> PERIOD IDENT .)
    QUO             reduce using rule 132 (Selector -> PERIOD IDENT .)
    REM             reduce using rule 132 (Selector -> PERIOD IDENT .)
    SHL             reduce using rule 132 (Selector -> PERIOD IDENT .)
    SHR             reduce using rule 132 (Selector -> PERIOD IDENT .)
    AND             reduce using rule 132 (Selector -> PERIOD IDENT .)
    AND_NOT         reduce using rule 132 (Selector -> PERIOD IDENT .)
    RBRACK          reduce using rule 132 (Selector -> PERIOD IDENT .)
    COMMA           reduce using rule 132 (Selector -> PERIOD IDENT .)
    SEMICOLON       reduce using rule 132 (Selector -> PERIOD IDENT .)
    RPAREN          reduce using rule 132 (Selector -> PERIOD IDENT .)
    INC             reduce using rule 132 (Selector -> PERIOD IDENT .)
    DEC             reduce using rule 132 (Selector -> PERIOD IDENT .)
    ASSIGN          reduce using rule 132 (Selector -> PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 132 (Selector -> PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 132 (Selector -> PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 132 (Selector -> PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 132 (Selector -> PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 132 (Selector -> PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 132 (Selector -> PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 132 (Selector -> PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 132 (Selector -> PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 132 (Selector -> PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 132 (Selector -> PERIOD IDENT .)
    AND_NOT_ASSIGN  reduce using rule 132 (Selector -> PERIOD IDENT .)
    COLON           reduce using rule 132 (Selector -> PERIOD IDENT .)
    RBRACE          reduce using rule 132 (Selector -> PERIOD IDENT .)
    LBRACE          reduce using rule 132 (Selector -> PERIOD IDENT .)


state 249

    (133) Slice -> LBRACK Expr . COLON Expr RBRACK
    (135) Slice -> LBRACK Expr . COLON RBRACK
    (138) Slice -> LBRACK Expr . COLON Expr COLON Expr RBRACK
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    COLON           shift and go to state 313
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 250

    (134) Slice -> LBRACK COLON . Expr RBRACK
    (136) Slice -> LBRACK COLON . RBRACK
    (137) Slice -> LBRACK COLON . Expr COLON Expr RBRACK
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    RBRACK          shift and go to state 315
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Expr                           shift and go to state 314
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 251

    (139) Arguments -> LPAREN RPAREN .

    PERIOD          reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    LBRACK          reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    LPAREN          reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    LOR             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    LAND            reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    EQL             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    NEQ             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    LSS             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    LEQ             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    GTR             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    GEQ             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    ADD             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    SUB             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    OR              reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    XOR             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    MUL             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    QUO             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    REM             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    SHL             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    SHR             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    AND             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    AND_NOT         reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    RBRACK          reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    COMMA           reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    SEMICOLON       reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    RPAREN          reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    INC             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    DEC             reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    ASSIGN          reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    ADD_ASSIGN      reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    SUB_ASSIGN      reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    OR_ASSIGN       reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    XOR_ASSIGN      reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    MUL_ASSIGN      reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    QUO_ASSIGN      reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    REM_ASSIGN      reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    AND_ASSIGN      reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    COLON           reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    RBRACE          reduce using rule 139 (Arguments -> LPAREN RPAREN .)
    LBRACE          reduce using rule 139 (Arguments -> LPAREN RPAREN .)


state 252

    (140) Arguments -> LPAREN ExpressionList . RPAREN
    (141) Arguments -> LPAREN ExpressionList . COMMA RPAREN

    RPAREN          shift and go to state 316
    COMMA           shift and go to state 317


state 253

    (142) Arguments -> LPAREN Type . RPAREN
    (143) Arguments -> LPAREN Type . COMMA RPAREN
    (144) Arguments -> LPAREN Type . COMMA ExpressionList RPAREN
    (145) Arguments -> LPAREN Type . COMMA ExpressionList COMMA RPAREN
    (130) Conversion -> Type . LPAREN Expr RPAREN
    (131) Conversion -> Type . LPAREN Expr COMMA RPAREN

    RPAREN          shift and go to state 318
    COMMA           shift and go to state 319
    LPAREN          shift and go to state 194


state 254

    (54) PointerType -> MUL . BaseType
    (91) UnaryOp -> MUL .
    (55) BaseType -> . Type
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    ADD             reduce using rule 91 (UnaryOp -> MUL .)
    SUB             reduce using rule 91 (UnaryOp -> MUL .)
    NOT             reduce using rule 91 (UnaryOp -> MUL .)
    XOR             reduce using rule 91 (UnaryOp -> MUL .)
    MUL             reduce using rule 91 (UnaryOp -> MUL .)
    AND             reduce using rule 91 (UnaryOp -> MUL .)
    LPAREN          reduce using rule 91 (UnaryOp -> MUL .)
    IDENT           reduce using rule 91 (UnaryOp -> MUL .)
    INT             reduce using rule 91 (UnaryOp -> MUL .)
    FLOAT           reduce using rule 91 (UnaryOp -> MUL .)
    IMAG            reduce using rule 91 (UnaryOp -> MUL .)
    RUNE            reduce using rule 91 (UnaryOp -> MUL .)
    STRING          reduce using rule 91 (UnaryOp -> MUL .)
    FUNC            reduce using rule 91 (UnaryOp -> MUL .)
    STRUCT          reduce using rule 91 (UnaryOp -> MUL .)
    LBRACK          reduce using rule 91 (UnaryOp -> MUL .)
    MAP             reduce using rule 91 (UnaryOp -> MUL .)

  ! LPAREN          [ shift and go to state 53 ]
  ! IDENT           [ shift and go to state 54 ]
  ! LBRACK          [ shift and go to state 62 ]
  ! STRUCT          [ shift and go to state 63 ]
  ! MUL             [ shift and go to state 64 ]
  ! MAP             [ shift and go to state 65 ]
  ! FUNC            [ shift and go to state 66 ]

    BaseType                       shift and go to state 128
    Type                           shift and go to state 129
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 255

    (97) Operand -> LPAREN Expr RPAREN .

    PERIOD          reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    LBRACK          reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    LPAREN          reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    LOR             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    LAND            reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    EQL             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    NEQ             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    LSS             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    LEQ             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    GTR             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    GEQ             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    ADD             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    SUB             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    OR              reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    XOR             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    MUL             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    QUO             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    REM             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    SHL             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    SHR             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    AND             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    AND_NOT         reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    RBRACK          reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    COMMA           reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    SEMICOLON       reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    RPAREN          reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    INC             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    DEC             reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    ASSIGN          reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    ADD_ASSIGN      reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    SUB_ASSIGN      reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    OR_ASSIGN       reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    XOR_ASSIGN      reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    MUL_ASSIGN      reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    QUO_ASSIGN      reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    REM_ASSIGN      reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    AND_ASSIGN      reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    SHL_ASSIGN      reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    SHR_ASSIGN      reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    COLON           reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    RBRACE          reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)
    LBRACE          reduce using rule 97 (Operand -> LPAREN Expr RPAREN .)


state 256

    (59) FunctionType -> FUNC Signature .
    (124) FunctionLit -> FUNC Signature . FunctionBody
    (165) FunctionBody -> . Block
    (225) Block -> . LBRACE StatementList RBRACE

    RPAREN          reduce using rule 59 (FunctionType -> FUNC Signature .)
    LPAREN          reduce using rule 59 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 59 (FunctionType -> FUNC Signature .)
    LBRACE          shift and go to state 78

    FunctionBody                   shift and go to state 266
    Block                          shift and go to state 77

state 257

    (130) Conversion -> Type LPAREN Expr . RPAREN
    (131) Conversion -> Type LPAREN Expr . COMMA RPAREN
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    RPAREN          shift and go to state 320
    COMMA           shift and go to state 321
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 258

    (111) LiteralValue -> LBRACE ElementList . COMMA RBRACE
    (112) LiteralValue -> LBRACE ElementList . RBRACE
    (115) ElementList -> ElementList . COMMA KeyedElement

    COMMA           shift and go to state 322
    RBRACE          shift and go to state 323


state 259

    (113) LiteralValue -> LBRACE RBRACE .

    PERIOD          reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    LBRACK          reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    LPAREN          reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    LOR             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    LAND            reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    EQL             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    NEQ             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    LSS             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    LEQ             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    GTR             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    GEQ             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    ADD             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    SUB             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    OR              reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    XOR             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    MUL             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    QUO             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    REM             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    SHL             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    SHR             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    AND             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    AND_NOT         reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    RBRACK          reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    COMMA           reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    SEMICOLON       reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    RPAREN          reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    INC             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    DEC             reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    ASSIGN          reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    ADD_ASSIGN      reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    SUB_ASSIGN      reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    OR_ASSIGN       reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    XOR_ASSIGN      reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    MUL_ASSIGN      reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    QUO_ASSIGN      reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    REM_ASSIGN      reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    AND_ASSIGN      reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    SHL_ASSIGN      reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    SHR_ASSIGN      reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    AND_NOT_ASSIGN  reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    COLON           reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    RBRACE          reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)
    LBRACE          reduce using rule 113 (LiteralValue -> LBRACE RBRACE .)


state 260

    (114) ElementList -> KeyedElement .

    COMMA           reduce using rule 114 (ElementList -> KeyedElement .)
    RBRACE          reduce using rule 114 (ElementList -> KeyedElement .)


state 261

    (116) KeyedElement -> Element .

    COMMA           reduce using rule 116 (KeyedElement -> Element .)
    RBRACE          reduce using rule 116 (KeyedElement -> Element .)


state 262

    (117) KeyedElement -> Key . COLON Element

    COLON           shift and go to state 324


state 263

    (121) Element -> Expr .
    (119) Key -> Expr .
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    COMMA           reduce using rule 121 (Element -> Expr .)
    RBRACE          reduce using rule 121 (Element -> Expr .)
    COLON           reduce using rule 119 (Key -> Expr .)
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 264

    (122) Element -> LiteralValue .
    (120) Key -> LiteralValue .

    COMMA           reduce using rule 122 (Element -> LiteralValue .)
    RBRACE          reduce using rule 122 (Element -> LiteralValue .)
    COLON           reduce using rule 120 (Key -> LiteralValue .)


state 265

    (118) Key -> IDENT .
    (123) OperandName -> IDENT .
    (32) TypeName -> IDENT .
    (34) QualifiedIdent -> IDENT . PERIOD IDENT

  ! reduce/reduce conflict for COLON resolved using rule 118 (Key -> IDENT .)
  ! reduce/reduce conflict for LPAREN resolved using rule 32 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
    COLON           reduce using rule 118 (Key -> IDENT .)
    LBRACK          reduce using rule 123 (OperandName -> IDENT .)
    LOR             reduce using rule 123 (OperandName -> IDENT .)
    LAND            reduce using rule 123 (OperandName -> IDENT .)
    EQL             reduce using rule 123 (OperandName -> IDENT .)
    NEQ             reduce using rule 123 (OperandName -> IDENT .)
    LSS             reduce using rule 123 (OperandName -> IDENT .)
    LEQ             reduce using rule 123 (OperandName -> IDENT .)
    GTR             reduce using rule 123 (OperandName -> IDENT .)
    GEQ             reduce using rule 123 (OperandName -> IDENT .)
    ADD             reduce using rule 123 (OperandName -> IDENT .)
    SUB             reduce using rule 123 (OperandName -> IDENT .)
    OR              reduce using rule 123 (OperandName -> IDENT .)
    XOR             reduce using rule 123 (OperandName -> IDENT .)
    MUL             reduce using rule 123 (OperandName -> IDENT .)
    QUO             reduce using rule 123 (OperandName -> IDENT .)
    REM             reduce using rule 123 (OperandName -> IDENT .)
    SHL             reduce using rule 123 (OperandName -> IDENT .)
    SHR             reduce using rule 123 (OperandName -> IDENT .)
    AND             reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 123 (OperandName -> IDENT .)
    COMMA           reduce using rule 123 (OperandName -> IDENT .)
    RBRACE          reduce using rule 123 (OperandName -> IDENT .)
    LBRACE          reduce using rule 32 (TypeName -> IDENT .)
    LPAREN          reduce using rule 32 (TypeName -> IDENT .)
    PERIOD          shift and go to state 93

  ! PERIOD          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LPAREN          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! COLON           [ reduce using rule 123 (OperandName -> IDENT .) ]


state 266

    (124) FunctionLit -> FUNC Signature FunctionBody .

    PERIOD          reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    LBRACK          reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    LPAREN          reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    LOR             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    LAND            reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    EQL             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    NEQ             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    LSS             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    LEQ             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    GTR             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    GEQ             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    ADD             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    SUB             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    OR              reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    XOR             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    MUL             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    QUO             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    REM             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    SHL             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    SHR             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    AND             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    AND_NOT         reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    RBRACK          reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    COMMA           reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    SEMICOLON       reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    RPAREN          reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    INC             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    DEC             reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    ASSIGN          reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    ADD_ASSIGN      reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    SUB_ASSIGN      reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    OR_ASSIGN       reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    XOR_ASSIGN      reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    MUL_ASSIGN      reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    QUO_ASSIGN      reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    REM_ASSIGN      reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    AND_ASSIGN      reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    SHL_ASSIGN      reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    SHR_ASSIGN      reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    AND_NOT_ASSIGN  reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    COLON           reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    RBRACE          reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)
    LBRACE          reduce using rule 124 (FunctionLit -> FUNC Signature FunctionBody .)


state 267

    (44) StructType -> STRUCT LBRACE FieldDeclMult RBRACE .

    ASSIGN          reduce using rule 44 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    SEMICOLON       reduce using rule 44 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    LBRACE          reduce using rule 44 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    RPAREN          reduce using rule 44 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    COMMA           reduce using rule 44 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    LPAREN          reduce using rule 44 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    RBRACK          reduce using rule 44 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    STRING          reduce using rule 44 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    COLON           reduce using rule 44 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)


state 268

    (45) FieldDeclMult -> FieldDeclMult FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 325


state 269

    (47) FieldDecl -> IdentifierList . Type
    (49) FieldDecl -> IdentifierList . Type Tag
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 326
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 270

    (48) FieldDecl -> EmbeddedField .
    (50) FieldDecl -> EmbeddedField . Tag
    (51) Tag -> . STRING

    SEMICOLON       reduce using rule 48 (FieldDecl -> EmbeddedField .)
    STRING          shift and go to state 328

    Tag                            shift and go to state 327

state 271

    (52) EmbeddedField -> MUL . TypeName
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (34) QualifiedIdent -> . IDENT PERIOD IDENT

    IDENT           shift and go to state 54

    TypeName                       shift and go to state 329
    QualifiedIdent                 shift and go to state 55

state 272

    (53) EmbeddedField -> TypeName .

    STRING          reduce using rule 53 (EmbeddedField -> TypeName .)
    SEMICOLON       reduce using rule 53 (EmbeddedField -> TypeName .)


state 273

    (57) MapType -> MAP LBRACK KeyType RBRACK . ElementType
    (43) ElementType -> . Type
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    ElementType                    shift and go to state 330
    Type                           shift and go to state 154
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 274

    (93) ExprOth -> ExprOth COMMA . Expr
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Expr                           shift and go to state 331
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 275

    (177) StatementList -> StatementList Statement SEMICOLON .

    RBRACE          reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    GOTO            reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    RETURN          reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    BREAK           reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    CONTINUE        reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    FALLTHROUGH     reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    LBRACE          reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    IF              reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    FOR             reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    CONST           reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    VAR             reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    TYPE            reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    IDENT           reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    SWITCH          reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    ADD             reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    SUB             reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    NOT             reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    XOR             reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    MUL             reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    AND             reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    LPAREN          reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    INT             reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    FLOAT           reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    IMAG            reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    RUNE            reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    STRING          reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    FUNC            reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    STRUCT          reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    LBRACK          reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    MAP             reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    SEMICOLON       reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    CASE            reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)
    DEFAULT         reduce using rule 177 (StatementList -> StatementList Statement SEMICOLON .)


state 276

    (191) LabeledStmt -> Label COLON . Statement
    (179) Statement -> . Decl
    (180) Statement -> . LabeledStmt
    (181) Statement -> . SimpleStmt
    (182) Statement -> . GotoStmt
    (183) Statement -> . ReturnStmt
    (184) Statement -> . BreakStmt
    (185) Statement -> . ContinueStmt
    (186) Statement -> . FallthroughStmt
    (187) Statement -> . Block
    (188) Statement -> . IfStmt
    (189) Statement -> . SwitchStmt
    (190) Statement -> . ForStmt
    (18) Decl -> . ConstDecl
    (19) Decl -> . VarDecl
    (20) Decl -> . TypeDecl
    (191) LabeledStmt -> . Label COLON Statement
    (193) SimpleStmt -> . EmptyStmt
    (194) SimpleStmt -> . ExpressionStmt
    (195) SimpleStmt -> . IncDecStmt
    (196) SimpleStmt -> . Assignment
    (197) SimpleStmt -> . ShortVarDecl
    (223) GotoStmt -> . GOTO Label
    (217) ReturnStmt -> . RETURN ExpressionList
    (218) ReturnStmt -> . RETURN
    (219) BreakStmt -> . BREAK Label
    (220) BreakStmt -> . BREAK
    (221) ContinueStmt -> . CONTINUE Label
    (222) ContinueStmt -> . CONTINUE
    (224) FallthroughStmt -> . FALLTHROUGH
    (225) Block -> . LBRACE StatementList RBRACE
    (226) IfStmt -> . IF SimpleStmtOpt Expr Block else_stmt
    (232) SwitchStmt -> . ExprSwitchStmt
    (233) SwitchStmt -> . TypeSwitchStmt
    (254) ForStmt -> . FOR Condition Block
    (255) ForStmt -> . FOR ForClause Block
    (256) ForStmt -> . FOR RangeClause Block
    (21) ConstDecl -> . CONST ConstSpec
    (22) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (154) VarDecl -> . VAR VarSpec
    (155) VarDecl -> . VAR LPAREN VarMult RPAREN
    (146) TypeDecl -> . TYPE TypeSpec
    (147) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (192) Label -> . IDENT
    (198) EmptyStmt -> .
    (199) ExpressionStmt -> . Expr
    (200) IncDecStmt -> . Expr INC
    (201) IncDecStmt -> . Expr DEC
    (202) Assignment -> . ExpressionList assign_op ExpressionList
    (161) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (234) ExprSwitchStmt -> . SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE
    (242) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (60) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    GOTO            shift and go to state 230
    RETURN          shift and go to state 231
    BREAK           shift and go to state 233
    CONTINUE        shift and go to state 234
    FALLTHROUGH     shift and go to state 235
    LBRACE          shift and go to state 78
    IF              shift and go to state 236
    FOR             shift and go to state 240
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 241
    SEMICOLON       reduce using rule 198 (EmptyStmt -> .)
    SWITCH          shift and go to state 243
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Label                          shift and go to state 224
    Statement                      shift and go to state 332
    Decl                           shift and go to state 212
    LabeledStmt                    shift and go to state 213
    SimpleStmt                     shift and go to state 214
    GotoStmt                       shift and go to state 215
    ReturnStmt                     shift and go to state 216
    BreakStmt                      shift and go to state 217
    ContinueStmt                   shift and go to state 218
    FallthroughStmt                shift and go to state 219
    Block                          shift and go to state 220
    IfStmt                         shift and go to state 221
    SwitchStmt                     shift and go to state 222
    ForStmt                        shift and go to state 223
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    EmptyStmt                      shift and go to state 225
    ExpressionStmt                 shift and go to state 226
    IncDecStmt                     shift and go to state 227
    Assignment                     shift and go to state 228
    ShortVarDecl                   shift and go to state 229
    ExpressionList                 shift and go to state 232
    Expr                           shift and go to state 237
    ExprSwitchStmt                 shift and go to state 238
    TypeSwitchStmt                 shift and go to state 239
    IdentifierList                 shift and go to state 242
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 277

    (223) GotoStmt -> GOTO Label .

    SEMICOLON       reduce using rule 223 (GotoStmt -> GOTO Label .)


state 278

    (192) Label -> IDENT .

    SEMICOLON       reduce using rule 192 (Label -> IDENT .)


state 279

    (217) ReturnStmt -> RETURN ExpressionList .

    SEMICOLON       reduce using rule 217 (ReturnStmt -> RETURN ExpressionList .)


state 280

    (202) Assignment -> ExpressionList assign_op . ExpressionList
    (60) ExpressionList -> . Expr ExprOth
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 333
    Expr                           shift and go to state 137
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 281

    (203) assign_op -> add_op_assign .

    ADD             reduce using rule 203 (assign_op -> add_op_assign .)
    SUB             reduce using rule 203 (assign_op -> add_op_assign .)
    NOT             reduce using rule 203 (assign_op -> add_op_assign .)
    XOR             reduce using rule 203 (assign_op -> add_op_assign .)
    MUL             reduce using rule 203 (assign_op -> add_op_assign .)
    AND             reduce using rule 203 (assign_op -> add_op_assign .)
    LPAREN          reduce using rule 203 (assign_op -> add_op_assign .)
    IDENT           reduce using rule 203 (assign_op -> add_op_assign .)
    INT             reduce using rule 203 (assign_op -> add_op_assign .)
    FLOAT           reduce using rule 203 (assign_op -> add_op_assign .)
    IMAG            reduce using rule 203 (assign_op -> add_op_assign .)
    RUNE            reduce using rule 203 (assign_op -> add_op_assign .)
    STRING          reduce using rule 203 (assign_op -> add_op_assign .)
    FUNC            reduce using rule 203 (assign_op -> add_op_assign .)
    STRUCT          reduce using rule 203 (assign_op -> add_op_assign .)
    LBRACK          reduce using rule 203 (assign_op -> add_op_assign .)
    MAP             reduce using rule 203 (assign_op -> add_op_assign .)


state 282

    (204) assign_op -> mul_op_assign .

    ADD             reduce using rule 204 (assign_op -> mul_op_assign .)
    SUB             reduce using rule 204 (assign_op -> mul_op_assign .)
    NOT             reduce using rule 204 (assign_op -> mul_op_assign .)
    XOR             reduce using rule 204 (assign_op -> mul_op_assign .)
    MUL             reduce using rule 204 (assign_op -> mul_op_assign .)
    AND             reduce using rule 204 (assign_op -> mul_op_assign .)
    LPAREN          reduce using rule 204 (assign_op -> mul_op_assign .)
    IDENT           reduce using rule 204 (assign_op -> mul_op_assign .)
    INT             reduce using rule 204 (assign_op -> mul_op_assign .)
    FLOAT           reduce using rule 204 (assign_op -> mul_op_assign .)
    IMAG            reduce using rule 204 (assign_op -> mul_op_assign .)
    RUNE            reduce using rule 204 (assign_op -> mul_op_assign .)
    STRING          reduce using rule 204 (assign_op -> mul_op_assign .)
    FUNC            reduce using rule 204 (assign_op -> mul_op_assign .)
    STRUCT          reduce using rule 204 (assign_op -> mul_op_assign .)
    LBRACK          reduce using rule 204 (assign_op -> mul_op_assign .)
    MAP             reduce using rule 204 (assign_op -> mul_op_assign .)


state 283

    (205) assign_op -> ASSIGN .

    ADD             reduce using rule 205 (assign_op -> ASSIGN .)
    SUB             reduce using rule 205 (assign_op -> ASSIGN .)
    NOT             reduce using rule 205 (assign_op -> ASSIGN .)
    XOR             reduce using rule 205 (assign_op -> ASSIGN .)
    MUL             reduce using rule 205 (assign_op -> ASSIGN .)
    AND             reduce using rule 205 (assign_op -> ASSIGN .)
    LPAREN          reduce using rule 205 (assign_op -> ASSIGN .)
    IDENT           reduce using rule 205 (assign_op -> ASSIGN .)
    INT             reduce using rule 205 (assign_op -> ASSIGN .)
    FLOAT           reduce using rule 205 (assign_op -> ASSIGN .)
    IMAG            reduce using rule 205 (assign_op -> ASSIGN .)
    RUNE            reduce using rule 205 (assign_op -> ASSIGN .)
    STRING          reduce using rule 205 (assign_op -> ASSIGN .)
    FUNC            reduce using rule 205 (assign_op -> ASSIGN .)
    STRUCT          reduce using rule 205 (assign_op -> ASSIGN .)
    LBRACK          reduce using rule 205 (assign_op -> ASSIGN .)
    MAP             reduce using rule 205 (assign_op -> ASSIGN .)


state 284

    (206) add_op_assign -> ADD_ASSIGN .

    ADD             reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    SUB             reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    NOT             reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    XOR             reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    MUL             reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    AND             reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    LPAREN          reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    IDENT           reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    INT             reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    FLOAT           reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    IMAG            reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    RUNE            reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    STRING          reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    FUNC            reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    STRUCT          reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    LBRACK          reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)
    MAP             reduce using rule 206 (add_op_assign -> ADD_ASSIGN .)


state 285

    (207) add_op_assign -> SUB_ASSIGN .

    ADD             reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    SUB             reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    NOT             reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    XOR             reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    MUL             reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    AND             reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    LPAREN          reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    IDENT           reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    INT             reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    FLOAT           reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    IMAG            reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    RUNE            reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    STRING          reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    FUNC            reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    STRUCT          reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    LBRACK          reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)
    MAP             reduce using rule 207 (add_op_assign -> SUB_ASSIGN .)


state 286

    (208) add_op_assign -> OR_ASSIGN .

    ADD             reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    SUB             reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    NOT             reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    XOR             reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    MUL             reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    AND             reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    LPAREN          reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    IDENT           reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    INT             reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    FLOAT           reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    IMAG            reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    RUNE            reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    STRING          reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    FUNC            reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    STRUCT          reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    LBRACK          reduce using rule 208 (add_op_assign -> OR_ASSIGN .)
    MAP             reduce using rule 208 (add_op_assign -> OR_ASSIGN .)


state 287

    (209) add_op_assign -> XOR_ASSIGN .

    ADD             reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    SUB             reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    NOT             reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    XOR             reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    MUL             reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    AND             reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    LPAREN          reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    IDENT           reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    INT             reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    FLOAT           reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    IMAG            reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    RUNE            reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    STRING          reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    FUNC            reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    STRUCT          reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    LBRACK          reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)
    MAP             reduce using rule 209 (add_op_assign -> XOR_ASSIGN .)


state 288

    (210) mul_op_assign -> MUL_ASSIGN .

    ADD             reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    SUB             reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    NOT             reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    XOR             reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    MUL             reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    AND             reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    LPAREN          reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    IDENT           reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    INT             reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    FLOAT           reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    IMAG            reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    RUNE            reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    STRING          reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    FUNC            reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    STRUCT          reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    LBRACK          reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)
    MAP             reduce using rule 210 (mul_op_assign -> MUL_ASSIGN .)


state 289

    (211) mul_op_assign -> QUO_ASSIGN .

    ADD             reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    SUB             reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    NOT             reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    XOR             reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    MUL             reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    AND             reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    LPAREN          reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    IDENT           reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    INT             reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    FLOAT           reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    IMAG            reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    RUNE            reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    STRING          reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    FUNC            reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    STRUCT          reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    LBRACK          reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)
    MAP             reduce using rule 211 (mul_op_assign -> QUO_ASSIGN .)


state 290

    (212) mul_op_assign -> REM_ASSIGN .

    ADD             reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    SUB             reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    NOT             reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    XOR             reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    MUL             reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    AND             reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    LPAREN          reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    IDENT           reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    INT             reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    FLOAT           reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    IMAG            reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    RUNE            reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    STRING          reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    FUNC            reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    STRUCT          reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    LBRACK          reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)
    MAP             reduce using rule 212 (mul_op_assign -> REM_ASSIGN .)


state 291

    (213) mul_op_assign -> AND_ASSIGN .

    ADD             reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    SUB             reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    NOT             reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    XOR             reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    MUL             reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    AND             reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    LPAREN          reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    IDENT           reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    INT             reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    FLOAT           reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    IMAG            reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    RUNE            reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    STRING          reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    FUNC            reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    STRUCT          reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    LBRACK          reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)
    MAP             reduce using rule 213 (mul_op_assign -> AND_ASSIGN .)


state 292

    (214) mul_op_assign -> SHL_ASSIGN .

    ADD             reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    SUB             reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    NOT             reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    XOR             reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    MUL             reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    AND             reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    LPAREN          reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    IDENT           reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    INT             reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    FLOAT           reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    IMAG            reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    RUNE            reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    STRING          reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    FUNC            reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    STRUCT          reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    LBRACK          reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)
    MAP             reduce using rule 214 (mul_op_assign -> SHL_ASSIGN .)


state 293

    (215) mul_op_assign -> SHR_ASSIGN .

    ADD             reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    SUB             reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    NOT             reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    XOR             reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    MUL             reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    AND             reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    LPAREN          reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    IDENT           reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    INT             reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    FLOAT           reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    IMAG            reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    RUNE            reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    STRING          reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    FUNC            reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    STRUCT          reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    LBRACK          reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)
    MAP             reduce using rule 215 (mul_op_assign -> SHR_ASSIGN .)


state 294

    (216) mul_op_assign -> AND_NOT_ASSIGN .

    ADD             reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    SUB             reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    NOT             reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    XOR             reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    MUL             reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    AND             reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    LPAREN          reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    IDENT           reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    INT             reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    FLOAT           reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    IMAG            reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    RUNE            reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    STRING          reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    FUNC            reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    STRUCT          reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    LBRACK          reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)
    MAP             reduce using rule 216 (mul_op_assign -> AND_NOT_ASSIGN .)


state 295

    (219) BreakStmt -> BREAK Label .

    SEMICOLON       reduce using rule 219 (BreakStmt -> BREAK Label .)


state 296

    (221) ContinueStmt -> CONTINUE Label .

    SEMICOLON       reduce using rule 221 (ContinueStmt -> CONTINUE Label .)


state 297

    (226) IfStmt -> IF SimpleStmtOpt . Expr Block else_stmt
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Expr                           shift and go to state 334
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 298

    (230) SimpleStmtOpt -> SimpleStmt . SEMICOLON

    SEMICOLON       shift and go to state 335


state 299

    (26) IdentifierList -> IDENT . IdentifierOth
    (123) OperandName -> IDENT .
    (32) TypeName -> IDENT .
    (34) QualifiedIdent -> IDENT . PERIOD IDENT
    (27) IdentifierOth -> . IdentifierOth COMMA IDENT
    (28) IdentifierOth -> .

  ! reduce/reduce conflict for LBRACE resolved using rule 32 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LPAREN resolved using rule 32 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 28 (IdentifierOth -> .)
    LBRACK          reduce using rule 123 (OperandName -> IDENT .)
    INC             reduce using rule 123 (OperandName -> IDENT .)
    DEC             reduce using rule 123 (OperandName -> IDENT .)
    LOR             reduce using rule 123 (OperandName -> IDENT .)
    LAND            reduce using rule 123 (OperandName -> IDENT .)
    EQL             reduce using rule 123 (OperandName -> IDENT .)
    NEQ             reduce using rule 123 (OperandName -> IDENT .)
    LSS             reduce using rule 123 (OperandName -> IDENT .)
    LEQ             reduce using rule 123 (OperandName -> IDENT .)
    GTR             reduce using rule 123 (OperandName -> IDENT .)
    GEQ             reduce using rule 123 (OperandName -> IDENT .)
    ADD             reduce using rule 123 (OperandName -> IDENT .)
    SUB             reduce using rule 123 (OperandName -> IDENT .)
    OR              reduce using rule 123 (OperandName -> IDENT .)
    XOR             reduce using rule 123 (OperandName -> IDENT .)
    MUL             reduce using rule 123 (OperandName -> IDENT .)
    QUO             reduce using rule 123 (OperandName -> IDENT .)
    REM             reduce using rule 123 (OperandName -> IDENT .)
    SHL             reduce using rule 123 (OperandName -> IDENT .)
    SHR             reduce using rule 123 (OperandName -> IDENT .)
    AND             reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 123 (OperandName -> IDENT .)
    SEMICOLON       reduce using rule 123 (OperandName -> IDENT .)
    ASSIGN          reduce using rule 123 (OperandName -> IDENT .)
    ADD_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    SUB_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    OR_ASSIGN       reduce using rule 123 (OperandName -> IDENT .)
    XOR_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    MUL_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    QUO_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    REM_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    AND_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    SHL_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    SHR_ASSIGN      reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT_ASSIGN  reduce using rule 123 (OperandName -> IDENT .)
    LBRACE          reduce using rule 32 (TypeName -> IDENT .)
    LPAREN          reduce using rule 32 (TypeName -> IDENT .)
    PERIOD          shift and go to state 93
    COMMA           reduce using rule 28 (IdentifierOth -> .)
    DEFINE          reduce using rule 28 (IdentifierOth -> .)

  ! PERIOD          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LPAREN          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! COMMA           [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LBRACE          [ reduce using rule 123 (OperandName -> IDENT .) ]

    IdentifierOth                  shift and go to state 67

state 300

    (200) IncDecStmt -> Expr INC .

    SEMICOLON       reduce using rule 200 (IncDecStmt -> Expr INC .)
    LBRACE          reduce using rule 200 (IncDecStmt -> Expr INC .)


state 301

    (201) IncDecStmt -> Expr DEC .

    SEMICOLON       reduce using rule 201 (IncDecStmt -> Expr DEC .)
    LBRACE          reduce using rule 201 (IncDecStmt -> Expr DEC .)


state 302

    (254) ForStmt -> FOR Condition . Block
    (225) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 78

    Block                          shift and go to state 336

state 303

    (255) ForStmt -> FOR ForClause . Block
    (225) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 78

    Block                          shift and go to state 337

state 304

    (256) ForStmt -> FOR RangeClause . Block
    (225) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 78

    Block                          shift and go to state 338

state 305

    (257) Condition -> Expr .
    (62) Expr -> Expr . BinOp Expr
    (60) ExpressionList -> Expr . ExprOth
    (199) ExpressionStmt -> Expr .
    (200) IncDecStmt -> Expr . INC
    (201) IncDecStmt -> Expr . DEC
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (93) ExprOth -> . ExprOth COMMA Expr
    (94) ExprOth -> .
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    LBRACE          reduce using rule 257 (Condition -> Expr .)
    SEMICOLON       reduce using rule 199 (ExpressionStmt -> Expr .)
    INC             shift and go to state 300
    DEC             shift and go to state 301
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    COMMA           reduce using rule 94 (ExprOth -> .)
    ASSIGN          reduce using rule 94 (ExprOth -> .)
    ADD_ASSIGN      reduce using rule 94 (ExprOth -> .)
    SUB_ASSIGN      reduce using rule 94 (ExprOth -> .)
    OR_ASSIGN       reduce using rule 94 (ExprOth -> .)
    XOR_ASSIGN      reduce using rule 94 (ExprOth -> .)
    MUL_ASSIGN      reduce using rule 94 (ExprOth -> .)
    QUO_ASSIGN      reduce using rule 94 (ExprOth -> .)
    REM_ASSIGN      reduce using rule 94 (ExprOth -> .)
    AND_ASSIGN      reduce using rule 94 (ExprOth -> .)
    SHL_ASSIGN      reduce using rule 94 (ExprOth -> .)
    SHR_ASSIGN      reduce using rule 94 (ExprOth -> .)
    AND_NOT_ASSIGN  reduce using rule 94 (ExprOth -> .)
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    ExprOth                        shift and go to state 208
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 306

    (258) ForClause -> InitStmt . SEMICOLON ConditionOpt SEMICOLON PostStmt

    SEMICOLON       shift and go to state 339


state 307

    (263) RangeClause -> RangeList . RANGE Expr

    RANGE           shift and go to state 340


state 308

    (259) InitStmt -> SimpleStmt .

    SEMICOLON       reduce using rule 259 (InitStmt -> SimpleStmt .)


state 309

    (264) RangeList -> ExpressionList . ASSIGN
    (202) Assignment -> ExpressionList . assign_op ExpressionList
    (203) assign_op -> . add_op_assign
    (204) assign_op -> . mul_op_assign
    (205) assign_op -> . ASSIGN
    (206) add_op_assign -> . ADD_ASSIGN
    (207) add_op_assign -> . SUB_ASSIGN
    (208) add_op_assign -> . OR_ASSIGN
    (209) add_op_assign -> . XOR_ASSIGN
    (210) mul_op_assign -> . MUL_ASSIGN
    (211) mul_op_assign -> . QUO_ASSIGN
    (212) mul_op_assign -> . REM_ASSIGN
    (213) mul_op_assign -> . AND_ASSIGN
    (214) mul_op_assign -> . SHL_ASSIGN
    (215) mul_op_assign -> . SHR_ASSIGN
    (216) mul_op_assign -> . AND_NOT_ASSIGN

    ASSIGN          shift and go to state 341
    ADD_ASSIGN      shift and go to state 284
    SUB_ASSIGN      shift and go to state 285
    OR_ASSIGN       shift and go to state 286
    XOR_ASSIGN      shift and go to state 287
    MUL_ASSIGN      shift and go to state 288
    QUO_ASSIGN      shift and go to state 289
    REM_ASSIGN      shift and go to state 290
    AND_ASSIGN      shift and go to state 291
    SHL_ASSIGN      shift and go to state 292
    SHR_ASSIGN      shift and go to state 293
    AND_NOT_ASSIGN  shift and go to state 294

    assign_op                      shift and go to state 280
    add_op_assign                  shift and go to state 281
    mul_op_assign                  shift and go to state 282

state 310

    (265) RangeList -> IdentifierList . DEFINE
    (161) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 342


state 311

    (161) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (60) ExpressionList -> . Expr ExprOth
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 343
    Expr                           shift and go to state 137
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 312

    (234) ExprSwitchStmt -> SWITCH SimpleStmtOpt . ExprOpt LBRACE ExprCaseClauseMult RBRACE
    (242) TypeSwitchStmt -> SWITCH SimpleStmtOpt . TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (235) ExprOpt -> . Expr
    (236) ExprOpt -> .
    (243) TypeSwitchGuard -> . ShortVarDeclOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (244) ShortVarDeclOpt -> . IDENT DEFINE
    (245) ShortVarDeclOpt -> .
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAG resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
    LBRACE          reduce using rule 236 (ExprOpt -> .)
    IDENT           shift and go to state 348
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

  ! LPAREN          [ reduce using rule 245 (ShortVarDeclOpt -> .) ]
  ! IDENT           [ reduce using rule 245 (ShortVarDeclOpt -> .) ]
  ! INT             [ reduce using rule 245 (ShortVarDeclOpt -> .) ]
  ! FLOAT           [ reduce using rule 245 (ShortVarDeclOpt -> .) ]
  ! IMAG            [ reduce using rule 245 (ShortVarDeclOpt -> .) ]
  ! RUNE            [ reduce using rule 245 (ShortVarDeclOpt -> .) ]
  ! STRING          [ reduce using rule 245 (ShortVarDeclOpt -> .) ]
  ! FUNC            [ reduce using rule 245 (ShortVarDeclOpt -> .) ]
  ! STRUCT          [ reduce using rule 245 (ShortVarDeclOpt -> .) ]
  ! LBRACK          [ reduce using rule 245 (ShortVarDeclOpt -> .) ]
  ! MAP             [ reduce using rule 245 (ShortVarDeclOpt -> .) ]
  ! MUL             [ reduce using rule 245 (ShortVarDeclOpt -> .) ]

    ExprOpt                        shift and go to state 344
    TypeSwitchGuard                shift and go to state 345
    Expr                           shift and go to state 346
    ShortVarDeclOpt                shift and go to state 347
    PrimaryExpr                    shift and go to state 98
    UnaryExpr                      shift and go to state 97
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 313

    (133) Slice -> LBRACK Expr COLON . Expr RBRACK
    (135) Slice -> LBRACK Expr COLON . RBRACK
    (138) Slice -> LBRACK Expr COLON . Expr COLON Expr RBRACK
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    RBRACK          shift and go to state 350
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Expr                           shift and go to state 349
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 314

    (134) Slice -> LBRACK COLON Expr . RBRACK
    (137) Slice -> LBRACK COLON Expr . COLON Expr RBRACK
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    RBRACK          shift and go to state 352
    COLON           shift and go to state 351
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 315

    (136) Slice -> LBRACK COLON RBRACK .

    PERIOD          reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    LBRACK          reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    LPAREN          reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    LOR             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    LAND            reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    EQL             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    NEQ             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    LSS             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    LEQ             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    GTR             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    GEQ             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    ADD             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    SUB             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    OR              reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    XOR             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    MUL             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    QUO             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    REM             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    SHL             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    SHR             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    AND             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    AND_NOT         reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    RBRACK          reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    COMMA           reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    SEMICOLON       reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    RPAREN          reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    INC             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    DEC             reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    ASSIGN          reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    ADD_ASSIGN      reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    SUB_ASSIGN      reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    OR_ASSIGN       reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    XOR_ASSIGN      reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    MUL_ASSIGN      reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    QUO_ASSIGN      reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    REM_ASSIGN      reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    AND_ASSIGN      reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    SHL_ASSIGN      reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    SHR_ASSIGN      reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    COLON           reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    RBRACE          reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)
    LBRACE          reduce using rule 136 (Slice -> LBRACK COLON RBRACK .)


state 316

    (140) Arguments -> LPAREN ExpressionList RPAREN .

    PERIOD          reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    LBRACK          reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    LPAREN          reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    LOR             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    LAND            reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    EQL             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    NEQ             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    LSS             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    LEQ             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    GTR             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    GEQ             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR              reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    QUO             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    REM             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_NOT         reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    RBRACK          reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    COMMA           reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    SEMICOLON       reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    RPAREN          reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    INC             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    DEC             reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    ASSIGN          reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD_ASSIGN      reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB_ASSIGN      reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR_ASSIGN       reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR_ASSIGN      reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL_ASSIGN      reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    QUO_ASSIGN      reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    REM_ASSIGN      reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_ASSIGN      reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL_ASSIGN      reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR_ASSIGN      reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    COLON           reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    RBRACE          reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)
    LBRACE          reduce using rule 140 (Arguments -> LPAREN ExpressionList RPAREN .)


state 317

    (141) Arguments -> LPAREN ExpressionList COMMA . RPAREN

    RPAREN          shift and go to state 353


state 318

    (142) Arguments -> LPAREN Type RPAREN .

    PERIOD          reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    LBRACK          reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    LPAREN          reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    LOR             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    LAND            reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    EQL             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    NEQ             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    LSS             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    LEQ             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    GTR             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    GEQ             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    ADD             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    SUB             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    OR              reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    XOR             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    MUL             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    QUO             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    REM             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    SHL             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    SHR             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    AND             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    AND_NOT         reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    RBRACK          reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    INC             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    DEC             reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    ASSIGN          reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    ADD_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    SUB_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    OR_ASSIGN       reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    XOR_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    MUL_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    QUO_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    REM_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    AND_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    SHL_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    SHR_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    COLON           reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    RBRACE          reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 142 (Arguments -> LPAREN Type RPAREN .)


state 319

    (143) Arguments -> LPAREN Type COMMA . RPAREN
    (144) Arguments -> LPAREN Type COMMA . ExpressionList RPAREN
    (145) Arguments -> LPAREN Type COMMA . ExpressionList COMMA RPAREN
    (60) ExpressionList -> . Expr ExprOth
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    RPAREN          shift and go to state 354
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Type                           shift and go to state 111
    ExpressionList                 shift and go to state 355
    Expr                           shift and go to state 137
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 320

    (130) Conversion -> Type LPAREN Expr RPAREN .

    PERIOD          reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    LBRACK          reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    LPAREN          reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    LOR             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    LAND            reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    EQL             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    NEQ             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    LSS             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    LEQ             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    GTR             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    GEQ             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    ADD             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    SUB             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    OR              reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    XOR             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    MUL             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    QUO             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    REM             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    SHL             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    SHR             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    AND             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    AND_NOT         reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    RBRACK          reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    COMMA           reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    SEMICOLON       reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    RPAREN          reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    INC             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    DEC             reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    ASSIGN          reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    ADD_ASSIGN      reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    SUB_ASSIGN      reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    OR_ASSIGN       reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    XOR_ASSIGN      reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    MUL_ASSIGN      reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    QUO_ASSIGN      reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    REM_ASSIGN      reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    AND_ASSIGN      reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    SHL_ASSIGN      reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    SHR_ASSIGN      reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    COLON           reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    RBRACE          reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)
    LBRACE          reduce using rule 130 (Conversion -> Type LPAREN Expr RPAREN .)


state 321

    (131) Conversion -> Type LPAREN Expr COMMA . RPAREN

    RPAREN          shift and go to state 356


state 322

    (111) LiteralValue -> LBRACE ElementList COMMA . RBRACE
    (115) ElementList -> ElementList COMMA . KeyedElement
    (116) KeyedElement -> . Element
    (117) KeyedElement -> . Key COLON Element
    (121) Element -> . Expr
    (122) Element -> . LiteralValue
    (118) Key -> . IDENT
    (119) Key -> . Expr
    (120) Key -> . LiteralValue
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (111) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (112) LiteralValue -> . LBRACE ElementList RBRACE
    (113) LiteralValue -> . LBRACE RBRACE
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    RBRACE          shift and go to state 357
    IDENT           shift and go to state 265
    LBRACE          shift and go to state 196
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    KeyedElement                   shift and go to state 358
    Element                        shift and go to state 261
    Key                            shift and go to state 262
    Expr                           shift and go to state 263
    LiteralValue                   shift and go to state 264
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 323

    (112) LiteralValue -> LBRACE ElementList RBRACE .

    PERIOD          reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    LBRACK          reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    LPAREN          reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    LOR             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    LAND            reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    EQL             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    NEQ             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    LSS             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    LEQ             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    GTR             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    GEQ             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    ADD             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    SUB             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    OR              reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    XOR             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    MUL             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    QUO             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    REM             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    SHL             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    SHR             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    AND             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    AND_NOT         reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    RBRACK          reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    COMMA           reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    SEMICOLON       reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    RPAREN          reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    INC             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    DEC             reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    ASSIGN          reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    ADD_ASSIGN      reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    SUB_ASSIGN      reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    OR_ASSIGN       reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    XOR_ASSIGN      reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    MUL_ASSIGN      reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    QUO_ASSIGN      reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    REM_ASSIGN      reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    AND_ASSIGN      reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    SHL_ASSIGN      reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    SHR_ASSIGN      reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    AND_NOT_ASSIGN  reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    COLON           reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    RBRACE          reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)
    LBRACE          reduce using rule 112 (LiteralValue -> LBRACE ElementList RBRACE .)


state 324

    (117) KeyedElement -> Key COLON . Element
    (121) Element -> . Expr
    (122) Element -> . LiteralValue
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (111) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (112) LiteralValue -> . LBRACE ElementList RBRACE
    (113) LiteralValue -> . LBRACE RBRACE
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    LBRACE          shift and go to state 196
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Element                        shift and go to state 359
    Expr                           shift and go to state 360
    LiteralValue                   shift and go to state 361
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 325

    (45) FieldDeclMult -> FieldDeclMult FieldDecl SEMICOLON .

    RBRACE          reduce using rule 45 (FieldDeclMult -> FieldDeclMult FieldDecl SEMICOLON .)
    IDENT           reduce using rule 45 (FieldDeclMult -> FieldDeclMult FieldDecl SEMICOLON .)
    MUL             reduce using rule 45 (FieldDeclMult -> FieldDeclMult FieldDecl SEMICOLON .)


state 326

    (47) FieldDecl -> IdentifierList Type .
    (49) FieldDecl -> IdentifierList Type . Tag
    (51) Tag -> . STRING

    SEMICOLON       reduce using rule 47 (FieldDecl -> IdentifierList Type .)
    STRING          shift and go to state 328

    Tag                            shift and go to state 362

state 327

    (50) FieldDecl -> EmbeddedField Tag .

    SEMICOLON       reduce using rule 50 (FieldDecl -> EmbeddedField Tag .)


state 328

    (51) Tag -> STRING .

    SEMICOLON       reduce using rule 51 (Tag -> STRING .)


state 329

    (52) EmbeddedField -> MUL TypeName .

    STRING          reduce using rule 52 (EmbeddedField -> MUL TypeName .)
    SEMICOLON       reduce using rule 52 (EmbeddedField -> MUL TypeName .)


state 330

    (57) MapType -> MAP LBRACK KeyType RBRACK ElementType .

    ASSIGN          reduce using rule 57 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    SEMICOLON       reduce using rule 57 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    LBRACE          reduce using rule 57 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    RPAREN          reduce using rule 57 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    COMMA           reduce using rule 57 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    LPAREN          reduce using rule 57 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    RBRACK          reduce using rule 57 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    STRING          reduce using rule 57 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    COLON           reduce using rule 57 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)


state 331

    (93) ExprOth -> ExprOth COMMA Expr .
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    COMMA           reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    SEMICOLON       reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    RPAREN          reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    LBRACE          reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    COLON           reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    ASSIGN          reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    ADD_ASSIGN      reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    SUB_ASSIGN      reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    OR_ASSIGN       reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    XOR_ASSIGN      reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    MUL_ASSIGN      reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    QUO_ASSIGN      reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    REM_ASSIGN      reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    AND_ASSIGN      reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    SHL_ASSIGN      reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    SHR_ASSIGN      reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    AND_NOT_ASSIGN  reduce using rule 93 (ExprOth -> ExprOth COMMA Expr .)
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 332

    (191) LabeledStmt -> Label COLON Statement .

    SEMICOLON       reduce using rule 191 (LabeledStmt -> Label COLON Statement .)


state 333

    (202) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOLON       reduce using rule 202 (Assignment -> ExpressionList assign_op ExpressionList .)
    LBRACE          reduce using rule 202 (Assignment -> ExpressionList assign_op ExpressionList .)


state 334

    (226) IfStmt -> IF SimpleStmtOpt Expr . Block else_stmt
    (62) Expr -> Expr . BinOp Expr
    (225) Block -> . LBRACE StatementList RBRACE
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    LBRACE          shift and go to state 78
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    Block                          shift and go to state 363
    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 335

    (230) SimpleStmtOpt -> SimpleStmt SEMICOLON .

    ADD             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    SUB             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    NOT             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    XOR             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    MUL             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    AND             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    LPAREN          reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    IDENT           reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    INT             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    FLOAT           reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    IMAG            reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    RUNE            reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    STRING          reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    FUNC            reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    STRUCT          reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    LBRACK          reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    MAP             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    LBRACE          reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)


state 336

    (254) ForStmt -> FOR Condition Block .

    SEMICOLON       reduce using rule 254 (ForStmt -> FOR Condition Block .)


state 337

    (255) ForStmt -> FOR ForClause Block .

    SEMICOLON       reduce using rule 255 (ForStmt -> FOR ForClause Block .)


state 338

    (256) ForStmt -> FOR RangeClause Block .

    SEMICOLON       reduce using rule 256 (ForStmt -> FOR RangeClause Block .)


state 339

    (258) ForClause -> InitStmt SEMICOLON . ConditionOpt SEMICOLON PostStmt
    (260) ConditionOpt -> . Condition
    (261) ConditionOpt -> .
    (257) Condition -> . Expr
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    SEMICOLON       reduce using rule 261 (ConditionOpt -> .)
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    ConditionOpt                   shift and go to state 364
    Condition                      shift and go to state 365
    Expr                           shift and go to state 366
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 340

    (263) RangeClause -> RangeList RANGE . Expr
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Expr                           shift and go to state 367
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 341

    (264) RangeList -> ExpressionList ASSIGN .
    (205) assign_op -> ASSIGN .

    RANGE           reduce using rule 264 (RangeList -> ExpressionList ASSIGN .)
    ADD             reduce using rule 205 (assign_op -> ASSIGN .)
    SUB             reduce using rule 205 (assign_op -> ASSIGN .)
    NOT             reduce using rule 205 (assign_op -> ASSIGN .)
    XOR             reduce using rule 205 (assign_op -> ASSIGN .)
    MUL             reduce using rule 205 (assign_op -> ASSIGN .)
    AND             reduce using rule 205 (assign_op -> ASSIGN .)
    LPAREN          reduce using rule 205 (assign_op -> ASSIGN .)
    IDENT           reduce using rule 205 (assign_op -> ASSIGN .)
    INT             reduce using rule 205 (assign_op -> ASSIGN .)
    FLOAT           reduce using rule 205 (assign_op -> ASSIGN .)
    IMAG            reduce using rule 205 (assign_op -> ASSIGN .)
    RUNE            reduce using rule 205 (assign_op -> ASSIGN .)
    STRING          reduce using rule 205 (assign_op -> ASSIGN .)
    FUNC            reduce using rule 205 (assign_op -> ASSIGN .)
    STRUCT          reduce using rule 205 (assign_op -> ASSIGN .)
    LBRACK          reduce using rule 205 (assign_op -> ASSIGN .)
    MAP             reduce using rule 205 (assign_op -> ASSIGN .)


state 342

    (265) RangeList -> IdentifierList DEFINE .
    (161) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (60) ExpressionList -> . Expr ExprOth
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    RANGE           reduce using rule 265 (RangeList -> IdentifierList DEFINE .)
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 343
    Expr                           shift and go to state 137
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 343

    (161) ShortVarDecl -> IdentifierList DEFINE ExpressionList .

    SEMICOLON       reduce using rule 161 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    LBRACE          reduce using rule 161 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)


state 344

    (234) ExprSwitchStmt -> SWITCH SimpleStmtOpt ExprOpt . LBRACE ExprCaseClauseMult RBRACE

    LBRACE          shift and go to state 368


state 345

    (242) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard . LBRACE TypeCaseClauseMult RBRACE

    LBRACE          shift and go to state 369


state 346

    (235) ExprOpt -> Expr .
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    LBRACE          reduce using rule 235 (ExprOpt -> Expr .)
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 347

    (243) TypeSwitchGuard -> ShortVarDeclOpt . PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65
    MUL             shift and go to state 64

    PrimaryExpr                    shift and go to state 370
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 348

    (244) ShortVarDeclOpt -> IDENT . DEFINE
    (123) OperandName -> IDENT .
    (32) TypeName -> IDENT .
    (34) QualifiedIdent -> IDENT . PERIOD IDENT

  ! reduce/reduce conflict for LBRACE resolved using rule 32 (TypeName -> IDENT .)
  ! reduce/reduce conflict for LPAREN resolved using rule 32 (TypeName -> IDENT .)
  ! shift/reduce conflict for PERIOD resolved as shift
    DEFINE          shift and go to state 371
    LBRACK          reduce using rule 123 (OperandName -> IDENT .)
    LOR             reduce using rule 123 (OperandName -> IDENT .)
    LAND            reduce using rule 123 (OperandName -> IDENT .)
    EQL             reduce using rule 123 (OperandName -> IDENT .)
    NEQ             reduce using rule 123 (OperandName -> IDENT .)
    LSS             reduce using rule 123 (OperandName -> IDENT .)
    LEQ             reduce using rule 123 (OperandName -> IDENT .)
    GTR             reduce using rule 123 (OperandName -> IDENT .)
    GEQ             reduce using rule 123 (OperandName -> IDENT .)
    ADD             reduce using rule 123 (OperandName -> IDENT .)
    SUB             reduce using rule 123 (OperandName -> IDENT .)
    OR              reduce using rule 123 (OperandName -> IDENT .)
    XOR             reduce using rule 123 (OperandName -> IDENT .)
    MUL             reduce using rule 123 (OperandName -> IDENT .)
    QUO             reduce using rule 123 (OperandName -> IDENT .)
    REM             reduce using rule 123 (OperandName -> IDENT .)
    SHL             reduce using rule 123 (OperandName -> IDENT .)
    SHR             reduce using rule 123 (OperandName -> IDENT .)
    AND             reduce using rule 123 (OperandName -> IDENT .)
    AND_NOT         reduce using rule 123 (OperandName -> IDENT .)
    LBRACE          reduce using rule 32 (TypeName -> IDENT .)
    LPAREN          reduce using rule 32 (TypeName -> IDENT .)
    PERIOD          shift and go to state 93

  ! PERIOD          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LPAREN          [ reduce using rule 123 (OperandName -> IDENT .) ]
  ! LBRACE          [ reduce using rule 123 (OperandName -> IDENT .) ]


state 349

    (133) Slice -> LBRACK Expr COLON Expr . RBRACK
    (138) Slice -> LBRACK Expr COLON Expr . COLON Expr RBRACK
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    RBRACK          shift and go to state 373
    COLON           shift and go to state 372
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 350

    (135) Slice -> LBRACK Expr COLON RBRACK .

    PERIOD          reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    LBRACK          reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    LPAREN          reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    LOR             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    LAND            reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    EQL             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    NEQ             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    LSS             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    LEQ             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    GTR             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    GEQ             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    ADD             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    SUB             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    OR              reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    XOR             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    MUL             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    QUO             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    REM             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    SHL             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    SHR             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    AND             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    AND_NOT         reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    RBRACK          reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    COMMA           reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    SEMICOLON       reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    RPAREN          reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    INC             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    DEC             reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    ASSIGN          reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    ADD_ASSIGN      reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    SUB_ASSIGN      reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    OR_ASSIGN       reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    XOR_ASSIGN      reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    MUL_ASSIGN      reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    QUO_ASSIGN      reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    REM_ASSIGN      reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    AND_ASSIGN      reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    SHL_ASSIGN      reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    SHR_ASSIGN      reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    COLON           reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    RBRACE          reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)
    LBRACE          reduce using rule 135 (Slice -> LBRACK Expr COLON RBRACK .)


state 351

    (137) Slice -> LBRACK COLON Expr COLON . Expr RBRACK
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Expr                           shift and go to state 374
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 352

    (134) Slice -> LBRACK COLON Expr RBRACK .

    PERIOD          reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    LBRACK          reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    LPAREN          reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    LOR             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    LAND            reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    EQL             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    NEQ             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    LSS             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    LEQ             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    GTR             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    GEQ             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    ADD             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    SUB             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    OR              reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    XOR             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    MUL             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    QUO             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    REM             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    SHL             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    SHR             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    AND             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    AND_NOT         reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    RBRACK          reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    COMMA           reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    SEMICOLON       reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    RPAREN          reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    INC             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    DEC             reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    ASSIGN          reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    OR_ASSIGN       reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    REM_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    AND_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    COLON           reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    RBRACE          reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)
    LBRACE          reduce using rule 134 (Slice -> LBRACK COLON Expr RBRACK .)


state 353

    (141) Arguments -> LPAREN ExpressionList COMMA RPAREN .

    PERIOD          reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LBRACK          reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LPAREN          reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LOR             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LAND            reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    EQL             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    NEQ             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LSS             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LEQ             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GTR             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GEQ             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR              reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    QUO             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    REM             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_NOT         reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RBRACK          reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COMMA           reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SEMICOLON       reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RPAREN          reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    INC             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DEC             reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ASSIGN          reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COLON           reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RBRACE          reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LBRACE          reduce using rule 141 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)


state 354

    (143) Arguments -> LPAREN Type COMMA RPAREN .

    PERIOD          reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    LBRACK          reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    LPAREN          reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    LOR             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    LAND            reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    EQL             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    NEQ             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    LSS             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    LEQ             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    GTR             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    GEQ             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    ADD             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    SUB             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    OR              reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    XOR             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    MUL             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    QUO             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    REM             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    SHL             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    SHR             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    AND             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    AND_NOT         reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    RBRACK          reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    COMMA           reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    SEMICOLON       reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    RPAREN          reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    INC             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    DEC             reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    ASSIGN          reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    COLON           reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    RBRACE          reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)
    LBRACE          reduce using rule 143 (Arguments -> LPAREN Type COMMA RPAREN .)


state 355

    (144) Arguments -> LPAREN Type COMMA ExpressionList . RPAREN
    (145) Arguments -> LPAREN Type COMMA ExpressionList . COMMA RPAREN

    RPAREN          shift and go to state 376
    COMMA           shift and go to state 375


state 356

    (131) Conversion -> Type LPAREN Expr COMMA RPAREN .

    PERIOD          reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LBRACK          reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LPAREN          reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LOR             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LAND            reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    EQL             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    NEQ             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LSS             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LEQ             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    GTR             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    GEQ             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    ADD             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SUB             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    OR              reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    XOR             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    MUL             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    QUO             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    REM             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SHL             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SHR             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    AND             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    AND_NOT         reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    RBRACK          reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    COMMA           reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SEMICOLON       reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    RPAREN          reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    INC             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    DEC             reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    ASSIGN          reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    COLON           reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    RBRACE          reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LBRACE          reduce using rule 131 (Conversion -> Type LPAREN Expr COMMA RPAREN .)


state 357

    (111) LiteralValue -> LBRACE ElementList COMMA RBRACE .

    PERIOD          reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LBRACK          reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LPAREN          reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LOR             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LAND            reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    EQL             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    NEQ             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LSS             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LEQ             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    GTR             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    GEQ             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    ADD             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SUB             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    OR              reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    XOR             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    MUL             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    QUO             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    REM             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SHL             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SHR             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    AND             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    AND_NOT         reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    RBRACK          reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    COMMA           reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SEMICOLON       reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    RPAREN          reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    INC             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    DEC             reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    ASSIGN          reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    ADD_ASSIGN      reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SUB_ASSIGN      reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    OR_ASSIGN       reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    XOR_ASSIGN      reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    MUL_ASSIGN      reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    QUO_ASSIGN      reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    REM_ASSIGN      reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    AND_ASSIGN      reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SHL_ASSIGN      reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SHR_ASSIGN      reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    AND_NOT_ASSIGN  reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    COLON           reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    RBRACE          reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LBRACE          reduce using rule 111 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)


state 358

    (115) ElementList -> ElementList COMMA KeyedElement .

    COMMA           reduce using rule 115 (ElementList -> ElementList COMMA KeyedElement .)
    RBRACE          reduce using rule 115 (ElementList -> ElementList COMMA KeyedElement .)


state 359

    (117) KeyedElement -> Key COLON Element .

    COMMA           reduce using rule 117 (KeyedElement -> Key COLON Element .)
    RBRACE          reduce using rule 117 (KeyedElement -> Key COLON Element .)


state 360

    (121) Element -> Expr .
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    COMMA           reduce using rule 121 (Element -> Expr .)
    RBRACE          reduce using rule 121 (Element -> Expr .)
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 361

    (122) Element -> LiteralValue .

    COMMA           reduce using rule 122 (Element -> LiteralValue .)
    RBRACE          reduce using rule 122 (Element -> LiteralValue .)


state 362

    (49) FieldDecl -> IdentifierList Type Tag .

    SEMICOLON       reduce using rule 49 (FieldDecl -> IdentifierList Type Tag .)


state 363

    (226) IfStmt -> IF SimpleStmtOpt Expr Block . else_stmt
    (227) else_stmt -> . ELSE IfStmt
    (228) else_stmt -> . ELSE Block
    (229) else_stmt -> .

    ELSE            shift and go to state 378
    SEMICOLON       reduce using rule 229 (else_stmt -> .)

    else_stmt                      shift and go to state 377

state 364

    (258) ForClause -> InitStmt SEMICOLON ConditionOpt . SEMICOLON PostStmt

    SEMICOLON       shift and go to state 379


state 365

    (260) ConditionOpt -> Condition .

    SEMICOLON       reduce using rule 260 (ConditionOpt -> Condition .)


state 366

    (257) Condition -> Expr .
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    SEMICOLON       reduce using rule 257 (Condition -> Expr .)
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 367

    (263) RangeClause -> RangeList RANGE Expr .
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    LBRACE          reduce using rule 263 (RangeClause -> RangeList RANGE Expr .)
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 368

    (234) ExprSwitchStmt -> SWITCH SimpleStmtOpt ExprOpt LBRACE . ExprCaseClauseMult RBRACE
    (237) ExprCaseClauseMult -> . ExprCaseClauseMult ExprCaseClause
    (238) ExprCaseClauseMult -> .

    RBRACE          reduce using rule 238 (ExprCaseClauseMult -> .)
    CASE            reduce using rule 238 (ExprCaseClauseMult -> .)
    DEFAULT         reduce using rule 238 (ExprCaseClauseMult -> .)

    ExprCaseClauseMult             shift and go to state 380

state 369

    (242) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE . TypeCaseClauseMult RBRACE
    (246) TypeCaseClauseMult -> . TypeCaseClauseMult TypeCaseClause
    (247) TypeCaseClauseMult -> .

    RBRACE          reduce using rule 247 (TypeCaseClauseMult -> .)
    CASE            reduce using rule 247 (TypeCaseClauseMult -> .)
    DEFAULT         reduce using rule 247 (TypeCaseClauseMult -> .)

    TypeCaseClauseMult             shift and go to state 381

state 370

    (243) TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr . PERIOD LPAREN TYPE RPAREN
    (127) PrimaryExpr -> PrimaryExpr . Selector
    (128) PrimaryExpr -> PrimaryExpr . Slice
    (129) PrimaryExpr -> PrimaryExpr . Arguments
    (132) Selector -> . PERIOD IDENT
    (133) Slice -> . LBRACK Expr COLON Expr RBRACK
    (134) Slice -> . LBRACK COLON Expr RBRACK
    (135) Slice -> . LBRACK Expr COLON RBRACK
    (136) Slice -> . LBRACK COLON RBRACK
    (137) Slice -> . LBRACK COLON Expr COLON Expr RBRACK
    (138) Slice -> . LBRACK Expr COLON Expr COLON Expr RBRACK
    (139) Arguments -> . LPAREN RPAREN
    (140) Arguments -> . LPAREN ExpressionList RPAREN
    (141) Arguments -> . LPAREN ExpressionList COMMA RPAREN
    (142) Arguments -> . LPAREN Type RPAREN
    (143) Arguments -> . LPAREN Type COMMA RPAREN
    (144) Arguments -> . LPAREN Type COMMA ExpressionList RPAREN
    (145) Arguments -> . LPAREN Type COMMA ExpressionList COMMA RPAREN

    PERIOD          shift and go to state 382
    LBRACK          shift and go to state 182
    LPAREN          shift and go to state 183

    Selector                       shift and go to state 178
    Slice                          shift and go to state 179
    Arguments                      shift and go to state 180

state 371

    (244) ShortVarDeclOpt -> IDENT DEFINE .

    LPAREN          reduce using rule 244 (ShortVarDeclOpt -> IDENT DEFINE .)
    IDENT           reduce using rule 244 (ShortVarDeclOpt -> IDENT DEFINE .)
    INT             reduce using rule 244 (ShortVarDeclOpt -> IDENT DEFINE .)
    FLOAT           reduce using rule 244 (ShortVarDeclOpt -> IDENT DEFINE .)
    IMAG            reduce using rule 244 (ShortVarDeclOpt -> IDENT DEFINE .)
    RUNE            reduce using rule 244 (ShortVarDeclOpt -> IDENT DEFINE .)
    STRING          reduce using rule 244 (ShortVarDeclOpt -> IDENT DEFINE .)
    FUNC            reduce using rule 244 (ShortVarDeclOpt -> IDENT DEFINE .)
    STRUCT          reduce using rule 244 (ShortVarDeclOpt -> IDENT DEFINE .)
    LBRACK          reduce using rule 244 (ShortVarDeclOpt -> IDENT DEFINE .)
    MAP             reduce using rule 244 (ShortVarDeclOpt -> IDENT DEFINE .)
    MUL             reduce using rule 244 (ShortVarDeclOpt -> IDENT DEFINE .)


state 372

    (138) Slice -> LBRACK Expr COLON Expr COLON . Expr RBRACK
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Expr                           shift and go to state 383
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 373

    (133) Slice -> LBRACK Expr COLON Expr RBRACK .

    PERIOD          reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LBRACK          reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LPAREN          reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LOR             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LAND            reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    EQL             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    NEQ             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LSS             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LEQ             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    GTR             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    GEQ             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    ADD             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SUB             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    OR              reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    XOR             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    MUL             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    QUO             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    REM             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SHL             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SHR             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    AND             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    AND_NOT         reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    RBRACK          reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    COMMA           reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SEMICOLON       reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    RPAREN          reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    INC             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    DEC             reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    ASSIGN          reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    OR_ASSIGN       reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    REM_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    AND_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    COLON           reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    RBRACE          reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LBRACE          reduce using rule 133 (Slice -> LBRACK Expr COLON Expr RBRACK .)


state 374

    (137) Slice -> LBRACK COLON Expr COLON Expr . RBRACK
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    RBRACK          shift and go to state 384
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 375

    (145) Arguments -> LPAREN Type COMMA ExpressionList COMMA . RPAREN

    RPAREN          shift and go to state 385


state 376

    (144) Arguments -> LPAREN Type COMMA ExpressionList RPAREN .

    PERIOD          reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LBRACK          reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LPAREN          reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LOR             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LAND            reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    EQL             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    NEQ             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LSS             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LEQ             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    GTR             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    GEQ             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    ADD             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SUB             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    OR              reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    XOR             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    MUL             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    QUO             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    REM             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SHL             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SHR             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    AND             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    AND_NOT         reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    RBRACK          reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    COMMA           reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SEMICOLON       reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    RPAREN          reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    INC             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    DEC             reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    ASSIGN          reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    ADD_ASSIGN      reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SUB_ASSIGN      reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    OR_ASSIGN       reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    XOR_ASSIGN      reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    MUL_ASSIGN      reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    QUO_ASSIGN      reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    REM_ASSIGN      reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    AND_ASSIGN      reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SHL_ASSIGN      reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SHR_ASSIGN      reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    COLON           reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    RBRACE          reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LBRACE          reduce using rule 144 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)


state 377

    (226) IfStmt -> IF SimpleStmtOpt Expr Block else_stmt .

    SEMICOLON       reduce using rule 226 (IfStmt -> IF SimpleStmtOpt Expr Block else_stmt .)


state 378

    (227) else_stmt -> ELSE . IfStmt
    (228) else_stmt -> ELSE . Block
    (226) IfStmt -> . IF SimpleStmtOpt Expr Block else_stmt
    (225) Block -> . LBRACE StatementList RBRACE

    IF              shift and go to state 236
    LBRACE          shift and go to state 78

    IfStmt                         shift and go to state 386
    Block                          shift and go to state 387

state 379

    (258) ForClause -> InitStmt SEMICOLON ConditionOpt SEMICOLON . PostStmt
    (262) PostStmt -> . SimpleStmt
    (193) SimpleStmt -> . EmptyStmt
    (194) SimpleStmt -> . ExpressionStmt
    (195) SimpleStmt -> . IncDecStmt
    (196) SimpleStmt -> . Assignment
    (197) SimpleStmt -> . ShortVarDecl
    (198) EmptyStmt -> .
    (199) ExpressionStmt -> . Expr
    (200) IncDecStmt -> . Expr INC
    (201) IncDecStmt -> . Expr DEC
    (202) Assignment -> . ExpressionList assign_op ExpressionList
    (161) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (60) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 198 (EmptyStmt -> .)
    IDENT           shift and go to state 299
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    PostStmt                       shift and go to state 388
    SimpleStmt                     shift and go to state 389
    EmptyStmt                      shift and go to state 225
    ExpressionStmt                 shift and go to state 226
    IncDecStmt                     shift and go to state 227
    Assignment                     shift and go to state 228
    ShortVarDecl                   shift and go to state 229
    Expr                           shift and go to state 237
    ExpressionList                 shift and go to state 232
    IdentifierList                 shift and go to state 242
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 380

    (234) ExprSwitchStmt -> SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult . RBRACE
    (237) ExprCaseClauseMult -> ExprCaseClauseMult . ExprCaseClause
    (239) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (240) ExprSwitchCase -> . CASE ExpressionList
    (241) ExprSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 390
    CASE            shift and go to state 393
    DEFAULT         shift and go to state 394

    ExprCaseClause                 shift and go to state 391
    ExprSwitchCase                 shift and go to state 392

state 381

    (242) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult . RBRACE
    (246) TypeCaseClauseMult -> TypeCaseClauseMult . TypeCaseClause
    (248) TypeCaseClause -> . TypeSwitchCase COLON StatementList
    (249) TypeSwitchCase -> . CASE TypeList
    (250) TypeSwitchCase -> . DEFAULT

    RBRACE          shift and go to state 395
    CASE            shift and go to state 398
    DEFAULT         shift and go to state 399

    TypeCaseClause                 shift and go to state 396
    TypeSwitchCase                 shift and go to state 397

state 382

    (243) TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr PERIOD . LPAREN TYPE RPAREN
    (132) Selector -> PERIOD . IDENT

    LPAREN          shift and go to state 400
    IDENT           shift and go to state 248


state 383

    (138) Slice -> LBRACK Expr COLON Expr COLON Expr . RBRACK
    (62) Expr -> Expr . BinOp Expr
    (65) BinOp -> . LOR
    (66) BinOp -> . LAND
    (67) BinOp -> . RelOp
    (68) BinOp -> . AddOp
    (69) BinOp -> . MulOp
    (70) RelOp -> . EQL
    (71) RelOp -> . NEQ
    (72) RelOp -> . LSS
    (73) RelOp -> . LEQ
    (74) RelOp -> . GTR
    (75) RelOp -> . GEQ
    (76) AddOp -> . ADD
    (77) AddOp -> . SUB
    (78) AddOp -> . OR
    (79) AddOp -> . XOR
    (80) MulOp -> . MUL
    (81) MulOp -> . QUO
    (82) MulOp -> . REM
    (83) MulOp -> . SHL
    (84) MulOp -> . SHR
    (85) MulOp -> . AND
    (86) MulOp -> . AND_NOT

    RBRACK          shift and go to state 401
    LOR             shift and go to state 156
    LAND            shift and go to state 157
    EQL             shift and go to state 161
    NEQ             shift and go to state 162
    LSS             shift and go to state 163
    LEQ             shift and go to state 164
    GTR             shift and go to state 165
    GEQ             shift and go to state 166
    ADD             shift and go to state 167
    SUB             shift and go to state 168
    OR              shift and go to state 169
    XOR             shift and go to state 170
    MUL             shift and go to state 171
    QUO             shift and go to state 172
    REM             shift and go to state 173
    SHL             shift and go to state 174
    SHR             shift and go to state 175
    AND             shift and go to state 176
    AND_NOT         shift and go to state 177

    BinOp                          shift and go to state 155
    RelOp                          shift and go to state 158
    AddOp                          shift and go to state 159
    MulOp                          shift and go to state 160

state 384

    (137) Slice -> LBRACK COLON Expr COLON Expr RBRACK .

    PERIOD          reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LBRACK          reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LPAREN          reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LOR             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LAND            reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    EQL             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    NEQ             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LSS             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LEQ             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    GTR             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    GEQ             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    ADD             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SUB             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    OR              reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    XOR             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    MUL             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    QUO             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    REM             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SHL             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SHR             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    AND             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    AND_NOT         reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    RBRACK          reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    COMMA           reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SEMICOLON       reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    RPAREN          reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    INC             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    DEC             reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    ASSIGN          reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    OR_ASSIGN       reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    REM_ASSIGN      reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    AND_ASSIGN      reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    COLON           reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    RBRACE          reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LBRACE          reduce using rule 137 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)


state 385

    (145) Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .

    PERIOD          reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LBRACK          reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LPAREN          reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LOR             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LAND            reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    EQL             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    NEQ             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LSS             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LEQ             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    GTR             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    GEQ             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    ADD             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SUB             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    OR              reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    XOR             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    MUL             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    QUO             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    REM             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SHL             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SHR             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    AND             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    AND_NOT         reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    RBRACK          reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    COMMA           reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SEMICOLON       reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    RPAREN          reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    INC             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    DEC             reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    ASSIGN          reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    COLON           reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    RBRACE          reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LBRACE          reduce using rule 145 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)


state 386

    (227) else_stmt -> ELSE IfStmt .

    SEMICOLON       reduce using rule 227 (else_stmt -> ELSE IfStmt .)


state 387

    (228) else_stmt -> ELSE Block .

    SEMICOLON       reduce using rule 228 (else_stmt -> ELSE Block .)


state 388

    (258) ForClause -> InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt .

    LBRACE          reduce using rule 258 (ForClause -> InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt .)


state 389

    (262) PostStmt -> SimpleStmt .

    LBRACE          reduce using rule 262 (PostStmt -> SimpleStmt .)


state 390

    (234) ExprSwitchStmt -> SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE .

    SEMICOLON       reduce using rule 234 (ExprSwitchStmt -> SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE .)


state 391

    (237) ExprCaseClauseMult -> ExprCaseClauseMult ExprCaseClause .

    RBRACE          reduce using rule 237 (ExprCaseClauseMult -> ExprCaseClauseMult ExprCaseClause .)
    CASE            reduce using rule 237 (ExprCaseClauseMult -> ExprCaseClauseMult ExprCaseClause .)
    DEFAULT         reduce using rule 237 (ExprCaseClauseMult -> ExprCaseClauseMult ExprCaseClause .)


state 392

    (239) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 402


state 393

    (240) ExprSwitchCase -> CASE . ExpressionList
    (60) ExpressionList -> . Expr ExprOth
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    IDENT           shift and go to state 115
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 403
    Expr                           shift and go to state 137
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 394

    (241) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 241 (ExprSwitchCase -> DEFAULT .)


state 395

    (242) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE .

    SEMICOLON       reduce using rule 242 (TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE .)


state 396

    (246) TypeCaseClauseMult -> TypeCaseClauseMult TypeCaseClause .

    RBRACE          reduce using rule 246 (TypeCaseClauseMult -> TypeCaseClauseMult TypeCaseClause .)
    CASE            reduce using rule 246 (TypeCaseClauseMult -> TypeCaseClauseMult TypeCaseClause .)
    DEFAULT         reduce using rule 246 (TypeCaseClauseMult -> TypeCaseClauseMult TypeCaseClause .)


state 397

    (248) TypeCaseClause -> TypeSwitchCase . COLON StatementList

    COLON           shift and go to state 404


state 398

    (249) TypeSwitchCase -> CASE . TypeList
    (251) TypeList -> . Type TypeOth
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    TypeList                       shift and go to state 405
    Type                           shift and go to state 406
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 399

    (250) TypeSwitchCase -> DEFAULT .

    COLON           reduce using rule 250 (TypeSwitchCase -> DEFAULT .)


state 400

    (243) TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr PERIOD LPAREN . TYPE RPAREN

    TYPE            shift and go to state 407


state 401

    (138) Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .

    PERIOD          reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LBRACK          reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LPAREN          reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LOR             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LAND            reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    EQL             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    NEQ             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LSS             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LEQ             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    GTR             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    GEQ             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    ADD             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SUB             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    OR              reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    XOR             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    MUL             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    QUO             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    REM             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SHL             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SHR             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    AND             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    AND_NOT         reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    RBRACK          reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    COMMA           reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SEMICOLON       reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    RPAREN          reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    INC             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    DEC             reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    ASSIGN          reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    OR_ASSIGN       reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    REM_ASSIGN      reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    AND_ASSIGN      reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    COLON           reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    RBRACE          reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LBRACE          reduce using rule 138 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)


state 402

    (239) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (177) StatementList -> . StatementList Statement SEMICOLON
    (178) StatementList -> .

    GOTO            reduce using rule 178 (StatementList -> .)
    RETURN          reduce using rule 178 (StatementList -> .)
    BREAK           reduce using rule 178 (StatementList -> .)
    CONTINUE        reduce using rule 178 (StatementList -> .)
    FALLTHROUGH     reduce using rule 178 (StatementList -> .)
    LBRACE          reduce using rule 178 (StatementList -> .)
    IF              reduce using rule 178 (StatementList -> .)
    FOR             reduce using rule 178 (StatementList -> .)
    CONST           reduce using rule 178 (StatementList -> .)
    VAR             reduce using rule 178 (StatementList -> .)
    TYPE            reduce using rule 178 (StatementList -> .)
    IDENT           reduce using rule 178 (StatementList -> .)
    SWITCH          reduce using rule 178 (StatementList -> .)
    ADD             reduce using rule 178 (StatementList -> .)
    SUB             reduce using rule 178 (StatementList -> .)
    NOT             reduce using rule 178 (StatementList -> .)
    XOR             reduce using rule 178 (StatementList -> .)
    MUL             reduce using rule 178 (StatementList -> .)
    AND             reduce using rule 178 (StatementList -> .)
    LPAREN          reduce using rule 178 (StatementList -> .)
    INT             reduce using rule 178 (StatementList -> .)
    FLOAT           reduce using rule 178 (StatementList -> .)
    IMAG            reduce using rule 178 (StatementList -> .)
    RUNE            reduce using rule 178 (StatementList -> .)
    STRING          reduce using rule 178 (StatementList -> .)
    FUNC            reduce using rule 178 (StatementList -> .)
    STRUCT          reduce using rule 178 (StatementList -> .)
    LBRACK          reduce using rule 178 (StatementList -> .)
    MAP             reduce using rule 178 (StatementList -> .)
    SEMICOLON       reduce using rule 178 (StatementList -> .)
    RBRACE          reduce using rule 178 (StatementList -> .)
    CASE            reduce using rule 178 (StatementList -> .)
    DEFAULT         reduce using rule 178 (StatementList -> .)

    StatementList                  shift and go to state 408

state 403

    (240) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 240 (ExprSwitchCase -> CASE ExpressionList .)


state 404

    (248) TypeCaseClause -> TypeSwitchCase COLON . StatementList
    (177) StatementList -> . StatementList Statement SEMICOLON
    (178) StatementList -> .

    GOTO            reduce using rule 178 (StatementList -> .)
    RETURN          reduce using rule 178 (StatementList -> .)
    BREAK           reduce using rule 178 (StatementList -> .)
    CONTINUE        reduce using rule 178 (StatementList -> .)
    FALLTHROUGH     reduce using rule 178 (StatementList -> .)
    LBRACE          reduce using rule 178 (StatementList -> .)
    IF              reduce using rule 178 (StatementList -> .)
    FOR             reduce using rule 178 (StatementList -> .)
    CONST           reduce using rule 178 (StatementList -> .)
    VAR             reduce using rule 178 (StatementList -> .)
    TYPE            reduce using rule 178 (StatementList -> .)
    IDENT           reduce using rule 178 (StatementList -> .)
    SWITCH          reduce using rule 178 (StatementList -> .)
    ADD             reduce using rule 178 (StatementList -> .)
    SUB             reduce using rule 178 (StatementList -> .)
    NOT             reduce using rule 178 (StatementList -> .)
    XOR             reduce using rule 178 (StatementList -> .)
    MUL             reduce using rule 178 (StatementList -> .)
    AND             reduce using rule 178 (StatementList -> .)
    LPAREN          reduce using rule 178 (StatementList -> .)
    INT             reduce using rule 178 (StatementList -> .)
    FLOAT           reduce using rule 178 (StatementList -> .)
    IMAG            reduce using rule 178 (StatementList -> .)
    RUNE            reduce using rule 178 (StatementList -> .)
    STRING          reduce using rule 178 (StatementList -> .)
    FUNC            reduce using rule 178 (StatementList -> .)
    STRUCT          reduce using rule 178 (StatementList -> .)
    LBRACK          reduce using rule 178 (StatementList -> .)
    MAP             reduce using rule 178 (StatementList -> .)
    SEMICOLON       reduce using rule 178 (StatementList -> .)
    RBRACE          reduce using rule 178 (StatementList -> .)
    CASE            reduce using rule 178 (StatementList -> .)
    DEFAULT         reduce using rule 178 (StatementList -> .)

    StatementList                  shift and go to state 409

state 405

    (249) TypeSwitchCase -> CASE TypeList .

    COLON           reduce using rule 249 (TypeSwitchCase -> CASE TypeList .)


state 406

    (251) TypeList -> Type . TypeOth
    (252) TypeOth -> . COMMA Type TypeOth
    (253) TypeOth -> .

    COMMA           shift and go to state 411
    COLON           reduce using rule 253 (TypeOth -> .)

    TypeOth                        shift and go to state 410

state 407

    (243) TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr PERIOD LPAREN TYPE . RPAREN

    RPAREN          shift and go to state 412


state 408

    (239) ExprCaseClause -> ExprSwitchCase COLON StatementList .
    (177) StatementList -> StatementList . Statement SEMICOLON
    (179) Statement -> . Decl
    (180) Statement -> . LabeledStmt
    (181) Statement -> . SimpleStmt
    (182) Statement -> . GotoStmt
    (183) Statement -> . ReturnStmt
    (184) Statement -> . BreakStmt
    (185) Statement -> . ContinueStmt
    (186) Statement -> . FallthroughStmt
    (187) Statement -> . Block
    (188) Statement -> . IfStmt
    (189) Statement -> . SwitchStmt
    (190) Statement -> . ForStmt
    (18) Decl -> . ConstDecl
    (19) Decl -> . VarDecl
    (20) Decl -> . TypeDecl
    (191) LabeledStmt -> . Label COLON Statement
    (193) SimpleStmt -> . EmptyStmt
    (194) SimpleStmt -> . ExpressionStmt
    (195) SimpleStmt -> . IncDecStmt
    (196) SimpleStmt -> . Assignment
    (197) SimpleStmt -> . ShortVarDecl
    (223) GotoStmt -> . GOTO Label
    (217) ReturnStmt -> . RETURN ExpressionList
    (218) ReturnStmt -> . RETURN
    (219) BreakStmt -> . BREAK Label
    (220) BreakStmt -> . BREAK
    (221) ContinueStmt -> . CONTINUE Label
    (222) ContinueStmt -> . CONTINUE
    (224) FallthroughStmt -> . FALLTHROUGH
    (225) Block -> . LBRACE StatementList RBRACE
    (226) IfStmt -> . IF SimpleStmtOpt Expr Block else_stmt
    (232) SwitchStmt -> . ExprSwitchStmt
    (233) SwitchStmt -> . TypeSwitchStmt
    (254) ForStmt -> . FOR Condition Block
    (255) ForStmt -> . FOR ForClause Block
    (256) ForStmt -> . FOR RangeClause Block
    (21) ConstDecl -> . CONST ConstSpec
    (22) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (154) VarDecl -> . VAR VarSpec
    (155) VarDecl -> . VAR LPAREN VarMult RPAREN
    (146) TypeDecl -> . TYPE TypeSpec
    (147) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (192) Label -> . IDENT
    (198) EmptyStmt -> .
    (199) ExpressionStmt -> . Expr
    (200) IncDecStmt -> . Expr INC
    (201) IncDecStmt -> . Expr DEC
    (202) Assignment -> . ExpressionList assign_op ExpressionList
    (161) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (234) ExprSwitchStmt -> . SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE
    (242) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (60) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    RBRACE          reduce using rule 239 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 239 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 239 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    GOTO            shift and go to state 230
    RETURN          shift and go to state 231
    BREAK           shift and go to state 233
    CONTINUE        shift and go to state 234
    FALLTHROUGH     shift and go to state 235
    LBRACE          shift and go to state 78
    IF              shift and go to state 236
    FOR             shift and go to state 240
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 241
    SEMICOLON       reduce using rule 198 (EmptyStmt -> .)
    SWITCH          shift and go to state 243
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Statement                      shift and go to state 211
    Decl                           shift and go to state 212
    LabeledStmt                    shift and go to state 213
    SimpleStmt                     shift and go to state 214
    GotoStmt                       shift and go to state 215
    ReturnStmt                     shift and go to state 216
    BreakStmt                      shift and go to state 217
    ContinueStmt                   shift and go to state 218
    FallthroughStmt                shift and go to state 219
    Block                          shift and go to state 220
    IfStmt                         shift and go to state 221
    SwitchStmt                     shift and go to state 222
    ForStmt                        shift and go to state 223
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    Label                          shift and go to state 224
    EmptyStmt                      shift and go to state 225
    ExpressionStmt                 shift and go to state 226
    IncDecStmt                     shift and go to state 227
    Assignment                     shift and go to state 228
    ShortVarDecl                   shift and go to state 229
    ExpressionList                 shift and go to state 232
    Expr                           shift and go to state 237
    ExprSwitchStmt                 shift and go to state 238
    TypeSwitchStmt                 shift and go to state 239
    IdentifierList                 shift and go to state 242
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 409

    (248) TypeCaseClause -> TypeSwitchCase COLON StatementList .
    (177) StatementList -> StatementList . Statement SEMICOLON
    (179) Statement -> . Decl
    (180) Statement -> . LabeledStmt
    (181) Statement -> . SimpleStmt
    (182) Statement -> . GotoStmt
    (183) Statement -> . ReturnStmt
    (184) Statement -> . BreakStmt
    (185) Statement -> . ContinueStmt
    (186) Statement -> . FallthroughStmt
    (187) Statement -> . Block
    (188) Statement -> . IfStmt
    (189) Statement -> . SwitchStmt
    (190) Statement -> . ForStmt
    (18) Decl -> . ConstDecl
    (19) Decl -> . VarDecl
    (20) Decl -> . TypeDecl
    (191) LabeledStmt -> . Label COLON Statement
    (193) SimpleStmt -> . EmptyStmt
    (194) SimpleStmt -> . ExpressionStmt
    (195) SimpleStmt -> . IncDecStmt
    (196) SimpleStmt -> . Assignment
    (197) SimpleStmt -> . ShortVarDecl
    (223) GotoStmt -> . GOTO Label
    (217) ReturnStmt -> . RETURN ExpressionList
    (218) ReturnStmt -> . RETURN
    (219) BreakStmt -> . BREAK Label
    (220) BreakStmt -> . BREAK
    (221) ContinueStmt -> . CONTINUE Label
    (222) ContinueStmt -> . CONTINUE
    (224) FallthroughStmt -> . FALLTHROUGH
    (225) Block -> . LBRACE StatementList RBRACE
    (226) IfStmt -> . IF SimpleStmtOpt Expr Block else_stmt
    (232) SwitchStmt -> . ExprSwitchStmt
    (233) SwitchStmt -> . TypeSwitchStmt
    (254) ForStmt -> . FOR Condition Block
    (255) ForStmt -> . FOR ForClause Block
    (256) ForStmt -> . FOR RangeClause Block
    (21) ConstDecl -> . CONST ConstSpec
    (22) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (154) VarDecl -> . VAR VarSpec
    (155) VarDecl -> . VAR LPAREN VarMult RPAREN
    (146) TypeDecl -> . TYPE TypeSpec
    (147) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (192) Label -> . IDENT
    (198) EmptyStmt -> .
    (199) ExpressionStmt -> . Expr
    (200) IncDecStmt -> . Expr INC
    (201) IncDecStmt -> . Expr DEC
    (202) Assignment -> . ExpressionList assign_op ExpressionList
    (161) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (234) ExprSwitchStmt -> . SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE
    (242) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (61) Expr -> . UnaryExpr
    (62) Expr -> . Expr BinOp Expr
    (60) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (63) UnaryExpr -> . PrimaryExpr
    (64) UnaryExpr -> . UnaryOp UnaryExpr
    (125) PrimaryExpr -> . Operand
    (126) PrimaryExpr -> . Conversion
    (127) PrimaryExpr -> . PrimaryExpr Selector
    (128) PrimaryExpr -> . PrimaryExpr Slice
    (129) PrimaryExpr -> . PrimaryExpr Arguments
    (87) UnaryOp -> . ADD
    (88) UnaryOp -> . SUB
    (89) UnaryOp -> . NOT
    (90) UnaryOp -> . XOR
    (91) UnaryOp -> . MUL
    (92) UnaryOp -> . AND
    (95) Operand -> . Lit
    (96) Operand -> . OperandName
    (97) Operand -> . LPAREN Expr RPAREN
    (130) Conversion -> . Type LPAREN Expr RPAREN
    (131) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (98) Lit -> . BasicLit
    (99) Lit -> . CompositeLit
    (100) Lit -> . FunctionLit
    (123) OperandName -> . IDENT
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (101) BasicLit -> . INT
    (102) BasicLit -> . FLOAT
    (103) BasicLit -> . IMAG
    (104) BasicLit -> . RUNE
    (105) BasicLit -> . STRING
    (106) CompositeLit -> . StructType LiteralValue
    (107) CompositeLit -> . ArrayType LiteralValue
    (108) CompositeLit -> . SliceType LiteralValue
    (109) CompositeLit -> . MapType LiteralValue
    (110) CompositeLit -> . TypeName LiteralValue
    (124) FunctionLit -> . FUNC Signature FunctionBody
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (54) PointerType -> . MUL BaseType
    (59) FunctionType -> . FUNC Signature

    RBRACE          reduce using rule 248 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    CASE            reduce using rule 248 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 248 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    GOTO            shift and go to state 230
    RETURN          shift and go to state 231
    BREAK           shift and go to state 233
    CONTINUE        shift and go to state 234
    FALLTHROUGH     shift and go to state 235
    LBRACE          shift and go to state 78
    IF              shift and go to state 236
    FOR             shift and go to state 240
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 241
    SEMICOLON       reduce using rule 198 (EmptyStmt -> .)
    SWITCH          shift and go to state 243
    ADD             shift and go to state 102
    SUB             shift and go to state 103
    NOT             shift and go to state 104
    XOR             shift and go to state 105
    MUL             shift and go to state 106
    AND             shift and go to state 107
    LPAREN          shift and go to state 110
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    IMAG            shift and go to state 119
    RUNE            shift and go to state 120
    STRING          shift and go to state 121
    FUNC            shift and go to state 126
    STRUCT          shift and go to state 63
    LBRACK          shift and go to state 62
    MAP             shift and go to state 65

    Statement                      shift and go to state 211
    Decl                           shift and go to state 212
    LabeledStmt                    shift and go to state 213
    SimpleStmt                     shift and go to state 214
    GotoStmt                       shift and go to state 215
    ReturnStmt                     shift and go to state 216
    BreakStmt                      shift and go to state 217
    ContinueStmt                   shift and go to state 218
    FallthroughStmt                shift and go to state 219
    Block                          shift and go to state 220
    IfStmt                         shift and go to state 221
    SwitchStmt                     shift and go to state 222
    ForStmt                        shift and go to state 223
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    Label                          shift and go to state 224
    EmptyStmt                      shift and go to state 225
    ExpressionStmt                 shift and go to state 226
    IncDecStmt                     shift and go to state 227
    Assignment                     shift and go to state 228
    ShortVarDecl                   shift and go to state 229
    ExpressionList                 shift and go to state 232
    Expr                           shift and go to state 237
    ExprSwitchStmt                 shift and go to state 238
    TypeSwitchStmt                 shift and go to state 239
    IdentifierList                 shift and go to state 242
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 98
    UnaryOp                        shift and go to state 99
    Operand                        shift and go to state 100
    Conversion                     shift and go to state 101
    Lit                            shift and go to state 108
    OperandName                    shift and go to state 109
    Type                           shift and go to state 111
    BasicLit                       shift and go to state 112
    CompositeLit                   shift and go to state 113
    FunctionLit                    shift and go to state 114
    TypeName                       shift and go to state 116
    TypeLit                        shift and go to state 52
    StructType                     shift and go to state 122
    ArrayType                      shift and go to state 123
    SliceType                      shift and go to state 124
    MapType                        shift and go to state 125
    QualifiedIdent                 shift and go to state 55
    PointerType                    shift and go to state 58
    FunctionType                   shift and go to state 61

state 410

    (251) TypeList -> Type TypeOth .

    COLON           reduce using rule 251 (TypeList -> Type TypeOth .)


state 411

    (252) TypeOth -> COMMA . Type TypeOth
    (29) Type -> . TypeName
    (30) Type -> . TypeLit
    (31) Type -> . LPAREN Type RPAREN
    (32) TypeName -> . IDENT
    (33) TypeName -> . QualifiedIdent
    (35) TypeLit -> . ArrayType
    (36) TypeLit -> . StructType
    (37) TypeLit -> . PointerType
    (38) TypeLit -> . SliceType
    (39) TypeLit -> . MapType
    (40) TypeLit -> . FunctionType
    (34) QualifiedIdent -> . IDENT PERIOD IDENT
    (41) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (44) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (54) PointerType -> . MUL BaseType
    (56) SliceType -> . LBRACK RBRACK ElementType
    (57) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (59) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 53
    IDENT           shift and go to state 54
    LBRACK          shift and go to state 62
    STRUCT          shift and go to state 63
    MUL             shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 413
    TypeName                       shift and go to state 51
    TypeLit                        shift and go to state 52
    QualifiedIdent                 shift and go to state 55
    ArrayType                      shift and go to state 56
    StructType                     shift and go to state 57
    PointerType                    shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 412

    (243) TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN .

    LBRACE          reduce using rule 243 (TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN .)


state 413

    (252) TypeOth -> COMMA Type . TypeOth
    (252) TypeOth -> . COMMA Type TypeOth
    (253) TypeOth -> .

    COMMA           shift and go to state 411
    COLON           reduce using rule 253 (TypeOth -> .)

    TypeOth                        shift and go to state 414

state 414

    (252) TypeOth -> COMMA Type TypeOth .

    COLON           reduce using rule 252 (TypeOth -> COMMA Type TypeOth .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 47 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 115 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 143 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 188 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 208 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 236 resolved as shift
WARNING: shift/reduce conflict for ADD in state 236 resolved as shift
WARNING: shift/reduce conflict for SUB in state 236 resolved as shift
WARNING: shift/reduce conflict for NOT in state 236 resolved as shift
WARNING: shift/reduce conflict for XOR in state 236 resolved as shift
WARNING: shift/reduce conflict for MUL in state 236 resolved as shift
WARNING: shift/reduce conflict for AND in state 236 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 236 resolved as shift
WARNING: shift/reduce conflict for INT in state 236 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 236 resolved as shift
WARNING: shift/reduce conflict for IMAG in state 236 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 236 resolved as shift
WARNING: shift/reduce conflict for STRING in state 236 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 236 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 236 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 236 resolved as shift
WARNING: shift/reduce conflict for MAP in state 236 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 241 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 243 resolved as shift
WARNING: shift/reduce conflict for ADD in state 243 resolved as shift
WARNING: shift/reduce conflict for SUB in state 243 resolved as shift
WARNING: shift/reduce conflict for NOT in state 243 resolved as shift
WARNING: shift/reduce conflict for XOR in state 243 resolved as shift
WARNING: shift/reduce conflict for MUL in state 243 resolved as shift
WARNING: shift/reduce conflict for AND in state 243 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 243 resolved as shift
WARNING: shift/reduce conflict for INT in state 243 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 243 resolved as shift
WARNING: shift/reduce conflict for IMAG in state 243 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 243 resolved as shift
WARNING: shift/reduce conflict for STRING in state 243 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 243 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 243 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 243 resolved as shift
WARNING: shift/reduce conflict for MAP in state 243 resolved as shift
WARNING: shift/reduce conflict for LOR in state 247 resolved as shift
WARNING: shift/reduce conflict for LAND in state 247 resolved as shift
WARNING: shift/reduce conflict for EQL in state 247 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 247 resolved as shift
WARNING: shift/reduce conflict for LSS in state 247 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 247 resolved as shift
WARNING: shift/reduce conflict for GTR in state 247 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 247 resolved as shift
WARNING: shift/reduce conflict for ADD in state 247 resolved as shift
WARNING: shift/reduce conflict for SUB in state 247 resolved as shift
WARNING: shift/reduce conflict for OR in state 247 resolved as shift
WARNING: shift/reduce conflict for XOR in state 247 resolved as shift
WARNING: shift/reduce conflict for MUL in state 247 resolved as shift
WARNING: shift/reduce conflict for QUO in state 247 resolved as shift
WARNING: shift/reduce conflict for REM in state 247 resolved as shift
WARNING: shift/reduce conflict for SHL in state 247 resolved as shift
WARNING: shift/reduce conflict for SHR in state 247 resolved as shift
WARNING: shift/reduce conflict for AND in state 247 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 247 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 265 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 299 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 312 resolved as shift
WARNING: shift/reduce conflict for MUL in state 312 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 312 resolved as shift
WARNING: shift/reduce conflict for INT in state 312 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 312 resolved as shift
WARNING: shift/reduce conflict for IMAG in state 312 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 312 resolved as shift
WARNING: shift/reduce conflict for STRING in state 312 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 312 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 312 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 312 resolved as shift
WARNING: shift/reduce conflict for MAP in state 312 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 348 resolved as shift
WARNING: reduce/reduce conflict in state 88 resolved using rule (IdentifierOth -> <empty>)
WARNING: rejected rule (TypeName -> IDENT) in state 88
WARNING: reduce/reduce conflict in state 115 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 115
WARNING: reduce/reduce conflict in state 144 resolved using rule (IdentifierOth -> <empty>)
WARNING: rejected rule (TypeName -> IDENT) in state 144
WARNING: reduce/reduce conflict in state 188 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 188
WARNING: reduce/reduce conflict in state 241 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 241
WARNING: reduce/reduce conflict in state 241 resolved using rule (IdentifierOth -> <empty>)
WARNING: rejected rule (OperandName -> IDENT) in state 241
WARNING: reduce/reduce conflict in state 265 resolved using rule (Key -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 265
WARNING: reduce/reduce conflict in state 265 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 265
WARNING: reduce/reduce conflict in state 299 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 299
WARNING: reduce/reduce conflict in state 299 resolved using rule (IdentifierOth -> <empty>)
WARNING: rejected rule (OperandName -> IDENT) in state 299
WARNING: reduce/reduce conflict in state 348 resolved using rule (TypeName -> IDENT)
WARNING: rejected rule (OperandName -> IDENT) in state 348
