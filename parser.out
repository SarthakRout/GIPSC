Created by PLY (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> SourceFile
Rule 1     SourceFile -> PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult
Rule 2     PackageClause -> PACKAGE PackageName
Rule 3     PackageName -> IDENT
Rule 4     ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult
Rule 5     ImportDeclMult -> <empty>
Rule 6     ImportDecl -> IMPORT ImportSpec
Rule 7     ImportDecl -> IMPORT LPAREN ImportSpecMult RPAREN
Rule 8     ImportSpecMult -> ImportSpec SEMICOLON ImportSpecMult
Rule 9     ImportSpecMult -> <empty>
Rule 10    ImportSpec -> PERIOD ImportPath
Rule 11    ImportSpec -> IDENT ImportPath
Rule 12    ImportSpec -> ImportPath
Rule 13    ImportPath -> STRING
Rule 14    TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult
Rule 15    TopLevelDeclMult -> <empty>
Rule 16    TopLevelDecl -> Decl
Rule 17    TopLevelDecl -> FuncDecl
Rule 18    Decl -> ConstDecl
Rule 19    Decl -> VarDecl
Rule 20    Decl -> TypeDecl
Rule 21    ConstDecl -> CONST ConstSpec
Rule 22    ConstDecl -> CONST LPAREN ConstSpecMult RPAREN
Rule 23    ConstSpecMult -> ConstSpec SEMICOLON ConstSpecMult
Rule 24    ConstSpecMult -> <empty>
Rule 25    ConstSpec -> IdentifierList Type ASSIGN ExpressionList
Rule 26    IdentifierList -> IDENT IdentifierOth
Rule 27    IdentifierOth -> COMMA IDENT IdentifierOth
Rule 28    IdentifierOth -> <empty>
Rule 29    QualifiedIdentPart -> PERIOD IDENT
Rule 30    TypeLit -> ArrayType
Rule 31    TypeLit -> StructType
Rule 32    TypeLit -> PointerType
Rule 33    TypeLit -> SliceType
Rule 34    TypeLit -> MapType
Rule 35    TypeLit -> FunctionType
Rule 36    ArrayType -> LBRACK ArrayLength RBRACK ElementType
Rule 37    ArrayLength -> Expr
Rule 38    ElementType -> Type
Rule 39    StructType -> STRUCT LBRACE FieldDeclMult RBRACE
Rule 40    FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult
Rule 41    FieldDeclMult -> <empty>
Rule 42    FieldDecl -> IdentifierList Type
Rule 43    FieldDecl -> EmbeddedField
Rule 44    FieldDecl -> IdentifierList Type Tag
Rule 45    FieldDecl -> EmbeddedField Tag
Rule 46    Tag -> STRING
Rule 47    EmbeddedField -> MUL TypeName
Rule 48    EmbeddedField -> TypeName
Rule 49    PointerType -> MUL BaseType
Rule 50    BaseType -> Type
Rule 51    SliceType -> LBRACK RBRACK ElementType
Rule 52    MapType -> MAP LBRACK KeyType RBRACK ElementType
Rule 53    KeyType -> Type
Rule 54    FunctionType -> FUNC Signature
Rule 55    ExpressionList -> Expr ExprOth
Rule 56    Expr -> UnaryExpr
Rule 57    Expr -> Expr BinOp Expr
Rule 58    UnaryExpr -> PrimaryExpr
Rule 59    UnaryExpr -> UnaryOp UnaryExpr
Rule 60    BinOp -> LOR
Rule 61    BinOp -> LAND
Rule 62    BinOp -> RelOp
Rule 63    BinOp -> AddOp
Rule 64    BinOp -> MulOp
Rule 65    RelOp -> EQL
Rule 66    RelOp -> NEQ
Rule 67    RelOp -> LSS
Rule 68    RelOp -> LEQ
Rule 69    RelOp -> GTR
Rule 70    RelOp -> GEQ
Rule 71    AddOp -> ADD
Rule 72    AddOp -> SUB
Rule 73    AddOp -> OR
Rule 74    AddOp -> XOR
Rule 75    MulOp -> MUL
Rule 76    MulOp -> QUO
Rule 77    MulOp -> REM
Rule 78    MulOp -> SHL
Rule 79    MulOp -> SHR
Rule 80    MulOp -> AND
Rule 81    MulOp -> AND_NOT
Rule 82    UnaryOp -> ADD
Rule 83    UnaryOp -> SUB
Rule 84    UnaryOp -> NOT
Rule 85    UnaryOp -> XOR
Rule 86    UnaryOp -> MUL
Rule 87    UnaryOp -> AND
Rule 88    ExprOth -> COMMA Expr ExprOth
Rule 89    ExprOth -> <empty>
Rule 90    Operand -> Lit
Rule 91    Operand -> OperandName IDENT
Rule 92    Operand -> LPAREN Expr RPAREN
Rule 93    Lit -> BasicLit
Rule 94    Lit -> CompositeLit
Rule 95    Lit -> FunctionLit
Rule 96    BasicLit -> INT
Rule 97    BasicLit -> FLOAT
Rule 98    BasicLit -> IMAG
Rule 99    BasicLit -> RUNE
Rule 100   BasicLit -> STRING
Rule 101   CompositeLit -> StructType LiteralValue
Rule 102   CompositeLit -> ArrayType LiteralValue
Rule 103   CompositeLit -> SliceType LiteralValue
Rule 104   CompositeLit -> MapType LiteralValue
Rule 105   CompositeLit -> TypeName LiteralValue
Rule 106   LiteralValue -> LBRACE ElementList COMMA RBRACE
Rule 107   LiteralValue -> LBRACE ElementList RBRACE
Rule 108   LiteralValue -> LBRACE RBRACE
Rule 109   ElementList -> KeyedElement
Rule 110   ElementList -> KeyedElement COMMA ElementList
Rule 111   KeyedElement -> Element
Rule 112   KeyedElement -> Key COLON Element
Rule 113   Key -> IDENT
Rule 114   Key -> Expr
Rule 115   Key -> LiteralValue
Rule 116   Element -> Expr
Rule 117   Element -> LiteralValue
Rule 118   OperandName -> <empty>
Rule 119   OperandName -> QualifiedIdentPart
Rule 120   FunctionLit -> FUNC Signature FunctionBody
Rule 121   PrimaryExpr -> Operand
Rule 122   PrimaryExpr -> Conversion
Rule 123   PrimaryExpr -> PrimaryExpr Selector
Rule 124   PrimaryExpr -> PrimaryExpr Index
Rule 125   PrimaryExpr -> PrimaryExpr Slice
Rule 126   PrimaryExpr -> PrimaryExpr Arguments
Rule 127   Index -> LBRACK Expr RBRACK
Rule 128   Conversion -> Type LPAREN Expr RPAREN
Rule 129   Conversion -> Type LPAREN Expr COMMA RPAREN
Rule 130   Selector -> PERIOD IDENT
Rule 131   Slice -> LBRACK Expr COLON Expr RBRACK
Rule 132   Slice -> LBRACK COLON Expr RBRACK
Rule 133   Slice -> LBRACK Expr COLON RBRACK
Rule 134   Slice -> LBRACK COLON RBRACK
Rule 135   Slice -> LBRACK COLON Expr COLON Expr RBRACK
Rule 136   Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK
Rule 137   Arguments -> LPAREN RPAREN
Rule 138   Arguments -> LPAREN ExpressionList RPAREN
Rule 139   Arguments -> LPAREN ExpressionList COMMA RPAREN
Rule 140   Arguments -> LPAREN Type RPAREN
Rule 141   Arguments -> LPAREN Type COMMA RPAREN
Rule 142   Arguments -> LPAREN Type COMMA ExpressionList RPAREN
Rule 143   Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN
Rule 144   TypeDecl -> TYPE TypeSpec
Rule 145   TypeDecl -> TYPE LPAREN TypeSpecMult RPAREN
Rule 146   TypeSpecMult -> TypeSpec SEMICOLON TypeSpecMult
Rule 147   TypeSpecMult -> <empty>
Rule 148   TypeSpec -> AliasDecl
Rule 149   TypeSpec -> Typedef
Rule 150   AliasDecl -> IDENT ASSIGN Type
Rule 151   Typedef -> IDENT Type
Rule 152   VarDecl -> VAR VarSpec
Rule 153   VarDecl -> VAR LPAREN VarMult RPAREN
Rule 154   VarMult -> VarSpec SEMICOLON VarMult
Rule 155   VarMult -> <empty>
Rule 156   VarSpec -> IdentifierList Type ASSIGN ExpressionList
Rule 157   VarSpec -> IdentifierList ASSIGN ExpressionList
Rule 158   VarSpec -> IdentifierList Type
Rule 159   ShortVarDecl -> IdentifierList DEFINE ExpressionList
Rule 160   FuncDecl -> FUNC FunctionName Signature FunctionBody
Rule 161   FuncDecl -> FUNC FunctionName Signature
Rule 162   FunctionName -> IDENT
Rule 163   FunctionBody -> Block
Rule 164   Signature -> Parameters Result
Rule 165   Signature -> Parameters
Rule 166   Parameters -> LPAREN RPAREN
Rule 167   Parameters -> LPAREN ParameterList RPAREN
Rule 168   Parameters -> LPAREN ParameterList COMMA RPAREN
Rule 169   ParameterList -> COMMA ParameterDecl ParameterList
Rule 170   ParameterList -> ParameterDecl
Rule 171   ParameterDecl -> Type
Rule 172   ParameterDecl -> IdentifierList Type
Rule 173   Result -> Parameters
Rule 174   Result -> Type
Rule 175   StatementList -> Statement SEMICOLON StatementList
Rule 176   StatementList -> <empty>
Rule 177   Statement -> Decl
Rule 178   Statement -> LabeledStmt
Rule 179   Statement -> SimpleStmt
Rule 180   Statement -> GotoStmt
Rule 181   Statement -> ReturnStmt
Rule 182   Statement -> BreakStmt
Rule 183   Statement -> ContinueStmt
Rule 184   Statement -> FallthroughStmt
Rule 185   Statement -> Block
Rule 186   Statement -> IfStmt
Rule 187   Statement -> SwitchStmt
Rule 188   Statement -> ForStmt
Rule 189   LabeledStmt -> Label COLON Statement
Rule 190   Label -> IDENT
Rule 191   SimpleStmt -> EmptyStmt
Rule 192   SimpleStmt -> ExpressionStmt
Rule 193   SimpleStmt -> IncDecStmt
Rule 194   SimpleStmt -> Assignment
Rule 195   SimpleStmt -> ShortVarDecl
Rule 196   EmptyStmt -> <empty>
Rule 197   ExpressionStmt -> Expr
Rule 198   IncDecStmt -> Expr INC
Rule 199   IncDecStmt -> Expr DEC
Rule 200   Assignment -> ExpressionList assign_op ExpressionList
Rule 201   assign_op -> add_op_assign
Rule 202   assign_op -> mul_op_assign
Rule 203   assign_op -> ASSIGN
Rule 204   add_op_assign -> ADD_ASSIGN
Rule 205   add_op_assign -> SUB_ASSIGN
Rule 206   add_op_assign -> OR_ASSIGN
Rule 207   add_op_assign -> XOR_ASSIGN
Rule 208   mul_op_assign -> MUL_ASSIGN
Rule 209   mul_op_assign -> QUO_ASSIGN
Rule 210   mul_op_assign -> REM_ASSIGN
Rule 211   mul_op_assign -> AND_ASSIGN
Rule 212   mul_op_assign -> SHL_ASSIGN
Rule 213   mul_op_assign -> SHR_ASSIGN
Rule 214   mul_op_assign -> AND_NOT_ASSIGN
Rule 215   ReturnStmt -> RETURN ExpressionList
Rule 216   ReturnStmt -> RETURN
Rule 217   BreakStmt -> BREAK Label
Rule 218   BreakStmt -> BREAK
Rule 219   ContinueStmt -> CONTINUE Label
Rule 220   ContinueStmt -> CONTINUE
Rule 221   GotoStmt -> GOTO Label
Rule 222   FallthroughStmt -> FALLTHROUGH
Rule 223   Block -> LBRACE StatementList RBRACE
Rule 224   IfStmt -> IF Expr Block else_stmt
Rule 225   IfStmt -> IF SimpleStmt SEMICOLON Expr else_stmt
Rule 226   else_stmt -> ELSE IfStmt
Rule 227   else_stmt -> ELSE Block
Rule 228   else_stmt -> <empty>
Rule 229   SimpleStmtOpt -> <empty>
Rule 230   SimpleStmtOpt -> SimpleStmt SEMICOLON
Rule 231   SwitchStmt -> ExprSwitchStmt
Rule 232   SwitchStmt -> TypeSwitchStmt
Rule 233   ExprSwitchStmt -> SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE
Rule 234   ExprOpt -> Expr
Rule 235   ExprOpt -> <empty>
Rule 236   ExprCaseClauseMult -> ExprCaseClause ExprCaseClauseMult
Rule 237   ExprCaseClauseMult -> <empty>
Rule 238   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 239   ExprSwitchCase -> CASE ExpressionList
Rule 240   ExprSwitchCase -> DEFAULT
Rule 241   TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
Rule 242   TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN
Rule 243   ShortVarDeclOpt -> IDENT DEFINE
Rule 244   ShortVarDeclOpt -> <empty>
Rule 245   TypeCaseClauseMult -> TypeCaseClause TypeCaseClauseMult
Rule 246   TypeCaseClauseMult -> <empty>
Rule 247   TypeCaseClause -> TypeSwitchCase COLON StatementList
Rule 248   TypeSwitchCase -> CASE TypeList
Rule 249   TypeSwitchCase -> DEFAULT
Rule 250   TypeList -> Type TypeOth
Rule 251   TypeOth -> COMMA Type TypeOth
Rule 252   TypeOth -> <empty>
Rule 253   ForStmt -> FOR Condition Block
Rule 254   ForStmt -> FOR ForClause Block
Rule 255   ForStmt -> FOR RangeClause Block
Rule 256   Condition -> Expr
Rule 257   ForClause -> InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt
Rule 258   InitStmt -> SimpleStmt
Rule 259   ConditionOpt -> Condition
Rule 260   ConditionOpt -> <empty>
Rule 261   PostStmt -> SimpleStmt
Rule 262   RangeClause -> RangeList RANGE Expr
Rule 263   RangeList -> ExpressionList ASSIGN
Rule 264   RangeList -> IdentifierList DEFINE
Rule 265   RangeList -> <empty>
Rule 266   Type -> TypeName
Rule 267   Type -> TypeLit
Rule 268   Type -> LPAREN Type RPAREN
Rule 269   TypeName -> IDENT
Rule 270   TypeName -> IDENT QualifiedIdentPart

Terminals, with rules where they appear

ADD                  : 71 82
ADD_ASSIGN           : 204
AND                  : 80 87
AND_ASSIGN           : 211
AND_NOT              : 81
AND_NOT_ASSIGN       : 214
ASSIGN               : 25 150 156 157 203 263
BREAK                : 217 218
CASE                 : 239 248
COLON                : 112 131 132 133 134 135 135 136 136 189 238 247
COMMA                : 27 88 106 110 129 139 141 142 143 143 168 169 251
CONST                : 21 22
CONTINUE             : 219 220
DEC                  : 199
DEFAULT              : 240 249
DEFINE               : 159 243 264
ELSE                 : 226 227
EQL                  : 65
FALLTHROUGH          : 222
FLOAT                : 97
FOR                  : 253 254 255
FUNC                 : 54 120 160 161
GEQ                  : 70
GOTO                 : 221
GTR                  : 69
IDENT                : 3 11 26 27 29 91 113 130 150 151 162 190 243 269 270
IF                   : 224 225
IMAG                 : 98
IMPORT               : 6 7
INC                  : 198
INT                  : 96
LAND                 : 61
LBRACE               : 39 106 107 108 223 233 241
LBRACK               : 36 51 52 127 131 132 133 134 135 136
LEQ                  : 68
LOR                  : 60
LPAREN               : 7 22 92 128 129 137 138 139 140 141 142 143 145 153 166 167 168 242 268
LSS                  : 67
MAP                  : 52
MUL                  : 47 49 75 86
MUL_ASSIGN           : 208
NEQ                  : 66
NOT                  : 84
OR                   : 73
OR_ASSIGN            : 206
PACKAGE              : 2
PERIOD               : 10 29 130 242
QUO                  : 76
QUO_ASSIGN           : 209
RANGE                : 262
RBRACE               : 39 106 107 108 223 233 241
RBRACK               : 36 51 52 127 131 132 133 134 135 136
REM                  : 77
REM_ASSIGN           : 210
RETURN               : 215 216
RPAREN               : 7 22 92 128 129 137 138 139 140 141 142 143 145 153 166 167 168 242 268
RUNE                 : 99
SEMICOLON            : 1 4 8 14 23 40 146 154 175 225 230 257 257
SHL                  : 78
SHL_ASSIGN           : 212
SHR                  : 79
SHR_ASSIGN           : 213
STRING               : 13 46 100
STRUCT               : 39
SUB                  : 72 83
SUB_ASSIGN           : 205
SWITCH               : 233 241
TYPE                 : 144 145 242
VAR                  : 152 153
XOR                  : 74 85
XOR_ASSIGN           : 207
error                : 

Nonterminals, with rules where they appear

AddOp                : 63
AliasDecl            : 148
Arguments            : 126
ArrayLength          : 36
ArrayType            : 30 102
Assignment           : 194
BaseType             : 49
BasicLit             : 93
BinOp                : 57
Block                : 163 185 224 227 253 254 255
BreakStmt            : 182
CompositeLit         : 94
Condition            : 253 259
ConditionOpt         : 257
ConstDecl            : 18
ConstSpec            : 21 23
ConstSpecMult        : 22 23
ContinueStmt         : 183
Conversion           : 122
Decl                 : 16 177
Element              : 111 112
ElementList          : 106 107 110
ElementType          : 36 51 52
EmbeddedField        : 43 45
EmptyStmt            : 191
Expr                 : 37 55 57 57 88 92 114 116 127 128 129 131 131 132 133 135 135 136 136 136 197 198 199 224 225 234 256 262
ExprCaseClause       : 236
ExprCaseClauseMult   : 233 236
ExprOpt              : 233
ExprOth              : 55 88
ExprSwitchCase       : 238
ExprSwitchStmt       : 231
ExpressionList       : 25 138 139 142 143 156 157 159 200 200 215 239 263
ExpressionStmt       : 192
FallthroughStmt      : 184
FieldDecl            : 40
FieldDeclMult        : 39 40
ForClause            : 254
ForStmt              : 188
FuncDecl             : 17
FunctionBody         : 120 160
FunctionLit          : 95
FunctionName         : 160 161
FunctionType         : 35
GotoStmt             : 180
IdentifierList       : 25 42 44 156 157 158 159 172 264
IdentifierOth        : 26 27
IfStmt               : 186 226
ImportDecl           : 4
ImportDeclMult       : 1 4
ImportPath           : 10 11 12
ImportSpec           : 6 8
ImportSpecMult       : 7 8
IncDecStmt           : 193
Index                : 124
InitStmt             : 257
Key                  : 112
KeyType              : 52
KeyedElement         : 109 110
Label                : 189 217 219 221
LabeledStmt          : 178
Lit                  : 90
LiteralValue         : 101 102 103 104 105 115 117
MapType              : 34 104
MulOp                : 64
Operand              : 121
OperandName          : 91
PackageClause        : 1
PackageName          : 2
ParameterDecl        : 169 170
ParameterList        : 167 168 169
Parameters           : 164 165 173
PointerType          : 32
PostStmt             : 257
PrimaryExpr          : 58 123 124 125 126 242
QualifiedIdentPart   : 119 270
RangeClause          : 255
RangeList            : 262
RelOp                : 62
Result               : 164
ReturnStmt           : 181
Selector             : 123
ShortVarDecl         : 195
ShortVarDeclOpt      : 242
Signature            : 54 120 160 161
SimpleStmt           : 179 225 230 258 261
SimpleStmtOpt        : 233 241
Slice                : 125
SliceType            : 33 103
SourceFile           : 0
Statement            : 175 189
StatementList        : 175 223 238 247
StructType           : 31 101
SwitchStmt           : 187
Tag                  : 44 45
TopLevelDecl         : 14
TopLevelDeclMult     : 1 14
Type                 : 25 38 42 44 50 53 128 129 140 141 142 143 150 151 156 158 171 172 174 250 251 268
TypeCaseClause       : 245
TypeCaseClauseMult   : 241 245
TypeDecl             : 20
TypeList             : 248
TypeLit              : 267
TypeName             : 47 48 105 266
TypeOth              : 250 251
TypeSpec             : 144 146
TypeSpecMult         : 145 146
TypeSwitchCase       : 247
TypeSwitchGuard      : 241
TypeSwitchStmt       : 232
Typedef              : 149
UnaryExpr            : 56 59
UnaryOp              : 59
VarDecl              : 19
VarMult              : 153 154
VarSpec              : 152 154
add_op_assign        : 201
assign_op            : 200
else_stmt            : 224 225
mul_op_assign        : 202


state 0

    (0) S' -> . SourceFile
    (1) SourceFile -> . PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult
    (2) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 3

    SourceFile                     shift and go to state 1
    PackageClause                  shift and go to state 2

state 1

    (0) S' -> SourceFile .



state 2

    (1) SourceFile -> PackageClause . SEMICOLON ImportDeclMult TopLevelDeclMult

    SEMICOLON       shift and go to state 4


state 3

    (2) PackageClause -> PACKAGE . PackageName
    (3) PackageName -> . IDENT

    IDENT           shift and go to state 6

    PackageName                    shift and go to state 5

state 4

    (1) SourceFile -> PackageClause SEMICOLON . ImportDeclMult TopLevelDeclMult
    (4) ImportDeclMult -> . ImportDecl SEMICOLON ImportDeclMult
    (5) ImportDeclMult -> .
    (6) ImportDecl -> . IMPORT ImportSpec
    (7) ImportDecl -> . IMPORT LPAREN ImportSpecMult RPAREN

    FUNC            reduce using rule 5 (ImportDeclMult -> .)
    CONST           reduce using rule 5 (ImportDeclMult -> .)
    VAR             reduce using rule 5 (ImportDeclMult -> .)
    TYPE            reduce using rule 5 (ImportDeclMult -> .)
    $end            reduce using rule 5 (ImportDeclMult -> .)
    IMPORT          shift and go to state 9

    ImportDeclMult                 shift and go to state 7
    ImportDecl                     shift and go to state 8

state 5

    (2) PackageClause -> PACKAGE PackageName .

    SEMICOLON       reduce using rule 2 (PackageClause -> PACKAGE PackageName .)


state 6

    (3) PackageName -> IDENT .

    SEMICOLON       reduce using rule 3 (PackageName -> IDENT .)


state 7

    (1) SourceFile -> PackageClause SEMICOLON ImportDeclMult . TopLevelDeclMult
    (14) TopLevelDeclMult -> . TopLevelDecl SEMICOLON TopLevelDeclMult
    (15) TopLevelDeclMult -> .
    (16) TopLevelDecl -> . Decl
    (17) TopLevelDecl -> . FuncDecl
    (18) Decl -> . ConstDecl
    (19) Decl -> . VarDecl
    (20) Decl -> . TypeDecl
    (160) FuncDecl -> . FUNC FunctionName Signature FunctionBody
    (161) FuncDecl -> . FUNC FunctionName Signature
    (21) ConstDecl -> . CONST ConstSpec
    (22) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (152) VarDecl -> . VAR VarSpec
    (153) VarDecl -> . VAR LPAREN VarMult RPAREN
    (144) TypeDecl -> . TYPE TypeSpec
    (145) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN

    $end            reduce using rule 15 (TopLevelDeclMult -> .)
    FUNC            shift and go to state 17
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20

    TopLevelDeclMult               shift and go to state 10
    TopLevelDecl                   shift and go to state 11
    Decl                           shift and go to state 12
    FuncDecl                       shift and go to state 13
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16

state 8

    (4) ImportDeclMult -> ImportDecl . SEMICOLON ImportDeclMult

    SEMICOLON       shift and go to state 21


state 9

    (6) ImportDecl -> IMPORT . ImportSpec
    (7) ImportDecl -> IMPORT . LPAREN ImportSpecMult RPAREN
    (10) ImportSpec -> . PERIOD ImportPath
    (11) ImportSpec -> . IDENT ImportPath
    (12) ImportSpec -> . ImportPath
    (13) ImportPath -> . STRING

    LPAREN          shift and go to state 23
    PERIOD          shift and go to state 24
    IDENT           shift and go to state 26
    STRING          shift and go to state 27

    ImportSpec                     shift and go to state 22
    ImportPath                     shift and go to state 25

state 10

    (1) SourceFile -> PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult .

    $end            reduce using rule 1 (SourceFile -> PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult .)


state 11

    (14) TopLevelDeclMult -> TopLevelDecl . SEMICOLON TopLevelDeclMult

    SEMICOLON       shift and go to state 28


state 12

    (16) TopLevelDecl -> Decl .

    SEMICOLON       reduce using rule 16 (TopLevelDecl -> Decl .)


state 13

    (17) TopLevelDecl -> FuncDecl .

    SEMICOLON       reduce using rule 17 (TopLevelDecl -> FuncDecl .)


state 14

    (18) Decl -> ConstDecl .

    SEMICOLON       reduce using rule 18 (Decl -> ConstDecl .)


state 15

    (19) Decl -> VarDecl .

    SEMICOLON       reduce using rule 19 (Decl -> VarDecl .)


state 16

    (20) Decl -> TypeDecl .

    SEMICOLON       reduce using rule 20 (Decl -> TypeDecl .)


state 17

    (160) FuncDecl -> FUNC . FunctionName Signature FunctionBody
    (161) FuncDecl -> FUNC . FunctionName Signature
    (162) FunctionName -> . IDENT

    IDENT           shift and go to state 30

    FunctionName                   shift and go to state 29

state 18

    (21) ConstDecl -> CONST . ConstSpec
    (22) ConstDecl -> CONST . LPAREN ConstSpecMult RPAREN
    (25) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (26) IdentifierList -> . IDENT IdentifierOth

    LPAREN          shift and go to state 32
    IDENT           shift and go to state 34

    ConstSpec                      shift and go to state 31
    IdentifierList                 shift and go to state 33

state 19

    (152) VarDecl -> VAR . VarSpec
    (153) VarDecl -> VAR . LPAREN VarMult RPAREN
    (156) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (157) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (158) VarSpec -> . IdentifierList Type
    (26) IdentifierList -> . IDENT IdentifierOth

    LPAREN          shift and go to state 36
    IDENT           shift and go to state 34

    VarSpec                        shift and go to state 35
    IdentifierList                 shift and go to state 37

state 20

    (144) TypeDecl -> TYPE . TypeSpec
    (145) TypeDecl -> TYPE . LPAREN TypeSpecMult RPAREN
    (148) TypeSpec -> . AliasDecl
    (149) TypeSpec -> . Typedef
    (150) AliasDecl -> . IDENT ASSIGN Type
    (151) Typedef -> . IDENT Type

    LPAREN          shift and go to state 39
    IDENT           shift and go to state 42

    TypeSpec                       shift and go to state 38
    AliasDecl                      shift and go to state 40
    Typedef                        shift and go to state 41

state 21

    (4) ImportDeclMult -> ImportDecl SEMICOLON . ImportDeclMult
    (4) ImportDeclMult -> . ImportDecl SEMICOLON ImportDeclMult
    (5) ImportDeclMult -> .
    (6) ImportDecl -> . IMPORT ImportSpec
    (7) ImportDecl -> . IMPORT LPAREN ImportSpecMult RPAREN

    FUNC            reduce using rule 5 (ImportDeclMult -> .)
    CONST           reduce using rule 5 (ImportDeclMult -> .)
    VAR             reduce using rule 5 (ImportDeclMult -> .)
    TYPE            reduce using rule 5 (ImportDeclMult -> .)
    $end            reduce using rule 5 (ImportDeclMult -> .)
    IMPORT          shift and go to state 9

    ImportDecl                     shift and go to state 8
    ImportDeclMult                 shift and go to state 43

state 22

    (6) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 6 (ImportDecl -> IMPORT ImportSpec .)


state 23

    (7) ImportDecl -> IMPORT LPAREN . ImportSpecMult RPAREN
    (8) ImportSpecMult -> . ImportSpec SEMICOLON ImportSpecMult
    (9) ImportSpecMult -> .
    (10) ImportSpec -> . PERIOD ImportPath
    (11) ImportSpec -> . IDENT ImportPath
    (12) ImportSpec -> . ImportPath
    (13) ImportPath -> . STRING

    RPAREN          reduce using rule 9 (ImportSpecMult -> .)
    PERIOD          shift and go to state 24
    IDENT           shift and go to state 26
    STRING          shift and go to state 27

    ImportSpecMult                 shift and go to state 44
    ImportSpec                     shift and go to state 45
    ImportPath                     shift and go to state 25

state 24

    (10) ImportSpec -> PERIOD . ImportPath
    (13) ImportPath -> . STRING

    STRING          shift and go to state 27

    ImportPath                     shift and go to state 46

state 25

    (12) ImportSpec -> ImportPath .

    SEMICOLON       reduce using rule 12 (ImportSpec -> ImportPath .)


state 26

    (11) ImportSpec -> IDENT . ImportPath
    (13) ImportPath -> . STRING

    STRING          shift and go to state 27

    ImportPath                     shift and go to state 47

state 27

    (13) ImportPath -> STRING .

    SEMICOLON       reduce using rule 13 (ImportPath -> STRING .)


state 28

    (14) TopLevelDeclMult -> TopLevelDecl SEMICOLON . TopLevelDeclMult
    (14) TopLevelDeclMult -> . TopLevelDecl SEMICOLON TopLevelDeclMult
    (15) TopLevelDeclMult -> .
    (16) TopLevelDecl -> . Decl
    (17) TopLevelDecl -> . FuncDecl
    (18) Decl -> . ConstDecl
    (19) Decl -> . VarDecl
    (20) Decl -> . TypeDecl
    (160) FuncDecl -> . FUNC FunctionName Signature FunctionBody
    (161) FuncDecl -> . FUNC FunctionName Signature
    (21) ConstDecl -> . CONST ConstSpec
    (22) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (152) VarDecl -> . VAR VarSpec
    (153) VarDecl -> . VAR LPAREN VarMult RPAREN
    (144) TypeDecl -> . TYPE TypeSpec
    (145) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN

    $end            reduce using rule 15 (TopLevelDeclMult -> .)
    FUNC            shift and go to state 17
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20

    TopLevelDecl                   shift and go to state 11
    TopLevelDeclMult               shift and go to state 48
    Decl                           shift and go to state 12
    FuncDecl                       shift and go to state 13
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16

state 29

    (160) FuncDecl -> FUNC FunctionName . Signature FunctionBody
    (161) FuncDecl -> FUNC FunctionName . Signature
    (164) Signature -> . Parameters Result
    (165) Signature -> . Parameters
    (166) Parameters -> . LPAREN RPAREN
    (167) Parameters -> . LPAREN ParameterList RPAREN
    (168) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 51

    Signature                      shift and go to state 49
    Parameters                     shift and go to state 50

state 30

    (162) FunctionName -> IDENT .

    LPAREN          reduce using rule 162 (FunctionName -> IDENT .)


state 31

    (21) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 21 (ConstDecl -> CONST ConstSpec .)


state 32

    (22) ConstDecl -> CONST LPAREN . ConstSpecMult RPAREN
    (23) ConstSpecMult -> . ConstSpec SEMICOLON ConstSpecMult
    (24) ConstSpecMult -> .
    (25) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (26) IdentifierList -> . IDENT IdentifierOth

    RPAREN          reduce using rule 24 (ConstSpecMult -> .)
    IDENT           shift and go to state 34

    ConstSpecMult                  shift and go to state 52
    ConstSpec                      shift and go to state 53
    IdentifierList                 shift and go to state 33

state 33

    (25) ConstSpec -> IdentifierList . Type ASSIGN ExpressionList
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    Type                           shift and go to state 54
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 34

    (26) IdentifierList -> IDENT . IdentifierOth
    (27) IdentifierOth -> . COMMA IDENT IdentifierOth
    (28) IdentifierOth -> .

    COMMA           shift and go to state 71
    LPAREN          reduce using rule 28 (IdentifierOth -> .)
    IDENT           reduce using rule 28 (IdentifierOth -> .)
    LBRACK          reduce using rule 28 (IdentifierOth -> .)
    STRUCT          reduce using rule 28 (IdentifierOth -> .)
    MUL             reduce using rule 28 (IdentifierOth -> .)
    MAP             reduce using rule 28 (IdentifierOth -> .)
    FUNC            reduce using rule 28 (IdentifierOth -> .)
    ASSIGN          reduce using rule 28 (IdentifierOth -> .)

    IdentifierOth                  shift and go to state 70

state 35

    (152) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 152 (VarDecl -> VAR VarSpec .)


state 36

    (153) VarDecl -> VAR LPAREN . VarMult RPAREN
    (154) VarMult -> . VarSpec SEMICOLON VarMult
    (155) VarMult -> .
    (156) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (157) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (158) VarSpec -> . IdentifierList Type
    (26) IdentifierList -> . IDENT IdentifierOth

    RPAREN          reduce using rule 155 (VarMult -> .)
    IDENT           shift and go to state 34

    VarMult                        shift and go to state 72
    VarSpec                        shift and go to state 73
    IdentifierList                 shift and go to state 37

state 37

    (156) VarSpec -> IdentifierList . Type ASSIGN ExpressionList
    (157) VarSpec -> IdentifierList . ASSIGN ExpressionList
    (158) VarSpec -> IdentifierList . Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    ASSIGN          shift and go to state 75
    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    Type                           shift and go to state 74
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 38

    (144) TypeDecl -> TYPE TypeSpec .

    SEMICOLON       reduce using rule 144 (TypeDecl -> TYPE TypeSpec .)


state 39

    (145) TypeDecl -> TYPE LPAREN . TypeSpecMult RPAREN
    (146) TypeSpecMult -> . TypeSpec SEMICOLON TypeSpecMult
    (147) TypeSpecMult -> .
    (148) TypeSpec -> . AliasDecl
    (149) TypeSpec -> . Typedef
    (150) AliasDecl -> . IDENT ASSIGN Type
    (151) Typedef -> . IDENT Type

    RPAREN          reduce using rule 147 (TypeSpecMult -> .)
    IDENT           shift and go to state 42

    TypeSpecMult                   shift and go to state 76
    TypeSpec                       shift and go to state 77
    AliasDecl                      shift and go to state 40
    Typedef                        shift and go to state 41

state 40

    (148) TypeSpec -> AliasDecl .

    SEMICOLON       reduce using rule 148 (TypeSpec -> AliasDecl .)


state 41

    (149) TypeSpec -> Typedef .

    SEMICOLON       reduce using rule 149 (TypeSpec -> Typedef .)


state 42

    (150) AliasDecl -> IDENT . ASSIGN Type
    (151) Typedef -> IDENT . Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    ASSIGN          shift and go to state 78
    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    Type                           shift and go to state 79
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 43

    (4) ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult .

    FUNC            reduce using rule 4 (ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult .)
    CONST           reduce using rule 4 (ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult .)
    VAR             reduce using rule 4 (ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult .)
    TYPE            reduce using rule 4 (ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult .)
    $end            reduce using rule 4 (ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult .)


state 44

    (7) ImportDecl -> IMPORT LPAREN ImportSpecMult . RPAREN

    RPAREN          shift and go to state 80


state 45

    (8) ImportSpecMult -> ImportSpec . SEMICOLON ImportSpecMult

    SEMICOLON       shift and go to state 81


state 46

    (10) ImportSpec -> PERIOD ImportPath .

    SEMICOLON       reduce using rule 10 (ImportSpec -> PERIOD ImportPath .)


state 47

    (11) ImportSpec -> IDENT ImportPath .

    SEMICOLON       reduce using rule 11 (ImportSpec -> IDENT ImportPath .)


state 48

    (14) TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult .

    $end            reduce using rule 14 (TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult .)


state 49

    (160) FuncDecl -> FUNC FunctionName Signature . FunctionBody
    (161) FuncDecl -> FUNC FunctionName Signature .
    (163) FunctionBody -> . Block
    (223) Block -> . LBRACE StatementList RBRACE

    SEMICOLON       reduce using rule 161 (FuncDecl -> FUNC FunctionName Signature .)
    LBRACE          shift and go to state 84

    FunctionBody                   shift and go to state 82
    Block                          shift and go to state 83

state 50

    (164) Signature -> Parameters . Result
    (165) Signature -> Parameters .
    (173) Result -> . Parameters
    (174) Result -> . Type
    (166) Parameters -> . LPAREN RPAREN
    (167) Parameters -> . LPAREN ParameterList RPAREN
    (168) Parameters -> . LPAREN ParameterList COMMA RPAREN
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
    LBRACE          reduce using rule 165 (Signature -> Parameters .)
    SEMICOLON       reduce using rule 165 (Signature -> Parameters .)
    ASSIGN          reduce using rule 165 (Signature -> Parameters .)
    RPAREN          reduce using rule 165 (Signature -> Parameters .)
    COMMA           reduce using rule 165 (Signature -> Parameters .)
    RBRACK          reduce using rule 165 (Signature -> Parameters .)
    STRING          reduce using rule 165 (Signature -> Parameters .)
    COLON           reduce using rule 165 (Signature -> Parameters .)
    LPAREN          shift and go to state 88
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

  ! LPAREN          [ reduce using rule 165 (Signature -> Parameters .) ]
  ! IDENT           [ reduce using rule 165 (Signature -> Parameters .) ]
  ! LBRACK          [ reduce using rule 165 (Signature -> Parameters .) ]
  ! STRUCT          [ reduce using rule 165 (Signature -> Parameters .) ]
  ! MUL             [ reduce using rule 165 (Signature -> Parameters .) ]
  ! MAP             [ reduce using rule 165 (Signature -> Parameters .) ]
  ! FUNC            [ reduce using rule 165 (Signature -> Parameters .) ]

    Parameters                     shift and go to state 85
    Result                         shift and go to state 86
    Type                           shift and go to state 87
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 51

    (166) Parameters -> LPAREN . RPAREN
    (167) Parameters -> LPAREN . ParameterList RPAREN
    (168) Parameters -> LPAREN . ParameterList COMMA RPAREN
    (169) ParameterList -> . COMMA ParameterDecl ParameterList
    (170) ParameterList -> . ParameterDecl
    (171) ParameterDecl -> . Type
    (172) ParameterDecl -> . IdentifierList Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (26) IdentifierList -> . IDENT IdentifierOth
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    RPAREN          shift and go to state 89
    COMMA           shift and go to state 91
    LPAREN          shift and go to state 57
    IDENT           shift and go to state 95
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    ParameterList                  shift and go to state 90
    ParameterDecl                  shift and go to state 92
    Type                           shift and go to state 93
    IdentifierList                 shift and go to state 94
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 52

    (22) ConstDecl -> CONST LPAREN ConstSpecMult . RPAREN

    RPAREN          shift and go to state 96


state 53

    (23) ConstSpecMult -> ConstSpec . SEMICOLON ConstSpecMult

    SEMICOLON       shift and go to state 97


state 54

    (25) ConstSpec -> IdentifierList Type . ASSIGN ExpressionList

    ASSIGN          shift and go to state 98


state 55

    (266) Type -> TypeName .

    ASSIGN          reduce using rule 266 (Type -> TypeName .)
    SEMICOLON       reduce using rule 266 (Type -> TypeName .)
    LBRACE          reduce using rule 266 (Type -> TypeName .)
    RPAREN          reduce using rule 266 (Type -> TypeName .)
    COMMA           reduce using rule 266 (Type -> TypeName .)
    LPAREN          reduce using rule 266 (Type -> TypeName .)
    IDENT           reduce using rule 266 (Type -> TypeName .)
    LBRACK          reduce using rule 266 (Type -> TypeName .)
    STRUCT          reduce using rule 266 (Type -> TypeName .)
    MUL             reduce using rule 266 (Type -> TypeName .)
    MAP             reduce using rule 266 (Type -> TypeName .)
    FUNC            reduce using rule 266 (Type -> TypeName .)
    RBRACK          reduce using rule 266 (Type -> TypeName .)
    STRING          reduce using rule 266 (Type -> TypeName .)
    COLON           reduce using rule 266 (Type -> TypeName .)


state 56

    (267) Type -> TypeLit .

    ASSIGN          reduce using rule 267 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 267 (Type -> TypeLit .)
    LBRACE          reduce using rule 267 (Type -> TypeLit .)
    RPAREN          reduce using rule 267 (Type -> TypeLit .)
    COMMA           reduce using rule 267 (Type -> TypeLit .)
    LPAREN          reduce using rule 267 (Type -> TypeLit .)
    IDENT           reduce using rule 267 (Type -> TypeLit .)
    LBRACK          reduce using rule 267 (Type -> TypeLit .)
    STRUCT          reduce using rule 267 (Type -> TypeLit .)
    MUL             reduce using rule 267 (Type -> TypeLit .)
    MAP             reduce using rule 267 (Type -> TypeLit .)
    FUNC            reduce using rule 267 (Type -> TypeLit .)
    RBRACK          reduce using rule 267 (Type -> TypeLit .)
    STRING          reduce using rule 267 (Type -> TypeLit .)
    COLON           reduce using rule 267 (Type -> TypeLit .)


state 57

    (268) Type -> LPAREN . Type RPAREN
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    Type                           shift and go to state 99
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 58

    (269) TypeName -> IDENT .
    (270) TypeName -> IDENT . QualifiedIdentPart
    (29) QualifiedIdentPart -> . PERIOD IDENT

    ASSIGN          reduce using rule 269 (TypeName -> IDENT .)
    SEMICOLON       reduce using rule 269 (TypeName -> IDENT .)
    LBRACE          reduce using rule 269 (TypeName -> IDENT .)
    RPAREN          reduce using rule 269 (TypeName -> IDENT .)
    COMMA           reduce using rule 269 (TypeName -> IDENT .)
    LPAREN          reduce using rule 269 (TypeName -> IDENT .)
    IDENT           reduce using rule 269 (TypeName -> IDENT .)
    LBRACK          reduce using rule 269 (TypeName -> IDENT .)
    STRUCT          reduce using rule 269 (TypeName -> IDENT .)
    MUL             reduce using rule 269 (TypeName -> IDENT .)
    MAP             reduce using rule 269 (TypeName -> IDENT .)
    FUNC            reduce using rule 269 (TypeName -> IDENT .)
    RBRACK          reduce using rule 269 (TypeName -> IDENT .)
    STRING          reduce using rule 269 (TypeName -> IDENT .)
    COLON           reduce using rule 269 (TypeName -> IDENT .)
    PERIOD          shift and go to state 101

    QualifiedIdentPart             shift and go to state 100

state 59

    (30) TypeLit -> ArrayType .

    ASSIGN          reduce using rule 30 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 30 (TypeLit -> ArrayType .)
    LBRACE          reduce using rule 30 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 30 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 30 (TypeLit -> ArrayType .)
    LPAREN          reduce using rule 30 (TypeLit -> ArrayType .)
    IDENT           reduce using rule 30 (TypeLit -> ArrayType .)
    LBRACK          reduce using rule 30 (TypeLit -> ArrayType .)
    STRUCT          reduce using rule 30 (TypeLit -> ArrayType .)
    MUL             reduce using rule 30 (TypeLit -> ArrayType .)
    MAP             reduce using rule 30 (TypeLit -> ArrayType .)
    FUNC            reduce using rule 30 (TypeLit -> ArrayType .)
    RBRACK          reduce using rule 30 (TypeLit -> ArrayType .)
    STRING          reduce using rule 30 (TypeLit -> ArrayType .)
    COLON           reduce using rule 30 (TypeLit -> ArrayType .)


state 60

    (31) TypeLit -> StructType .

    ASSIGN          reduce using rule 31 (TypeLit -> StructType .)
    SEMICOLON       reduce using rule 31 (TypeLit -> StructType .)
    LBRACE          reduce using rule 31 (TypeLit -> StructType .)
    RPAREN          reduce using rule 31 (TypeLit -> StructType .)
    COMMA           reduce using rule 31 (TypeLit -> StructType .)
    LPAREN          reduce using rule 31 (TypeLit -> StructType .)
    IDENT           reduce using rule 31 (TypeLit -> StructType .)
    LBRACK          reduce using rule 31 (TypeLit -> StructType .)
    STRUCT          reduce using rule 31 (TypeLit -> StructType .)
    MUL             reduce using rule 31 (TypeLit -> StructType .)
    MAP             reduce using rule 31 (TypeLit -> StructType .)
    FUNC            reduce using rule 31 (TypeLit -> StructType .)
    RBRACK          reduce using rule 31 (TypeLit -> StructType .)
    STRING          reduce using rule 31 (TypeLit -> StructType .)
    COLON           reduce using rule 31 (TypeLit -> StructType .)


state 61

    (32) TypeLit -> PointerType .

    ASSIGN          reduce using rule 32 (TypeLit -> PointerType .)
    SEMICOLON       reduce using rule 32 (TypeLit -> PointerType .)
    LBRACE          reduce using rule 32 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 32 (TypeLit -> PointerType .)
    COMMA           reduce using rule 32 (TypeLit -> PointerType .)
    LPAREN          reduce using rule 32 (TypeLit -> PointerType .)
    IDENT           reduce using rule 32 (TypeLit -> PointerType .)
    LBRACK          reduce using rule 32 (TypeLit -> PointerType .)
    STRUCT          reduce using rule 32 (TypeLit -> PointerType .)
    MUL             reduce using rule 32 (TypeLit -> PointerType .)
    MAP             reduce using rule 32 (TypeLit -> PointerType .)
    FUNC            reduce using rule 32 (TypeLit -> PointerType .)
    RBRACK          reduce using rule 32 (TypeLit -> PointerType .)
    STRING          reduce using rule 32 (TypeLit -> PointerType .)
    COLON           reduce using rule 32 (TypeLit -> PointerType .)


state 62

    (33) TypeLit -> SliceType .

    ASSIGN          reduce using rule 33 (TypeLit -> SliceType .)
    SEMICOLON       reduce using rule 33 (TypeLit -> SliceType .)
    LBRACE          reduce using rule 33 (TypeLit -> SliceType .)
    RPAREN          reduce using rule 33 (TypeLit -> SliceType .)
    COMMA           reduce using rule 33 (TypeLit -> SliceType .)
    LPAREN          reduce using rule 33 (TypeLit -> SliceType .)
    IDENT           reduce using rule 33 (TypeLit -> SliceType .)
    LBRACK          reduce using rule 33 (TypeLit -> SliceType .)
    STRUCT          reduce using rule 33 (TypeLit -> SliceType .)
    MUL             reduce using rule 33 (TypeLit -> SliceType .)
    MAP             reduce using rule 33 (TypeLit -> SliceType .)
    FUNC            reduce using rule 33 (TypeLit -> SliceType .)
    RBRACK          reduce using rule 33 (TypeLit -> SliceType .)
    STRING          reduce using rule 33 (TypeLit -> SliceType .)
    COLON           reduce using rule 33 (TypeLit -> SliceType .)


state 63

    (34) TypeLit -> MapType .

    ASSIGN          reduce using rule 34 (TypeLit -> MapType .)
    SEMICOLON       reduce using rule 34 (TypeLit -> MapType .)
    LBRACE          reduce using rule 34 (TypeLit -> MapType .)
    RPAREN          reduce using rule 34 (TypeLit -> MapType .)
    COMMA           reduce using rule 34 (TypeLit -> MapType .)
    LPAREN          reduce using rule 34 (TypeLit -> MapType .)
    IDENT           reduce using rule 34 (TypeLit -> MapType .)
    LBRACK          reduce using rule 34 (TypeLit -> MapType .)
    STRUCT          reduce using rule 34 (TypeLit -> MapType .)
    MUL             reduce using rule 34 (TypeLit -> MapType .)
    MAP             reduce using rule 34 (TypeLit -> MapType .)
    FUNC            reduce using rule 34 (TypeLit -> MapType .)
    RBRACK          reduce using rule 34 (TypeLit -> MapType .)
    STRING          reduce using rule 34 (TypeLit -> MapType .)
    COLON           reduce using rule 34 (TypeLit -> MapType .)


state 64

    (35) TypeLit -> FunctionType .

    ASSIGN          reduce using rule 35 (TypeLit -> FunctionType .)
    SEMICOLON       reduce using rule 35 (TypeLit -> FunctionType .)
    LBRACE          reduce using rule 35 (TypeLit -> FunctionType .)
    RPAREN          reduce using rule 35 (TypeLit -> FunctionType .)
    COMMA           reduce using rule 35 (TypeLit -> FunctionType .)
    LPAREN          reduce using rule 35 (TypeLit -> FunctionType .)
    IDENT           reduce using rule 35 (TypeLit -> FunctionType .)
    LBRACK          reduce using rule 35 (TypeLit -> FunctionType .)
    STRUCT          reduce using rule 35 (TypeLit -> FunctionType .)
    MUL             reduce using rule 35 (TypeLit -> FunctionType .)
    MAP             reduce using rule 35 (TypeLit -> FunctionType .)
    FUNC            reduce using rule 35 (TypeLit -> FunctionType .)
    RBRACK          reduce using rule 35 (TypeLit -> FunctionType .)
    STRING          reduce using rule 35 (TypeLit -> FunctionType .)
    COLON           reduce using rule 35 (TypeLit -> FunctionType .)


state 65

    (36) ArrayType -> LBRACK . ArrayLength RBRACK ElementType
    (51) SliceType -> LBRACK . RBRACK ElementType
    (37) ArrayLength -> . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    RBRACK          shift and go to state 103
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    ArrayLength                    shift and go to state 102
    Expr                           shift and go to state 104
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 66

    (39) StructType -> STRUCT . LBRACE FieldDeclMult RBRACE

    LBRACE          shift and go to state 135


state 67

    (49) PointerType -> MUL . BaseType
    (50) BaseType -> . Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    BaseType                       shift and go to state 136
    Type                           shift and go to state 137
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 68

    (52) MapType -> MAP . LBRACK KeyType RBRACK ElementType

    LBRACK          shift and go to state 138


state 69

    (54) FunctionType -> FUNC . Signature
    (164) Signature -> . Parameters Result
    (165) Signature -> . Parameters
    (166) Parameters -> . LPAREN RPAREN
    (167) Parameters -> . LPAREN ParameterList RPAREN
    (168) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 51

    Signature                      shift and go to state 139
    Parameters                     shift and go to state 50

state 70

    (26) IdentifierList -> IDENT IdentifierOth .

    LPAREN          reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    IDENT           reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    LBRACK          reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    STRUCT          reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    MUL             reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    MAP             reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    FUNC            reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    ASSIGN          reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)
    DEFINE          reduce using rule 26 (IdentifierList -> IDENT IdentifierOth .)


state 71

    (27) IdentifierOth -> COMMA . IDENT IdentifierOth

    IDENT           shift and go to state 140


state 72

    (153) VarDecl -> VAR LPAREN VarMult . RPAREN

    RPAREN          shift and go to state 141


state 73

    (154) VarMult -> VarSpec . SEMICOLON VarMult

    SEMICOLON       shift and go to state 142


state 74

    (156) VarSpec -> IdentifierList Type . ASSIGN ExpressionList
    (158) VarSpec -> IdentifierList Type .

    ASSIGN          shift and go to state 143
    SEMICOLON       reduce using rule 158 (VarSpec -> IdentifierList Type .)


state 75

    (157) VarSpec -> IdentifierList ASSIGN . ExpressionList
    (55) ExpressionList -> . Expr ExprOth
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    ExpressionList                 shift and go to state 144
    Expr                           shift and go to state 145
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 76

    (145) TypeDecl -> TYPE LPAREN TypeSpecMult . RPAREN

    RPAREN          shift and go to state 146


state 77

    (146) TypeSpecMult -> TypeSpec . SEMICOLON TypeSpecMult

    SEMICOLON       shift and go to state 147


state 78

    (150) AliasDecl -> IDENT ASSIGN . Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    Type                           shift and go to state 148
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 79

    (151) Typedef -> IDENT Type .

    SEMICOLON       reduce using rule 151 (Typedef -> IDENT Type .)


state 80

    (7) ImportDecl -> IMPORT LPAREN ImportSpecMult RPAREN .

    SEMICOLON       reduce using rule 7 (ImportDecl -> IMPORT LPAREN ImportSpecMult RPAREN .)


state 81

    (8) ImportSpecMult -> ImportSpec SEMICOLON . ImportSpecMult
    (8) ImportSpecMult -> . ImportSpec SEMICOLON ImportSpecMult
    (9) ImportSpecMult -> .
    (10) ImportSpec -> . PERIOD ImportPath
    (11) ImportSpec -> . IDENT ImportPath
    (12) ImportSpec -> . ImportPath
    (13) ImportPath -> . STRING

    RPAREN          reduce using rule 9 (ImportSpecMult -> .)
    PERIOD          shift and go to state 24
    IDENT           shift and go to state 26
    STRING          shift and go to state 27

    ImportSpec                     shift and go to state 45
    ImportSpecMult                 shift and go to state 149
    ImportPath                     shift and go to state 25

state 82

    (160) FuncDecl -> FUNC FunctionName Signature FunctionBody .

    SEMICOLON       reduce using rule 160 (FuncDecl -> FUNC FunctionName Signature FunctionBody .)


state 83

    (163) FunctionBody -> Block .

    SEMICOLON       reduce using rule 163 (FunctionBody -> Block .)
    PERIOD          reduce using rule 163 (FunctionBody -> Block .)
    LBRACK          reduce using rule 163 (FunctionBody -> Block .)
    LPAREN          reduce using rule 163 (FunctionBody -> Block .)
    LOR             reduce using rule 163 (FunctionBody -> Block .)
    LAND            reduce using rule 163 (FunctionBody -> Block .)
    EQL             reduce using rule 163 (FunctionBody -> Block .)
    NEQ             reduce using rule 163 (FunctionBody -> Block .)
    LSS             reduce using rule 163 (FunctionBody -> Block .)
    LEQ             reduce using rule 163 (FunctionBody -> Block .)
    GTR             reduce using rule 163 (FunctionBody -> Block .)
    GEQ             reduce using rule 163 (FunctionBody -> Block .)
    ADD             reduce using rule 163 (FunctionBody -> Block .)
    SUB             reduce using rule 163 (FunctionBody -> Block .)
    OR              reduce using rule 163 (FunctionBody -> Block .)
    XOR             reduce using rule 163 (FunctionBody -> Block .)
    MUL             reduce using rule 163 (FunctionBody -> Block .)
    QUO             reduce using rule 163 (FunctionBody -> Block .)
    REM             reduce using rule 163 (FunctionBody -> Block .)
    SHL             reduce using rule 163 (FunctionBody -> Block .)
    SHR             reduce using rule 163 (FunctionBody -> Block .)
    AND             reduce using rule 163 (FunctionBody -> Block .)
    AND_NOT         reduce using rule 163 (FunctionBody -> Block .)
    RBRACK          reduce using rule 163 (FunctionBody -> Block .)
    COMMA           reduce using rule 163 (FunctionBody -> Block .)
    INC             reduce using rule 163 (FunctionBody -> Block .)
    DEC             reduce using rule 163 (FunctionBody -> Block .)
    ASSIGN          reduce using rule 163 (FunctionBody -> Block .)
    ADD_ASSIGN      reduce using rule 163 (FunctionBody -> Block .)
    SUB_ASSIGN      reduce using rule 163 (FunctionBody -> Block .)
    OR_ASSIGN       reduce using rule 163 (FunctionBody -> Block .)
    XOR_ASSIGN      reduce using rule 163 (FunctionBody -> Block .)
    MUL_ASSIGN      reduce using rule 163 (FunctionBody -> Block .)
    QUO_ASSIGN      reduce using rule 163 (FunctionBody -> Block .)
    REM_ASSIGN      reduce using rule 163 (FunctionBody -> Block .)
    AND_ASSIGN      reduce using rule 163 (FunctionBody -> Block .)
    SHL_ASSIGN      reduce using rule 163 (FunctionBody -> Block .)
    SHR_ASSIGN      reduce using rule 163 (FunctionBody -> Block .)
    AND_NOT_ASSIGN  reduce using rule 163 (FunctionBody -> Block .)
    RPAREN          reduce using rule 163 (FunctionBody -> Block .)
    LBRACE          reduce using rule 163 (FunctionBody -> Block .)
    COLON           reduce using rule 163 (FunctionBody -> Block .)
    RBRACE          reduce using rule 163 (FunctionBody -> Block .)
    ELSE            reduce using rule 163 (FunctionBody -> Block .)


state 84

    (223) Block -> LBRACE . StatementList RBRACE
    (175) StatementList -> . Statement SEMICOLON StatementList
    (176) StatementList -> .
    (177) Statement -> . Decl
    (178) Statement -> . LabeledStmt
    (179) Statement -> . SimpleStmt
    (180) Statement -> . GotoStmt
    (181) Statement -> . ReturnStmt
    (182) Statement -> . BreakStmt
    (183) Statement -> . ContinueStmt
    (184) Statement -> . FallthroughStmt
    (185) Statement -> . Block
    (186) Statement -> . IfStmt
    (187) Statement -> . SwitchStmt
    (188) Statement -> . ForStmt
    (18) Decl -> . ConstDecl
    (19) Decl -> . VarDecl
    (20) Decl -> . TypeDecl
    (189) LabeledStmt -> . Label COLON Statement
    (191) SimpleStmt -> . EmptyStmt
    (192) SimpleStmt -> . ExpressionStmt
    (193) SimpleStmt -> . IncDecStmt
    (194) SimpleStmt -> . Assignment
    (195) SimpleStmt -> . ShortVarDecl
    (221) GotoStmt -> . GOTO Label
    (215) ReturnStmt -> . RETURN ExpressionList
    (216) ReturnStmt -> . RETURN
    (217) BreakStmt -> . BREAK Label
    (218) BreakStmt -> . BREAK
    (219) ContinueStmt -> . CONTINUE Label
    (220) ContinueStmt -> . CONTINUE
    (222) FallthroughStmt -> . FALLTHROUGH
    (223) Block -> . LBRACE StatementList RBRACE
    (224) IfStmt -> . IF Expr Block else_stmt
    (225) IfStmt -> . IF SimpleStmt SEMICOLON Expr else_stmt
    (231) SwitchStmt -> . ExprSwitchStmt
    (232) SwitchStmt -> . TypeSwitchStmt
    (253) ForStmt -> . FOR Condition Block
    (254) ForStmt -> . FOR ForClause Block
    (255) ForStmt -> . FOR RangeClause Block
    (21) ConstDecl -> . CONST ConstSpec
    (22) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (152) VarDecl -> . VAR VarSpec
    (153) VarDecl -> . VAR LPAREN VarMult RPAREN
    (144) TypeDecl -> . TYPE TypeSpec
    (145) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (190) Label -> . IDENT
    (196) EmptyStmt -> .
    (197) ExpressionStmt -> . Expr
    (198) IncDecStmt -> . Expr INC
    (199) IncDecStmt -> . Expr DEC
    (200) Assignment -> . ExpressionList assign_op ExpressionList
    (159) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (233) ExprSwitchStmt -> . SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE
    (241) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (55) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    RBRACE          reduce using rule 176 (StatementList -> .)
    GOTO            shift and go to state 170
    RETURN          shift and go to state 171
    BREAK           shift and go to state 173
    CONTINUE        shift and go to state 174
    FALLTHROUGH     shift and go to state 175
    LBRACE          shift and go to state 84
    IF              shift and go to state 176
    FOR             shift and go to state 180
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 181
    SEMICOLON       reduce using rule 196 (EmptyStmt -> .)
    SWITCH          shift and go to state 183
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    StatementList                  shift and go to state 150
    Statement                      shift and go to state 151
    Decl                           shift and go to state 152
    LabeledStmt                    shift and go to state 153
    SimpleStmt                     shift and go to state 154
    GotoStmt                       shift and go to state 155
    ReturnStmt                     shift and go to state 156
    BreakStmt                      shift and go to state 157
    ContinueStmt                   shift and go to state 158
    FallthroughStmt                shift and go to state 159
    Block                          shift and go to state 160
    IfStmt                         shift and go to state 161
    SwitchStmt                     shift and go to state 162
    ForStmt                        shift and go to state 163
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    Label                          shift and go to state 164
    EmptyStmt                      shift and go to state 165
    ExpressionStmt                 shift and go to state 166
    IncDecStmt                     shift and go to state 167
    Assignment                     shift and go to state 168
    ShortVarDecl                   shift and go to state 169
    ExpressionList                 shift and go to state 172
    Expr                           shift and go to state 177
    ExprSwitchStmt                 shift and go to state 178
    TypeSwitchStmt                 shift and go to state 179
    IdentifierList                 shift and go to state 182
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 85

    (173) Result -> Parameters .

    LBRACE          reduce using rule 173 (Result -> Parameters .)
    SEMICOLON       reduce using rule 173 (Result -> Parameters .)
    ASSIGN          reduce using rule 173 (Result -> Parameters .)
    RPAREN          reduce using rule 173 (Result -> Parameters .)
    COMMA           reduce using rule 173 (Result -> Parameters .)
    LPAREN          reduce using rule 173 (Result -> Parameters .)
    IDENT           reduce using rule 173 (Result -> Parameters .)
    LBRACK          reduce using rule 173 (Result -> Parameters .)
    STRUCT          reduce using rule 173 (Result -> Parameters .)
    MUL             reduce using rule 173 (Result -> Parameters .)
    MAP             reduce using rule 173 (Result -> Parameters .)
    FUNC            reduce using rule 173 (Result -> Parameters .)
    RBRACK          reduce using rule 173 (Result -> Parameters .)
    STRING          reduce using rule 173 (Result -> Parameters .)
    COLON           reduce using rule 173 (Result -> Parameters .)


state 86

    (164) Signature -> Parameters Result .

    LBRACE          reduce using rule 164 (Signature -> Parameters Result .)
    SEMICOLON       reduce using rule 164 (Signature -> Parameters Result .)
    ASSIGN          reduce using rule 164 (Signature -> Parameters Result .)
    RPAREN          reduce using rule 164 (Signature -> Parameters Result .)
    COMMA           reduce using rule 164 (Signature -> Parameters Result .)
    LPAREN          reduce using rule 164 (Signature -> Parameters Result .)
    IDENT           reduce using rule 164 (Signature -> Parameters Result .)
    LBRACK          reduce using rule 164 (Signature -> Parameters Result .)
    STRUCT          reduce using rule 164 (Signature -> Parameters Result .)
    MUL             reduce using rule 164 (Signature -> Parameters Result .)
    MAP             reduce using rule 164 (Signature -> Parameters Result .)
    FUNC            reduce using rule 164 (Signature -> Parameters Result .)
    RBRACK          reduce using rule 164 (Signature -> Parameters Result .)
    STRING          reduce using rule 164 (Signature -> Parameters Result .)
    COLON           reduce using rule 164 (Signature -> Parameters Result .)


state 87

    (174) Result -> Type .

    LBRACE          reduce using rule 174 (Result -> Type .)
    SEMICOLON       reduce using rule 174 (Result -> Type .)
    ASSIGN          reduce using rule 174 (Result -> Type .)
    RPAREN          reduce using rule 174 (Result -> Type .)
    COMMA           reduce using rule 174 (Result -> Type .)
    LPAREN          reduce using rule 174 (Result -> Type .)
    IDENT           reduce using rule 174 (Result -> Type .)
    LBRACK          reduce using rule 174 (Result -> Type .)
    STRUCT          reduce using rule 174 (Result -> Type .)
    MUL             reduce using rule 174 (Result -> Type .)
    MAP             reduce using rule 174 (Result -> Type .)
    FUNC            reduce using rule 174 (Result -> Type .)
    RBRACK          reduce using rule 174 (Result -> Type .)
    STRING          reduce using rule 174 (Result -> Type .)
    COLON           reduce using rule 174 (Result -> Type .)


state 88

    (166) Parameters -> LPAREN . RPAREN
    (167) Parameters -> LPAREN . ParameterList RPAREN
    (168) Parameters -> LPAREN . ParameterList COMMA RPAREN
    (268) Type -> LPAREN . Type RPAREN
    (169) ParameterList -> . COMMA ParameterDecl ParameterList
    (170) ParameterList -> . ParameterDecl
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (171) ParameterDecl -> . Type
    (172) ParameterDecl -> . IdentifierList Type
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (26) IdentifierList -> . IDENT IdentifierOth
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    RPAREN          shift and go to state 89
    COMMA           shift and go to state 91
    LPAREN          shift and go to state 57
    IDENT           shift and go to state 185
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    ParameterList                  shift and go to state 90
    Type                           shift and go to state 184
    ParameterDecl                  shift and go to state 92
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    IdentifierList                 shift and go to state 94
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 89

    (166) Parameters -> LPAREN RPAREN .

    LPAREN          reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    IDENT           reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    LBRACK          reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    STRUCT          reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    MUL             reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    MAP             reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    FUNC            reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    LBRACE          reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    SEMICOLON       reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    ASSIGN          reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    RPAREN          reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    COMMA           reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    RBRACK          reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    STRING          reduce using rule 166 (Parameters -> LPAREN RPAREN .)
    COLON           reduce using rule 166 (Parameters -> LPAREN RPAREN .)


state 90

    (167) Parameters -> LPAREN ParameterList . RPAREN
    (168) Parameters -> LPAREN ParameterList . COMMA RPAREN

    RPAREN          shift and go to state 186
    COMMA           shift and go to state 187


state 91

    (169) ParameterList -> COMMA . ParameterDecl ParameterList
    (171) ParameterDecl -> . Type
    (172) ParameterDecl -> . IdentifierList Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (26) IdentifierList -> . IDENT IdentifierOth
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 57
    IDENT           shift and go to state 95
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    ParameterDecl                  shift and go to state 188
    Type                           shift and go to state 93
    IdentifierList                 shift and go to state 94
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 92

    (170) ParameterList -> ParameterDecl .

    RPAREN          reduce using rule 170 (ParameterList -> ParameterDecl .)
    COMMA           reduce using rule 170 (ParameterList -> ParameterDecl .)


state 93

    (171) ParameterDecl -> Type .

    RPAREN          reduce using rule 171 (ParameterDecl -> Type .)
    COMMA           reduce using rule 171 (ParameterDecl -> Type .)
    LPAREN          reduce using rule 171 (ParameterDecl -> Type .)
    IDENT           reduce using rule 171 (ParameterDecl -> Type .)
    LBRACK          reduce using rule 171 (ParameterDecl -> Type .)
    STRUCT          reduce using rule 171 (ParameterDecl -> Type .)
    MUL             reduce using rule 171 (ParameterDecl -> Type .)
    MAP             reduce using rule 171 (ParameterDecl -> Type .)
    FUNC            reduce using rule 171 (ParameterDecl -> Type .)


state 94

    (172) ParameterDecl -> IdentifierList . Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    Type                           shift and go to state 189
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 95

    (26) IdentifierList -> IDENT . IdentifierOth
    (269) TypeName -> IDENT .
    (270) TypeName -> IDENT . QualifiedIdentPart
    (27) IdentifierOth -> . COMMA IDENT IdentifierOth
    (28) IdentifierOth -> .
    (29) QualifiedIdentPart -> . PERIOD IDENT

  ! reduce/reduce conflict for LPAREN resolved using rule 28 (IdentifierOth -> .)
  ! reduce/reduce conflict for IDENT resolved using rule 28 (IdentifierOth -> .)
  ! reduce/reduce conflict for LBRACK resolved using rule 28 (IdentifierOth -> .)
  ! reduce/reduce conflict for STRUCT resolved using rule 28 (IdentifierOth -> .)
  ! reduce/reduce conflict for MUL resolved using rule 28 (IdentifierOth -> .)
  ! reduce/reduce conflict for MAP resolved using rule 28 (IdentifierOth -> .)
  ! reduce/reduce conflict for FUNC resolved using rule 28 (IdentifierOth -> .)
    RPAREN          reduce using rule 269 (TypeName -> IDENT .)
    STRING          reduce using rule 269 (TypeName -> IDENT .)
    SEMICOLON       reduce using rule 269 (TypeName -> IDENT .)
    LBRACE          reduce using rule 269 (TypeName -> IDENT .)
    COMMA           shift and go to state 71
    LPAREN          reduce using rule 28 (IdentifierOth -> .)
    IDENT           reduce using rule 28 (IdentifierOth -> .)
    LBRACK          reduce using rule 28 (IdentifierOth -> .)
    STRUCT          reduce using rule 28 (IdentifierOth -> .)
    MUL             reduce using rule 28 (IdentifierOth -> .)
    MAP             reduce using rule 28 (IdentifierOth -> .)
    FUNC            reduce using rule 28 (IdentifierOth -> .)
    DEFINE          reduce using rule 28 (IdentifierOth -> .)
    PERIOD          shift and go to state 101

  ! COMMA           [ reduce using rule 269 (TypeName -> IDENT .) ]
  ! LPAREN          [ reduce using rule 269 (TypeName -> IDENT .) ]
  ! IDENT           [ reduce using rule 269 (TypeName -> IDENT .) ]
  ! LBRACK          [ reduce using rule 269 (TypeName -> IDENT .) ]
  ! STRUCT          [ reduce using rule 269 (TypeName -> IDENT .) ]
  ! MUL             [ reduce using rule 269 (TypeName -> IDENT .) ]
  ! MAP             [ reduce using rule 269 (TypeName -> IDENT .) ]
  ! FUNC            [ reduce using rule 269 (TypeName -> IDENT .) ]

    IdentifierOth                  shift and go to state 70
    QualifiedIdentPart             shift and go to state 100

state 96

    (22) ConstDecl -> CONST LPAREN ConstSpecMult RPAREN .

    SEMICOLON       reduce using rule 22 (ConstDecl -> CONST LPAREN ConstSpecMult RPAREN .)


state 97

    (23) ConstSpecMult -> ConstSpec SEMICOLON . ConstSpecMult
    (23) ConstSpecMult -> . ConstSpec SEMICOLON ConstSpecMult
    (24) ConstSpecMult -> .
    (25) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (26) IdentifierList -> . IDENT IdentifierOth

    RPAREN          reduce using rule 24 (ConstSpecMult -> .)
    IDENT           shift and go to state 34

    ConstSpec                      shift and go to state 53
    ConstSpecMult                  shift and go to state 190
    IdentifierList                 shift and go to state 33

state 98

    (25) ConstSpec -> IdentifierList Type ASSIGN . ExpressionList
    (55) ExpressionList -> . Expr ExprOth
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Type                           shift and go to state 119
    ExpressionList                 shift and go to state 191
    Expr                           shift and go to state 145
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 99

    (268) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 192


state 100

    (270) TypeName -> IDENT QualifiedIdentPart .

    ASSIGN          reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    SEMICOLON       reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    LBRACE          reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    RPAREN          reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    COMMA           reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    LPAREN          reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    IDENT           reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    LBRACK          reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    STRUCT          reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    MUL             reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    MAP             reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    FUNC            reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    RBRACK          reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    STRING          reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)
    COLON           reduce using rule 270 (TypeName -> IDENT QualifiedIdentPart .)


state 101

    (29) QualifiedIdentPart -> PERIOD . IDENT

    IDENT           shift and go to state 193


state 102

    (36) ArrayType -> LBRACK ArrayLength . RBRACK ElementType

    RBRACK          shift and go to state 194


state 103

    (51) SliceType -> LBRACK RBRACK . ElementType
    (38) ElementType -> . Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    ElementType                    shift and go to state 195
    Type                           shift and go to state 196
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 104

    (37) ArrayLength -> Expr .
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    RBRACK          reduce using rule 37 (ArrayLength -> Expr .)
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 105

    (56) Expr -> UnaryExpr .

    LOR             reduce using rule 56 (Expr -> UnaryExpr .)
    LAND            reduce using rule 56 (Expr -> UnaryExpr .)
    EQL             reduce using rule 56 (Expr -> UnaryExpr .)
    NEQ             reduce using rule 56 (Expr -> UnaryExpr .)
    LSS             reduce using rule 56 (Expr -> UnaryExpr .)
    LEQ             reduce using rule 56 (Expr -> UnaryExpr .)
    GTR             reduce using rule 56 (Expr -> UnaryExpr .)
    GEQ             reduce using rule 56 (Expr -> UnaryExpr .)
    ADD             reduce using rule 56 (Expr -> UnaryExpr .)
    SUB             reduce using rule 56 (Expr -> UnaryExpr .)
    OR              reduce using rule 56 (Expr -> UnaryExpr .)
    XOR             reduce using rule 56 (Expr -> UnaryExpr .)
    MUL             reduce using rule 56 (Expr -> UnaryExpr .)
    QUO             reduce using rule 56 (Expr -> UnaryExpr .)
    REM             reduce using rule 56 (Expr -> UnaryExpr .)
    SHL             reduce using rule 56 (Expr -> UnaryExpr .)
    SHR             reduce using rule 56 (Expr -> UnaryExpr .)
    AND             reduce using rule 56 (Expr -> UnaryExpr .)
    AND_NOT         reduce using rule 56 (Expr -> UnaryExpr .)
    RBRACK          reduce using rule 56 (Expr -> UnaryExpr .)
    COMMA           reduce using rule 56 (Expr -> UnaryExpr .)
    SEMICOLON       reduce using rule 56 (Expr -> UnaryExpr .)
    INC             reduce using rule 56 (Expr -> UnaryExpr .)
    DEC             reduce using rule 56 (Expr -> UnaryExpr .)
    ASSIGN          reduce using rule 56 (Expr -> UnaryExpr .)
    ADD_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    SUB_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    OR_ASSIGN       reduce using rule 56 (Expr -> UnaryExpr .)
    XOR_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    MUL_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    QUO_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    REM_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    AND_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    SHL_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    SHR_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 56 (Expr -> UnaryExpr .)
    RPAREN          reduce using rule 56 (Expr -> UnaryExpr .)
    LBRACE          reduce using rule 56 (Expr -> UnaryExpr .)
    COLON           reduce using rule 56 (Expr -> UnaryExpr .)
    RBRACE          reduce using rule 56 (Expr -> UnaryExpr .)
    ELSE            reduce using rule 56 (Expr -> UnaryExpr .)


state 106

    (58) UnaryExpr -> PrimaryExpr .
    (123) PrimaryExpr -> PrimaryExpr . Selector
    (124) PrimaryExpr -> PrimaryExpr . Index
    (125) PrimaryExpr -> PrimaryExpr . Slice
    (126) PrimaryExpr -> PrimaryExpr . Arguments
    (130) Selector -> . PERIOD IDENT
    (127) Index -> . LBRACK Expr RBRACK
    (131) Slice -> . LBRACK Expr COLON Expr RBRACK
    (132) Slice -> . LBRACK COLON Expr RBRACK
    (133) Slice -> . LBRACK Expr COLON RBRACK
    (134) Slice -> . LBRACK COLON RBRACK
    (135) Slice -> . LBRACK COLON Expr COLON Expr RBRACK
    (136) Slice -> . LBRACK Expr COLON Expr COLON Expr RBRACK
    (137) Arguments -> . LPAREN RPAREN
    (138) Arguments -> . LPAREN ExpressionList RPAREN
    (139) Arguments -> . LPAREN ExpressionList COMMA RPAREN
    (140) Arguments -> . LPAREN Type RPAREN
    (141) Arguments -> . LPAREN Type COMMA RPAREN
    (142) Arguments -> . LPAREN Type COMMA ExpressionList RPAREN
    (143) Arguments -> . LPAREN Type COMMA ExpressionList COMMA RPAREN

    LOR             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    LAND            reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    EQL             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    NEQ             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    LSS             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    GTR             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    SUB             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    MUL             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    QUO             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    REM             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    SHL             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    SHR             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    AND_NOT         reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    INC             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    DEC             reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    ADD_ASSIGN      reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    SUB_ASSIGN      reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGN       reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGN      reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    MUL_ASSIGN      reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    QUO_ASSIGN      reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    REM_ASSIGN      reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    AND_ASSIGN      reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    SHL_ASSIGN      reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    SHR_ASSIGN      reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    RBRACE          reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    ELSE            reduce using rule 58 (UnaryExpr -> PrimaryExpr .)
    PERIOD          shift and go to state 224
    LBRACK          shift and go to state 225
    LPAREN          shift and go to state 226

    Selector                       shift and go to state 220
    Index                          shift and go to state 221
    Slice                          shift and go to state 222
    Arguments                      shift and go to state 223

state 107

    (59) UnaryExpr -> UnaryOp . UnaryExpr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    UnaryOp                        shift and go to state 107
    UnaryExpr                      shift and go to state 227
    PrimaryExpr                    shift and go to state 106
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 108

    (121) PrimaryExpr -> Operand .

    PERIOD          reduce using rule 121 (PrimaryExpr -> Operand .)
    LBRACK          reduce using rule 121 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 121 (PrimaryExpr -> Operand .)
    LOR             reduce using rule 121 (PrimaryExpr -> Operand .)
    LAND            reduce using rule 121 (PrimaryExpr -> Operand .)
    EQL             reduce using rule 121 (PrimaryExpr -> Operand .)
    NEQ             reduce using rule 121 (PrimaryExpr -> Operand .)
    LSS             reduce using rule 121 (PrimaryExpr -> Operand .)
    LEQ             reduce using rule 121 (PrimaryExpr -> Operand .)
    GTR             reduce using rule 121 (PrimaryExpr -> Operand .)
    GEQ             reduce using rule 121 (PrimaryExpr -> Operand .)
    ADD             reduce using rule 121 (PrimaryExpr -> Operand .)
    SUB             reduce using rule 121 (PrimaryExpr -> Operand .)
    OR              reduce using rule 121 (PrimaryExpr -> Operand .)
    XOR             reduce using rule 121 (PrimaryExpr -> Operand .)
    MUL             reduce using rule 121 (PrimaryExpr -> Operand .)
    QUO             reduce using rule 121 (PrimaryExpr -> Operand .)
    REM             reduce using rule 121 (PrimaryExpr -> Operand .)
    SHL             reduce using rule 121 (PrimaryExpr -> Operand .)
    SHR             reduce using rule 121 (PrimaryExpr -> Operand .)
    AND             reduce using rule 121 (PrimaryExpr -> Operand .)
    AND_NOT         reduce using rule 121 (PrimaryExpr -> Operand .)
    RBRACK          reduce using rule 121 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 121 (PrimaryExpr -> Operand .)
    SEMICOLON       reduce using rule 121 (PrimaryExpr -> Operand .)
    INC             reduce using rule 121 (PrimaryExpr -> Operand .)
    DEC             reduce using rule 121 (PrimaryExpr -> Operand .)
    ASSIGN          reduce using rule 121 (PrimaryExpr -> Operand .)
    ADD_ASSIGN      reduce using rule 121 (PrimaryExpr -> Operand .)
    SUB_ASSIGN      reduce using rule 121 (PrimaryExpr -> Operand .)
    OR_ASSIGN       reduce using rule 121 (PrimaryExpr -> Operand .)
    XOR_ASSIGN      reduce using rule 121 (PrimaryExpr -> Operand .)
    MUL_ASSIGN      reduce using rule 121 (PrimaryExpr -> Operand .)
    QUO_ASSIGN      reduce using rule 121 (PrimaryExpr -> Operand .)
    REM_ASSIGN      reduce using rule 121 (PrimaryExpr -> Operand .)
    AND_ASSIGN      reduce using rule 121 (PrimaryExpr -> Operand .)
    SHL_ASSIGN      reduce using rule 121 (PrimaryExpr -> Operand .)
    SHR_ASSIGN      reduce using rule 121 (PrimaryExpr -> Operand .)
    AND_NOT_ASSIGN  reduce using rule 121 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 121 (PrimaryExpr -> Operand .)
    LBRACE          reduce using rule 121 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 121 (PrimaryExpr -> Operand .)
    RBRACE          reduce using rule 121 (PrimaryExpr -> Operand .)
    ELSE            reduce using rule 121 (PrimaryExpr -> Operand .)


state 109

    (122) PrimaryExpr -> Conversion .

    PERIOD          reduce using rule 122 (PrimaryExpr -> Conversion .)
    LBRACK          reduce using rule 122 (PrimaryExpr -> Conversion .)
    LPAREN          reduce using rule 122 (PrimaryExpr -> Conversion .)
    LOR             reduce using rule 122 (PrimaryExpr -> Conversion .)
    LAND            reduce using rule 122 (PrimaryExpr -> Conversion .)
    EQL             reduce using rule 122 (PrimaryExpr -> Conversion .)
    NEQ             reduce using rule 122 (PrimaryExpr -> Conversion .)
    LSS             reduce using rule 122 (PrimaryExpr -> Conversion .)
    LEQ             reduce using rule 122 (PrimaryExpr -> Conversion .)
    GTR             reduce using rule 122 (PrimaryExpr -> Conversion .)
    GEQ             reduce using rule 122 (PrimaryExpr -> Conversion .)
    ADD             reduce using rule 122 (PrimaryExpr -> Conversion .)
    SUB             reduce using rule 122 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 122 (PrimaryExpr -> Conversion .)
    XOR             reduce using rule 122 (PrimaryExpr -> Conversion .)
    MUL             reduce using rule 122 (PrimaryExpr -> Conversion .)
    QUO             reduce using rule 122 (PrimaryExpr -> Conversion .)
    REM             reduce using rule 122 (PrimaryExpr -> Conversion .)
    SHL             reduce using rule 122 (PrimaryExpr -> Conversion .)
    SHR             reduce using rule 122 (PrimaryExpr -> Conversion .)
    AND             reduce using rule 122 (PrimaryExpr -> Conversion .)
    AND_NOT         reduce using rule 122 (PrimaryExpr -> Conversion .)
    RBRACK          reduce using rule 122 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 122 (PrimaryExpr -> Conversion .)
    SEMICOLON       reduce using rule 122 (PrimaryExpr -> Conversion .)
    INC             reduce using rule 122 (PrimaryExpr -> Conversion .)
    DEC             reduce using rule 122 (PrimaryExpr -> Conversion .)
    ASSIGN          reduce using rule 122 (PrimaryExpr -> Conversion .)
    ADD_ASSIGN      reduce using rule 122 (PrimaryExpr -> Conversion .)
    SUB_ASSIGN      reduce using rule 122 (PrimaryExpr -> Conversion .)
    OR_ASSIGN       reduce using rule 122 (PrimaryExpr -> Conversion .)
    XOR_ASSIGN      reduce using rule 122 (PrimaryExpr -> Conversion .)
    MUL_ASSIGN      reduce using rule 122 (PrimaryExpr -> Conversion .)
    QUO_ASSIGN      reduce using rule 122 (PrimaryExpr -> Conversion .)
    REM_ASSIGN      reduce using rule 122 (PrimaryExpr -> Conversion .)
    AND_ASSIGN      reduce using rule 122 (PrimaryExpr -> Conversion .)
    SHL_ASSIGN      reduce using rule 122 (PrimaryExpr -> Conversion .)
    SHR_ASSIGN      reduce using rule 122 (PrimaryExpr -> Conversion .)
    AND_NOT_ASSIGN  reduce using rule 122 (PrimaryExpr -> Conversion .)
    RPAREN          reduce using rule 122 (PrimaryExpr -> Conversion .)
    LBRACE          reduce using rule 122 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 122 (PrimaryExpr -> Conversion .)
    RBRACE          reduce using rule 122 (PrimaryExpr -> Conversion .)
    ELSE            reduce using rule 122 (PrimaryExpr -> Conversion .)


state 110

    (82) UnaryOp -> ADD .

    ADD             reduce using rule 82 (UnaryOp -> ADD .)
    SUB             reduce using rule 82 (UnaryOp -> ADD .)
    NOT             reduce using rule 82 (UnaryOp -> ADD .)
    XOR             reduce using rule 82 (UnaryOp -> ADD .)
    MUL             reduce using rule 82 (UnaryOp -> ADD .)
    AND             reduce using rule 82 (UnaryOp -> ADD .)
    LPAREN          reduce using rule 82 (UnaryOp -> ADD .)
    INT             reduce using rule 82 (UnaryOp -> ADD .)
    FLOAT           reduce using rule 82 (UnaryOp -> ADD .)
    IMAG            reduce using rule 82 (UnaryOp -> ADD .)
    RUNE            reduce using rule 82 (UnaryOp -> ADD .)
    STRING          reduce using rule 82 (UnaryOp -> ADD .)
    FUNC            reduce using rule 82 (UnaryOp -> ADD .)
    PERIOD          reduce using rule 82 (UnaryOp -> ADD .)
    IDENT           reduce using rule 82 (UnaryOp -> ADD .)
    STRUCT          reduce using rule 82 (UnaryOp -> ADD .)
    LBRACK          reduce using rule 82 (UnaryOp -> ADD .)
    MAP             reduce using rule 82 (UnaryOp -> ADD .)


state 111

    (83) UnaryOp -> SUB .

    ADD             reduce using rule 83 (UnaryOp -> SUB .)
    SUB             reduce using rule 83 (UnaryOp -> SUB .)
    NOT             reduce using rule 83 (UnaryOp -> SUB .)
    XOR             reduce using rule 83 (UnaryOp -> SUB .)
    MUL             reduce using rule 83 (UnaryOp -> SUB .)
    AND             reduce using rule 83 (UnaryOp -> SUB .)
    LPAREN          reduce using rule 83 (UnaryOp -> SUB .)
    INT             reduce using rule 83 (UnaryOp -> SUB .)
    FLOAT           reduce using rule 83 (UnaryOp -> SUB .)
    IMAG            reduce using rule 83 (UnaryOp -> SUB .)
    RUNE            reduce using rule 83 (UnaryOp -> SUB .)
    STRING          reduce using rule 83 (UnaryOp -> SUB .)
    FUNC            reduce using rule 83 (UnaryOp -> SUB .)
    PERIOD          reduce using rule 83 (UnaryOp -> SUB .)
    IDENT           reduce using rule 83 (UnaryOp -> SUB .)
    STRUCT          reduce using rule 83 (UnaryOp -> SUB .)
    LBRACK          reduce using rule 83 (UnaryOp -> SUB .)
    MAP             reduce using rule 83 (UnaryOp -> SUB .)


state 112

    (84) UnaryOp -> NOT .

    ADD             reduce using rule 84 (UnaryOp -> NOT .)
    SUB             reduce using rule 84 (UnaryOp -> NOT .)
    NOT             reduce using rule 84 (UnaryOp -> NOT .)
    XOR             reduce using rule 84 (UnaryOp -> NOT .)
    MUL             reduce using rule 84 (UnaryOp -> NOT .)
    AND             reduce using rule 84 (UnaryOp -> NOT .)
    LPAREN          reduce using rule 84 (UnaryOp -> NOT .)
    INT             reduce using rule 84 (UnaryOp -> NOT .)
    FLOAT           reduce using rule 84 (UnaryOp -> NOT .)
    IMAG            reduce using rule 84 (UnaryOp -> NOT .)
    RUNE            reduce using rule 84 (UnaryOp -> NOT .)
    STRING          reduce using rule 84 (UnaryOp -> NOT .)
    FUNC            reduce using rule 84 (UnaryOp -> NOT .)
    PERIOD          reduce using rule 84 (UnaryOp -> NOT .)
    IDENT           reduce using rule 84 (UnaryOp -> NOT .)
    STRUCT          reduce using rule 84 (UnaryOp -> NOT .)
    LBRACK          reduce using rule 84 (UnaryOp -> NOT .)
    MAP             reduce using rule 84 (UnaryOp -> NOT .)


state 113

    (85) UnaryOp -> XOR .

    ADD             reduce using rule 85 (UnaryOp -> XOR .)
    SUB             reduce using rule 85 (UnaryOp -> XOR .)
    NOT             reduce using rule 85 (UnaryOp -> XOR .)
    XOR             reduce using rule 85 (UnaryOp -> XOR .)
    MUL             reduce using rule 85 (UnaryOp -> XOR .)
    AND             reduce using rule 85 (UnaryOp -> XOR .)
    LPAREN          reduce using rule 85 (UnaryOp -> XOR .)
    INT             reduce using rule 85 (UnaryOp -> XOR .)
    FLOAT           reduce using rule 85 (UnaryOp -> XOR .)
    IMAG            reduce using rule 85 (UnaryOp -> XOR .)
    RUNE            reduce using rule 85 (UnaryOp -> XOR .)
    STRING          reduce using rule 85 (UnaryOp -> XOR .)
    FUNC            reduce using rule 85 (UnaryOp -> XOR .)
    PERIOD          reduce using rule 85 (UnaryOp -> XOR .)
    IDENT           reduce using rule 85 (UnaryOp -> XOR .)
    STRUCT          reduce using rule 85 (UnaryOp -> XOR .)
    LBRACK          reduce using rule 85 (UnaryOp -> XOR .)
    MAP             reduce using rule 85 (UnaryOp -> XOR .)


state 114

    (86) UnaryOp -> MUL .
    (49) PointerType -> MUL . BaseType
    (50) BaseType -> . Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    ADD             reduce using rule 86 (UnaryOp -> MUL .)
    SUB             reduce using rule 86 (UnaryOp -> MUL .)
    NOT             reduce using rule 86 (UnaryOp -> MUL .)
    XOR             reduce using rule 86 (UnaryOp -> MUL .)
    MUL             reduce using rule 86 (UnaryOp -> MUL .)
    AND             reduce using rule 86 (UnaryOp -> MUL .)
    INT             reduce using rule 86 (UnaryOp -> MUL .)
    FLOAT           reduce using rule 86 (UnaryOp -> MUL .)
    IMAG            reduce using rule 86 (UnaryOp -> MUL .)
    RUNE            reduce using rule 86 (UnaryOp -> MUL .)
    STRING          reduce using rule 86 (UnaryOp -> MUL .)
    FUNC            reduce using rule 86 (UnaryOp -> MUL .)
    PERIOD          reduce using rule 86 (UnaryOp -> MUL .)
    IDENT           reduce using rule 86 (UnaryOp -> MUL .)
    STRUCT          reduce using rule 86 (UnaryOp -> MUL .)
    MAP             reduce using rule 86 (UnaryOp -> MUL .)
    LPAREN          shift and go to state 57
    LBRACK          shift and go to state 65

  ! LPAREN          [ reduce using rule 86 (UnaryOp -> MUL .) ]
  ! LBRACK          [ reduce using rule 86 (UnaryOp -> MUL .) ]
  ! IDENT           [ shift and go to state 58 ]
  ! STRUCT          [ shift and go to state 66 ]
  ! MUL             [ shift and go to state 67 ]
  ! MAP             [ shift and go to state 68 ]
  ! FUNC            [ shift and go to state 69 ]

    BaseType                       shift and go to state 136
    Type                           shift and go to state 137
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 115

    (87) UnaryOp -> AND .

    ADD             reduce using rule 87 (UnaryOp -> AND .)
    SUB             reduce using rule 87 (UnaryOp -> AND .)
    NOT             reduce using rule 87 (UnaryOp -> AND .)
    XOR             reduce using rule 87 (UnaryOp -> AND .)
    MUL             reduce using rule 87 (UnaryOp -> AND .)
    AND             reduce using rule 87 (UnaryOp -> AND .)
    LPAREN          reduce using rule 87 (UnaryOp -> AND .)
    INT             reduce using rule 87 (UnaryOp -> AND .)
    FLOAT           reduce using rule 87 (UnaryOp -> AND .)
    IMAG            reduce using rule 87 (UnaryOp -> AND .)
    RUNE            reduce using rule 87 (UnaryOp -> AND .)
    STRING          reduce using rule 87 (UnaryOp -> AND .)
    FUNC            reduce using rule 87 (UnaryOp -> AND .)
    PERIOD          reduce using rule 87 (UnaryOp -> AND .)
    IDENT           reduce using rule 87 (UnaryOp -> AND .)
    STRUCT          reduce using rule 87 (UnaryOp -> AND .)
    LBRACK          reduce using rule 87 (UnaryOp -> AND .)
    MAP             reduce using rule 87 (UnaryOp -> AND .)


state 116

    (90) Operand -> Lit .

    PERIOD          reduce using rule 90 (Operand -> Lit .)
    LBRACK          reduce using rule 90 (Operand -> Lit .)
    LPAREN          reduce using rule 90 (Operand -> Lit .)
    LOR             reduce using rule 90 (Operand -> Lit .)
    LAND            reduce using rule 90 (Operand -> Lit .)
    EQL             reduce using rule 90 (Operand -> Lit .)
    NEQ             reduce using rule 90 (Operand -> Lit .)
    LSS             reduce using rule 90 (Operand -> Lit .)
    LEQ             reduce using rule 90 (Operand -> Lit .)
    GTR             reduce using rule 90 (Operand -> Lit .)
    GEQ             reduce using rule 90 (Operand -> Lit .)
    ADD             reduce using rule 90 (Operand -> Lit .)
    SUB             reduce using rule 90 (Operand -> Lit .)
    OR              reduce using rule 90 (Operand -> Lit .)
    XOR             reduce using rule 90 (Operand -> Lit .)
    MUL             reduce using rule 90 (Operand -> Lit .)
    QUO             reduce using rule 90 (Operand -> Lit .)
    REM             reduce using rule 90 (Operand -> Lit .)
    SHL             reduce using rule 90 (Operand -> Lit .)
    SHR             reduce using rule 90 (Operand -> Lit .)
    AND             reduce using rule 90 (Operand -> Lit .)
    AND_NOT         reduce using rule 90 (Operand -> Lit .)
    RBRACK          reduce using rule 90 (Operand -> Lit .)
    COMMA           reduce using rule 90 (Operand -> Lit .)
    SEMICOLON       reduce using rule 90 (Operand -> Lit .)
    INC             reduce using rule 90 (Operand -> Lit .)
    DEC             reduce using rule 90 (Operand -> Lit .)
    ASSIGN          reduce using rule 90 (Operand -> Lit .)
    ADD_ASSIGN      reduce using rule 90 (Operand -> Lit .)
    SUB_ASSIGN      reduce using rule 90 (Operand -> Lit .)
    OR_ASSIGN       reduce using rule 90 (Operand -> Lit .)
    XOR_ASSIGN      reduce using rule 90 (Operand -> Lit .)
    MUL_ASSIGN      reduce using rule 90 (Operand -> Lit .)
    QUO_ASSIGN      reduce using rule 90 (Operand -> Lit .)
    REM_ASSIGN      reduce using rule 90 (Operand -> Lit .)
    AND_ASSIGN      reduce using rule 90 (Operand -> Lit .)
    SHL_ASSIGN      reduce using rule 90 (Operand -> Lit .)
    SHR_ASSIGN      reduce using rule 90 (Operand -> Lit .)
    AND_NOT_ASSIGN  reduce using rule 90 (Operand -> Lit .)
    RPAREN          reduce using rule 90 (Operand -> Lit .)
    LBRACE          reduce using rule 90 (Operand -> Lit .)
    COLON           reduce using rule 90 (Operand -> Lit .)
    RBRACE          reduce using rule 90 (Operand -> Lit .)
    ELSE            reduce using rule 90 (Operand -> Lit .)


state 117

    (91) Operand -> OperandName . IDENT

    IDENT           shift and go to state 228


state 118

    (92) Operand -> LPAREN . Expr RPAREN
    (268) Type -> LPAREN . Type RPAREN
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT

  ! shift/reduce conflict for IDENT resolved as shift
    LPAREN          shift and go to state 229
    IDENT           shift and go to state 58
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MAP             shift and go to state 68
    FUNC            shift and go to state 236
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    PERIOD          shift and go to state 101

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Expr                           shift and go to state 230
    Type                           shift and go to state 231
    UnaryExpr                      shift and go to state 105
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    QualifiedIdentPart             shift and go to state 123
    ArrayType                      shift and go to state 232
    StructType                     shift and go to state 233
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 234
    MapType                        shift and go to state 235
    FunctionType                   shift and go to state 64
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122

state 119

    (128) Conversion -> Type . LPAREN Expr RPAREN
    (129) Conversion -> Type . LPAREN Expr COMMA RPAREN

    LPAREN          shift and go to state 237


state 120

    (93) Lit -> BasicLit .

    PERIOD          reduce using rule 93 (Lit -> BasicLit .)
    LBRACK          reduce using rule 93 (Lit -> BasicLit .)
    LPAREN          reduce using rule 93 (Lit -> BasicLit .)
    LOR             reduce using rule 93 (Lit -> BasicLit .)
    LAND            reduce using rule 93 (Lit -> BasicLit .)
    EQL             reduce using rule 93 (Lit -> BasicLit .)
    NEQ             reduce using rule 93 (Lit -> BasicLit .)
    LSS             reduce using rule 93 (Lit -> BasicLit .)
    LEQ             reduce using rule 93 (Lit -> BasicLit .)
    GTR             reduce using rule 93 (Lit -> BasicLit .)
    GEQ             reduce using rule 93 (Lit -> BasicLit .)
    ADD             reduce using rule 93 (Lit -> BasicLit .)
    SUB             reduce using rule 93 (Lit -> BasicLit .)
    OR              reduce using rule 93 (Lit -> BasicLit .)
    XOR             reduce using rule 93 (Lit -> BasicLit .)
    MUL             reduce using rule 93 (Lit -> BasicLit .)
    QUO             reduce using rule 93 (Lit -> BasicLit .)
    REM             reduce using rule 93 (Lit -> BasicLit .)
    SHL             reduce using rule 93 (Lit -> BasicLit .)
    SHR             reduce using rule 93 (Lit -> BasicLit .)
    AND             reduce using rule 93 (Lit -> BasicLit .)
    AND_NOT         reduce using rule 93 (Lit -> BasicLit .)
    RBRACK          reduce using rule 93 (Lit -> BasicLit .)
    COMMA           reduce using rule 93 (Lit -> BasicLit .)
    SEMICOLON       reduce using rule 93 (Lit -> BasicLit .)
    INC             reduce using rule 93 (Lit -> BasicLit .)
    DEC             reduce using rule 93 (Lit -> BasicLit .)
    ASSIGN          reduce using rule 93 (Lit -> BasicLit .)
    ADD_ASSIGN      reduce using rule 93 (Lit -> BasicLit .)
    SUB_ASSIGN      reduce using rule 93 (Lit -> BasicLit .)
    OR_ASSIGN       reduce using rule 93 (Lit -> BasicLit .)
    XOR_ASSIGN      reduce using rule 93 (Lit -> BasicLit .)
    MUL_ASSIGN      reduce using rule 93 (Lit -> BasicLit .)
    QUO_ASSIGN      reduce using rule 93 (Lit -> BasicLit .)
    REM_ASSIGN      reduce using rule 93 (Lit -> BasicLit .)
    AND_ASSIGN      reduce using rule 93 (Lit -> BasicLit .)
    SHL_ASSIGN      reduce using rule 93 (Lit -> BasicLit .)
    SHR_ASSIGN      reduce using rule 93 (Lit -> BasicLit .)
    AND_NOT_ASSIGN  reduce using rule 93 (Lit -> BasicLit .)
    RPAREN          reduce using rule 93 (Lit -> BasicLit .)
    LBRACE          reduce using rule 93 (Lit -> BasicLit .)
    COLON           reduce using rule 93 (Lit -> BasicLit .)
    RBRACE          reduce using rule 93 (Lit -> BasicLit .)
    ELSE            reduce using rule 93 (Lit -> BasicLit .)


state 121

    (94) Lit -> CompositeLit .

    PERIOD          reduce using rule 94 (Lit -> CompositeLit .)
    LBRACK          reduce using rule 94 (Lit -> CompositeLit .)
    LPAREN          reduce using rule 94 (Lit -> CompositeLit .)
    LOR             reduce using rule 94 (Lit -> CompositeLit .)
    LAND            reduce using rule 94 (Lit -> CompositeLit .)
    EQL             reduce using rule 94 (Lit -> CompositeLit .)
    NEQ             reduce using rule 94 (Lit -> CompositeLit .)
    LSS             reduce using rule 94 (Lit -> CompositeLit .)
    LEQ             reduce using rule 94 (Lit -> CompositeLit .)
    GTR             reduce using rule 94 (Lit -> CompositeLit .)
    GEQ             reduce using rule 94 (Lit -> CompositeLit .)
    ADD             reduce using rule 94 (Lit -> CompositeLit .)
    SUB             reduce using rule 94 (Lit -> CompositeLit .)
    OR              reduce using rule 94 (Lit -> CompositeLit .)
    XOR             reduce using rule 94 (Lit -> CompositeLit .)
    MUL             reduce using rule 94 (Lit -> CompositeLit .)
    QUO             reduce using rule 94 (Lit -> CompositeLit .)
    REM             reduce using rule 94 (Lit -> CompositeLit .)
    SHL             reduce using rule 94 (Lit -> CompositeLit .)
    SHR             reduce using rule 94 (Lit -> CompositeLit .)
    AND             reduce using rule 94 (Lit -> CompositeLit .)
    AND_NOT         reduce using rule 94 (Lit -> CompositeLit .)
    RBRACK          reduce using rule 94 (Lit -> CompositeLit .)
    COMMA           reduce using rule 94 (Lit -> CompositeLit .)
    SEMICOLON       reduce using rule 94 (Lit -> CompositeLit .)
    INC             reduce using rule 94 (Lit -> CompositeLit .)
    DEC             reduce using rule 94 (Lit -> CompositeLit .)
    ASSIGN          reduce using rule 94 (Lit -> CompositeLit .)
    ADD_ASSIGN      reduce using rule 94 (Lit -> CompositeLit .)
    SUB_ASSIGN      reduce using rule 94 (Lit -> CompositeLit .)
    OR_ASSIGN       reduce using rule 94 (Lit -> CompositeLit .)
    XOR_ASSIGN      reduce using rule 94 (Lit -> CompositeLit .)
    MUL_ASSIGN      reduce using rule 94 (Lit -> CompositeLit .)
    QUO_ASSIGN      reduce using rule 94 (Lit -> CompositeLit .)
    REM_ASSIGN      reduce using rule 94 (Lit -> CompositeLit .)
    AND_ASSIGN      reduce using rule 94 (Lit -> CompositeLit .)
    SHL_ASSIGN      reduce using rule 94 (Lit -> CompositeLit .)
    SHR_ASSIGN      reduce using rule 94 (Lit -> CompositeLit .)
    AND_NOT_ASSIGN  reduce using rule 94 (Lit -> CompositeLit .)
    RPAREN          reduce using rule 94 (Lit -> CompositeLit .)
    LBRACE          reduce using rule 94 (Lit -> CompositeLit .)
    COLON           reduce using rule 94 (Lit -> CompositeLit .)
    RBRACE          reduce using rule 94 (Lit -> CompositeLit .)
    ELSE            reduce using rule 94 (Lit -> CompositeLit .)


state 122

    (95) Lit -> FunctionLit .

    PERIOD          reduce using rule 95 (Lit -> FunctionLit .)
    LBRACK          reduce using rule 95 (Lit -> FunctionLit .)
    LPAREN          reduce using rule 95 (Lit -> FunctionLit .)
    LOR             reduce using rule 95 (Lit -> FunctionLit .)
    LAND            reduce using rule 95 (Lit -> FunctionLit .)
    EQL             reduce using rule 95 (Lit -> FunctionLit .)
    NEQ             reduce using rule 95 (Lit -> FunctionLit .)
    LSS             reduce using rule 95 (Lit -> FunctionLit .)
    LEQ             reduce using rule 95 (Lit -> FunctionLit .)
    GTR             reduce using rule 95 (Lit -> FunctionLit .)
    GEQ             reduce using rule 95 (Lit -> FunctionLit .)
    ADD             reduce using rule 95 (Lit -> FunctionLit .)
    SUB             reduce using rule 95 (Lit -> FunctionLit .)
    OR              reduce using rule 95 (Lit -> FunctionLit .)
    XOR             reduce using rule 95 (Lit -> FunctionLit .)
    MUL             reduce using rule 95 (Lit -> FunctionLit .)
    QUO             reduce using rule 95 (Lit -> FunctionLit .)
    REM             reduce using rule 95 (Lit -> FunctionLit .)
    SHL             reduce using rule 95 (Lit -> FunctionLit .)
    SHR             reduce using rule 95 (Lit -> FunctionLit .)
    AND             reduce using rule 95 (Lit -> FunctionLit .)
    AND_NOT         reduce using rule 95 (Lit -> FunctionLit .)
    RBRACK          reduce using rule 95 (Lit -> FunctionLit .)
    COMMA           reduce using rule 95 (Lit -> FunctionLit .)
    SEMICOLON       reduce using rule 95 (Lit -> FunctionLit .)
    INC             reduce using rule 95 (Lit -> FunctionLit .)
    DEC             reduce using rule 95 (Lit -> FunctionLit .)
    ASSIGN          reduce using rule 95 (Lit -> FunctionLit .)
    ADD_ASSIGN      reduce using rule 95 (Lit -> FunctionLit .)
    SUB_ASSIGN      reduce using rule 95 (Lit -> FunctionLit .)
    OR_ASSIGN       reduce using rule 95 (Lit -> FunctionLit .)
    XOR_ASSIGN      reduce using rule 95 (Lit -> FunctionLit .)
    MUL_ASSIGN      reduce using rule 95 (Lit -> FunctionLit .)
    QUO_ASSIGN      reduce using rule 95 (Lit -> FunctionLit .)
    REM_ASSIGN      reduce using rule 95 (Lit -> FunctionLit .)
    AND_ASSIGN      reduce using rule 95 (Lit -> FunctionLit .)
    SHL_ASSIGN      reduce using rule 95 (Lit -> FunctionLit .)
    SHR_ASSIGN      reduce using rule 95 (Lit -> FunctionLit .)
    AND_NOT_ASSIGN  reduce using rule 95 (Lit -> FunctionLit .)
    RPAREN          reduce using rule 95 (Lit -> FunctionLit .)
    LBRACE          reduce using rule 95 (Lit -> FunctionLit .)
    COLON           reduce using rule 95 (Lit -> FunctionLit .)
    RBRACE          reduce using rule 95 (Lit -> FunctionLit .)
    ELSE            reduce using rule 95 (Lit -> FunctionLit .)


state 123

    (119) OperandName -> QualifiedIdentPart .

    IDENT           reduce using rule 119 (OperandName -> QualifiedIdentPart .)


state 124

    (266) Type -> TypeName .
    (105) CompositeLit -> TypeName . LiteralValue
    (106) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (107) LiteralValue -> . LBRACE ElementList RBRACE
    (108) LiteralValue -> . LBRACE RBRACE

    LPAREN          reduce using rule 266 (Type -> TypeName .)
    RPAREN          reduce using rule 266 (Type -> TypeName .)
    COMMA           reduce using rule 266 (Type -> TypeName .)
    LBRACE          shift and go to state 239

    LiteralValue                   shift and go to state 238

state 125

    (96) BasicLit -> INT .

    PERIOD          reduce using rule 96 (BasicLit -> INT .)
    LBRACK          reduce using rule 96 (BasicLit -> INT .)
    LPAREN          reduce using rule 96 (BasicLit -> INT .)
    LOR             reduce using rule 96 (BasicLit -> INT .)
    LAND            reduce using rule 96 (BasicLit -> INT .)
    EQL             reduce using rule 96 (BasicLit -> INT .)
    NEQ             reduce using rule 96 (BasicLit -> INT .)
    LSS             reduce using rule 96 (BasicLit -> INT .)
    LEQ             reduce using rule 96 (BasicLit -> INT .)
    GTR             reduce using rule 96 (BasicLit -> INT .)
    GEQ             reduce using rule 96 (BasicLit -> INT .)
    ADD             reduce using rule 96 (BasicLit -> INT .)
    SUB             reduce using rule 96 (BasicLit -> INT .)
    OR              reduce using rule 96 (BasicLit -> INT .)
    XOR             reduce using rule 96 (BasicLit -> INT .)
    MUL             reduce using rule 96 (BasicLit -> INT .)
    QUO             reduce using rule 96 (BasicLit -> INT .)
    REM             reduce using rule 96 (BasicLit -> INT .)
    SHL             reduce using rule 96 (BasicLit -> INT .)
    SHR             reduce using rule 96 (BasicLit -> INT .)
    AND             reduce using rule 96 (BasicLit -> INT .)
    AND_NOT         reduce using rule 96 (BasicLit -> INT .)
    RBRACK          reduce using rule 96 (BasicLit -> INT .)
    COMMA           reduce using rule 96 (BasicLit -> INT .)
    SEMICOLON       reduce using rule 96 (BasicLit -> INT .)
    INC             reduce using rule 96 (BasicLit -> INT .)
    DEC             reduce using rule 96 (BasicLit -> INT .)
    ASSIGN          reduce using rule 96 (BasicLit -> INT .)
    ADD_ASSIGN      reduce using rule 96 (BasicLit -> INT .)
    SUB_ASSIGN      reduce using rule 96 (BasicLit -> INT .)
    OR_ASSIGN       reduce using rule 96 (BasicLit -> INT .)
    XOR_ASSIGN      reduce using rule 96 (BasicLit -> INT .)
    MUL_ASSIGN      reduce using rule 96 (BasicLit -> INT .)
    QUO_ASSIGN      reduce using rule 96 (BasicLit -> INT .)
    REM_ASSIGN      reduce using rule 96 (BasicLit -> INT .)
    AND_ASSIGN      reduce using rule 96 (BasicLit -> INT .)
    SHL_ASSIGN      reduce using rule 96 (BasicLit -> INT .)
    SHR_ASSIGN      reduce using rule 96 (BasicLit -> INT .)
    AND_NOT_ASSIGN  reduce using rule 96 (BasicLit -> INT .)
    RPAREN          reduce using rule 96 (BasicLit -> INT .)
    LBRACE          reduce using rule 96 (BasicLit -> INT .)
    COLON           reduce using rule 96 (BasicLit -> INT .)
    RBRACE          reduce using rule 96 (BasicLit -> INT .)
    ELSE            reduce using rule 96 (BasicLit -> INT .)


state 126

    (97) BasicLit -> FLOAT .

    PERIOD          reduce using rule 97 (BasicLit -> FLOAT .)
    LBRACK          reduce using rule 97 (BasicLit -> FLOAT .)
    LPAREN          reduce using rule 97 (BasicLit -> FLOAT .)
    LOR             reduce using rule 97 (BasicLit -> FLOAT .)
    LAND            reduce using rule 97 (BasicLit -> FLOAT .)
    EQL             reduce using rule 97 (BasicLit -> FLOAT .)
    NEQ             reduce using rule 97 (BasicLit -> FLOAT .)
    LSS             reduce using rule 97 (BasicLit -> FLOAT .)
    LEQ             reduce using rule 97 (BasicLit -> FLOAT .)
    GTR             reduce using rule 97 (BasicLit -> FLOAT .)
    GEQ             reduce using rule 97 (BasicLit -> FLOAT .)
    ADD             reduce using rule 97 (BasicLit -> FLOAT .)
    SUB             reduce using rule 97 (BasicLit -> FLOAT .)
    OR              reduce using rule 97 (BasicLit -> FLOAT .)
    XOR             reduce using rule 97 (BasicLit -> FLOAT .)
    MUL             reduce using rule 97 (BasicLit -> FLOAT .)
    QUO             reduce using rule 97 (BasicLit -> FLOAT .)
    REM             reduce using rule 97 (BasicLit -> FLOAT .)
    SHL             reduce using rule 97 (BasicLit -> FLOAT .)
    SHR             reduce using rule 97 (BasicLit -> FLOAT .)
    AND             reduce using rule 97 (BasicLit -> FLOAT .)
    AND_NOT         reduce using rule 97 (BasicLit -> FLOAT .)
    RBRACK          reduce using rule 97 (BasicLit -> FLOAT .)
    COMMA           reduce using rule 97 (BasicLit -> FLOAT .)
    SEMICOLON       reduce using rule 97 (BasicLit -> FLOAT .)
    INC             reduce using rule 97 (BasicLit -> FLOAT .)
    DEC             reduce using rule 97 (BasicLit -> FLOAT .)
    ASSIGN          reduce using rule 97 (BasicLit -> FLOAT .)
    ADD_ASSIGN      reduce using rule 97 (BasicLit -> FLOAT .)
    SUB_ASSIGN      reduce using rule 97 (BasicLit -> FLOAT .)
    OR_ASSIGN       reduce using rule 97 (BasicLit -> FLOAT .)
    XOR_ASSIGN      reduce using rule 97 (BasicLit -> FLOAT .)
    MUL_ASSIGN      reduce using rule 97 (BasicLit -> FLOAT .)
    QUO_ASSIGN      reduce using rule 97 (BasicLit -> FLOAT .)
    REM_ASSIGN      reduce using rule 97 (BasicLit -> FLOAT .)
    AND_ASSIGN      reduce using rule 97 (BasicLit -> FLOAT .)
    SHL_ASSIGN      reduce using rule 97 (BasicLit -> FLOAT .)
    SHR_ASSIGN      reduce using rule 97 (BasicLit -> FLOAT .)
    AND_NOT_ASSIGN  reduce using rule 97 (BasicLit -> FLOAT .)
    RPAREN          reduce using rule 97 (BasicLit -> FLOAT .)
    LBRACE          reduce using rule 97 (BasicLit -> FLOAT .)
    COLON           reduce using rule 97 (BasicLit -> FLOAT .)
    RBRACE          reduce using rule 97 (BasicLit -> FLOAT .)
    ELSE            reduce using rule 97 (BasicLit -> FLOAT .)


state 127

    (98) BasicLit -> IMAG .

    PERIOD          reduce using rule 98 (BasicLit -> IMAG .)
    LBRACK          reduce using rule 98 (BasicLit -> IMAG .)
    LPAREN          reduce using rule 98 (BasicLit -> IMAG .)
    LOR             reduce using rule 98 (BasicLit -> IMAG .)
    LAND            reduce using rule 98 (BasicLit -> IMAG .)
    EQL             reduce using rule 98 (BasicLit -> IMAG .)
    NEQ             reduce using rule 98 (BasicLit -> IMAG .)
    LSS             reduce using rule 98 (BasicLit -> IMAG .)
    LEQ             reduce using rule 98 (BasicLit -> IMAG .)
    GTR             reduce using rule 98 (BasicLit -> IMAG .)
    GEQ             reduce using rule 98 (BasicLit -> IMAG .)
    ADD             reduce using rule 98 (BasicLit -> IMAG .)
    SUB             reduce using rule 98 (BasicLit -> IMAG .)
    OR              reduce using rule 98 (BasicLit -> IMAG .)
    XOR             reduce using rule 98 (BasicLit -> IMAG .)
    MUL             reduce using rule 98 (BasicLit -> IMAG .)
    QUO             reduce using rule 98 (BasicLit -> IMAG .)
    REM             reduce using rule 98 (BasicLit -> IMAG .)
    SHL             reduce using rule 98 (BasicLit -> IMAG .)
    SHR             reduce using rule 98 (BasicLit -> IMAG .)
    AND             reduce using rule 98 (BasicLit -> IMAG .)
    AND_NOT         reduce using rule 98 (BasicLit -> IMAG .)
    RBRACK          reduce using rule 98 (BasicLit -> IMAG .)
    COMMA           reduce using rule 98 (BasicLit -> IMAG .)
    SEMICOLON       reduce using rule 98 (BasicLit -> IMAG .)
    INC             reduce using rule 98 (BasicLit -> IMAG .)
    DEC             reduce using rule 98 (BasicLit -> IMAG .)
    ASSIGN          reduce using rule 98 (BasicLit -> IMAG .)
    ADD_ASSIGN      reduce using rule 98 (BasicLit -> IMAG .)
    SUB_ASSIGN      reduce using rule 98 (BasicLit -> IMAG .)
    OR_ASSIGN       reduce using rule 98 (BasicLit -> IMAG .)
    XOR_ASSIGN      reduce using rule 98 (BasicLit -> IMAG .)
    MUL_ASSIGN      reduce using rule 98 (BasicLit -> IMAG .)
    QUO_ASSIGN      reduce using rule 98 (BasicLit -> IMAG .)
    REM_ASSIGN      reduce using rule 98 (BasicLit -> IMAG .)
    AND_ASSIGN      reduce using rule 98 (BasicLit -> IMAG .)
    SHL_ASSIGN      reduce using rule 98 (BasicLit -> IMAG .)
    SHR_ASSIGN      reduce using rule 98 (BasicLit -> IMAG .)
    AND_NOT_ASSIGN  reduce using rule 98 (BasicLit -> IMAG .)
    RPAREN          reduce using rule 98 (BasicLit -> IMAG .)
    LBRACE          reduce using rule 98 (BasicLit -> IMAG .)
    COLON           reduce using rule 98 (BasicLit -> IMAG .)
    RBRACE          reduce using rule 98 (BasicLit -> IMAG .)
    ELSE            reduce using rule 98 (BasicLit -> IMAG .)


state 128

    (99) BasicLit -> RUNE .

    PERIOD          reduce using rule 99 (BasicLit -> RUNE .)
    LBRACK          reduce using rule 99 (BasicLit -> RUNE .)
    LPAREN          reduce using rule 99 (BasicLit -> RUNE .)
    LOR             reduce using rule 99 (BasicLit -> RUNE .)
    LAND            reduce using rule 99 (BasicLit -> RUNE .)
    EQL             reduce using rule 99 (BasicLit -> RUNE .)
    NEQ             reduce using rule 99 (BasicLit -> RUNE .)
    LSS             reduce using rule 99 (BasicLit -> RUNE .)
    LEQ             reduce using rule 99 (BasicLit -> RUNE .)
    GTR             reduce using rule 99 (BasicLit -> RUNE .)
    GEQ             reduce using rule 99 (BasicLit -> RUNE .)
    ADD             reduce using rule 99 (BasicLit -> RUNE .)
    SUB             reduce using rule 99 (BasicLit -> RUNE .)
    OR              reduce using rule 99 (BasicLit -> RUNE .)
    XOR             reduce using rule 99 (BasicLit -> RUNE .)
    MUL             reduce using rule 99 (BasicLit -> RUNE .)
    QUO             reduce using rule 99 (BasicLit -> RUNE .)
    REM             reduce using rule 99 (BasicLit -> RUNE .)
    SHL             reduce using rule 99 (BasicLit -> RUNE .)
    SHR             reduce using rule 99 (BasicLit -> RUNE .)
    AND             reduce using rule 99 (BasicLit -> RUNE .)
    AND_NOT         reduce using rule 99 (BasicLit -> RUNE .)
    RBRACK          reduce using rule 99 (BasicLit -> RUNE .)
    COMMA           reduce using rule 99 (BasicLit -> RUNE .)
    SEMICOLON       reduce using rule 99 (BasicLit -> RUNE .)
    INC             reduce using rule 99 (BasicLit -> RUNE .)
    DEC             reduce using rule 99 (BasicLit -> RUNE .)
    ASSIGN          reduce using rule 99 (BasicLit -> RUNE .)
    ADD_ASSIGN      reduce using rule 99 (BasicLit -> RUNE .)
    SUB_ASSIGN      reduce using rule 99 (BasicLit -> RUNE .)
    OR_ASSIGN       reduce using rule 99 (BasicLit -> RUNE .)
    XOR_ASSIGN      reduce using rule 99 (BasicLit -> RUNE .)
    MUL_ASSIGN      reduce using rule 99 (BasicLit -> RUNE .)
    QUO_ASSIGN      reduce using rule 99 (BasicLit -> RUNE .)
    REM_ASSIGN      reduce using rule 99 (BasicLit -> RUNE .)
    AND_ASSIGN      reduce using rule 99 (BasicLit -> RUNE .)
    SHL_ASSIGN      reduce using rule 99 (BasicLit -> RUNE .)
    SHR_ASSIGN      reduce using rule 99 (BasicLit -> RUNE .)
    AND_NOT_ASSIGN  reduce using rule 99 (BasicLit -> RUNE .)
    RPAREN          reduce using rule 99 (BasicLit -> RUNE .)
    LBRACE          reduce using rule 99 (BasicLit -> RUNE .)
    COLON           reduce using rule 99 (BasicLit -> RUNE .)
    RBRACE          reduce using rule 99 (BasicLit -> RUNE .)
    ELSE            reduce using rule 99 (BasicLit -> RUNE .)


state 129

    (100) BasicLit -> STRING .

    PERIOD          reduce using rule 100 (BasicLit -> STRING .)
    LBRACK          reduce using rule 100 (BasicLit -> STRING .)
    LPAREN          reduce using rule 100 (BasicLit -> STRING .)
    LOR             reduce using rule 100 (BasicLit -> STRING .)
    LAND            reduce using rule 100 (BasicLit -> STRING .)
    EQL             reduce using rule 100 (BasicLit -> STRING .)
    NEQ             reduce using rule 100 (BasicLit -> STRING .)
    LSS             reduce using rule 100 (BasicLit -> STRING .)
    LEQ             reduce using rule 100 (BasicLit -> STRING .)
    GTR             reduce using rule 100 (BasicLit -> STRING .)
    GEQ             reduce using rule 100 (BasicLit -> STRING .)
    ADD             reduce using rule 100 (BasicLit -> STRING .)
    SUB             reduce using rule 100 (BasicLit -> STRING .)
    OR              reduce using rule 100 (BasicLit -> STRING .)
    XOR             reduce using rule 100 (BasicLit -> STRING .)
    MUL             reduce using rule 100 (BasicLit -> STRING .)
    QUO             reduce using rule 100 (BasicLit -> STRING .)
    REM             reduce using rule 100 (BasicLit -> STRING .)
    SHL             reduce using rule 100 (BasicLit -> STRING .)
    SHR             reduce using rule 100 (BasicLit -> STRING .)
    AND             reduce using rule 100 (BasicLit -> STRING .)
    AND_NOT         reduce using rule 100 (BasicLit -> STRING .)
    RBRACK          reduce using rule 100 (BasicLit -> STRING .)
    COMMA           reduce using rule 100 (BasicLit -> STRING .)
    SEMICOLON       reduce using rule 100 (BasicLit -> STRING .)
    INC             reduce using rule 100 (BasicLit -> STRING .)
    DEC             reduce using rule 100 (BasicLit -> STRING .)
    ASSIGN          reduce using rule 100 (BasicLit -> STRING .)
    ADD_ASSIGN      reduce using rule 100 (BasicLit -> STRING .)
    SUB_ASSIGN      reduce using rule 100 (BasicLit -> STRING .)
    OR_ASSIGN       reduce using rule 100 (BasicLit -> STRING .)
    XOR_ASSIGN      reduce using rule 100 (BasicLit -> STRING .)
    MUL_ASSIGN      reduce using rule 100 (BasicLit -> STRING .)
    QUO_ASSIGN      reduce using rule 100 (BasicLit -> STRING .)
    REM_ASSIGN      reduce using rule 100 (BasicLit -> STRING .)
    AND_ASSIGN      reduce using rule 100 (BasicLit -> STRING .)
    SHL_ASSIGN      reduce using rule 100 (BasicLit -> STRING .)
    SHR_ASSIGN      reduce using rule 100 (BasicLit -> STRING .)
    AND_NOT_ASSIGN  reduce using rule 100 (BasicLit -> STRING .)
    RPAREN          reduce using rule 100 (BasicLit -> STRING .)
    LBRACE          reduce using rule 100 (BasicLit -> STRING .)
    COLON           reduce using rule 100 (BasicLit -> STRING .)
    RBRACE          reduce using rule 100 (BasicLit -> STRING .)
    ELSE            reduce using rule 100 (BasicLit -> STRING .)


state 130

    (101) CompositeLit -> StructType . LiteralValue
    (31) TypeLit -> StructType .
    (106) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (107) LiteralValue -> . LBRACE ElementList RBRACE
    (108) LiteralValue -> . LBRACE RBRACE

    LPAREN          reduce using rule 31 (TypeLit -> StructType .)
    LBRACE          shift and go to state 239

    LiteralValue                   shift and go to state 240

state 131

    (102) CompositeLit -> ArrayType . LiteralValue
    (30) TypeLit -> ArrayType .
    (106) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (107) LiteralValue -> . LBRACE ElementList RBRACE
    (108) LiteralValue -> . LBRACE RBRACE

    LPAREN          reduce using rule 30 (TypeLit -> ArrayType .)
    LBRACE          shift and go to state 239

    LiteralValue                   shift and go to state 241

state 132

    (103) CompositeLit -> SliceType . LiteralValue
    (33) TypeLit -> SliceType .
    (106) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (107) LiteralValue -> . LBRACE ElementList RBRACE
    (108) LiteralValue -> . LBRACE RBRACE

    LPAREN          reduce using rule 33 (TypeLit -> SliceType .)
    LBRACE          shift and go to state 239

    LiteralValue                   shift and go to state 242

state 133

    (104) CompositeLit -> MapType . LiteralValue
    (34) TypeLit -> MapType .
    (106) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (107) LiteralValue -> . LBRACE ElementList RBRACE
    (108) LiteralValue -> . LBRACE RBRACE

    LPAREN          reduce using rule 34 (TypeLit -> MapType .)
    LBRACE          shift and go to state 239

    LiteralValue                   shift and go to state 243

state 134

    (120) FunctionLit -> FUNC . Signature FunctionBody
    (54) FunctionType -> FUNC . Signature
    (164) Signature -> . Parameters Result
    (165) Signature -> . Parameters
    (166) Parameters -> . LPAREN RPAREN
    (167) Parameters -> . LPAREN ParameterList RPAREN
    (168) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 51

    Signature                      shift and go to state 244
    Parameters                     shift and go to state 50

state 135

    (39) StructType -> STRUCT LBRACE . FieldDeclMult RBRACE
    (40) FieldDeclMult -> . FieldDecl SEMICOLON FieldDeclMult
    (41) FieldDeclMult -> .
    (42) FieldDecl -> . IdentifierList Type
    (43) FieldDecl -> . EmbeddedField
    (44) FieldDecl -> . IdentifierList Type Tag
    (45) FieldDecl -> . EmbeddedField Tag
    (26) IdentifierList -> . IDENT IdentifierOth
    (47) EmbeddedField -> . MUL TypeName
    (48) EmbeddedField -> . TypeName
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart

    RBRACE          reduce using rule 41 (FieldDeclMult -> .)
    IDENT           shift and go to state 95
    MUL             shift and go to state 249

    FieldDeclMult                  shift and go to state 245
    FieldDecl                      shift and go to state 246
    IdentifierList                 shift and go to state 247
    EmbeddedField                  shift and go to state 248
    TypeName                       shift and go to state 250

state 136

    (49) PointerType -> MUL BaseType .

    ASSIGN          reduce using rule 49 (PointerType -> MUL BaseType .)
    SEMICOLON       reduce using rule 49 (PointerType -> MUL BaseType .)
    LBRACE          reduce using rule 49 (PointerType -> MUL BaseType .)
    RPAREN          reduce using rule 49 (PointerType -> MUL BaseType .)
    COMMA           reduce using rule 49 (PointerType -> MUL BaseType .)
    LPAREN          reduce using rule 49 (PointerType -> MUL BaseType .)
    IDENT           reduce using rule 49 (PointerType -> MUL BaseType .)
    LBRACK          reduce using rule 49 (PointerType -> MUL BaseType .)
    STRUCT          reduce using rule 49 (PointerType -> MUL BaseType .)
    MUL             reduce using rule 49 (PointerType -> MUL BaseType .)
    MAP             reduce using rule 49 (PointerType -> MUL BaseType .)
    FUNC            reduce using rule 49 (PointerType -> MUL BaseType .)
    RBRACK          reduce using rule 49 (PointerType -> MUL BaseType .)
    STRING          reduce using rule 49 (PointerType -> MUL BaseType .)
    COLON           reduce using rule 49 (PointerType -> MUL BaseType .)


state 137

    (50) BaseType -> Type .

    LBRACE          reduce using rule 50 (BaseType -> Type .)
    SEMICOLON       reduce using rule 50 (BaseType -> Type .)
    ASSIGN          reduce using rule 50 (BaseType -> Type .)
    RPAREN          reduce using rule 50 (BaseType -> Type .)
    COMMA           reduce using rule 50 (BaseType -> Type .)
    LPAREN          reduce using rule 50 (BaseType -> Type .)
    IDENT           reduce using rule 50 (BaseType -> Type .)
    LBRACK          reduce using rule 50 (BaseType -> Type .)
    STRUCT          reduce using rule 50 (BaseType -> Type .)
    MUL             reduce using rule 50 (BaseType -> Type .)
    MAP             reduce using rule 50 (BaseType -> Type .)
    FUNC            reduce using rule 50 (BaseType -> Type .)
    RBRACK          reduce using rule 50 (BaseType -> Type .)
    STRING          reduce using rule 50 (BaseType -> Type .)
    COLON           reduce using rule 50 (BaseType -> Type .)


state 138

    (52) MapType -> MAP LBRACK . KeyType RBRACK ElementType
    (53) KeyType -> . Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    KeyType                        shift and go to state 251
    Type                           shift and go to state 252
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 139

    (54) FunctionType -> FUNC Signature .

    ASSIGN          reduce using rule 54 (FunctionType -> FUNC Signature .)
    SEMICOLON       reduce using rule 54 (FunctionType -> FUNC Signature .)
    LBRACE          reduce using rule 54 (FunctionType -> FUNC Signature .)
    RPAREN          reduce using rule 54 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 54 (FunctionType -> FUNC Signature .)
    LPAREN          reduce using rule 54 (FunctionType -> FUNC Signature .)
    IDENT           reduce using rule 54 (FunctionType -> FUNC Signature .)
    LBRACK          reduce using rule 54 (FunctionType -> FUNC Signature .)
    STRUCT          reduce using rule 54 (FunctionType -> FUNC Signature .)
    MUL             reduce using rule 54 (FunctionType -> FUNC Signature .)
    MAP             reduce using rule 54 (FunctionType -> FUNC Signature .)
    FUNC            reduce using rule 54 (FunctionType -> FUNC Signature .)
    RBRACK          reduce using rule 54 (FunctionType -> FUNC Signature .)
    STRING          reduce using rule 54 (FunctionType -> FUNC Signature .)
    COLON           reduce using rule 54 (FunctionType -> FUNC Signature .)


state 140

    (27) IdentifierOth -> COMMA IDENT . IdentifierOth
    (27) IdentifierOth -> . COMMA IDENT IdentifierOth
    (28) IdentifierOth -> .

    COMMA           shift and go to state 71
    LPAREN          reduce using rule 28 (IdentifierOth -> .)
    IDENT           reduce using rule 28 (IdentifierOth -> .)
    LBRACK          reduce using rule 28 (IdentifierOth -> .)
    STRUCT          reduce using rule 28 (IdentifierOth -> .)
    MUL             reduce using rule 28 (IdentifierOth -> .)
    MAP             reduce using rule 28 (IdentifierOth -> .)
    FUNC            reduce using rule 28 (IdentifierOth -> .)
    ASSIGN          reduce using rule 28 (IdentifierOth -> .)
    DEFINE          reduce using rule 28 (IdentifierOth -> .)

    IdentifierOth                  shift and go to state 253

state 141

    (153) VarDecl -> VAR LPAREN VarMult RPAREN .

    SEMICOLON       reduce using rule 153 (VarDecl -> VAR LPAREN VarMult RPAREN .)


state 142

    (154) VarMult -> VarSpec SEMICOLON . VarMult
    (154) VarMult -> . VarSpec SEMICOLON VarMult
    (155) VarMult -> .
    (156) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (157) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (158) VarSpec -> . IdentifierList Type
    (26) IdentifierList -> . IDENT IdentifierOth

    RPAREN          reduce using rule 155 (VarMult -> .)
    IDENT           shift and go to state 34

    VarSpec                        shift and go to state 73
    VarMult                        shift and go to state 254
    IdentifierList                 shift and go to state 37

state 143

    (156) VarSpec -> IdentifierList Type ASSIGN . ExpressionList
    (55) ExpressionList -> . Expr ExprOth
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Type                           shift and go to state 119
    ExpressionList                 shift and go to state 255
    Expr                           shift and go to state 145
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 144

    (157) VarSpec -> IdentifierList ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 157 (VarSpec -> IdentifierList ASSIGN ExpressionList .)


state 145

    (55) ExpressionList -> Expr . ExprOth
    (57) Expr -> Expr . BinOp Expr
    (88) ExprOth -> . COMMA Expr ExprOth
    (89) ExprOth -> .
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 257
    SEMICOLON       reduce using rule 89 (ExprOth -> .)
    RPAREN          reduce using rule 89 (ExprOth -> .)
    LBRACE          reduce using rule 89 (ExprOth -> .)
    COLON           reduce using rule 89 (ExprOth -> .)
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

  ! COMMA           [ reduce using rule 89 (ExprOth -> .) ]

    ExprOth                        shift and go to state 256
    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 146

    (145) TypeDecl -> TYPE LPAREN TypeSpecMult RPAREN .

    SEMICOLON       reduce using rule 145 (TypeDecl -> TYPE LPAREN TypeSpecMult RPAREN .)


state 147

    (146) TypeSpecMult -> TypeSpec SEMICOLON . TypeSpecMult
    (146) TypeSpecMult -> . TypeSpec SEMICOLON TypeSpecMult
    (147) TypeSpecMult -> .
    (148) TypeSpec -> . AliasDecl
    (149) TypeSpec -> . Typedef
    (150) AliasDecl -> . IDENT ASSIGN Type
    (151) Typedef -> . IDENT Type

    RPAREN          reduce using rule 147 (TypeSpecMult -> .)
    IDENT           shift and go to state 42

    TypeSpec                       shift and go to state 77
    TypeSpecMult                   shift and go to state 258
    AliasDecl                      shift and go to state 40
    Typedef                        shift and go to state 41

state 148

    (150) AliasDecl -> IDENT ASSIGN Type .

    SEMICOLON       reduce using rule 150 (AliasDecl -> IDENT ASSIGN Type .)


state 149

    (8) ImportSpecMult -> ImportSpec SEMICOLON ImportSpecMult .

    RPAREN          reduce using rule 8 (ImportSpecMult -> ImportSpec SEMICOLON ImportSpecMult .)


state 150

    (223) Block -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 259


state 151

    (175) StatementList -> Statement . SEMICOLON StatementList

    SEMICOLON       shift and go to state 260


state 152

    (177) Statement -> Decl .

    SEMICOLON       reduce using rule 177 (Statement -> Decl .)


state 153

    (178) Statement -> LabeledStmt .

    SEMICOLON       reduce using rule 178 (Statement -> LabeledStmt .)


state 154

    (179) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 179 (Statement -> SimpleStmt .)


state 155

    (180) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 180 (Statement -> GotoStmt .)


state 156

    (181) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 181 (Statement -> ReturnStmt .)


state 157

    (182) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 182 (Statement -> BreakStmt .)


state 158

    (183) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 183 (Statement -> ContinueStmt .)


state 159

    (184) Statement -> FallthroughStmt .

    SEMICOLON       reduce using rule 184 (Statement -> FallthroughStmt .)


state 160

    (185) Statement -> Block .

    SEMICOLON       reduce using rule 185 (Statement -> Block .)


state 161

    (186) Statement -> IfStmt .

    SEMICOLON       reduce using rule 186 (Statement -> IfStmt .)


state 162

    (187) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 187 (Statement -> SwitchStmt .)


state 163

    (188) Statement -> ForStmt .

    SEMICOLON       reduce using rule 188 (Statement -> ForStmt .)


state 164

    (189) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 261


state 165

    (191) SimpleStmt -> EmptyStmt .

    SEMICOLON       reduce using rule 191 (SimpleStmt -> EmptyStmt .)
    LBRACE          reduce using rule 191 (SimpleStmt -> EmptyStmt .)


state 166

    (192) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 192 (SimpleStmt -> ExpressionStmt .)
    LBRACE          reduce using rule 192 (SimpleStmt -> ExpressionStmt .)


state 167

    (193) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 193 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 193 (SimpleStmt -> IncDecStmt .)


state 168

    (194) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 194 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 194 (SimpleStmt -> Assignment .)


state 169

    (195) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 195 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 195 (SimpleStmt -> ShortVarDecl .)


state 170

    (221) GotoStmt -> GOTO . Label
    (190) Label -> . IDENT

    IDENT           shift and go to state 263

    Label                          shift and go to state 262

state 171

    (215) ReturnStmt -> RETURN . ExpressionList
    (216) ReturnStmt -> RETURN .
    (55) ExpressionList -> . Expr ExprOth
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    SEMICOLON       reduce using rule 216 (ReturnStmt -> RETURN .)
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    ExpressionList                 shift and go to state 264
    Expr                           shift and go to state 145
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 172

    (200) Assignment -> ExpressionList . assign_op ExpressionList
    (201) assign_op -> . add_op_assign
    (202) assign_op -> . mul_op_assign
    (203) assign_op -> . ASSIGN
    (204) add_op_assign -> . ADD_ASSIGN
    (205) add_op_assign -> . SUB_ASSIGN
    (206) add_op_assign -> . OR_ASSIGN
    (207) add_op_assign -> . XOR_ASSIGN
    (208) mul_op_assign -> . MUL_ASSIGN
    (209) mul_op_assign -> . QUO_ASSIGN
    (210) mul_op_assign -> . REM_ASSIGN
    (211) mul_op_assign -> . AND_ASSIGN
    (212) mul_op_assign -> . SHL_ASSIGN
    (213) mul_op_assign -> . SHR_ASSIGN
    (214) mul_op_assign -> . AND_NOT_ASSIGN

    ASSIGN          shift and go to state 268
    ADD_ASSIGN      shift and go to state 269
    SUB_ASSIGN      shift and go to state 270
    OR_ASSIGN       shift and go to state 271
    XOR_ASSIGN      shift and go to state 272
    MUL_ASSIGN      shift and go to state 273
    QUO_ASSIGN      shift and go to state 274
    REM_ASSIGN      shift and go to state 275
    AND_ASSIGN      shift and go to state 276
    SHL_ASSIGN      shift and go to state 277
    SHR_ASSIGN      shift and go to state 278
    AND_NOT_ASSIGN  shift and go to state 279

    assign_op                      shift and go to state 265
    add_op_assign                  shift and go to state 266
    mul_op_assign                  shift and go to state 267

state 173

    (217) BreakStmt -> BREAK . Label
    (218) BreakStmt -> BREAK .
    (190) Label -> . IDENT

    SEMICOLON       reduce using rule 218 (BreakStmt -> BREAK .)
    IDENT           shift and go to state 263

    Label                          shift and go to state 280

state 174

    (219) ContinueStmt -> CONTINUE . Label
    (220) ContinueStmt -> CONTINUE .
    (190) Label -> . IDENT

    SEMICOLON       reduce using rule 220 (ContinueStmt -> CONTINUE .)
    IDENT           shift and go to state 263

    Label                          shift and go to state 281

state 175

    (222) FallthroughStmt -> FALLTHROUGH .

    SEMICOLON       reduce using rule 222 (FallthroughStmt -> FALLTHROUGH .)


state 176

    (224) IfStmt -> IF . Expr Block else_stmt
    (225) IfStmt -> IF . SimpleStmt SEMICOLON Expr else_stmt
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (191) SimpleStmt -> . EmptyStmt
    (192) SimpleStmt -> . ExpressionStmt
    (193) SimpleStmt -> . IncDecStmt
    (194) SimpleStmt -> . Assignment
    (195) SimpleStmt -> . ShortVarDecl
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (196) EmptyStmt -> .
    (197) ExpressionStmt -> . Expr
    (198) IncDecStmt -> . Expr INC
    (199) IncDecStmt -> . Expr DEC
    (200) Assignment -> . ExpressionList assign_op ExpressionList
    (159) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (55) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    SEMICOLON       reduce using rule 196 (EmptyStmt -> .)
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    IDENT           shift and go to state 95
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Expr                           shift and go to state 282
    SimpleStmt                     shift and go to state 283
    UnaryExpr                      shift and go to state 105
    EmptyStmt                      shift and go to state 165
    ExpressionStmt                 shift and go to state 166
    IncDecStmt                     shift and go to state 167
    Assignment                     shift and go to state 168
    ShortVarDecl                   shift and go to state 169
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    ExpressionList                 shift and go to state 172
    IdentifierList                 shift and go to state 182
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 177

    (197) ExpressionStmt -> Expr .
    (198) IncDecStmt -> Expr . INC
    (199) IncDecStmt -> Expr . DEC
    (57) Expr -> Expr . BinOp Expr
    (55) ExpressionList -> Expr . ExprOth
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (88) ExprOth -> . COMMA Expr ExprOth
    (89) ExprOth -> .
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    SEMICOLON       reduce using rule 197 (ExpressionStmt -> Expr .)
    LBRACE          reduce using rule 197 (ExpressionStmt -> Expr .)
    INC             shift and go to state 284
    DEC             shift and go to state 285
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    COMMA           shift and go to state 257
    ASSIGN          reduce using rule 89 (ExprOth -> .)
    ADD_ASSIGN      reduce using rule 89 (ExprOth -> .)
    SUB_ASSIGN      reduce using rule 89 (ExprOth -> .)
    OR_ASSIGN       reduce using rule 89 (ExprOth -> .)
    XOR_ASSIGN      reduce using rule 89 (ExprOth -> .)
    MUL_ASSIGN      reduce using rule 89 (ExprOth -> .)
    QUO_ASSIGN      reduce using rule 89 (ExprOth -> .)
    REM_ASSIGN      reduce using rule 89 (ExprOth -> .)
    AND_ASSIGN      reduce using rule 89 (ExprOth -> .)
    SHL_ASSIGN      reduce using rule 89 (ExprOth -> .)
    SHR_ASSIGN      reduce using rule 89 (ExprOth -> .)
    AND_NOT_ASSIGN  reduce using rule 89 (ExprOth -> .)
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    ExprOth                        shift and go to state 256
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 178

    (231) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 231 (SwitchStmt -> ExprSwitchStmt .)


state 179

    (232) SwitchStmt -> TypeSwitchStmt .

    SEMICOLON       reduce using rule 232 (SwitchStmt -> TypeSwitchStmt .)


state 180

    (253) ForStmt -> FOR . Condition Block
    (254) ForStmt -> FOR . ForClause Block
    (255) ForStmt -> FOR . RangeClause Block
    (256) Condition -> . Expr
    (257) ForClause -> . InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt
    (262) RangeClause -> . RangeList RANGE Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (258) InitStmt -> . SimpleStmt
    (263) RangeList -> . ExpressionList ASSIGN
    (264) RangeList -> . IdentifierList DEFINE
    (265) RangeList -> .
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (191) SimpleStmt -> . EmptyStmt
    (192) SimpleStmt -> . ExpressionStmt
    (193) SimpleStmt -> . IncDecStmt
    (194) SimpleStmt -> . Assignment
    (195) SimpleStmt -> . ShortVarDecl
    (55) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (196) EmptyStmt -> .
    (197) ExpressionStmt -> . Expr
    (198) IncDecStmt -> . Expr INC
    (199) IncDecStmt -> . Expr DEC
    (200) Assignment -> . ExpressionList assign_op ExpressionList
    (159) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    RANGE           reduce using rule 265 (RangeList -> .)
    IDENT           shift and go to state 95
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    SEMICOLON       reduce using rule 196 (EmptyStmt -> .)
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Condition                      shift and go to state 286
    ForClause                      shift and go to state 287
    RangeClause                    shift and go to state 288
    Expr                           shift and go to state 289
    InitStmt                       shift and go to state 290
    RangeList                      shift and go to state 291
    UnaryExpr                      shift and go to state 105
    SimpleStmt                     shift and go to state 292
    ExpressionList                 shift and go to state 293
    IdentifierList                 shift and go to state 294
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    EmptyStmt                      shift and go to state 165
    ExpressionStmt                 shift and go to state 166
    IncDecStmt                     shift and go to state 167
    Assignment                     shift and go to state 168
    ShortVarDecl                   shift and go to state 169
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 181

    (190) Label -> IDENT .
    (26) IdentifierList -> IDENT . IdentifierOth
    (269) TypeName -> IDENT .
    (270) TypeName -> IDENT . QualifiedIdentPart
    (27) IdentifierOth -> . COMMA IDENT IdentifierOth
    (28) IdentifierOth -> .
    (29) QualifiedIdentPart -> . PERIOD IDENT

    COLON           reduce using rule 190 (Label -> IDENT .)
    LBRACE          reduce using rule 269 (TypeName -> IDENT .)
    LPAREN          reduce using rule 269 (TypeName -> IDENT .)
    COMMA           shift and go to state 71
    DEFINE          reduce using rule 28 (IdentifierOth -> .)
    PERIOD          shift and go to state 101

    IdentifierOth                  shift and go to state 70
    QualifiedIdentPart             shift and go to state 100

state 182

    (159) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 295


state 183

    (233) ExprSwitchStmt -> SWITCH . SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE
    (241) TypeSwitchStmt -> SWITCH . SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (229) SimpleStmtOpt -> .
    (230) SimpleStmtOpt -> . SimpleStmt SEMICOLON
    (191) SimpleStmt -> . EmptyStmt
    (192) SimpleStmt -> . ExpressionStmt
    (193) SimpleStmt -> . IncDecStmt
    (194) SimpleStmt -> . Assignment
    (195) SimpleStmt -> . ShortVarDecl
    (196) EmptyStmt -> .
    (197) ExpressionStmt -> . Expr
    (198) IncDecStmt -> . Expr INC
    (199) IncDecStmt -> . Expr DEC
    (200) Assignment -> . ExpressionList assign_op ExpressionList
    (159) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (55) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAG resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
    LBRACE          reduce using rule 229 (SimpleStmtOpt -> .)
    SEMICOLON       reduce using rule 196 (EmptyStmt -> .)
    IDENT           shift and go to state 95
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! ADD             [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! SUB             [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! NOT             [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! XOR             [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! MUL             [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! AND             [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! LPAREN          [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! INT             [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! FLOAT           [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! IMAG            [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! RUNE            [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! STRING          [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! FUNC            [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! PERIOD          [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! STRUCT          [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! LBRACK          [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! MAP             [ reduce using rule 229 (SimpleStmtOpt -> .) ]
  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    SimpleStmtOpt                  shift and go to state 296
    SimpleStmt                     shift and go to state 297
    EmptyStmt                      shift and go to state 165
    ExpressionStmt                 shift and go to state 166
    IncDecStmt                     shift and go to state 167
    Assignment                     shift and go to state 168
    ShortVarDecl                   shift and go to state 169
    Expr                           shift and go to state 177
    ExpressionList                 shift and go to state 172
    IdentifierList                 shift and go to state 182
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 184

    (268) Type -> LPAREN Type . RPAREN
    (171) ParameterDecl -> Type .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 192
    COMMA           reduce using rule 171 (ParameterDecl -> Type .)

  ! RPAREN          [ reduce using rule 171 (ParameterDecl -> Type .) ]


state 185

    (269) TypeName -> IDENT .
    (270) TypeName -> IDENT . QualifiedIdentPart
    (26) IdentifierList -> IDENT . IdentifierOth
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (27) IdentifierOth -> . COMMA IDENT IdentifierOth
    (28) IdentifierOth -> .

    RPAREN          reduce using rule 269 (TypeName -> IDENT .)
    PERIOD          shift and go to state 101
    COMMA           shift and go to state 71
    LPAREN          reduce using rule 28 (IdentifierOth -> .)
    IDENT           reduce using rule 28 (IdentifierOth -> .)
    LBRACK          reduce using rule 28 (IdentifierOth -> .)
    STRUCT          reduce using rule 28 (IdentifierOth -> .)
    MUL             reduce using rule 28 (IdentifierOth -> .)
    MAP             reduce using rule 28 (IdentifierOth -> .)
    FUNC            reduce using rule 28 (IdentifierOth -> .)

  ! COMMA           [ reduce using rule 269 (TypeName -> IDENT .) ]

    QualifiedIdentPart             shift and go to state 100
    IdentifierOth                  shift and go to state 70

state 186

    (167) Parameters -> LPAREN ParameterList RPAREN .

    LPAREN          reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    IDENT           reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    LBRACK          reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    STRUCT          reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    MUL             reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    MAP             reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    FUNC            reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    LBRACE          reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    SEMICOLON       reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    ASSIGN          reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    RPAREN          reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    COMMA           reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    RBRACK          reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    STRING          reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)
    COLON           reduce using rule 167 (Parameters -> LPAREN ParameterList RPAREN .)


state 187

    (168) Parameters -> LPAREN ParameterList COMMA . RPAREN

    RPAREN          shift and go to state 298


state 188

    (169) ParameterList -> COMMA ParameterDecl . ParameterList
    (169) ParameterList -> . COMMA ParameterDecl ParameterList
    (170) ParameterList -> . ParameterDecl
    (171) ParameterDecl -> . Type
    (172) ParameterDecl -> . IdentifierList Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (26) IdentifierList -> . IDENT IdentifierOth
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    COMMA           shift and go to state 91
    LPAREN          shift and go to state 57
    IDENT           shift and go to state 95
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    ParameterDecl                  shift and go to state 92
    ParameterList                  shift and go to state 299
    Type                           shift and go to state 93
    IdentifierList                 shift and go to state 94
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 189

    (172) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 172 (ParameterDecl -> IdentifierList Type .)
    COMMA           reduce using rule 172 (ParameterDecl -> IdentifierList Type .)
    LPAREN          reduce using rule 172 (ParameterDecl -> IdentifierList Type .)
    IDENT           reduce using rule 172 (ParameterDecl -> IdentifierList Type .)
    LBRACK          reduce using rule 172 (ParameterDecl -> IdentifierList Type .)
    STRUCT          reduce using rule 172 (ParameterDecl -> IdentifierList Type .)
    MUL             reduce using rule 172 (ParameterDecl -> IdentifierList Type .)
    MAP             reduce using rule 172 (ParameterDecl -> IdentifierList Type .)
    FUNC            reduce using rule 172 (ParameterDecl -> IdentifierList Type .)


state 190

    (23) ConstSpecMult -> ConstSpec SEMICOLON ConstSpecMult .

    RPAREN          reduce using rule 23 (ConstSpecMult -> ConstSpec SEMICOLON ConstSpecMult .)


state 191

    (25) ConstSpec -> IdentifierList Type ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 25 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)


state 192

    (268) Type -> LPAREN Type RPAREN .

    ASSIGN          reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    LPAREN          reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    IDENT           reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    LBRACK          reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    STRUCT          reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    MUL             reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    MAP             reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    FUNC            reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    RBRACK          reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    STRING          reduce using rule 268 (Type -> LPAREN Type RPAREN .)
    COLON           reduce using rule 268 (Type -> LPAREN Type RPAREN .)


state 193

    (29) QualifiedIdentPart -> PERIOD IDENT .

    ASSIGN          reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    SEMICOLON       reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    LBRACE          reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    RPAREN          reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    COMMA           reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    LPAREN          reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    IDENT           reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    LBRACK          reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    STRUCT          reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    MUL             reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    MAP             reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    FUNC            reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    RBRACK          reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    STRING          reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)
    COLON           reduce using rule 29 (QualifiedIdentPart -> PERIOD IDENT .)


state 194

    (36) ArrayType -> LBRACK ArrayLength RBRACK . ElementType
    (38) ElementType -> . Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    ElementType                    shift and go to state 300
    Type                           shift and go to state 196
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 195

    (51) SliceType -> LBRACK RBRACK ElementType .

    ASSIGN          reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    SEMICOLON       reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    LBRACE          reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    RPAREN          reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    COMMA           reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    LPAREN          reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    IDENT           reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    LBRACK          reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    STRUCT          reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    MUL             reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    MAP             reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    FUNC            reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    RBRACK          reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    STRING          reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)
    COLON           reduce using rule 51 (SliceType -> LBRACK RBRACK ElementType .)


state 196

    (38) ElementType -> Type .

    LBRACE          reduce using rule 38 (ElementType -> Type .)
    SEMICOLON       reduce using rule 38 (ElementType -> Type .)
    ASSIGN          reduce using rule 38 (ElementType -> Type .)
    RPAREN          reduce using rule 38 (ElementType -> Type .)
    COMMA           reduce using rule 38 (ElementType -> Type .)
    LPAREN          reduce using rule 38 (ElementType -> Type .)
    IDENT           reduce using rule 38 (ElementType -> Type .)
    LBRACK          reduce using rule 38 (ElementType -> Type .)
    STRUCT          reduce using rule 38 (ElementType -> Type .)
    MUL             reduce using rule 38 (ElementType -> Type .)
    MAP             reduce using rule 38 (ElementType -> Type .)
    FUNC            reduce using rule 38 (ElementType -> Type .)
    RBRACK          reduce using rule 38 (ElementType -> Type .)
    STRING          reduce using rule 38 (ElementType -> Type .)
    COLON           reduce using rule 38 (ElementType -> Type .)


state 197

    (57) Expr -> Expr BinOp . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Expr                           shift and go to state 301
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 198

    (60) BinOp -> LOR .

    ADD             reduce using rule 60 (BinOp -> LOR .)
    SUB             reduce using rule 60 (BinOp -> LOR .)
    NOT             reduce using rule 60 (BinOp -> LOR .)
    XOR             reduce using rule 60 (BinOp -> LOR .)
    MUL             reduce using rule 60 (BinOp -> LOR .)
    AND             reduce using rule 60 (BinOp -> LOR .)
    LPAREN          reduce using rule 60 (BinOp -> LOR .)
    INT             reduce using rule 60 (BinOp -> LOR .)
    FLOAT           reduce using rule 60 (BinOp -> LOR .)
    IMAG            reduce using rule 60 (BinOp -> LOR .)
    RUNE            reduce using rule 60 (BinOp -> LOR .)
    STRING          reduce using rule 60 (BinOp -> LOR .)
    FUNC            reduce using rule 60 (BinOp -> LOR .)
    PERIOD          reduce using rule 60 (BinOp -> LOR .)
    IDENT           reduce using rule 60 (BinOp -> LOR .)
    STRUCT          reduce using rule 60 (BinOp -> LOR .)
    LBRACK          reduce using rule 60 (BinOp -> LOR .)
    MAP             reduce using rule 60 (BinOp -> LOR .)


state 199

    (61) BinOp -> LAND .

    ADD             reduce using rule 61 (BinOp -> LAND .)
    SUB             reduce using rule 61 (BinOp -> LAND .)
    NOT             reduce using rule 61 (BinOp -> LAND .)
    XOR             reduce using rule 61 (BinOp -> LAND .)
    MUL             reduce using rule 61 (BinOp -> LAND .)
    AND             reduce using rule 61 (BinOp -> LAND .)
    LPAREN          reduce using rule 61 (BinOp -> LAND .)
    INT             reduce using rule 61 (BinOp -> LAND .)
    FLOAT           reduce using rule 61 (BinOp -> LAND .)
    IMAG            reduce using rule 61 (BinOp -> LAND .)
    RUNE            reduce using rule 61 (BinOp -> LAND .)
    STRING          reduce using rule 61 (BinOp -> LAND .)
    FUNC            reduce using rule 61 (BinOp -> LAND .)
    PERIOD          reduce using rule 61 (BinOp -> LAND .)
    IDENT           reduce using rule 61 (BinOp -> LAND .)
    STRUCT          reduce using rule 61 (BinOp -> LAND .)
    LBRACK          reduce using rule 61 (BinOp -> LAND .)
    MAP             reduce using rule 61 (BinOp -> LAND .)


state 200

    (62) BinOp -> RelOp .

    ADD             reduce using rule 62 (BinOp -> RelOp .)
    SUB             reduce using rule 62 (BinOp -> RelOp .)
    NOT             reduce using rule 62 (BinOp -> RelOp .)
    XOR             reduce using rule 62 (BinOp -> RelOp .)
    MUL             reduce using rule 62 (BinOp -> RelOp .)
    AND             reduce using rule 62 (BinOp -> RelOp .)
    LPAREN          reduce using rule 62 (BinOp -> RelOp .)
    INT             reduce using rule 62 (BinOp -> RelOp .)
    FLOAT           reduce using rule 62 (BinOp -> RelOp .)
    IMAG            reduce using rule 62 (BinOp -> RelOp .)
    RUNE            reduce using rule 62 (BinOp -> RelOp .)
    STRING          reduce using rule 62 (BinOp -> RelOp .)
    FUNC            reduce using rule 62 (BinOp -> RelOp .)
    PERIOD          reduce using rule 62 (BinOp -> RelOp .)
    IDENT           reduce using rule 62 (BinOp -> RelOp .)
    STRUCT          reduce using rule 62 (BinOp -> RelOp .)
    LBRACK          reduce using rule 62 (BinOp -> RelOp .)
    MAP             reduce using rule 62 (BinOp -> RelOp .)


state 201

    (63) BinOp -> AddOp .

    ADD             reduce using rule 63 (BinOp -> AddOp .)
    SUB             reduce using rule 63 (BinOp -> AddOp .)
    NOT             reduce using rule 63 (BinOp -> AddOp .)
    XOR             reduce using rule 63 (BinOp -> AddOp .)
    MUL             reduce using rule 63 (BinOp -> AddOp .)
    AND             reduce using rule 63 (BinOp -> AddOp .)
    LPAREN          reduce using rule 63 (BinOp -> AddOp .)
    INT             reduce using rule 63 (BinOp -> AddOp .)
    FLOAT           reduce using rule 63 (BinOp -> AddOp .)
    IMAG            reduce using rule 63 (BinOp -> AddOp .)
    RUNE            reduce using rule 63 (BinOp -> AddOp .)
    STRING          reduce using rule 63 (BinOp -> AddOp .)
    FUNC            reduce using rule 63 (BinOp -> AddOp .)
    PERIOD          reduce using rule 63 (BinOp -> AddOp .)
    IDENT           reduce using rule 63 (BinOp -> AddOp .)
    STRUCT          reduce using rule 63 (BinOp -> AddOp .)
    LBRACK          reduce using rule 63 (BinOp -> AddOp .)
    MAP             reduce using rule 63 (BinOp -> AddOp .)


state 202

    (64) BinOp -> MulOp .

    ADD             reduce using rule 64 (BinOp -> MulOp .)
    SUB             reduce using rule 64 (BinOp -> MulOp .)
    NOT             reduce using rule 64 (BinOp -> MulOp .)
    XOR             reduce using rule 64 (BinOp -> MulOp .)
    MUL             reduce using rule 64 (BinOp -> MulOp .)
    AND             reduce using rule 64 (BinOp -> MulOp .)
    LPAREN          reduce using rule 64 (BinOp -> MulOp .)
    INT             reduce using rule 64 (BinOp -> MulOp .)
    FLOAT           reduce using rule 64 (BinOp -> MulOp .)
    IMAG            reduce using rule 64 (BinOp -> MulOp .)
    RUNE            reduce using rule 64 (BinOp -> MulOp .)
    STRING          reduce using rule 64 (BinOp -> MulOp .)
    FUNC            reduce using rule 64 (BinOp -> MulOp .)
    PERIOD          reduce using rule 64 (BinOp -> MulOp .)
    IDENT           reduce using rule 64 (BinOp -> MulOp .)
    STRUCT          reduce using rule 64 (BinOp -> MulOp .)
    LBRACK          reduce using rule 64 (BinOp -> MulOp .)
    MAP             reduce using rule 64 (BinOp -> MulOp .)


state 203

    (65) RelOp -> EQL .

    ADD             reduce using rule 65 (RelOp -> EQL .)
    SUB             reduce using rule 65 (RelOp -> EQL .)
    NOT             reduce using rule 65 (RelOp -> EQL .)
    XOR             reduce using rule 65 (RelOp -> EQL .)
    MUL             reduce using rule 65 (RelOp -> EQL .)
    AND             reduce using rule 65 (RelOp -> EQL .)
    LPAREN          reduce using rule 65 (RelOp -> EQL .)
    INT             reduce using rule 65 (RelOp -> EQL .)
    FLOAT           reduce using rule 65 (RelOp -> EQL .)
    IMAG            reduce using rule 65 (RelOp -> EQL .)
    RUNE            reduce using rule 65 (RelOp -> EQL .)
    STRING          reduce using rule 65 (RelOp -> EQL .)
    FUNC            reduce using rule 65 (RelOp -> EQL .)
    PERIOD          reduce using rule 65 (RelOp -> EQL .)
    IDENT           reduce using rule 65 (RelOp -> EQL .)
    STRUCT          reduce using rule 65 (RelOp -> EQL .)
    LBRACK          reduce using rule 65 (RelOp -> EQL .)
    MAP             reduce using rule 65 (RelOp -> EQL .)


state 204

    (66) RelOp -> NEQ .

    ADD             reduce using rule 66 (RelOp -> NEQ .)
    SUB             reduce using rule 66 (RelOp -> NEQ .)
    NOT             reduce using rule 66 (RelOp -> NEQ .)
    XOR             reduce using rule 66 (RelOp -> NEQ .)
    MUL             reduce using rule 66 (RelOp -> NEQ .)
    AND             reduce using rule 66 (RelOp -> NEQ .)
    LPAREN          reduce using rule 66 (RelOp -> NEQ .)
    INT             reduce using rule 66 (RelOp -> NEQ .)
    FLOAT           reduce using rule 66 (RelOp -> NEQ .)
    IMAG            reduce using rule 66 (RelOp -> NEQ .)
    RUNE            reduce using rule 66 (RelOp -> NEQ .)
    STRING          reduce using rule 66 (RelOp -> NEQ .)
    FUNC            reduce using rule 66 (RelOp -> NEQ .)
    PERIOD          reduce using rule 66 (RelOp -> NEQ .)
    IDENT           reduce using rule 66 (RelOp -> NEQ .)
    STRUCT          reduce using rule 66 (RelOp -> NEQ .)
    LBRACK          reduce using rule 66 (RelOp -> NEQ .)
    MAP             reduce using rule 66 (RelOp -> NEQ .)


state 205

    (67) RelOp -> LSS .

    ADD             reduce using rule 67 (RelOp -> LSS .)
    SUB             reduce using rule 67 (RelOp -> LSS .)
    NOT             reduce using rule 67 (RelOp -> LSS .)
    XOR             reduce using rule 67 (RelOp -> LSS .)
    MUL             reduce using rule 67 (RelOp -> LSS .)
    AND             reduce using rule 67 (RelOp -> LSS .)
    LPAREN          reduce using rule 67 (RelOp -> LSS .)
    INT             reduce using rule 67 (RelOp -> LSS .)
    FLOAT           reduce using rule 67 (RelOp -> LSS .)
    IMAG            reduce using rule 67 (RelOp -> LSS .)
    RUNE            reduce using rule 67 (RelOp -> LSS .)
    STRING          reduce using rule 67 (RelOp -> LSS .)
    FUNC            reduce using rule 67 (RelOp -> LSS .)
    PERIOD          reduce using rule 67 (RelOp -> LSS .)
    IDENT           reduce using rule 67 (RelOp -> LSS .)
    STRUCT          reduce using rule 67 (RelOp -> LSS .)
    LBRACK          reduce using rule 67 (RelOp -> LSS .)
    MAP             reduce using rule 67 (RelOp -> LSS .)


state 206

    (68) RelOp -> LEQ .

    ADD             reduce using rule 68 (RelOp -> LEQ .)
    SUB             reduce using rule 68 (RelOp -> LEQ .)
    NOT             reduce using rule 68 (RelOp -> LEQ .)
    XOR             reduce using rule 68 (RelOp -> LEQ .)
    MUL             reduce using rule 68 (RelOp -> LEQ .)
    AND             reduce using rule 68 (RelOp -> LEQ .)
    LPAREN          reduce using rule 68 (RelOp -> LEQ .)
    INT             reduce using rule 68 (RelOp -> LEQ .)
    FLOAT           reduce using rule 68 (RelOp -> LEQ .)
    IMAG            reduce using rule 68 (RelOp -> LEQ .)
    RUNE            reduce using rule 68 (RelOp -> LEQ .)
    STRING          reduce using rule 68 (RelOp -> LEQ .)
    FUNC            reduce using rule 68 (RelOp -> LEQ .)
    PERIOD          reduce using rule 68 (RelOp -> LEQ .)
    IDENT           reduce using rule 68 (RelOp -> LEQ .)
    STRUCT          reduce using rule 68 (RelOp -> LEQ .)
    LBRACK          reduce using rule 68 (RelOp -> LEQ .)
    MAP             reduce using rule 68 (RelOp -> LEQ .)


state 207

    (69) RelOp -> GTR .

    ADD             reduce using rule 69 (RelOp -> GTR .)
    SUB             reduce using rule 69 (RelOp -> GTR .)
    NOT             reduce using rule 69 (RelOp -> GTR .)
    XOR             reduce using rule 69 (RelOp -> GTR .)
    MUL             reduce using rule 69 (RelOp -> GTR .)
    AND             reduce using rule 69 (RelOp -> GTR .)
    LPAREN          reduce using rule 69 (RelOp -> GTR .)
    INT             reduce using rule 69 (RelOp -> GTR .)
    FLOAT           reduce using rule 69 (RelOp -> GTR .)
    IMAG            reduce using rule 69 (RelOp -> GTR .)
    RUNE            reduce using rule 69 (RelOp -> GTR .)
    STRING          reduce using rule 69 (RelOp -> GTR .)
    FUNC            reduce using rule 69 (RelOp -> GTR .)
    PERIOD          reduce using rule 69 (RelOp -> GTR .)
    IDENT           reduce using rule 69 (RelOp -> GTR .)
    STRUCT          reduce using rule 69 (RelOp -> GTR .)
    LBRACK          reduce using rule 69 (RelOp -> GTR .)
    MAP             reduce using rule 69 (RelOp -> GTR .)


state 208

    (70) RelOp -> GEQ .

    ADD             reduce using rule 70 (RelOp -> GEQ .)
    SUB             reduce using rule 70 (RelOp -> GEQ .)
    NOT             reduce using rule 70 (RelOp -> GEQ .)
    XOR             reduce using rule 70 (RelOp -> GEQ .)
    MUL             reduce using rule 70 (RelOp -> GEQ .)
    AND             reduce using rule 70 (RelOp -> GEQ .)
    LPAREN          reduce using rule 70 (RelOp -> GEQ .)
    INT             reduce using rule 70 (RelOp -> GEQ .)
    FLOAT           reduce using rule 70 (RelOp -> GEQ .)
    IMAG            reduce using rule 70 (RelOp -> GEQ .)
    RUNE            reduce using rule 70 (RelOp -> GEQ .)
    STRING          reduce using rule 70 (RelOp -> GEQ .)
    FUNC            reduce using rule 70 (RelOp -> GEQ .)
    PERIOD          reduce using rule 70 (RelOp -> GEQ .)
    IDENT           reduce using rule 70 (RelOp -> GEQ .)
    STRUCT          reduce using rule 70 (RelOp -> GEQ .)
    LBRACK          reduce using rule 70 (RelOp -> GEQ .)
    MAP             reduce using rule 70 (RelOp -> GEQ .)


state 209

    (71) AddOp -> ADD .

    ADD             reduce using rule 71 (AddOp -> ADD .)
    SUB             reduce using rule 71 (AddOp -> ADD .)
    NOT             reduce using rule 71 (AddOp -> ADD .)
    XOR             reduce using rule 71 (AddOp -> ADD .)
    MUL             reduce using rule 71 (AddOp -> ADD .)
    AND             reduce using rule 71 (AddOp -> ADD .)
    LPAREN          reduce using rule 71 (AddOp -> ADD .)
    INT             reduce using rule 71 (AddOp -> ADD .)
    FLOAT           reduce using rule 71 (AddOp -> ADD .)
    IMAG            reduce using rule 71 (AddOp -> ADD .)
    RUNE            reduce using rule 71 (AddOp -> ADD .)
    STRING          reduce using rule 71 (AddOp -> ADD .)
    FUNC            reduce using rule 71 (AddOp -> ADD .)
    PERIOD          reduce using rule 71 (AddOp -> ADD .)
    IDENT           reduce using rule 71 (AddOp -> ADD .)
    STRUCT          reduce using rule 71 (AddOp -> ADD .)
    LBRACK          reduce using rule 71 (AddOp -> ADD .)
    MAP             reduce using rule 71 (AddOp -> ADD .)


state 210

    (72) AddOp -> SUB .

    ADD             reduce using rule 72 (AddOp -> SUB .)
    SUB             reduce using rule 72 (AddOp -> SUB .)
    NOT             reduce using rule 72 (AddOp -> SUB .)
    XOR             reduce using rule 72 (AddOp -> SUB .)
    MUL             reduce using rule 72 (AddOp -> SUB .)
    AND             reduce using rule 72 (AddOp -> SUB .)
    LPAREN          reduce using rule 72 (AddOp -> SUB .)
    INT             reduce using rule 72 (AddOp -> SUB .)
    FLOAT           reduce using rule 72 (AddOp -> SUB .)
    IMAG            reduce using rule 72 (AddOp -> SUB .)
    RUNE            reduce using rule 72 (AddOp -> SUB .)
    STRING          reduce using rule 72 (AddOp -> SUB .)
    FUNC            reduce using rule 72 (AddOp -> SUB .)
    PERIOD          reduce using rule 72 (AddOp -> SUB .)
    IDENT           reduce using rule 72 (AddOp -> SUB .)
    STRUCT          reduce using rule 72 (AddOp -> SUB .)
    LBRACK          reduce using rule 72 (AddOp -> SUB .)
    MAP             reduce using rule 72 (AddOp -> SUB .)


state 211

    (73) AddOp -> OR .

    ADD             reduce using rule 73 (AddOp -> OR .)
    SUB             reduce using rule 73 (AddOp -> OR .)
    NOT             reduce using rule 73 (AddOp -> OR .)
    XOR             reduce using rule 73 (AddOp -> OR .)
    MUL             reduce using rule 73 (AddOp -> OR .)
    AND             reduce using rule 73 (AddOp -> OR .)
    LPAREN          reduce using rule 73 (AddOp -> OR .)
    INT             reduce using rule 73 (AddOp -> OR .)
    FLOAT           reduce using rule 73 (AddOp -> OR .)
    IMAG            reduce using rule 73 (AddOp -> OR .)
    RUNE            reduce using rule 73 (AddOp -> OR .)
    STRING          reduce using rule 73 (AddOp -> OR .)
    FUNC            reduce using rule 73 (AddOp -> OR .)
    PERIOD          reduce using rule 73 (AddOp -> OR .)
    IDENT           reduce using rule 73 (AddOp -> OR .)
    STRUCT          reduce using rule 73 (AddOp -> OR .)
    LBRACK          reduce using rule 73 (AddOp -> OR .)
    MAP             reduce using rule 73 (AddOp -> OR .)


state 212

    (74) AddOp -> XOR .

    ADD             reduce using rule 74 (AddOp -> XOR .)
    SUB             reduce using rule 74 (AddOp -> XOR .)
    NOT             reduce using rule 74 (AddOp -> XOR .)
    XOR             reduce using rule 74 (AddOp -> XOR .)
    MUL             reduce using rule 74 (AddOp -> XOR .)
    AND             reduce using rule 74 (AddOp -> XOR .)
    LPAREN          reduce using rule 74 (AddOp -> XOR .)
    INT             reduce using rule 74 (AddOp -> XOR .)
    FLOAT           reduce using rule 74 (AddOp -> XOR .)
    IMAG            reduce using rule 74 (AddOp -> XOR .)
    RUNE            reduce using rule 74 (AddOp -> XOR .)
    STRING          reduce using rule 74 (AddOp -> XOR .)
    FUNC            reduce using rule 74 (AddOp -> XOR .)
    PERIOD          reduce using rule 74 (AddOp -> XOR .)
    IDENT           reduce using rule 74 (AddOp -> XOR .)
    STRUCT          reduce using rule 74 (AddOp -> XOR .)
    LBRACK          reduce using rule 74 (AddOp -> XOR .)
    MAP             reduce using rule 74 (AddOp -> XOR .)


state 213

    (75) MulOp -> MUL .

    ADD             reduce using rule 75 (MulOp -> MUL .)
    SUB             reduce using rule 75 (MulOp -> MUL .)
    NOT             reduce using rule 75 (MulOp -> MUL .)
    XOR             reduce using rule 75 (MulOp -> MUL .)
    MUL             reduce using rule 75 (MulOp -> MUL .)
    AND             reduce using rule 75 (MulOp -> MUL .)
    LPAREN          reduce using rule 75 (MulOp -> MUL .)
    INT             reduce using rule 75 (MulOp -> MUL .)
    FLOAT           reduce using rule 75 (MulOp -> MUL .)
    IMAG            reduce using rule 75 (MulOp -> MUL .)
    RUNE            reduce using rule 75 (MulOp -> MUL .)
    STRING          reduce using rule 75 (MulOp -> MUL .)
    FUNC            reduce using rule 75 (MulOp -> MUL .)
    PERIOD          reduce using rule 75 (MulOp -> MUL .)
    IDENT           reduce using rule 75 (MulOp -> MUL .)
    STRUCT          reduce using rule 75 (MulOp -> MUL .)
    LBRACK          reduce using rule 75 (MulOp -> MUL .)
    MAP             reduce using rule 75 (MulOp -> MUL .)


state 214

    (76) MulOp -> QUO .

    ADD             reduce using rule 76 (MulOp -> QUO .)
    SUB             reduce using rule 76 (MulOp -> QUO .)
    NOT             reduce using rule 76 (MulOp -> QUO .)
    XOR             reduce using rule 76 (MulOp -> QUO .)
    MUL             reduce using rule 76 (MulOp -> QUO .)
    AND             reduce using rule 76 (MulOp -> QUO .)
    LPAREN          reduce using rule 76 (MulOp -> QUO .)
    INT             reduce using rule 76 (MulOp -> QUO .)
    FLOAT           reduce using rule 76 (MulOp -> QUO .)
    IMAG            reduce using rule 76 (MulOp -> QUO .)
    RUNE            reduce using rule 76 (MulOp -> QUO .)
    STRING          reduce using rule 76 (MulOp -> QUO .)
    FUNC            reduce using rule 76 (MulOp -> QUO .)
    PERIOD          reduce using rule 76 (MulOp -> QUO .)
    IDENT           reduce using rule 76 (MulOp -> QUO .)
    STRUCT          reduce using rule 76 (MulOp -> QUO .)
    LBRACK          reduce using rule 76 (MulOp -> QUO .)
    MAP             reduce using rule 76 (MulOp -> QUO .)


state 215

    (77) MulOp -> REM .

    ADD             reduce using rule 77 (MulOp -> REM .)
    SUB             reduce using rule 77 (MulOp -> REM .)
    NOT             reduce using rule 77 (MulOp -> REM .)
    XOR             reduce using rule 77 (MulOp -> REM .)
    MUL             reduce using rule 77 (MulOp -> REM .)
    AND             reduce using rule 77 (MulOp -> REM .)
    LPAREN          reduce using rule 77 (MulOp -> REM .)
    INT             reduce using rule 77 (MulOp -> REM .)
    FLOAT           reduce using rule 77 (MulOp -> REM .)
    IMAG            reduce using rule 77 (MulOp -> REM .)
    RUNE            reduce using rule 77 (MulOp -> REM .)
    STRING          reduce using rule 77 (MulOp -> REM .)
    FUNC            reduce using rule 77 (MulOp -> REM .)
    PERIOD          reduce using rule 77 (MulOp -> REM .)
    IDENT           reduce using rule 77 (MulOp -> REM .)
    STRUCT          reduce using rule 77 (MulOp -> REM .)
    LBRACK          reduce using rule 77 (MulOp -> REM .)
    MAP             reduce using rule 77 (MulOp -> REM .)


state 216

    (78) MulOp -> SHL .

    ADD             reduce using rule 78 (MulOp -> SHL .)
    SUB             reduce using rule 78 (MulOp -> SHL .)
    NOT             reduce using rule 78 (MulOp -> SHL .)
    XOR             reduce using rule 78 (MulOp -> SHL .)
    MUL             reduce using rule 78 (MulOp -> SHL .)
    AND             reduce using rule 78 (MulOp -> SHL .)
    LPAREN          reduce using rule 78 (MulOp -> SHL .)
    INT             reduce using rule 78 (MulOp -> SHL .)
    FLOAT           reduce using rule 78 (MulOp -> SHL .)
    IMAG            reduce using rule 78 (MulOp -> SHL .)
    RUNE            reduce using rule 78 (MulOp -> SHL .)
    STRING          reduce using rule 78 (MulOp -> SHL .)
    FUNC            reduce using rule 78 (MulOp -> SHL .)
    PERIOD          reduce using rule 78 (MulOp -> SHL .)
    IDENT           reduce using rule 78 (MulOp -> SHL .)
    STRUCT          reduce using rule 78 (MulOp -> SHL .)
    LBRACK          reduce using rule 78 (MulOp -> SHL .)
    MAP             reduce using rule 78 (MulOp -> SHL .)


state 217

    (79) MulOp -> SHR .

    ADD             reduce using rule 79 (MulOp -> SHR .)
    SUB             reduce using rule 79 (MulOp -> SHR .)
    NOT             reduce using rule 79 (MulOp -> SHR .)
    XOR             reduce using rule 79 (MulOp -> SHR .)
    MUL             reduce using rule 79 (MulOp -> SHR .)
    AND             reduce using rule 79 (MulOp -> SHR .)
    LPAREN          reduce using rule 79 (MulOp -> SHR .)
    INT             reduce using rule 79 (MulOp -> SHR .)
    FLOAT           reduce using rule 79 (MulOp -> SHR .)
    IMAG            reduce using rule 79 (MulOp -> SHR .)
    RUNE            reduce using rule 79 (MulOp -> SHR .)
    STRING          reduce using rule 79 (MulOp -> SHR .)
    FUNC            reduce using rule 79 (MulOp -> SHR .)
    PERIOD          reduce using rule 79 (MulOp -> SHR .)
    IDENT           reduce using rule 79 (MulOp -> SHR .)
    STRUCT          reduce using rule 79 (MulOp -> SHR .)
    LBRACK          reduce using rule 79 (MulOp -> SHR .)
    MAP             reduce using rule 79 (MulOp -> SHR .)


state 218

    (80) MulOp -> AND .

    ADD             reduce using rule 80 (MulOp -> AND .)
    SUB             reduce using rule 80 (MulOp -> AND .)
    NOT             reduce using rule 80 (MulOp -> AND .)
    XOR             reduce using rule 80 (MulOp -> AND .)
    MUL             reduce using rule 80 (MulOp -> AND .)
    AND             reduce using rule 80 (MulOp -> AND .)
    LPAREN          reduce using rule 80 (MulOp -> AND .)
    INT             reduce using rule 80 (MulOp -> AND .)
    FLOAT           reduce using rule 80 (MulOp -> AND .)
    IMAG            reduce using rule 80 (MulOp -> AND .)
    RUNE            reduce using rule 80 (MulOp -> AND .)
    STRING          reduce using rule 80 (MulOp -> AND .)
    FUNC            reduce using rule 80 (MulOp -> AND .)
    PERIOD          reduce using rule 80 (MulOp -> AND .)
    IDENT           reduce using rule 80 (MulOp -> AND .)
    STRUCT          reduce using rule 80 (MulOp -> AND .)
    LBRACK          reduce using rule 80 (MulOp -> AND .)
    MAP             reduce using rule 80 (MulOp -> AND .)


state 219

    (81) MulOp -> AND_NOT .

    ADD             reduce using rule 81 (MulOp -> AND_NOT .)
    SUB             reduce using rule 81 (MulOp -> AND_NOT .)
    NOT             reduce using rule 81 (MulOp -> AND_NOT .)
    XOR             reduce using rule 81 (MulOp -> AND_NOT .)
    MUL             reduce using rule 81 (MulOp -> AND_NOT .)
    AND             reduce using rule 81 (MulOp -> AND_NOT .)
    LPAREN          reduce using rule 81 (MulOp -> AND_NOT .)
    INT             reduce using rule 81 (MulOp -> AND_NOT .)
    FLOAT           reduce using rule 81 (MulOp -> AND_NOT .)
    IMAG            reduce using rule 81 (MulOp -> AND_NOT .)
    RUNE            reduce using rule 81 (MulOp -> AND_NOT .)
    STRING          reduce using rule 81 (MulOp -> AND_NOT .)
    FUNC            reduce using rule 81 (MulOp -> AND_NOT .)
    PERIOD          reduce using rule 81 (MulOp -> AND_NOT .)
    IDENT           reduce using rule 81 (MulOp -> AND_NOT .)
    STRUCT          reduce using rule 81 (MulOp -> AND_NOT .)
    LBRACK          reduce using rule 81 (MulOp -> AND_NOT .)
    MAP             reduce using rule 81 (MulOp -> AND_NOT .)


state 220

    (123) PrimaryExpr -> PrimaryExpr Selector .

    PERIOD          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACK          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LOR             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LAND            reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    EQL             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    NEQ             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LSS             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LEQ             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    GTR             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    GEQ             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    SUB             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    MUL             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    QUO             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    REM             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    SHL             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    SHR             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_NOT         reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACK          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOLON       reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    INC             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    DEC             reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    ASSIGN          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    SUB_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    OR_ASSIGN       reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    MUL_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    QUO_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    REM_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    SHL_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    SHR_ASSIGN      reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_NOT_ASSIGN  reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACE          reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)
    ELSE            reduce using rule 123 (PrimaryExpr -> PrimaryExpr Selector .)


state 221

    (124) PrimaryExpr -> PrimaryExpr Index .

    PERIOD          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LOR             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LAND            reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    EQL             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    NEQ             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LSS             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    GTR             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    ADD             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SUB             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    MUL             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    QUO             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    REM             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SHL             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SHR             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT         reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    INC             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    DEC             reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGN          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    ADD_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SUB_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    OR_ASSIGN       reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    XOR_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    MUL_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    QUO_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    REM_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    AND_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SHL_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    SHR_ASSIGN      reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT_ASSIGN  reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACE          reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)
    ELSE            reduce using rule 124 (PrimaryExpr -> PrimaryExpr Index .)


state 222

    (125) PrimaryExpr -> PrimaryExpr Slice .

    PERIOD          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACK          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LOR             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LAND            reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    EQL             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    NEQ             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LSS             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LEQ             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    GTR             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    GEQ             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    QUO             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    REM             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT         reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    INC             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    DEC             reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    ASSIGN          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    OR_ASSIGN       reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    QUO_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    REM_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR_ASSIGN      reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT_ASSIGN  reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACE          reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)
    ELSE            reduce using rule 125 (PrimaryExpr -> PrimaryExpr Slice .)


state 223

    (126) PrimaryExpr -> PrimaryExpr Arguments .

    PERIOD          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LAND            reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQL             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    NEQ             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSS             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    GTR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUO             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    REM             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT         reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    INC             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    DEC             reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR_ASSIGN       reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUO_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    REM_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR_ASSIGN      reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT_ASSIGN  reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACE          reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)
    ELSE            reduce using rule 126 (PrimaryExpr -> PrimaryExpr Arguments .)


state 224

    (130) Selector -> PERIOD . IDENT

    IDENT           shift and go to state 302


state 225

    (127) Index -> LBRACK . Expr RBRACK
    (131) Slice -> LBRACK . Expr COLON Expr RBRACK
    (132) Slice -> LBRACK . COLON Expr RBRACK
    (133) Slice -> LBRACK . Expr COLON RBRACK
    (134) Slice -> LBRACK . COLON RBRACK
    (135) Slice -> LBRACK . COLON Expr COLON Expr RBRACK
    (136) Slice -> LBRACK . Expr COLON Expr COLON Expr RBRACK
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    COLON           shift and go to state 304
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Expr                           shift and go to state 303
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 226

    (137) Arguments -> LPAREN . RPAREN
    (138) Arguments -> LPAREN . ExpressionList RPAREN
    (139) Arguments -> LPAREN . ExpressionList COMMA RPAREN
    (140) Arguments -> LPAREN . Type RPAREN
    (141) Arguments -> LPAREN . Type COMMA RPAREN
    (142) Arguments -> LPAREN . Type COMMA ExpressionList RPAREN
    (143) Arguments -> LPAREN . Type COMMA ExpressionList COMMA RPAREN
    (55) ExpressionList -> . Expr ExprOth
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT

  ! shift/reduce conflict for IDENT resolved as shift
    RPAREN          shift and go to state 305
    LPAREN          shift and go to state 229
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 308
    MAP             shift and go to state 68
    FUNC            shift and go to state 236
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    AND             shift and go to state 115
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    PERIOD          shift and go to state 101

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    ExpressionList                 shift and go to state 306
    Type                           shift and go to state 307
    Expr                           shift and go to state 145
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    UnaryExpr                      shift and go to state 105
    QualifiedIdentPart             shift and go to state 123
    ArrayType                      shift and go to state 232
    StructType                     shift and go to state 233
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 234
    MapType                        shift and go to state 235
    FunctionType                   shift and go to state 64
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122

state 227

    (59) UnaryExpr -> UnaryOp UnaryExpr .

    LOR             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    LAND            reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQL             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    NEQ             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSS             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    LEQ             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    GTR             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    GEQ             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    QUO             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    REM             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_NOT         reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACK          reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    INC             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    DEC             reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    ASSIGN          reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    ADD_ASSIGN      reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    SUB_ASSIGN      reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    MUL_ASSIGN      reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    QUO_ASSIGN      reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    REM_ASSIGN      reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_ASSIGN      reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHL_ASSIGN      reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    SHR_ASSIGN      reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    LBRACE          reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    RBRACE          reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)
    ELSE            reduce using rule 59 (UnaryExpr -> UnaryOp UnaryExpr .)


state 228

    (91) Operand -> OperandName IDENT .

    PERIOD          reduce using rule 91 (Operand -> OperandName IDENT .)
    LBRACK          reduce using rule 91 (Operand -> OperandName IDENT .)
    LPAREN          reduce using rule 91 (Operand -> OperandName IDENT .)
    LOR             reduce using rule 91 (Operand -> OperandName IDENT .)
    LAND            reduce using rule 91 (Operand -> OperandName IDENT .)
    EQL             reduce using rule 91 (Operand -> OperandName IDENT .)
    NEQ             reduce using rule 91 (Operand -> OperandName IDENT .)
    LSS             reduce using rule 91 (Operand -> OperandName IDENT .)
    LEQ             reduce using rule 91 (Operand -> OperandName IDENT .)
    GTR             reduce using rule 91 (Operand -> OperandName IDENT .)
    GEQ             reduce using rule 91 (Operand -> OperandName IDENT .)
    ADD             reduce using rule 91 (Operand -> OperandName IDENT .)
    SUB             reduce using rule 91 (Operand -> OperandName IDENT .)
    OR              reduce using rule 91 (Operand -> OperandName IDENT .)
    XOR             reduce using rule 91 (Operand -> OperandName IDENT .)
    MUL             reduce using rule 91 (Operand -> OperandName IDENT .)
    QUO             reduce using rule 91 (Operand -> OperandName IDENT .)
    REM             reduce using rule 91 (Operand -> OperandName IDENT .)
    SHL             reduce using rule 91 (Operand -> OperandName IDENT .)
    SHR             reduce using rule 91 (Operand -> OperandName IDENT .)
    AND             reduce using rule 91 (Operand -> OperandName IDENT .)
    AND_NOT         reduce using rule 91 (Operand -> OperandName IDENT .)
    RBRACK          reduce using rule 91 (Operand -> OperandName IDENT .)
    COMMA           reduce using rule 91 (Operand -> OperandName IDENT .)
    SEMICOLON       reduce using rule 91 (Operand -> OperandName IDENT .)
    INC             reduce using rule 91 (Operand -> OperandName IDENT .)
    DEC             reduce using rule 91 (Operand -> OperandName IDENT .)
    ASSIGN          reduce using rule 91 (Operand -> OperandName IDENT .)
    ADD_ASSIGN      reduce using rule 91 (Operand -> OperandName IDENT .)
    SUB_ASSIGN      reduce using rule 91 (Operand -> OperandName IDENT .)
    OR_ASSIGN       reduce using rule 91 (Operand -> OperandName IDENT .)
    XOR_ASSIGN      reduce using rule 91 (Operand -> OperandName IDENT .)
    MUL_ASSIGN      reduce using rule 91 (Operand -> OperandName IDENT .)
    QUO_ASSIGN      reduce using rule 91 (Operand -> OperandName IDENT .)
    REM_ASSIGN      reduce using rule 91 (Operand -> OperandName IDENT .)
    AND_ASSIGN      reduce using rule 91 (Operand -> OperandName IDENT .)
    SHL_ASSIGN      reduce using rule 91 (Operand -> OperandName IDENT .)
    SHR_ASSIGN      reduce using rule 91 (Operand -> OperandName IDENT .)
    AND_NOT_ASSIGN  reduce using rule 91 (Operand -> OperandName IDENT .)
    RPAREN          reduce using rule 91 (Operand -> OperandName IDENT .)
    LBRACE          reduce using rule 91 (Operand -> OperandName IDENT .)
    COLON           reduce using rule 91 (Operand -> OperandName IDENT .)
    RBRACE          reduce using rule 91 (Operand -> OperandName IDENT .)
    ELSE            reduce using rule 91 (Operand -> OperandName IDENT .)


state 229

    (268) Type -> LPAREN . Type RPAREN
    (92) Operand -> LPAREN . Expr RPAREN
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT

  ! shift/reduce conflict for IDENT resolved as shift
    LPAREN          shift and go to state 229
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 308
    MAP             shift and go to state 68
    FUNC            shift and go to state 236
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    AND             shift and go to state 115
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    PERIOD          shift and go to state 101

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Type                           shift and go to state 231
    Expr                           shift and go to state 230
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    UnaryExpr                      shift and go to state 105
    QualifiedIdentPart             shift and go to state 123
    ArrayType                      shift and go to state 232
    StructType                     shift and go to state 233
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 234
    MapType                        shift and go to state 235
    FunctionType                   shift and go to state 64
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122

state 230

    (92) Operand -> LPAREN Expr . RPAREN
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    RPAREN          shift and go to state 309
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 231

    (268) Type -> LPAREN Type . RPAREN
    (128) Conversion -> Type . LPAREN Expr RPAREN
    (129) Conversion -> Type . LPAREN Expr COMMA RPAREN

    RPAREN          shift and go to state 192
    LPAREN          shift and go to state 237


state 232

    (30) TypeLit -> ArrayType .
    (102) CompositeLit -> ArrayType . LiteralValue
    (106) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (107) LiteralValue -> . LBRACE ElementList RBRACE
    (108) LiteralValue -> . LBRACE RBRACE

    RPAREN          reduce using rule 30 (TypeLit -> ArrayType .)
    LPAREN          reduce using rule 30 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 30 (TypeLit -> ArrayType .)
    LBRACE          shift and go to state 239

    LiteralValue                   shift and go to state 241

state 233

    (31) TypeLit -> StructType .
    (101) CompositeLit -> StructType . LiteralValue
    (106) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (107) LiteralValue -> . LBRACE ElementList RBRACE
    (108) LiteralValue -> . LBRACE RBRACE

    RPAREN          reduce using rule 31 (TypeLit -> StructType .)
    LPAREN          reduce using rule 31 (TypeLit -> StructType .)
    COMMA           reduce using rule 31 (TypeLit -> StructType .)
    LBRACE          shift and go to state 239

    LiteralValue                   shift and go to state 240

state 234

    (33) TypeLit -> SliceType .
    (103) CompositeLit -> SliceType . LiteralValue
    (106) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (107) LiteralValue -> . LBRACE ElementList RBRACE
    (108) LiteralValue -> . LBRACE RBRACE

    RPAREN          reduce using rule 33 (TypeLit -> SliceType .)
    LPAREN          reduce using rule 33 (TypeLit -> SliceType .)
    COMMA           reduce using rule 33 (TypeLit -> SliceType .)
    LBRACE          shift and go to state 239

    LiteralValue                   shift and go to state 242

state 235

    (34) TypeLit -> MapType .
    (104) CompositeLit -> MapType . LiteralValue
    (106) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (107) LiteralValue -> . LBRACE ElementList RBRACE
    (108) LiteralValue -> . LBRACE RBRACE

    RPAREN          reduce using rule 34 (TypeLit -> MapType .)
    LPAREN          reduce using rule 34 (TypeLit -> MapType .)
    COMMA           reduce using rule 34 (TypeLit -> MapType .)
    LBRACE          shift and go to state 239

    LiteralValue                   shift and go to state 243

state 236

    (54) FunctionType -> FUNC . Signature
    (120) FunctionLit -> FUNC . Signature FunctionBody
    (164) Signature -> . Parameters Result
    (165) Signature -> . Parameters
    (166) Parameters -> . LPAREN RPAREN
    (167) Parameters -> . LPAREN ParameterList RPAREN
    (168) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 51

    Signature                      shift and go to state 310
    Parameters                     shift and go to state 50

state 237

    (128) Conversion -> Type LPAREN . Expr RPAREN
    (129) Conversion -> Type LPAREN . Expr COMMA RPAREN
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Type                           shift and go to state 119
    Expr                           shift and go to state 311
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 238

    (105) CompositeLit -> TypeName LiteralValue .

    PERIOD          reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    LBRACK          reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    LPAREN          reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    LOR             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    LAND            reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    EQL             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    NEQ             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    LSS             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    LEQ             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    GTR             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    GEQ             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    ADD             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    SUB             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    OR              reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    XOR             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    MUL             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    QUO             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    REM             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    SHL             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    SHR             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    AND             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    AND_NOT         reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    RBRACK          reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    COMMA           reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    SEMICOLON       reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    INC             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    DEC             reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    ASSIGN          reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    ADD_ASSIGN      reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    SUB_ASSIGN      reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    OR_ASSIGN       reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    XOR_ASSIGN      reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    MUL_ASSIGN      reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    QUO_ASSIGN      reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    REM_ASSIGN      reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    AND_ASSIGN      reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    SHL_ASSIGN      reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    SHR_ASSIGN      reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    RPAREN          reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    LBRACE          reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    COLON           reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    RBRACE          reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)
    ELSE            reduce using rule 105 (CompositeLit -> TypeName LiteralValue .)


state 239

    (106) LiteralValue -> LBRACE . ElementList COMMA RBRACE
    (107) LiteralValue -> LBRACE . ElementList RBRACE
    (108) LiteralValue -> LBRACE . RBRACE
    (109) ElementList -> . KeyedElement
    (110) ElementList -> . KeyedElement COMMA ElementList
    (111) KeyedElement -> . Element
    (112) KeyedElement -> . Key COLON Element
    (116) Element -> . Expr
    (117) Element -> . LiteralValue
    (113) Key -> . IDENT
    (114) Key -> . Expr
    (115) Key -> . LiteralValue
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (106) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (107) LiteralValue -> . LBRACE ElementList RBRACE
    (108) LiteralValue -> . LBRACE RBRACE
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    RBRACE          shift and go to state 313
    IDENT           shift and go to state 319
    LBRACE          shift and go to state 239
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    ElementList                    shift and go to state 312
    KeyedElement                   shift and go to state 314
    Element                        shift and go to state 315
    Key                            shift and go to state 316
    Expr                           shift and go to state 317
    LiteralValue                   shift and go to state 318
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 240

    (101) CompositeLit -> StructType LiteralValue .

    PERIOD          reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    LBRACK          reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    LPAREN          reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    LOR             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    LAND            reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    EQL             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    NEQ             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    LSS             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    LEQ             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    GTR             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    GEQ             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    ADD             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    SUB             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    OR              reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    XOR             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    MUL             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    QUO             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    REM             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    SHL             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    SHR             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    AND             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    AND_NOT         reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    RBRACK          reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    COMMA           reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    SEMICOLON       reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    INC             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    DEC             reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    ASSIGN          reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    ADD_ASSIGN      reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    SUB_ASSIGN      reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    OR_ASSIGN       reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    XOR_ASSIGN      reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    MUL_ASSIGN      reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    QUO_ASSIGN      reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    REM_ASSIGN      reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    AND_ASSIGN      reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    SHL_ASSIGN      reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    SHR_ASSIGN      reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    RPAREN          reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    LBRACE          reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    COLON           reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    RBRACE          reduce using rule 101 (CompositeLit -> StructType LiteralValue .)
    ELSE            reduce using rule 101 (CompositeLit -> StructType LiteralValue .)


state 241

    (102) CompositeLit -> ArrayType LiteralValue .

    PERIOD          reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    LBRACK          reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    LPAREN          reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    LOR             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    LAND            reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    EQL             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    NEQ             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    LSS             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    LEQ             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    GTR             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    GEQ             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    ADD             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    SUB             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    OR              reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    XOR             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    MUL             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    QUO             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    REM             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    SHL             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    SHR             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    AND             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    AND_NOT         reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    RBRACK          reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    COMMA           reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    SEMICOLON       reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    INC             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    DEC             reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    ASSIGN          reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    ADD_ASSIGN      reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    SUB_ASSIGN      reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    OR_ASSIGN       reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    XOR_ASSIGN      reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    MUL_ASSIGN      reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    QUO_ASSIGN      reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    REM_ASSIGN      reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    AND_ASSIGN      reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    SHL_ASSIGN      reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    SHR_ASSIGN      reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    RPAREN          reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    LBRACE          reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    COLON           reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    RBRACE          reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)
    ELSE            reduce using rule 102 (CompositeLit -> ArrayType LiteralValue .)


state 242

    (103) CompositeLit -> SliceType LiteralValue .

    PERIOD          reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    LBRACK          reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    LPAREN          reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    LOR             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    LAND            reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    EQL             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    NEQ             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    LSS             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    LEQ             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    GTR             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    GEQ             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    ADD             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    SUB             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    OR              reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    XOR             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    MUL             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    QUO             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    REM             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    SHL             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    SHR             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    AND             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    AND_NOT         reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    RBRACK          reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    COMMA           reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    SEMICOLON       reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    INC             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    DEC             reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    ASSIGN          reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    ADD_ASSIGN      reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    SUB_ASSIGN      reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    OR_ASSIGN       reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    XOR_ASSIGN      reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    MUL_ASSIGN      reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    QUO_ASSIGN      reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    REM_ASSIGN      reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    AND_ASSIGN      reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    SHL_ASSIGN      reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    SHR_ASSIGN      reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    RPAREN          reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    LBRACE          reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    COLON           reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    RBRACE          reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)
    ELSE            reduce using rule 103 (CompositeLit -> SliceType LiteralValue .)


state 243

    (104) CompositeLit -> MapType LiteralValue .

    PERIOD          reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    LBRACK          reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    LPAREN          reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    LOR             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    LAND            reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    EQL             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    NEQ             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    LSS             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    LEQ             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    GTR             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    GEQ             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    ADD             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    SUB             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    OR              reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    XOR             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    MUL             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    QUO             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    REM             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    SHL             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    SHR             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    AND             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    AND_NOT         reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    RBRACK          reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    COMMA           reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    SEMICOLON       reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    INC             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    DEC             reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    ASSIGN          reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    ADD_ASSIGN      reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    SUB_ASSIGN      reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    OR_ASSIGN       reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    XOR_ASSIGN      reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    MUL_ASSIGN      reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    QUO_ASSIGN      reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    REM_ASSIGN      reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    AND_ASSIGN      reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    SHL_ASSIGN      reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    SHR_ASSIGN      reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    RPAREN          reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    LBRACE          reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    COLON           reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    RBRACE          reduce using rule 104 (CompositeLit -> MapType LiteralValue .)
    ELSE            reduce using rule 104 (CompositeLit -> MapType LiteralValue .)


state 244

    (120) FunctionLit -> FUNC Signature . FunctionBody
    (54) FunctionType -> FUNC Signature .
    (163) FunctionBody -> . Block
    (223) Block -> . LBRACE StatementList RBRACE

    LPAREN          reduce using rule 54 (FunctionType -> FUNC Signature .)
    LBRACE          shift and go to state 84

    FunctionBody                   shift and go to state 320
    Block                          shift and go to state 83

state 245

    (39) StructType -> STRUCT LBRACE FieldDeclMult . RBRACE

    RBRACE          shift and go to state 321


state 246

    (40) FieldDeclMult -> FieldDecl . SEMICOLON FieldDeclMult

    SEMICOLON       shift and go to state 322


state 247

    (42) FieldDecl -> IdentifierList . Type
    (44) FieldDecl -> IdentifierList . Type Tag
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    Type                           shift and go to state 323
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 248

    (43) FieldDecl -> EmbeddedField .
    (45) FieldDecl -> EmbeddedField . Tag
    (46) Tag -> . STRING

    SEMICOLON       reduce using rule 43 (FieldDecl -> EmbeddedField .)
    STRING          shift and go to state 325

    Tag                            shift and go to state 324

state 249

    (47) EmbeddedField -> MUL . TypeName
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart

    IDENT           shift and go to state 58

    TypeName                       shift and go to state 326

state 250

    (48) EmbeddedField -> TypeName .

    STRING          reduce using rule 48 (EmbeddedField -> TypeName .)
    SEMICOLON       reduce using rule 48 (EmbeddedField -> TypeName .)


state 251

    (52) MapType -> MAP LBRACK KeyType . RBRACK ElementType

    RBRACK          shift and go to state 327


state 252

    (53) KeyType -> Type .

    RBRACK          reduce using rule 53 (KeyType -> Type .)


state 253

    (27) IdentifierOth -> COMMA IDENT IdentifierOth .

    LPAREN          reduce using rule 27 (IdentifierOth -> COMMA IDENT IdentifierOth .)
    IDENT           reduce using rule 27 (IdentifierOth -> COMMA IDENT IdentifierOth .)
    LBRACK          reduce using rule 27 (IdentifierOth -> COMMA IDENT IdentifierOth .)
    STRUCT          reduce using rule 27 (IdentifierOth -> COMMA IDENT IdentifierOth .)
    MUL             reduce using rule 27 (IdentifierOth -> COMMA IDENT IdentifierOth .)
    MAP             reduce using rule 27 (IdentifierOth -> COMMA IDENT IdentifierOth .)
    FUNC            reduce using rule 27 (IdentifierOth -> COMMA IDENT IdentifierOth .)
    ASSIGN          reduce using rule 27 (IdentifierOth -> COMMA IDENT IdentifierOth .)
    DEFINE          reduce using rule 27 (IdentifierOth -> COMMA IDENT IdentifierOth .)


state 254

    (154) VarMult -> VarSpec SEMICOLON VarMult .

    RPAREN          reduce using rule 154 (VarMult -> VarSpec SEMICOLON VarMult .)


state 255

    (156) VarSpec -> IdentifierList Type ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 156 (VarSpec -> IdentifierList Type ASSIGN ExpressionList .)


state 256

    (55) ExpressionList -> Expr ExprOth .

    SEMICOLON       reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    ASSIGN          reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    ADD_ASSIGN      reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    SUB_ASSIGN      reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    OR_ASSIGN       reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    XOR_ASSIGN      reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    MUL_ASSIGN      reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    QUO_ASSIGN      reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    REM_ASSIGN      reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    AND_ASSIGN      reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    SHL_ASSIGN      reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    SHR_ASSIGN      reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    AND_NOT_ASSIGN  reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    RPAREN          reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    COMMA           reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    LBRACE          reduce using rule 55 (ExpressionList -> Expr ExprOth .)
    COLON           reduce using rule 55 (ExpressionList -> Expr ExprOth .)


state 257

    (88) ExprOth -> COMMA . Expr ExprOth
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Expr                           shift and go to state 328
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 258

    (146) TypeSpecMult -> TypeSpec SEMICOLON TypeSpecMult .

    RPAREN          reduce using rule 146 (TypeSpecMult -> TypeSpec SEMICOLON TypeSpecMult .)


state 259

    (223) Block -> LBRACE StatementList RBRACE .

    SEMICOLON       reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    PERIOD          reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    LBRACK          reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    LPAREN          reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    LOR             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    LAND            reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    EQL             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    NEQ             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    LSS             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    LEQ             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    GTR             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    GEQ             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    ADD             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    SUB             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    OR              reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    XOR             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    MUL             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    QUO             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    REM             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    SHL             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    SHR             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    AND             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    AND_NOT         reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    RBRACK          reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    COMMA           reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    INC             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    DEC             reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    ASSIGN          reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    ADD_ASSIGN      reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    SUB_ASSIGN      reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    OR_ASSIGN       reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    XOR_ASSIGN      reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    MUL_ASSIGN      reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    QUO_ASSIGN      reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    REM_ASSIGN      reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    AND_ASSIGN      reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    SHL_ASSIGN      reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    SHR_ASSIGN      reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    AND_NOT_ASSIGN  reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    RPAREN          reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    LBRACE          reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    COLON           reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    RBRACE          reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 223 (Block -> LBRACE StatementList RBRACE .)


state 260

    (175) StatementList -> Statement SEMICOLON . StatementList
    (175) StatementList -> . Statement SEMICOLON StatementList
    (176) StatementList -> .
    (177) Statement -> . Decl
    (178) Statement -> . LabeledStmt
    (179) Statement -> . SimpleStmt
    (180) Statement -> . GotoStmt
    (181) Statement -> . ReturnStmt
    (182) Statement -> . BreakStmt
    (183) Statement -> . ContinueStmt
    (184) Statement -> . FallthroughStmt
    (185) Statement -> . Block
    (186) Statement -> . IfStmt
    (187) Statement -> . SwitchStmt
    (188) Statement -> . ForStmt
    (18) Decl -> . ConstDecl
    (19) Decl -> . VarDecl
    (20) Decl -> . TypeDecl
    (189) LabeledStmt -> . Label COLON Statement
    (191) SimpleStmt -> . EmptyStmt
    (192) SimpleStmt -> . ExpressionStmt
    (193) SimpleStmt -> . IncDecStmt
    (194) SimpleStmt -> . Assignment
    (195) SimpleStmt -> . ShortVarDecl
    (221) GotoStmt -> . GOTO Label
    (215) ReturnStmt -> . RETURN ExpressionList
    (216) ReturnStmt -> . RETURN
    (217) BreakStmt -> . BREAK Label
    (218) BreakStmt -> . BREAK
    (219) ContinueStmt -> . CONTINUE Label
    (220) ContinueStmt -> . CONTINUE
    (222) FallthroughStmt -> . FALLTHROUGH
    (223) Block -> . LBRACE StatementList RBRACE
    (224) IfStmt -> . IF Expr Block else_stmt
    (225) IfStmt -> . IF SimpleStmt SEMICOLON Expr else_stmt
    (231) SwitchStmt -> . ExprSwitchStmt
    (232) SwitchStmt -> . TypeSwitchStmt
    (253) ForStmt -> . FOR Condition Block
    (254) ForStmt -> . FOR ForClause Block
    (255) ForStmt -> . FOR RangeClause Block
    (21) ConstDecl -> . CONST ConstSpec
    (22) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (152) VarDecl -> . VAR VarSpec
    (153) VarDecl -> . VAR LPAREN VarMult RPAREN
    (144) TypeDecl -> . TYPE TypeSpec
    (145) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (190) Label -> . IDENT
    (196) EmptyStmt -> .
    (197) ExpressionStmt -> . Expr
    (198) IncDecStmt -> . Expr INC
    (199) IncDecStmt -> . Expr DEC
    (200) Assignment -> . ExpressionList assign_op ExpressionList
    (159) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (233) ExprSwitchStmt -> . SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE
    (241) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (55) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    RBRACE          reduce using rule 176 (StatementList -> .)
    CASE            reduce using rule 176 (StatementList -> .)
    DEFAULT         reduce using rule 176 (StatementList -> .)
    GOTO            shift and go to state 170
    RETURN          shift and go to state 171
    BREAK           shift and go to state 173
    CONTINUE        shift and go to state 174
    FALLTHROUGH     shift and go to state 175
    LBRACE          shift and go to state 84
    IF              shift and go to state 176
    FOR             shift and go to state 180
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 181
    SEMICOLON       reduce using rule 196 (EmptyStmt -> .)
    SWITCH          shift and go to state 183
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Statement                      shift and go to state 151
    StatementList                  shift and go to state 329
    Decl                           shift and go to state 152
    LabeledStmt                    shift and go to state 153
    SimpleStmt                     shift and go to state 154
    GotoStmt                       shift and go to state 155
    ReturnStmt                     shift and go to state 156
    BreakStmt                      shift and go to state 157
    ContinueStmt                   shift and go to state 158
    FallthroughStmt                shift and go to state 159
    Block                          shift and go to state 160
    IfStmt                         shift and go to state 161
    SwitchStmt                     shift and go to state 162
    ForStmt                        shift and go to state 163
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    Label                          shift and go to state 164
    EmptyStmt                      shift and go to state 165
    ExpressionStmt                 shift and go to state 166
    IncDecStmt                     shift and go to state 167
    Assignment                     shift and go to state 168
    ShortVarDecl                   shift and go to state 169
    ExpressionList                 shift and go to state 172
    Expr                           shift and go to state 177
    ExprSwitchStmt                 shift and go to state 178
    TypeSwitchStmt                 shift and go to state 179
    IdentifierList                 shift and go to state 182
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 261

    (189) LabeledStmt -> Label COLON . Statement
    (177) Statement -> . Decl
    (178) Statement -> . LabeledStmt
    (179) Statement -> . SimpleStmt
    (180) Statement -> . GotoStmt
    (181) Statement -> . ReturnStmt
    (182) Statement -> . BreakStmt
    (183) Statement -> . ContinueStmt
    (184) Statement -> . FallthroughStmt
    (185) Statement -> . Block
    (186) Statement -> . IfStmt
    (187) Statement -> . SwitchStmt
    (188) Statement -> . ForStmt
    (18) Decl -> . ConstDecl
    (19) Decl -> . VarDecl
    (20) Decl -> . TypeDecl
    (189) LabeledStmt -> . Label COLON Statement
    (191) SimpleStmt -> . EmptyStmt
    (192) SimpleStmt -> . ExpressionStmt
    (193) SimpleStmt -> . IncDecStmt
    (194) SimpleStmt -> . Assignment
    (195) SimpleStmt -> . ShortVarDecl
    (221) GotoStmt -> . GOTO Label
    (215) ReturnStmt -> . RETURN ExpressionList
    (216) ReturnStmt -> . RETURN
    (217) BreakStmt -> . BREAK Label
    (218) BreakStmt -> . BREAK
    (219) ContinueStmt -> . CONTINUE Label
    (220) ContinueStmt -> . CONTINUE
    (222) FallthroughStmt -> . FALLTHROUGH
    (223) Block -> . LBRACE StatementList RBRACE
    (224) IfStmt -> . IF Expr Block else_stmt
    (225) IfStmt -> . IF SimpleStmt SEMICOLON Expr else_stmt
    (231) SwitchStmt -> . ExprSwitchStmt
    (232) SwitchStmt -> . TypeSwitchStmt
    (253) ForStmt -> . FOR Condition Block
    (254) ForStmt -> . FOR ForClause Block
    (255) ForStmt -> . FOR RangeClause Block
    (21) ConstDecl -> . CONST ConstSpec
    (22) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (152) VarDecl -> . VAR VarSpec
    (153) VarDecl -> . VAR LPAREN VarMult RPAREN
    (144) TypeDecl -> . TYPE TypeSpec
    (145) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (190) Label -> . IDENT
    (196) EmptyStmt -> .
    (197) ExpressionStmt -> . Expr
    (198) IncDecStmt -> . Expr INC
    (199) IncDecStmt -> . Expr DEC
    (200) Assignment -> . ExpressionList assign_op ExpressionList
    (159) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (233) ExprSwitchStmt -> . SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE
    (241) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (55) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    GOTO            shift and go to state 170
    RETURN          shift and go to state 171
    BREAK           shift and go to state 173
    CONTINUE        shift and go to state 174
    FALLTHROUGH     shift and go to state 175
    LBRACE          shift and go to state 84
    IF              shift and go to state 176
    FOR             shift and go to state 180
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 181
    SEMICOLON       reduce using rule 196 (EmptyStmt -> .)
    SWITCH          shift and go to state 183
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Label                          shift and go to state 164
    Statement                      shift and go to state 330
    Decl                           shift and go to state 152
    LabeledStmt                    shift and go to state 153
    SimpleStmt                     shift and go to state 154
    GotoStmt                       shift and go to state 155
    ReturnStmt                     shift and go to state 156
    BreakStmt                      shift and go to state 157
    ContinueStmt                   shift and go to state 158
    FallthroughStmt                shift and go to state 159
    Block                          shift and go to state 160
    IfStmt                         shift and go to state 161
    SwitchStmt                     shift and go to state 162
    ForStmt                        shift and go to state 163
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    EmptyStmt                      shift and go to state 165
    ExpressionStmt                 shift and go to state 166
    IncDecStmt                     shift and go to state 167
    Assignment                     shift and go to state 168
    ShortVarDecl                   shift and go to state 169
    ExpressionList                 shift and go to state 172
    Expr                           shift and go to state 177
    ExprSwitchStmt                 shift and go to state 178
    TypeSwitchStmt                 shift and go to state 179
    IdentifierList                 shift and go to state 182
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 262

    (221) GotoStmt -> GOTO Label .

    SEMICOLON       reduce using rule 221 (GotoStmt -> GOTO Label .)


state 263

    (190) Label -> IDENT .

    SEMICOLON       reduce using rule 190 (Label -> IDENT .)


state 264

    (215) ReturnStmt -> RETURN ExpressionList .

    SEMICOLON       reduce using rule 215 (ReturnStmt -> RETURN ExpressionList .)


state 265

    (200) Assignment -> ExpressionList assign_op . ExpressionList
    (55) ExpressionList -> . Expr ExprOth
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    ExpressionList                 shift and go to state 331
    Expr                           shift and go to state 145
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 266

    (201) assign_op -> add_op_assign .

    ADD             reduce using rule 201 (assign_op -> add_op_assign .)
    SUB             reduce using rule 201 (assign_op -> add_op_assign .)
    NOT             reduce using rule 201 (assign_op -> add_op_assign .)
    XOR             reduce using rule 201 (assign_op -> add_op_assign .)
    MUL             reduce using rule 201 (assign_op -> add_op_assign .)
    AND             reduce using rule 201 (assign_op -> add_op_assign .)
    LPAREN          reduce using rule 201 (assign_op -> add_op_assign .)
    INT             reduce using rule 201 (assign_op -> add_op_assign .)
    FLOAT           reduce using rule 201 (assign_op -> add_op_assign .)
    IMAG            reduce using rule 201 (assign_op -> add_op_assign .)
    RUNE            reduce using rule 201 (assign_op -> add_op_assign .)
    STRING          reduce using rule 201 (assign_op -> add_op_assign .)
    FUNC            reduce using rule 201 (assign_op -> add_op_assign .)
    PERIOD          reduce using rule 201 (assign_op -> add_op_assign .)
    IDENT           reduce using rule 201 (assign_op -> add_op_assign .)
    STRUCT          reduce using rule 201 (assign_op -> add_op_assign .)
    LBRACK          reduce using rule 201 (assign_op -> add_op_assign .)
    MAP             reduce using rule 201 (assign_op -> add_op_assign .)


state 267

    (202) assign_op -> mul_op_assign .

    ADD             reduce using rule 202 (assign_op -> mul_op_assign .)
    SUB             reduce using rule 202 (assign_op -> mul_op_assign .)
    NOT             reduce using rule 202 (assign_op -> mul_op_assign .)
    XOR             reduce using rule 202 (assign_op -> mul_op_assign .)
    MUL             reduce using rule 202 (assign_op -> mul_op_assign .)
    AND             reduce using rule 202 (assign_op -> mul_op_assign .)
    LPAREN          reduce using rule 202 (assign_op -> mul_op_assign .)
    INT             reduce using rule 202 (assign_op -> mul_op_assign .)
    FLOAT           reduce using rule 202 (assign_op -> mul_op_assign .)
    IMAG            reduce using rule 202 (assign_op -> mul_op_assign .)
    RUNE            reduce using rule 202 (assign_op -> mul_op_assign .)
    STRING          reduce using rule 202 (assign_op -> mul_op_assign .)
    FUNC            reduce using rule 202 (assign_op -> mul_op_assign .)
    PERIOD          reduce using rule 202 (assign_op -> mul_op_assign .)
    IDENT           reduce using rule 202 (assign_op -> mul_op_assign .)
    STRUCT          reduce using rule 202 (assign_op -> mul_op_assign .)
    LBRACK          reduce using rule 202 (assign_op -> mul_op_assign .)
    MAP             reduce using rule 202 (assign_op -> mul_op_assign .)


state 268

    (203) assign_op -> ASSIGN .

    ADD             reduce using rule 203 (assign_op -> ASSIGN .)
    SUB             reduce using rule 203 (assign_op -> ASSIGN .)
    NOT             reduce using rule 203 (assign_op -> ASSIGN .)
    XOR             reduce using rule 203 (assign_op -> ASSIGN .)
    MUL             reduce using rule 203 (assign_op -> ASSIGN .)
    AND             reduce using rule 203 (assign_op -> ASSIGN .)
    LPAREN          reduce using rule 203 (assign_op -> ASSIGN .)
    INT             reduce using rule 203 (assign_op -> ASSIGN .)
    FLOAT           reduce using rule 203 (assign_op -> ASSIGN .)
    IMAG            reduce using rule 203 (assign_op -> ASSIGN .)
    RUNE            reduce using rule 203 (assign_op -> ASSIGN .)
    STRING          reduce using rule 203 (assign_op -> ASSIGN .)
    FUNC            reduce using rule 203 (assign_op -> ASSIGN .)
    PERIOD          reduce using rule 203 (assign_op -> ASSIGN .)
    IDENT           reduce using rule 203 (assign_op -> ASSIGN .)
    STRUCT          reduce using rule 203 (assign_op -> ASSIGN .)
    LBRACK          reduce using rule 203 (assign_op -> ASSIGN .)
    MAP             reduce using rule 203 (assign_op -> ASSIGN .)


state 269

    (204) add_op_assign -> ADD_ASSIGN .

    ADD             reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    SUB             reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    NOT             reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    XOR             reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    MUL             reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    AND             reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    LPAREN          reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    INT             reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    FLOAT           reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    IMAG            reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    RUNE            reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    STRING          reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    FUNC            reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    PERIOD          reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    IDENT           reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    STRUCT          reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    LBRACK          reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)
    MAP             reduce using rule 204 (add_op_assign -> ADD_ASSIGN .)


state 270

    (205) add_op_assign -> SUB_ASSIGN .

    ADD             reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    SUB             reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    NOT             reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    XOR             reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    MUL             reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    AND             reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    LPAREN          reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    INT             reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    FLOAT           reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    IMAG            reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    RUNE            reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    STRING          reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    FUNC            reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    PERIOD          reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    IDENT           reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    STRUCT          reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    LBRACK          reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)
    MAP             reduce using rule 205 (add_op_assign -> SUB_ASSIGN .)


state 271

    (206) add_op_assign -> OR_ASSIGN .

    ADD             reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    SUB             reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    NOT             reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    XOR             reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    MUL             reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    AND             reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    LPAREN          reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    INT             reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    FLOAT           reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    IMAG            reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    RUNE            reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    STRING          reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    FUNC            reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    PERIOD          reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    IDENT           reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    STRUCT          reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    LBRACK          reduce using rule 206 (add_op_assign -> OR_ASSIGN .)
    MAP             reduce using rule 206 (add_op_assign -> OR_ASSIGN .)


state 272

    (207) add_op_assign -> XOR_ASSIGN .

    ADD             reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    SUB             reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    NOT             reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    XOR             reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    MUL             reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    AND             reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    LPAREN          reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    INT             reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    FLOAT           reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    IMAG            reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    RUNE            reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    STRING          reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    FUNC            reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    PERIOD          reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    IDENT           reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    STRUCT          reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    LBRACK          reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)
    MAP             reduce using rule 207 (add_op_assign -> XOR_ASSIGN .)


state 273

    (208) mul_op_assign -> MUL_ASSIGN .

    ADD             reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    SUB             reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    NOT             reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    XOR             reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    MUL             reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    AND             reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    LPAREN          reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    INT             reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    FLOAT           reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    IMAG            reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    RUNE            reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    STRING          reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    FUNC            reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    PERIOD          reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    IDENT           reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    STRUCT          reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    LBRACK          reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)
    MAP             reduce using rule 208 (mul_op_assign -> MUL_ASSIGN .)


state 274

    (209) mul_op_assign -> QUO_ASSIGN .

    ADD             reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    SUB             reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    NOT             reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    XOR             reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    MUL             reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    AND             reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    LPAREN          reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    INT             reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    FLOAT           reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    IMAG            reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    RUNE            reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    STRING          reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    FUNC            reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    PERIOD          reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    IDENT           reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    STRUCT          reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    LBRACK          reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)
    MAP             reduce using rule 209 (mul_op_assign -> QUO_ASSIGN .)


state 275

    (210) mul_op_assign -> REM_ASSIGN .

    ADD             reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    SUB             reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    NOT             reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    XOR             reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    MUL             reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    AND             reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    LPAREN          reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    INT             reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    FLOAT           reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    IMAG            reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    RUNE            reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    STRING          reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    FUNC            reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    PERIOD          reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    IDENT           reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    STRUCT          reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    LBRACK          reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)
    MAP             reduce using rule 210 (mul_op_assign -> REM_ASSIGN .)


state 276

    (211) mul_op_assign -> AND_ASSIGN .

    ADD             reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    SUB             reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    NOT             reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    XOR             reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    MUL             reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    AND             reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    LPAREN          reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    INT             reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    FLOAT           reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    IMAG            reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    RUNE            reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    STRING          reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    FUNC            reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    PERIOD          reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    IDENT           reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    STRUCT          reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    LBRACK          reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)
    MAP             reduce using rule 211 (mul_op_assign -> AND_ASSIGN .)


state 277

    (212) mul_op_assign -> SHL_ASSIGN .

    ADD             reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    SUB             reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    NOT             reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    XOR             reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    MUL             reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    AND             reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    LPAREN          reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    INT             reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    FLOAT           reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    IMAG            reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    RUNE            reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    STRING          reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    FUNC            reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    PERIOD          reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    IDENT           reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    STRUCT          reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    LBRACK          reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)
    MAP             reduce using rule 212 (mul_op_assign -> SHL_ASSIGN .)


state 278

    (213) mul_op_assign -> SHR_ASSIGN .

    ADD             reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    SUB             reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    NOT             reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    XOR             reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    MUL             reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    AND             reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    LPAREN          reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    INT             reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    FLOAT           reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    IMAG            reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    RUNE            reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    STRING          reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    FUNC            reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    PERIOD          reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    IDENT           reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    STRUCT          reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    LBRACK          reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)
    MAP             reduce using rule 213 (mul_op_assign -> SHR_ASSIGN .)


state 279

    (214) mul_op_assign -> AND_NOT_ASSIGN .

    ADD             reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    SUB             reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    NOT             reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    XOR             reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    MUL             reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    AND             reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    LPAREN          reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    INT             reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    FLOAT           reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    IMAG            reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    RUNE            reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    STRING          reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    FUNC            reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    PERIOD          reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    IDENT           reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    STRUCT          reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    LBRACK          reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)
    MAP             reduce using rule 214 (mul_op_assign -> AND_NOT_ASSIGN .)


state 280

    (217) BreakStmt -> BREAK Label .

    SEMICOLON       reduce using rule 217 (BreakStmt -> BREAK Label .)


state 281

    (219) ContinueStmt -> CONTINUE Label .

    SEMICOLON       reduce using rule 219 (ContinueStmt -> CONTINUE Label .)


state 282

    (224) IfStmt -> IF Expr . Block else_stmt
    (57) Expr -> Expr . BinOp Expr
    (197) ExpressionStmt -> Expr .
    (198) IncDecStmt -> Expr . INC
    (199) IncDecStmt -> Expr . DEC
    (55) ExpressionList -> Expr . ExprOth
    (223) Block -> . LBRACE StatementList RBRACE
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (88) ExprOth -> . COMMA Expr ExprOth
    (89) ExprOth -> .
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    SEMICOLON       reduce using rule 197 (ExpressionStmt -> Expr .)
    INC             shift and go to state 284
    DEC             shift and go to state 285
    LBRACE          shift and go to state 84
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    COMMA           shift and go to state 257
    ASSIGN          reduce using rule 89 (ExprOth -> .)
    ADD_ASSIGN      reduce using rule 89 (ExprOth -> .)
    SUB_ASSIGN      reduce using rule 89 (ExprOth -> .)
    OR_ASSIGN       reduce using rule 89 (ExprOth -> .)
    XOR_ASSIGN      reduce using rule 89 (ExprOth -> .)
    MUL_ASSIGN      reduce using rule 89 (ExprOth -> .)
    QUO_ASSIGN      reduce using rule 89 (ExprOth -> .)
    REM_ASSIGN      reduce using rule 89 (ExprOth -> .)
    AND_ASSIGN      reduce using rule 89 (ExprOth -> .)
    SHL_ASSIGN      reduce using rule 89 (ExprOth -> .)
    SHR_ASSIGN      reduce using rule 89 (ExprOth -> .)
    AND_NOT_ASSIGN  reduce using rule 89 (ExprOth -> .)
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    Block                          shift and go to state 332
    BinOp                          shift and go to state 197
    ExprOth                        shift and go to state 256
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 283

    (225) IfStmt -> IF SimpleStmt . SEMICOLON Expr else_stmt

    SEMICOLON       shift and go to state 333


state 284

    (198) IncDecStmt -> Expr INC .

    SEMICOLON       reduce using rule 198 (IncDecStmt -> Expr INC .)
    LBRACE          reduce using rule 198 (IncDecStmt -> Expr INC .)


state 285

    (199) IncDecStmt -> Expr DEC .

    SEMICOLON       reduce using rule 199 (IncDecStmt -> Expr DEC .)
    LBRACE          reduce using rule 199 (IncDecStmt -> Expr DEC .)


state 286

    (253) ForStmt -> FOR Condition . Block
    (223) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 84

    Block                          shift and go to state 334

state 287

    (254) ForStmt -> FOR ForClause . Block
    (223) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 84

    Block                          shift and go to state 335

state 288

    (255) ForStmt -> FOR RangeClause . Block
    (223) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 84

    Block                          shift and go to state 336

state 289

    (256) Condition -> Expr .
    (57) Expr -> Expr . BinOp Expr
    (55) ExpressionList -> Expr . ExprOth
    (197) ExpressionStmt -> Expr .
    (198) IncDecStmt -> Expr . INC
    (199) IncDecStmt -> Expr . DEC
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (88) ExprOth -> . COMMA Expr ExprOth
    (89) ExprOth -> .
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    LBRACE          reduce using rule 256 (Condition -> Expr .)
    SEMICOLON       reduce using rule 197 (ExpressionStmt -> Expr .)
    INC             shift and go to state 284
    DEC             shift and go to state 285
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    COMMA           shift and go to state 257
    ASSIGN          reduce using rule 89 (ExprOth -> .)
    ADD_ASSIGN      reduce using rule 89 (ExprOth -> .)
    SUB_ASSIGN      reduce using rule 89 (ExprOth -> .)
    OR_ASSIGN       reduce using rule 89 (ExprOth -> .)
    XOR_ASSIGN      reduce using rule 89 (ExprOth -> .)
    MUL_ASSIGN      reduce using rule 89 (ExprOth -> .)
    QUO_ASSIGN      reduce using rule 89 (ExprOth -> .)
    REM_ASSIGN      reduce using rule 89 (ExprOth -> .)
    AND_ASSIGN      reduce using rule 89 (ExprOth -> .)
    SHL_ASSIGN      reduce using rule 89 (ExprOth -> .)
    SHR_ASSIGN      reduce using rule 89 (ExprOth -> .)
    AND_NOT_ASSIGN  reduce using rule 89 (ExprOth -> .)
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    ExprOth                        shift and go to state 256
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 290

    (257) ForClause -> InitStmt . SEMICOLON ConditionOpt SEMICOLON PostStmt

    SEMICOLON       shift and go to state 337


state 291

    (262) RangeClause -> RangeList . RANGE Expr

    RANGE           shift and go to state 338


state 292

    (258) InitStmt -> SimpleStmt .

    SEMICOLON       reduce using rule 258 (InitStmt -> SimpleStmt .)


state 293

    (263) RangeList -> ExpressionList . ASSIGN
    (200) Assignment -> ExpressionList . assign_op ExpressionList
    (201) assign_op -> . add_op_assign
    (202) assign_op -> . mul_op_assign
    (203) assign_op -> . ASSIGN
    (204) add_op_assign -> . ADD_ASSIGN
    (205) add_op_assign -> . SUB_ASSIGN
    (206) add_op_assign -> . OR_ASSIGN
    (207) add_op_assign -> . XOR_ASSIGN
    (208) mul_op_assign -> . MUL_ASSIGN
    (209) mul_op_assign -> . QUO_ASSIGN
    (210) mul_op_assign -> . REM_ASSIGN
    (211) mul_op_assign -> . AND_ASSIGN
    (212) mul_op_assign -> . SHL_ASSIGN
    (213) mul_op_assign -> . SHR_ASSIGN
    (214) mul_op_assign -> . AND_NOT_ASSIGN

    ASSIGN          shift and go to state 339
    ADD_ASSIGN      shift and go to state 269
    SUB_ASSIGN      shift and go to state 270
    OR_ASSIGN       shift and go to state 271
    XOR_ASSIGN      shift and go to state 272
    MUL_ASSIGN      shift and go to state 273
    QUO_ASSIGN      shift and go to state 274
    REM_ASSIGN      shift and go to state 275
    AND_ASSIGN      shift and go to state 276
    SHL_ASSIGN      shift and go to state 277
    SHR_ASSIGN      shift and go to state 278
    AND_NOT_ASSIGN  shift and go to state 279

    assign_op                      shift and go to state 265
    add_op_assign                  shift and go to state 266
    mul_op_assign                  shift and go to state 267

state 294

    (264) RangeList -> IdentifierList . DEFINE
    (159) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 340


state 295

    (159) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (55) ExpressionList -> . Expr ExprOth
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    ExpressionList                 shift and go to state 341
    Expr                           shift and go to state 145
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 296

    (233) ExprSwitchStmt -> SWITCH SimpleStmtOpt . ExprOpt LBRACE ExprCaseClauseMult RBRACE
    (241) TypeSwitchStmt -> SWITCH SimpleStmtOpt . TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (234) ExprOpt -> . Expr
    (235) ExprOpt -> .
    (242) TypeSwitchGuard -> . ShortVarDeclOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (243) ShortVarDeclOpt -> . IDENT DEFINE
    (244) ShortVarDeclOpt -> .
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAG resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for PERIOD resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
    LBRACE          reduce using rule 235 (ExprOpt -> .)
    IDENT           shift and go to state 346
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! LPAREN          [ reduce using rule 244 (ShortVarDeclOpt -> .) ]
  ! INT             [ reduce using rule 244 (ShortVarDeclOpt -> .) ]
  ! FLOAT           [ reduce using rule 244 (ShortVarDeclOpt -> .) ]
  ! IMAG            [ reduce using rule 244 (ShortVarDeclOpt -> .) ]
  ! RUNE            [ reduce using rule 244 (ShortVarDeclOpt -> .) ]
  ! STRING          [ reduce using rule 244 (ShortVarDeclOpt -> .) ]
  ! FUNC            [ reduce using rule 244 (ShortVarDeclOpt -> .) ]
  ! PERIOD          [ reduce using rule 244 (ShortVarDeclOpt -> .) ]
  ! IDENT           [ reduce using rule 244 (ShortVarDeclOpt -> .) ]
  ! STRUCT          [ reduce using rule 244 (ShortVarDeclOpt -> .) ]
  ! LBRACK          [ reduce using rule 244 (ShortVarDeclOpt -> .) ]
  ! MAP             [ reduce using rule 244 (ShortVarDeclOpt -> .) ]
  ! MUL             [ reduce using rule 244 (ShortVarDeclOpt -> .) ]
  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    ExprOpt                        shift and go to state 342
    TypeSwitchGuard                shift and go to state 343
    Expr                           shift and go to state 344
    ShortVarDeclOpt                shift and go to state 345
    PrimaryExpr                    shift and go to state 106
    UnaryExpr                      shift and go to state 105
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 297

    (230) SimpleStmtOpt -> SimpleStmt . SEMICOLON

    SEMICOLON       shift and go to state 347


state 298

    (168) Parameters -> LPAREN ParameterList COMMA RPAREN .

    LPAREN          reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    IDENT           reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    LBRACK          reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    STRUCT          reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    MUL             reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    MAP             reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    FUNC            reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    LBRACE          reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    SEMICOLON       reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    ASSIGN          reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    RPAREN          reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    COMMA           reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    RBRACK          reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    STRING          reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    COLON           reduce using rule 168 (Parameters -> LPAREN ParameterList COMMA RPAREN .)


state 299

    (169) ParameterList -> COMMA ParameterDecl ParameterList .

    RPAREN          reduce using rule 169 (ParameterList -> COMMA ParameterDecl ParameterList .)
    COMMA           reduce using rule 169 (ParameterList -> COMMA ParameterDecl ParameterList .)


state 300

    (36) ArrayType -> LBRACK ArrayLength RBRACK ElementType .

    ASSIGN          reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    SEMICOLON       reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACE          reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RPAREN          reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COMMA           reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LPAREN          reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    IDENT           reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACK          reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRUCT          reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    MUL             reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    MAP             reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    FUNC            reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RBRACK          reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRING          reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COLON           reduce using rule 36 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)


state 301

    (57) Expr -> Expr BinOp Expr .
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for EQL resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LSS resolved as shift
  ! shift/reduce conflict for LEQ resolved as shift
  ! shift/reduce conflict for GTR resolved as shift
  ! shift/reduce conflict for GEQ resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for QUO resolved as shift
  ! shift/reduce conflict for REM resolved as shift
  ! shift/reduce conflict for SHL resolved as shift
  ! shift/reduce conflict for SHR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for AND_NOT resolved as shift
    RBRACK          reduce using rule 57 (Expr -> Expr BinOp Expr .)
    COMMA           reduce using rule 57 (Expr -> Expr BinOp Expr .)
    SEMICOLON       reduce using rule 57 (Expr -> Expr BinOp Expr .)
    INC             reduce using rule 57 (Expr -> Expr BinOp Expr .)
    DEC             reduce using rule 57 (Expr -> Expr BinOp Expr .)
    ASSIGN          reduce using rule 57 (Expr -> Expr BinOp Expr .)
    ADD_ASSIGN      reduce using rule 57 (Expr -> Expr BinOp Expr .)
    SUB_ASSIGN      reduce using rule 57 (Expr -> Expr BinOp Expr .)
    OR_ASSIGN       reduce using rule 57 (Expr -> Expr BinOp Expr .)
    XOR_ASSIGN      reduce using rule 57 (Expr -> Expr BinOp Expr .)
    MUL_ASSIGN      reduce using rule 57 (Expr -> Expr BinOp Expr .)
    QUO_ASSIGN      reduce using rule 57 (Expr -> Expr BinOp Expr .)
    REM_ASSIGN      reduce using rule 57 (Expr -> Expr BinOp Expr .)
    AND_ASSIGN      reduce using rule 57 (Expr -> Expr BinOp Expr .)
    SHL_ASSIGN      reduce using rule 57 (Expr -> Expr BinOp Expr .)
    SHR_ASSIGN      reduce using rule 57 (Expr -> Expr BinOp Expr .)
    AND_NOT_ASSIGN  reduce using rule 57 (Expr -> Expr BinOp Expr .)
    RPAREN          reduce using rule 57 (Expr -> Expr BinOp Expr .)
    LBRACE          reduce using rule 57 (Expr -> Expr BinOp Expr .)
    COLON           reduce using rule 57 (Expr -> Expr BinOp Expr .)
    RBRACE          reduce using rule 57 (Expr -> Expr BinOp Expr .)
    ELSE            reduce using rule 57 (Expr -> Expr BinOp Expr .)
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

  ! LOR             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! LAND            [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! EQL             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! NEQ             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! LSS             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! LEQ             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! GTR             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! GEQ             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! ADD             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! SUB             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! OR              [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! XOR             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! MUL             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! QUO             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! REM             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! SHL             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! SHR             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! AND             [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]
  ! AND_NOT         [ reduce using rule 57 (Expr -> Expr BinOp Expr .) ]

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 302

    (130) Selector -> PERIOD IDENT .

    PERIOD          reduce using rule 130 (Selector -> PERIOD IDENT .)
    LBRACK          reduce using rule 130 (Selector -> PERIOD IDENT .)
    LPAREN          reduce using rule 130 (Selector -> PERIOD IDENT .)
    LOR             reduce using rule 130 (Selector -> PERIOD IDENT .)
    LAND            reduce using rule 130 (Selector -> PERIOD IDENT .)
    EQL             reduce using rule 130 (Selector -> PERIOD IDENT .)
    NEQ             reduce using rule 130 (Selector -> PERIOD IDENT .)
    LSS             reduce using rule 130 (Selector -> PERIOD IDENT .)
    LEQ             reduce using rule 130 (Selector -> PERIOD IDENT .)
    GTR             reduce using rule 130 (Selector -> PERIOD IDENT .)
    GEQ             reduce using rule 130 (Selector -> PERIOD IDENT .)
    ADD             reduce using rule 130 (Selector -> PERIOD IDENT .)
    SUB             reduce using rule 130 (Selector -> PERIOD IDENT .)
    OR              reduce using rule 130 (Selector -> PERIOD IDENT .)
    XOR             reduce using rule 130 (Selector -> PERIOD IDENT .)
    MUL             reduce using rule 130 (Selector -> PERIOD IDENT .)
    QUO             reduce using rule 130 (Selector -> PERIOD IDENT .)
    REM             reduce using rule 130 (Selector -> PERIOD IDENT .)
    SHL             reduce using rule 130 (Selector -> PERIOD IDENT .)
    SHR             reduce using rule 130 (Selector -> PERIOD IDENT .)
    AND             reduce using rule 130 (Selector -> PERIOD IDENT .)
    AND_NOT         reduce using rule 130 (Selector -> PERIOD IDENT .)
    RBRACK          reduce using rule 130 (Selector -> PERIOD IDENT .)
    COMMA           reduce using rule 130 (Selector -> PERIOD IDENT .)
    SEMICOLON       reduce using rule 130 (Selector -> PERIOD IDENT .)
    INC             reduce using rule 130 (Selector -> PERIOD IDENT .)
    DEC             reduce using rule 130 (Selector -> PERIOD IDENT .)
    ASSIGN          reduce using rule 130 (Selector -> PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 130 (Selector -> PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 130 (Selector -> PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 130 (Selector -> PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 130 (Selector -> PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 130 (Selector -> PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 130 (Selector -> PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 130 (Selector -> PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 130 (Selector -> PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 130 (Selector -> PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 130 (Selector -> PERIOD IDENT .)
    AND_NOT_ASSIGN  reduce using rule 130 (Selector -> PERIOD IDENT .)
    RPAREN          reduce using rule 130 (Selector -> PERIOD IDENT .)
    LBRACE          reduce using rule 130 (Selector -> PERIOD IDENT .)
    COLON           reduce using rule 130 (Selector -> PERIOD IDENT .)
    RBRACE          reduce using rule 130 (Selector -> PERIOD IDENT .)
    ELSE            reduce using rule 130 (Selector -> PERIOD IDENT .)


state 303

    (127) Index -> LBRACK Expr . RBRACK
    (131) Slice -> LBRACK Expr . COLON Expr RBRACK
    (133) Slice -> LBRACK Expr . COLON RBRACK
    (136) Slice -> LBRACK Expr . COLON Expr COLON Expr RBRACK
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    RBRACK          shift and go to state 348
    COLON           shift and go to state 349
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 304

    (132) Slice -> LBRACK COLON . Expr RBRACK
    (134) Slice -> LBRACK COLON . RBRACK
    (135) Slice -> LBRACK COLON . Expr COLON Expr RBRACK
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    RBRACK          shift and go to state 351
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Expr                           shift and go to state 350
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 305

    (137) Arguments -> LPAREN RPAREN .

    PERIOD          reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    LBRACK          reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    LPAREN          reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    LOR             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    LAND            reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    EQL             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    NEQ             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    LSS             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    LEQ             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    GTR             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    GEQ             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    ADD             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    SUB             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    OR              reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    XOR             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    MUL             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    QUO             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    REM             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    SHL             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    SHR             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    AND             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    AND_NOT         reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    RBRACK          reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    COMMA           reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    SEMICOLON       reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    INC             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    DEC             reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    ASSIGN          reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    ADD_ASSIGN      reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    SUB_ASSIGN      reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    OR_ASSIGN       reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    XOR_ASSIGN      reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    MUL_ASSIGN      reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    QUO_ASSIGN      reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    REM_ASSIGN      reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    AND_ASSIGN      reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    RPAREN          reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    LBRACE          reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    COLON           reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    RBRACE          reduce using rule 137 (Arguments -> LPAREN RPAREN .)
    ELSE            reduce using rule 137 (Arguments -> LPAREN RPAREN .)


state 306

    (138) Arguments -> LPAREN ExpressionList . RPAREN
    (139) Arguments -> LPAREN ExpressionList . COMMA RPAREN

    RPAREN          shift and go to state 352
    COMMA           shift and go to state 353


state 307

    (140) Arguments -> LPAREN Type . RPAREN
    (141) Arguments -> LPAREN Type . COMMA RPAREN
    (142) Arguments -> LPAREN Type . COMMA ExpressionList RPAREN
    (143) Arguments -> LPAREN Type . COMMA ExpressionList COMMA RPAREN
    (128) Conversion -> Type . LPAREN Expr RPAREN
    (129) Conversion -> Type . LPAREN Expr COMMA RPAREN

    RPAREN          shift and go to state 354
    COMMA           shift and go to state 355
    LPAREN          shift and go to state 237


state 308

    (49) PointerType -> MUL . BaseType
    (86) UnaryOp -> MUL .
    (50) BaseType -> . Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    ADD             reduce using rule 86 (UnaryOp -> MUL .)
    SUB             reduce using rule 86 (UnaryOp -> MUL .)
    NOT             reduce using rule 86 (UnaryOp -> MUL .)
    XOR             reduce using rule 86 (UnaryOp -> MUL .)
    MUL             reduce using rule 86 (UnaryOp -> MUL .)
    AND             reduce using rule 86 (UnaryOp -> MUL .)
    INT             reduce using rule 86 (UnaryOp -> MUL .)
    FLOAT           reduce using rule 86 (UnaryOp -> MUL .)
    IMAG            reduce using rule 86 (UnaryOp -> MUL .)
    RUNE            reduce using rule 86 (UnaryOp -> MUL .)
    STRING          reduce using rule 86 (UnaryOp -> MUL .)
    FUNC            reduce using rule 86 (UnaryOp -> MUL .)
    PERIOD          reduce using rule 86 (UnaryOp -> MUL .)
    IDENT           reduce using rule 86 (UnaryOp -> MUL .)
    STRUCT          reduce using rule 86 (UnaryOp -> MUL .)
    MAP             reduce using rule 86 (UnaryOp -> MUL .)
    LPAREN          shift and go to state 57
    LBRACK          shift and go to state 65

  ! LPAREN          [ reduce using rule 86 (UnaryOp -> MUL .) ]
  ! LBRACK          [ reduce using rule 86 (UnaryOp -> MUL .) ]
  ! IDENT           [ shift and go to state 58 ]
  ! STRUCT          [ shift and go to state 66 ]
  ! MUL             [ shift and go to state 67 ]
  ! MAP             [ shift and go to state 68 ]
  ! FUNC            [ shift and go to state 69 ]

    BaseType                       shift and go to state 136
    Type                           shift and go to state 137
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 309

    (92) Operand -> LPAREN Expr RPAREN .

    PERIOD          reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    LBRACK          reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    LPAREN          reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    LOR             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    LAND            reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    EQL             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    NEQ             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    LSS             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    LEQ             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    GTR             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    GEQ             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    ADD             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    SUB             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    OR              reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    XOR             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    MUL             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    QUO             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    REM             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    SHL             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    SHR             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    AND             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    AND_NOT         reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    RBRACK          reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    COMMA           reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    SEMICOLON       reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    INC             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    DEC             reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    ASSIGN          reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    ADD_ASSIGN      reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    SUB_ASSIGN      reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    OR_ASSIGN       reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    XOR_ASSIGN      reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    MUL_ASSIGN      reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    QUO_ASSIGN      reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    REM_ASSIGN      reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    AND_ASSIGN      reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    SHL_ASSIGN      reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    SHR_ASSIGN      reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    RPAREN          reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    LBRACE          reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    COLON           reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    RBRACE          reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)
    ELSE            reduce using rule 92 (Operand -> LPAREN Expr RPAREN .)


state 310

    (54) FunctionType -> FUNC Signature .
    (120) FunctionLit -> FUNC Signature . FunctionBody
    (163) FunctionBody -> . Block
    (223) Block -> . LBRACE StatementList RBRACE

    RPAREN          reduce using rule 54 (FunctionType -> FUNC Signature .)
    LPAREN          reduce using rule 54 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 54 (FunctionType -> FUNC Signature .)
    LBRACE          shift and go to state 84

    FunctionBody                   shift and go to state 320
    Block                          shift and go to state 83

state 311

    (128) Conversion -> Type LPAREN Expr . RPAREN
    (129) Conversion -> Type LPAREN Expr . COMMA RPAREN
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    RPAREN          shift and go to state 356
    COMMA           shift and go to state 357
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 312

    (106) LiteralValue -> LBRACE ElementList . COMMA RBRACE
    (107) LiteralValue -> LBRACE ElementList . RBRACE

    COMMA           shift and go to state 358
    RBRACE          shift and go to state 359


state 313

    (108) LiteralValue -> LBRACE RBRACE .

    PERIOD          reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    LBRACK          reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    LPAREN          reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    LOR             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    LAND            reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    EQL             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    NEQ             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    LSS             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    LEQ             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    GTR             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    GEQ             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    ADD             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    SUB             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    OR              reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    XOR             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    MUL             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    QUO             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    REM             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    SHL             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    SHR             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    AND             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    AND_NOT         reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    RBRACK          reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    COMMA           reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    SEMICOLON       reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    INC             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    DEC             reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    ASSIGN          reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    ADD_ASSIGN      reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    SUB_ASSIGN      reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    OR_ASSIGN       reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    XOR_ASSIGN      reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    MUL_ASSIGN      reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    QUO_ASSIGN      reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    REM_ASSIGN      reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    AND_ASSIGN      reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    SHL_ASSIGN      reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    SHR_ASSIGN      reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    AND_NOT_ASSIGN  reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    RPAREN          reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    LBRACE          reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    COLON           reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    RBRACE          reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)
    ELSE            reduce using rule 108 (LiteralValue -> LBRACE RBRACE .)


state 314

    (109) ElementList -> KeyedElement .
    (110) ElementList -> KeyedElement . COMMA ElementList

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACE          reduce using rule 109 (ElementList -> KeyedElement .)
    COMMA           shift and go to state 360

  ! COMMA           [ reduce using rule 109 (ElementList -> KeyedElement .) ]


state 315

    (111) KeyedElement -> Element .

    COMMA           reduce using rule 111 (KeyedElement -> Element .)
    RBRACE          reduce using rule 111 (KeyedElement -> Element .)


state 316

    (112) KeyedElement -> Key . COLON Element

    COLON           shift and go to state 361


state 317

    (116) Element -> Expr .
    (114) Key -> Expr .
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    COMMA           reduce using rule 116 (Element -> Expr .)
    RBRACE          reduce using rule 116 (Element -> Expr .)
    COLON           reduce using rule 114 (Key -> Expr .)
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 318

    (117) Element -> LiteralValue .
    (115) Key -> LiteralValue .

    COMMA           reduce using rule 117 (Element -> LiteralValue .)
    RBRACE          reduce using rule 117 (Element -> LiteralValue .)
    COLON           reduce using rule 115 (Key -> LiteralValue .)


state 319

    (113) Key -> IDENT .
    (269) TypeName -> IDENT .
    (270) TypeName -> IDENT . QualifiedIdentPart
    (29) QualifiedIdentPart -> . PERIOD IDENT

    COLON           reduce using rule 113 (Key -> IDENT .)
    LBRACE          reduce using rule 269 (TypeName -> IDENT .)
    LPAREN          reduce using rule 269 (TypeName -> IDENT .)
    PERIOD          shift and go to state 101

    QualifiedIdentPart             shift and go to state 100

state 320

    (120) FunctionLit -> FUNC Signature FunctionBody .

    PERIOD          reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    LBRACK          reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    LPAREN          reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    LOR             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    LAND            reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    EQL             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    NEQ             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    LSS             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    LEQ             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    GTR             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    GEQ             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    ADD             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    SUB             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    OR              reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    XOR             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    MUL             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    QUO             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    REM             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    SHL             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    SHR             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    AND             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    AND_NOT         reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    RBRACK          reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    COMMA           reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    SEMICOLON       reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    INC             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    DEC             reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    ASSIGN          reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    ADD_ASSIGN      reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    SUB_ASSIGN      reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    OR_ASSIGN       reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    XOR_ASSIGN      reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    MUL_ASSIGN      reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    QUO_ASSIGN      reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    REM_ASSIGN      reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    AND_ASSIGN      reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    SHL_ASSIGN      reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    SHR_ASSIGN      reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    AND_NOT_ASSIGN  reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    RPAREN          reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    LBRACE          reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    COLON           reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    RBRACE          reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)
    ELSE            reduce using rule 120 (FunctionLit -> FUNC Signature FunctionBody .)


state 321

    (39) StructType -> STRUCT LBRACE FieldDeclMult RBRACE .

    ASSIGN          reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    SEMICOLON       reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    LBRACE          reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    RPAREN          reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    COMMA           reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    LPAREN          reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    IDENT           reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    LBRACK          reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    STRUCT          reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    MUL             reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    MAP             reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    FUNC            reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    RBRACK          reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    STRING          reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)
    COLON           reduce using rule 39 (StructType -> STRUCT LBRACE FieldDeclMult RBRACE .)


state 322

    (40) FieldDeclMult -> FieldDecl SEMICOLON . FieldDeclMult
    (40) FieldDeclMult -> . FieldDecl SEMICOLON FieldDeclMult
    (41) FieldDeclMult -> .
    (42) FieldDecl -> . IdentifierList Type
    (43) FieldDecl -> . EmbeddedField
    (44) FieldDecl -> . IdentifierList Type Tag
    (45) FieldDecl -> . EmbeddedField Tag
    (26) IdentifierList -> . IDENT IdentifierOth
    (47) EmbeddedField -> . MUL TypeName
    (48) EmbeddedField -> . TypeName
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart

    RBRACE          reduce using rule 41 (FieldDeclMult -> .)
    IDENT           shift and go to state 95
    MUL             shift and go to state 249

    FieldDecl                      shift and go to state 246
    FieldDeclMult                  shift and go to state 362
    IdentifierList                 shift and go to state 247
    EmbeddedField                  shift and go to state 248
    TypeName                       shift and go to state 250

state 323

    (42) FieldDecl -> IdentifierList Type .
    (44) FieldDecl -> IdentifierList Type . Tag
    (46) Tag -> . STRING

    SEMICOLON       reduce using rule 42 (FieldDecl -> IdentifierList Type .)
    STRING          shift and go to state 325

    Tag                            shift and go to state 363

state 324

    (45) FieldDecl -> EmbeddedField Tag .

    SEMICOLON       reduce using rule 45 (FieldDecl -> EmbeddedField Tag .)


state 325

    (46) Tag -> STRING .

    SEMICOLON       reduce using rule 46 (Tag -> STRING .)


state 326

    (47) EmbeddedField -> MUL TypeName .

    STRING          reduce using rule 47 (EmbeddedField -> MUL TypeName .)
    SEMICOLON       reduce using rule 47 (EmbeddedField -> MUL TypeName .)


state 327

    (52) MapType -> MAP LBRACK KeyType RBRACK . ElementType
    (38) ElementType -> . Type
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    ElementType                    shift and go to state 364
    Type                           shift and go to state 196
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 328

    (88) ExprOth -> COMMA Expr . ExprOth
    (57) Expr -> Expr . BinOp Expr
    (88) ExprOth -> . COMMA Expr ExprOth
    (89) ExprOth -> .
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 257
    SEMICOLON       reduce using rule 89 (ExprOth -> .)
    RPAREN          reduce using rule 89 (ExprOth -> .)
    LBRACE          reduce using rule 89 (ExprOth -> .)
    COLON           reduce using rule 89 (ExprOth -> .)
    ASSIGN          reduce using rule 89 (ExprOth -> .)
    ADD_ASSIGN      reduce using rule 89 (ExprOth -> .)
    SUB_ASSIGN      reduce using rule 89 (ExprOth -> .)
    OR_ASSIGN       reduce using rule 89 (ExprOth -> .)
    XOR_ASSIGN      reduce using rule 89 (ExprOth -> .)
    MUL_ASSIGN      reduce using rule 89 (ExprOth -> .)
    QUO_ASSIGN      reduce using rule 89 (ExprOth -> .)
    REM_ASSIGN      reduce using rule 89 (ExprOth -> .)
    AND_ASSIGN      reduce using rule 89 (ExprOth -> .)
    SHL_ASSIGN      reduce using rule 89 (ExprOth -> .)
    SHR_ASSIGN      reduce using rule 89 (ExprOth -> .)
    AND_NOT_ASSIGN  reduce using rule 89 (ExprOth -> .)
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

  ! COMMA           [ reduce using rule 89 (ExprOth -> .) ]

    ExprOth                        shift and go to state 365
    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 329

    (175) StatementList -> Statement SEMICOLON StatementList .

    RBRACE          reduce using rule 175 (StatementList -> Statement SEMICOLON StatementList .)
    CASE            reduce using rule 175 (StatementList -> Statement SEMICOLON StatementList .)
    DEFAULT         reduce using rule 175 (StatementList -> Statement SEMICOLON StatementList .)


state 330

    (189) LabeledStmt -> Label COLON Statement .

    SEMICOLON       reduce using rule 189 (LabeledStmt -> Label COLON Statement .)


state 331

    (200) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOLON       reduce using rule 200 (Assignment -> ExpressionList assign_op ExpressionList .)
    LBRACE          reduce using rule 200 (Assignment -> ExpressionList assign_op ExpressionList .)


state 332

    (224) IfStmt -> IF Expr Block . else_stmt
    (226) else_stmt -> . ELSE IfStmt
    (227) else_stmt -> . ELSE Block
    (228) else_stmt -> .

    ELSE            shift and go to state 367
    SEMICOLON       reduce using rule 228 (else_stmt -> .)

    else_stmt                      shift and go to state 366

state 333

    (225) IfStmt -> IF SimpleStmt SEMICOLON . Expr else_stmt
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Expr                           shift and go to state 368
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 334

    (253) ForStmt -> FOR Condition Block .

    SEMICOLON       reduce using rule 253 (ForStmt -> FOR Condition Block .)


state 335

    (254) ForStmt -> FOR ForClause Block .

    SEMICOLON       reduce using rule 254 (ForStmt -> FOR ForClause Block .)


state 336

    (255) ForStmt -> FOR RangeClause Block .

    SEMICOLON       reduce using rule 255 (ForStmt -> FOR RangeClause Block .)


state 337

    (257) ForClause -> InitStmt SEMICOLON . ConditionOpt SEMICOLON PostStmt
    (259) ConditionOpt -> . Condition
    (260) ConditionOpt -> .
    (256) Condition -> . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    SEMICOLON       reduce using rule 260 (ConditionOpt -> .)
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    ConditionOpt                   shift and go to state 369
    Condition                      shift and go to state 370
    Expr                           shift and go to state 371
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 338

    (262) RangeClause -> RangeList RANGE . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Expr                           shift and go to state 372
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 339

    (263) RangeList -> ExpressionList ASSIGN .
    (203) assign_op -> ASSIGN .

    RANGE           reduce using rule 263 (RangeList -> ExpressionList ASSIGN .)
    ADD             reduce using rule 203 (assign_op -> ASSIGN .)
    SUB             reduce using rule 203 (assign_op -> ASSIGN .)
    NOT             reduce using rule 203 (assign_op -> ASSIGN .)
    XOR             reduce using rule 203 (assign_op -> ASSIGN .)
    MUL             reduce using rule 203 (assign_op -> ASSIGN .)
    AND             reduce using rule 203 (assign_op -> ASSIGN .)
    LPAREN          reduce using rule 203 (assign_op -> ASSIGN .)
    INT             reduce using rule 203 (assign_op -> ASSIGN .)
    FLOAT           reduce using rule 203 (assign_op -> ASSIGN .)
    IMAG            reduce using rule 203 (assign_op -> ASSIGN .)
    RUNE            reduce using rule 203 (assign_op -> ASSIGN .)
    STRING          reduce using rule 203 (assign_op -> ASSIGN .)
    FUNC            reduce using rule 203 (assign_op -> ASSIGN .)
    PERIOD          reduce using rule 203 (assign_op -> ASSIGN .)
    IDENT           reduce using rule 203 (assign_op -> ASSIGN .)
    STRUCT          reduce using rule 203 (assign_op -> ASSIGN .)
    LBRACK          reduce using rule 203 (assign_op -> ASSIGN .)
    MAP             reduce using rule 203 (assign_op -> ASSIGN .)


state 340

    (264) RangeList -> IdentifierList DEFINE .
    (159) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (55) ExpressionList -> . Expr ExprOth
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    RANGE           reduce using rule 264 (RangeList -> IdentifierList DEFINE .)
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    ExpressionList                 shift and go to state 341
    Expr                           shift and go to state 145
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 341

    (159) ShortVarDecl -> IdentifierList DEFINE ExpressionList .

    SEMICOLON       reduce using rule 159 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    LBRACE          reduce using rule 159 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)


state 342

    (233) ExprSwitchStmt -> SWITCH SimpleStmtOpt ExprOpt . LBRACE ExprCaseClauseMult RBRACE

    LBRACE          shift and go to state 373


state 343

    (241) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard . LBRACE TypeCaseClauseMult RBRACE

    LBRACE          shift and go to state 374


state 344

    (234) ExprOpt -> Expr .
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    LBRACE          reduce using rule 234 (ExprOpt -> Expr .)
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 345

    (242) TypeSwitchGuard -> ShortVarDeclOpt . PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68
    MUL             shift and go to state 67

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    PrimaryExpr                    shift and go to state 375
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 346

    (243) ShortVarDeclOpt -> IDENT . DEFINE
    (269) TypeName -> IDENT .
    (270) TypeName -> IDENT . QualifiedIdentPart
    (29) QualifiedIdentPart -> . PERIOD IDENT

    DEFINE          shift and go to state 376
    LBRACE          reduce using rule 269 (TypeName -> IDENT .)
    LPAREN          reduce using rule 269 (TypeName -> IDENT .)
    PERIOD          shift and go to state 101

    QualifiedIdentPart             shift and go to state 100

state 347

    (230) SimpleStmtOpt -> SimpleStmt SEMICOLON .

    IDENT           reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    ADD             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    SUB             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    NOT             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    XOR             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    MUL             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    AND             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    LPAREN          reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    INT             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    FLOAT           reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    IMAG            reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    RUNE            reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    STRING          reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    FUNC            reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    PERIOD          reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    STRUCT          reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    LBRACK          reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    MAP             reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)
    LBRACE          reduce using rule 230 (SimpleStmtOpt -> SimpleStmt SEMICOLON .)


state 348

    (127) Index -> LBRACK Expr RBRACK .

    PERIOD          reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    LBRACK          reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    LPAREN          reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    LOR             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    LAND            reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    EQL             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    NEQ             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    LSS             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    LEQ             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    GTR             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    GEQ             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    ADD             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    SUB             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    OR              reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    XOR             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    MUL             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    QUO             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    REM             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    SHL             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    SHR             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    AND             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    AND_NOT         reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    RBRACK          reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    COMMA           reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    SEMICOLON       reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    INC             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    DEC             reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    ASSIGN          reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    OR_ASSIGN       reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    REM_ASSIGN      reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    AND_ASSIGN      reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    RPAREN          reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    LBRACE          reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    COLON           reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    RBRACE          reduce using rule 127 (Index -> LBRACK Expr RBRACK .)
    ELSE            reduce using rule 127 (Index -> LBRACK Expr RBRACK .)


state 349

    (131) Slice -> LBRACK Expr COLON . Expr RBRACK
    (133) Slice -> LBRACK Expr COLON . RBRACK
    (136) Slice -> LBRACK Expr COLON . Expr COLON Expr RBRACK
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    RBRACK          shift and go to state 378
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Expr                           shift and go to state 377
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 350

    (132) Slice -> LBRACK COLON Expr . RBRACK
    (135) Slice -> LBRACK COLON Expr . COLON Expr RBRACK
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    RBRACK          shift and go to state 380
    COLON           shift and go to state 379
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 351

    (134) Slice -> LBRACK COLON RBRACK .

    PERIOD          reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    LBRACK          reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    LPAREN          reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    LOR             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    LAND            reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    EQL             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    NEQ             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    LSS             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    LEQ             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    GTR             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    GEQ             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    ADD             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    SUB             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    OR              reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    XOR             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    MUL             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    QUO             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    REM             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    SHL             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    SHR             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    AND             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    AND_NOT         reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    RBRACK          reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    COMMA           reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    SEMICOLON       reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    INC             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    DEC             reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    ASSIGN          reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    ADD_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    SUB_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    OR_ASSIGN       reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    XOR_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    MUL_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    QUO_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    REM_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    AND_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    SHL_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    SHR_ASSIGN      reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    RPAREN          reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    LBRACE          reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    COLON           reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    RBRACE          reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)
    ELSE            reduce using rule 134 (Slice -> LBRACK COLON RBRACK .)


state 352

    (138) Arguments -> LPAREN ExpressionList RPAREN .

    PERIOD          reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    LBRACK          reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    LPAREN          reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    LOR             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    LAND            reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    EQL             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    NEQ             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    LSS             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    LEQ             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    GTR             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    GEQ             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR              reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    QUO             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    REM             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_NOT         reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    RBRACK          reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    COMMA           reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    SEMICOLON       reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    INC             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    DEC             reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    ASSIGN          reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR_ASSIGN       reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    QUO_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    REM_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR_ASSIGN      reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    RPAREN          reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    LBRACE          reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    COLON           reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    RBRACE          reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)
    ELSE            reduce using rule 138 (Arguments -> LPAREN ExpressionList RPAREN .)


state 353

    (139) Arguments -> LPAREN ExpressionList COMMA . RPAREN

    RPAREN          shift and go to state 381


state 354

    (140) Arguments -> LPAREN Type RPAREN .

    PERIOD          reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    LBRACK          reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    LPAREN          reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    LOR             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    LAND            reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    EQL             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    NEQ             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    LSS             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    LEQ             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    GTR             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    GEQ             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    ADD             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    SUB             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    OR              reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    XOR             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    MUL             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    QUO             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    REM             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    SHL             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    SHR             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    AND             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    AND_NOT         reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    RBRACK          reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    INC             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    DEC             reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    ASSIGN          reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    ADD_ASSIGN      reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    SUB_ASSIGN      reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    OR_ASSIGN       reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    XOR_ASSIGN      reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    MUL_ASSIGN      reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    QUO_ASSIGN      reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    REM_ASSIGN      reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    AND_ASSIGN      reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    SHL_ASSIGN      reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    SHR_ASSIGN      reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    LBRACE          reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    COLON           reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    RBRACE          reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)
    ELSE            reduce using rule 140 (Arguments -> LPAREN Type RPAREN .)


state 355

    (141) Arguments -> LPAREN Type COMMA . RPAREN
    (142) Arguments -> LPAREN Type COMMA . ExpressionList RPAREN
    (143) Arguments -> LPAREN Type COMMA . ExpressionList COMMA RPAREN
    (55) ExpressionList -> . Expr ExprOth
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    RPAREN          shift and go to state 382
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Type                           shift and go to state 119
    ExpressionList                 shift and go to state 383
    Expr                           shift and go to state 145
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 356

    (128) Conversion -> Type LPAREN Expr RPAREN .

    PERIOD          reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    LBRACK          reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    LPAREN          reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    LOR             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    LAND            reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    EQL             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    NEQ             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    LSS             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    LEQ             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    GTR             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    GEQ             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    ADD             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    SUB             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    OR              reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    XOR             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    MUL             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    QUO             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    REM             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    SHL             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    SHR             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    AND             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    AND_NOT         reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    RBRACK          reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    COMMA           reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    SEMICOLON       reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    INC             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    DEC             reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    ASSIGN          reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    ADD_ASSIGN      reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    SUB_ASSIGN      reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    OR_ASSIGN       reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    XOR_ASSIGN      reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    MUL_ASSIGN      reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    QUO_ASSIGN      reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    REM_ASSIGN      reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    AND_ASSIGN      reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    SHL_ASSIGN      reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    SHR_ASSIGN      reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    RPAREN          reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    LBRACE          reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    COLON           reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    RBRACE          reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)
    ELSE            reduce using rule 128 (Conversion -> Type LPAREN Expr RPAREN .)


state 357

    (129) Conversion -> Type LPAREN Expr COMMA . RPAREN

    RPAREN          shift and go to state 384


state 358

    (106) LiteralValue -> LBRACE ElementList COMMA . RBRACE

    RBRACE          shift and go to state 385


state 359

    (107) LiteralValue -> LBRACE ElementList RBRACE .

    PERIOD          reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    LBRACK          reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    LPAREN          reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    LOR             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    LAND            reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    EQL             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    NEQ             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    LSS             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    LEQ             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    GTR             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    GEQ             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    ADD             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    SUB             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    OR              reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    XOR             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    MUL             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    QUO             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    REM             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    SHL             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    SHR             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    AND             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    AND_NOT         reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    RBRACK          reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    COMMA           reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    SEMICOLON       reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    INC             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    DEC             reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    ASSIGN          reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    ADD_ASSIGN      reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    SUB_ASSIGN      reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    OR_ASSIGN       reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    XOR_ASSIGN      reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    MUL_ASSIGN      reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    QUO_ASSIGN      reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    REM_ASSIGN      reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    AND_ASSIGN      reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    SHL_ASSIGN      reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    SHR_ASSIGN      reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    AND_NOT_ASSIGN  reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    RPAREN          reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    LBRACE          reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    COLON           reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    RBRACE          reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)
    ELSE            reduce using rule 107 (LiteralValue -> LBRACE ElementList RBRACE .)


state 360

    (110) ElementList -> KeyedElement COMMA . ElementList
    (109) ElementList -> . KeyedElement
    (110) ElementList -> . KeyedElement COMMA ElementList
    (111) KeyedElement -> . Element
    (112) KeyedElement -> . Key COLON Element
    (116) Element -> . Expr
    (117) Element -> . LiteralValue
    (113) Key -> . IDENT
    (114) Key -> . Expr
    (115) Key -> . LiteralValue
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (106) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (107) LiteralValue -> . LBRACE ElementList RBRACE
    (108) LiteralValue -> . LBRACE RBRACE
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    IDENT           shift and go to state 319
    LBRACE          shift and go to state 239
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    KeyedElement                   shift and go to state 314
    ElementList                    shift and go to state 386
    Element                        shift and go to state 315
    Key                            shift and go to state 316
    Expr                           shift and go to state 317
    LiteralValue                   shift and go to state 318
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 361

    (112) KeyedElement -> Key COLON . Element
    (116) Element -> . Expr
    (117) Element -> . LiteralValue
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (106) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (107) LiteralValue -> . LBRACE ElementList RBRACE
    (108) LiteralValue -> . LBRACE RBRACE
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    LBRACE          shift and go to state 239
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Element                        shift and go to state 387
    Expr                           shift and go to state 388
    LiteralValue                   shift and go to state 389
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 362

    (40) FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult .

    RBRACE          reduce using rule 40 (FieldDeclMult -> FieldDecl SEMICOLON FieldDeclMult .)


state 363

    (44) FieldDecl -> IdentifierList Type Tag .

    SEMICOLON       reduce using rule 44 (FieldDecl -> IdentifierList Type Tag .)


state 364

    (52) MapType -> MAP LBRACK KeyType RBRACK ElementType .

    ASSIGN          reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    SEMICOLON       reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    LBRACE          reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    RPAREN          reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    COMMA           reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    LPAREN          reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    IDENT           reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    LBRACK          reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    STRUCT          reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    MUL             reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    MAP             reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    FUNC            reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    RBRACK          reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    STRING          reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    COLON           reduce using rule 52 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)


state 365

    (88) ExprOth -> COMMA Expr ExprOth .

    SEMICOLON       reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    RPAREN          reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    COMMA           reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    LBRACE          reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    COLON           reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    ASSIGN          reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    ADD_ASSIGN      reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    SUB_ASSIGN      reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    OR_ASSIGN       reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    XOR_ASSIGN      reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    MUL_ASSIGN      reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    QUO_ASSIGN      reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    REM_ASSIGN      reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    AND_ASSIGN      reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    SHL_ASSIGN      reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    SHR_ASSIGN      reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)
    AND_NOT_ASSIGN  reduce using rule 88 (ExprOth -> COMMA Expr ExprOth .)


state 366

    (224) IfStmt -> IF Expr Block else_stmt .

    SEMICOLON       reduce using rule 224 (IfStmt -> IF Expr Block else_stmt .)


state 367

    (226) else_stmt -> ELSE . IfStmt
    (227) else_stmt -> ELSE . Block
    (224) IfStmt -> . IF Expr Block else_stmt
    (225) IfStmt -> . IF SimpleStmt SEMICOLON Expr else_stmt
    (223) Block -> . LBRACE StatementList RBRACE

    IF              shift and go to state 176
    LBRACE          shift and go to state 84

    IfStmt                         shift and go to state 390
    Block                          shift and go to state 391

state 368

    (225) IfStmt -> IF SimpleStmt SEMICOLON Expr . else_stmt
    (57) Expr -> Expr . BinOp Expr
    (226) else_stmt -> . ELSE IfStmt
    (227) else_stmt -> . ELSE Block
    (228) else_stmt -> .
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    ELSE            shift and go to state 367
    SEMICOLON       reduce using rule 228 (else_stmt -> .)
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    else_stmt                      shift and go to state 392
    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 369

    (257) ForClause -> InitStmt SEMICOLON ConditionOpt . SEMICOLON PostStmt

    SEMICOLON       shift and go to state 393


state 370

    (259) ConditionOpt -> Condition .

    SEMICOLON       reduce using rule 259 (ConditionOpt -> Condition .)


state 371

    (256) Condition -> Expr .
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    SEMICOLON       reduce using rule 256 (Condition -> Expr .)
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 372

    (262) RangeClause -> RangeList RANGE Expr .
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    LBRACE          reduce using rule 262 (RangeClause -> RangeList RANGE Expr .)
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 373

    (233) ExprSwitchStmt -> SWITCH SimpleStmtOpt ExprOpt LBRACE . ExprCaseClauseMult RBRACE
    (236) ExprCaseClauseMult -> . ExprCaseClause ExprCaseClauseMult
    (237) ExprCaseClauseMult -> .
    (238) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (239) ExprSwitchCase -> . CASE ExpressionList
    (240) ExprSwitchCase -> . DEFAULT

    RBRACE          reduce using rule 237 (ExprCaseClauseMult -> .)
    CASE            shift and go to state 397
    DEFAULT         shift and go to state 398

    ExprCaseClauseMult             shift and go to state 394
    ExprCaseClause                 shift and go to state 395
    ExprSwitchCase                 shift and go to state 396

state 374

    (241) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE . TypeCaseClauseMult RBRACE
    (245) TypeCaseClauseMult -> . TypeCaseClause TypeCaseClauseMult
    (246) TypeCaseClauseMult -> .
    (247) TypeCaseClause -> . TypeSwitchCase COLON StatementList
    (248) TypeSwitchCase -> . CASE TypeList
    (249) TypeSwitchCase -> . DEFAULT

    RBRACE          reduce using rule 246 (TypeCaseClauseMult -> .)
    CASE            shift and go to state 402
    DEFAULT         shift and go to state 403

    TypeCaseClauseMult             shift and go to state 399
    TypeCaseClause                 shift and go to state 400
    TypeSwitchCase                 shift and go to state 401

state 375

    (242) TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr . PERIOD LPAREN TYPE RPAREN
    (123) PrimaryExpr -> PrimaryExpr . Selector
    (124) PrimaryExpr -> PrimaryExpr . Index
    (125) PrimaryExpr -> PrimaryExpr . Slice
    (126) PrimaryExpr -> PrimaryExpr . Arguments
    (130) Selector -> . PERIOD IDENT
    (127) Index -> . LBRACK Expr RBRACK
    (131) Slice -> . LBRACK Expr COLON Expr RBRACK
    (132) Slice -> . LBRACK COLON Expr RBRACK
    (133) Slice -> . LBRACK Expr COLON RBRACK
    (134) Slice -> . LBRACK COLON RBRACK
    (135) Slice -> . LBRACK COLON Expr COLON Expr RBRACK
    (136) Slice -> . LBRACK Expr COLON Expr COLON Expr RBRACK
    (137) Arguments -> . LPAREN RPAREN
    (138) Arguments -> . LPAREN ExpressionList RPAREN
    (139) Arguments -> . LPAREN ExpressionList COMMA RPAREN
    (140) Arguments -> . LPAREN Type RPAREN
    (141) Arguments -> . LPAREN Type COMMA RPAREN
    (142) Arguments -> . LPAREN Type COMMA ExpressionList RPAREN
    (143) Arguments -> . LPAREN Type COMMA ExpressionList COMMA RPAREN

    PERIOD          shift and go to state 404
    LBRACK          shift and go to state 225
    LPAREN          shift and go to state 226

    Selector                       shift and go to state 220
    Index                          shift and go to state 221
    Slice                          shift and go to state 222
    Arguments                      shift and go to state 223

state 376

    (243) ShortVarDeclOpt -> IDENT DEFINE .

    LPAREN          reduce using rule 243 (ShortVarDeclOpt -> IDENT DEFINE .)
    INT             reduce using rule 243 (ShortVarDeclOpt -> IDENT DEFINE .)
    FLOAT           reduce using rule 243 (ShortVarDeclOpt -> IDENT DEFINE .)
    IMAG            reduce using rule 243 (ShortVarDeclOpt -> IDENT DEFINE .)
    RUNE            reduce using rule 243 (ShortVarDeclOpt -> IDENT DEFINE .)
    STRING          reduce using rule 243 (ShortVarDeclOpt -> IDENT DEFINE .)
    FUNC            reduce using rule 243 (ShortVarDeclOpt -> IDENT DEFINE .)
    PERIOD          reduce using rule 243 (ShortVarDeclOpt -> IDENT DEFINE .)
    IDENT           reduce using rule 243 (ShortVarDeclOpt -> IDENT DEFINE .)
    STRUCT          reduce using rule 243 (ShortVarDeclOpt -> IDENT DEFINE .)
    LBRACK          reduce using rule 243 (ShortVarDeclOpt -> IDENT DEFINE .)
    MAP             reduce using rule 243 (ShortVarDeclOpt -> IDENT DEFINE .)
    MUL             reduce using rule 243 (ShortVarDeclOpt -> IDENT DEFINE .)


state 377

    (131) Slice -> LBRACK Expr COLON Expr . RBRACK
    (136) Slice -> LBRACK Expr COLON Expr . COLON Expr RBRACK
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    RBRACK          shift and go to state 406
    COLON           shift and go to state 405
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 378

    (133) Slice -> LBRACK Expr COLON RBRACK .

    PERIOD          reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    LBRACK          reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    LPAREN          reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    LOR             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    LAND            reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    EQL             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    NEQ             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    LSS             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    LEQ             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    GTR             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    GEQ             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    ADD             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    SUB             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    OR              reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    XOR             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    MUL             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    QUO             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    REM             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    SHL             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    SHR             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    AND             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    AND_NOT         reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    RBRACK          reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    COMMA           reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    SEMICOLON       reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    INC             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    DEC             reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    ASSIGN          reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    ADD_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    SUB_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    OR_ASSIGN       reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    XOR_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    MUL_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    QUO_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    REM_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    AND_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    SHL_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    SHR_ASSIGN      reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    RPAREN          reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    LBRACE          reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    COLON           reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    RBRACE          reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)
    ELSE            reduce using rule 133 (Slice -> LBRACK Expr COLON RBRACK .)


state 379

    (135) Slice -> LBRACK COLON Expr COLON . Expr RBRACK
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Expr                           shift and go to state 407
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 380

    (132) Slice -> LBRACK COLON Expr RBRACK .

    PERIOD          reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    LBRACK          reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    LPAREN          reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    LOR             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    LAND            reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    EQL             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    NEQ             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    LSS             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    LEQ             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    GTR             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    GEQ             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    ADD             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    SUB             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    OR              reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    XOR             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    MUL             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    QUO             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    REM             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    SHL             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    SHR             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    AND             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    AND_NOT         reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    RBRACK          reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    COMMA           reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    SEMICOLON       reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    INC             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    DEC             reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    ASSIGN          reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    OR_ASSIGN       reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    REM_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    AND_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    RPAREN          reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    LBRACE          reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    COLON           reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    RBRACE          reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)
    ELSE            reduce using rule 132 (Slice -> LBRACK COLON Expr RBRACK .)


state 381

    (139) Arguments -> LPAREN ExpressionList COMMA RPAREN .

    PERIOD          reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LBRACK          reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LPAREN          reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LOR             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LAND            reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    EQL             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    NEQ             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LSS             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LEQ             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GTR             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GEQ             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR              reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    QUO             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    REM             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_NOT         reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RBRACK          reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COMMA           reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SEMICOLON       reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    INC             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DEC             reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ASSIGN          reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RPAREN          reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LBRACE          reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COLON           reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RBRACE          reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ELSE            reduce using rule 139 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)


state 382

    (141) Arguments -> LPAREN Type COMMA RPAREN .

    PERIOD          reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    LBRACK          reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    LPAREN          reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    LOR             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    LAND            reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    EQL             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    NEQ             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    LSS             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    LEQ             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    GTR             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    GEQ             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    ADD             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    SUB             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    OR              reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    XOR             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    MUL             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    QUO             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    REM             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    SHL             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    SHR             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    AND             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    AND_NOT         reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    RBRACK          reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    COMMA           reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    SEMICOLON       reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    INC             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    DEC             reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    ASSIGN          reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    RPAREN          reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    LBRACE          reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    COLON           reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    RBRACE          reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)
    ELSE            reduce using rule 141 (Arguments -> LPAREN Type COMMA RPAREN .)


state 383

    (142) Arguments -> LPAREN Type COMMA ExpressionList . RPAREN
    (143) Arguments -> LPAREN Type COMMA ExpressionList . COMMA RPAREN

    RPAREN          shift and go to state 409
    COMMA           shift and go to state 408


state 384

    (129) Conversion -> Type LPAREN Expr COMMA RPAREN .

    PERIOD          reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LBRACK          reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LPAREN          reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LOR             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LAND            reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    EQL             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    NEQ             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LSS             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LEQ             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    GTR             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    GEQ             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    ADD             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SUB             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    OR              reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    XOR             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    MUL             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    QUO             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    REM             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SHL             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SHR             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    AND             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    AND_NOT         reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    RBRACK          reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    COMMA           reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SEMICOLON       reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    INC             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    DEC             reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    ASSIGN          reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    RPAREN          reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    LBRACE          reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    COLON           reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    RBRACE          reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)
    ELSE            reduce using rule 129 (Conversion -> Type LPAREN Expr COMMA RPAREN .)


state 385

    (106) LiteralValue -> LBRACE ElementList COMMA RBRACE .

    PERIOD          reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LBRACK          reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LPAREN          reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LOR             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LAND            reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    EQL             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    NEQ             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LSS             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LEQ             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    GTR             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    GEQ             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    ADD             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SUB             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    OR              reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    XOR             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    MUL             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    QUO             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    REM             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SHL             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SHR             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    AND             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    AND_NOT         reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    RBRACK          reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    COMMA           reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SEMICOLON       reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    INC             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    DEC             reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    ASSIGN          reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    ADD_ASSIGN      reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SUB_ASSIGN      reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    OR_ASSIGN       reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    XOR_ASSIGN      reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    MUL_ASSIGN      reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    QUO_ASSIGN      reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    REM_ASSIGN      reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    AND_ASSIGN      reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SHL_ASSIGN      reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SHR_ASSIGN      reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    AND_NOT_ASSIGN  reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    RPAREN          reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LBRACE          reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    COLON           reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    RBRACE          reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    ELSE            reduce using rule 106 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)


state 386

    (110) ElementList -> KeyedElement COMMA ElementList .

    COMMA           reduce using rule 110 (ElementList -> KeyedElement COMMA ElementList .)
    RBRACE          reduce using rule 110 (ElementList -> KeyedElement COMMA ElementList .)


state 387

    (112) KeyedElement -> Key COLON Element .

    COMMA           reduce using rule 112 (KeyedElement -> Key COLON Element .)
    RBRACE          reduce using rule 112 (KeyedElement -> Key COLON Element .)


state 388

    (116) Element -> Expr .
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    COMMA           reduce using rule 116 (Element -> Expr .)
    RBRACE          reduce using rule 116 (Element -> Expr .)
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 389

    (117) Element -> LiteralValue .

    COMMA           reduce using rule 117 (Element -> LiteralValue .)
    RBRACE          reduce using rule 117 (Element -> LiteralValue .)


state 390

    (226) else_stmt -> ELSE IfStmt .

    SEMICOLON       reduce using rule 226 (else_stmt -> ELSE IfStmt .)


state 391

    (227) else_stmt -> ELSE Block .

    SEMICOLON       reduce using rule 227 (else_stmt -> ELSE Block .)


state 392

    (225) IfStmt -> IF SimpleStmt SEMICOLON Expr else_stmt .

    SEMICOLON       reduce using rule 225 (IfStmt -> IF SimpleStmt SEMICOLON Expr else_stmt .)


state 393

    (257) ForClause -> InitStmt SEMICOLON ConditionOpt SEMICOLON . PostStmt
    (261) PostStmt -> . SimpleStmt
    (191) SimpleStmt -> . EmptyStmt
    (192) SimpleStmt -> . ExpressionStmt
    (193) SimpleStmt -> . IncDecStmt
    (194) SimpleStmt -> . Assignment
    (195) SimpleStmt -> . ShortVarDecl
    (196) EmptyStmt -> .
    (197) ExpressionStmt -> . Expr
    (198) IncDecStmt -> . Expr INC
    (199) IncDecStmt -> . Expr DEC
    (200) Assignment -> . ExpressionList assign_op ExpressionList
    (159) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (55) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    LBRACE          reduce using rule 196 (EmptyStmt -> .)
    IDENT           shift and go to state 95
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    PostStmt                       shift and go to state 410
    SimpleStmt                     shift and go to state 411
    EmptyStmt                      shift and go to state 165
    ExpressionStmt                 shift and go to state 166
    IncDecStmt                     shift and go to state 167
    Assignment                     shift and go to state 168
    ShortVarDecl                   shift and go to state 169
    Expr                           shift and go to state 177
    ExpressionList                 shift and go to state 172
    IdentifierList                 shift and go to state 182
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 394

    (233) ExprSwitchStmt -> SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult . RBRACE

    RBRACE          shift and go to state 412


state 395

    (236) ExprCaseClauseMult -> ExprCaseClause . ExprCaseClauseMult
    (236) ExprCaseClauseMult -> . ExprCaseClause ExprCaseClauseMult
    (237) ExprCaseClauseMult -> .
    (238) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (239) ExprSwitchCase -> . CASE ExpressionList
    (240) ExprSwitchCase -> . DEFAULT

    RBRACE          reduce using rule 237 (ExprCaseClauseMult -> .)
    CASE            shift and go to state 397
    DEFAULT         shift and go to state 398

    ExprCaseClause                 shift and go to state 395
    ExprCaseClauseMult             shift and go to state 413
    ExprSwitchCase                 shift and go to state 396

state 396

    (238) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 414


state 397

    (239) ExprSwitchCase -> CASE . ExpressionList
    (55) ExpressionList -> . Expr ExprOth
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    ExpressionList                 shift and go to state 415
    Expr                           shift and go to state 145
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 398

    (240) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 240 (ExprSwitchCase -> DEFAULT .)


state 399

    (241) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult . RBRACE

    RBRACE          shift and go to state 416


state 400

    (245) TypeCaseClauseMult -> TypeCaseClause . TypeCaseClauseMult
    (245) TypeCaseClauseMult -> . TypeCaseClause TypeCaseClauseMult
    (246) TypeCaseClauseMult -> .
    (247) TypeCaseClause -> . TypeSwitchCase COLON StatementList
    (248) TypeSwitchCase -> . CASE TypeList
    (249) TypeSwitchCase -> . DEFAULT

    RBRACE          reduce using rule 246 (TypeCaseClauseMult -> .)
    CASE            shift and go to state 402
    DEFAULT         shift and go to state 403

    TypeCaseClause                 shift and go to state 400
    TypeCaseClauseMult             shift and go to state 417
    TypeSwitchCase                 shift and go to state 401

state 401

    (247) TypeCaseClause -> TypeSwitchCase . COLON StatementList

    COLON           shift and go to state 418


state 402

    (248) TypeSwitchCase -> CASE . TypeList
    (250) TypeList -> . Type TypeOth
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    TypeList                       shift and go to state 419
    Type                           shift and go to state 420
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 403

    (249) TypeSwitchCase -> DEFAULT .

    COLON           reduce using rule 249 (TypeSwitchCase -> DEFAULT .)


state 404

    (242) TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr PERIOD . LPAREN TYPE RPAREN
    (130) Selector -> PERIOD . IDENT

    LPAREN          shift and go to state 421
    IDENT           shift and go to state 302


state 405

    (136) Slice -> LBRACK Expr COLON Expr COLON . Expr RBRACK
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    IDENT           shift and go to state 58
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    Expr                           shift and go to state 422
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 406

    (131) Slice -> LBRACK Expr COLON Expr RBRACK .

    PERIOD          reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LBRACK          reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LPAREN          reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LOR             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LAND            reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    EQL             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    NEQ             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LSS             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LEQ             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    GTR             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    GEQ             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    ADD             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SUB             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    OR              reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    XOR             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    MUL             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    QUO             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    REM             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SHL             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SHR             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    AND             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    AND_NOT         reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    RBRACK          reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    COMMA           reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SEMICOLON       reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    INC             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    DEC             reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    ASSIGN          reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    OR_ASSIGN       reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    REM_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    AND_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    RPAREN          reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LBRACE          reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    COLON           reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    RBRACE          reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    ELSE            reduce using rule 131 (Slice -> LBRACK Expr COLON Expr RBRACK .)


state 407

    (135) Slice -> LBRACK COLON Expr COLON Expr . RBRACK
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    RBRACK          shift and go to state 423
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 408

    (143) Arguments -> LPAREN Type COMMA ExpressionList COMMA . RPAREN

    RPAREN          shift and go to state 424


state 409

    (142) Arguments -> LPAREN Type COMMA ExpressionList RPAREN .

    PERIOD          reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LBRACK          reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LPAREN          reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LOR             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LAND            reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    EQL             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    NEQ             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LSS             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LEQ             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    GTR             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    GEQ             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    ADD             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SUB             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    OR              reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    XOR             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    MUL             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    QUO             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    REM             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SHL             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SHR             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    AND             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    AND_NOT         reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    RBRACK          reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    COMMA           reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SEMICOLON       reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    INC             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    DEC             reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    ASSIGN          reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    ADD_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SUB_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    OR_ASSIGN       reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    XOR_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    MUL_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    QUO_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    REM_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    AND_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SHL_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    SHR_ASSIGN      reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    RPAREN          reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    LBRACE          reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    COLON           reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    RBRACE          reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)
    ELSE            reduce using rule 142 (Arguments -> LPAREN Type COMMA ExpressionList RPAREN .)


state 410

    (257) ForClause -> InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt .

    LBRACE          reduce using rule 257 (ForClause -> InitStmt SEMICOLON ConditionOpt SEMICOLON PostStmt .)


state 411

    (261) PostStmt -> SimpleStmt .

    LBRACE          reduce using rule 261 (PostStmt -> SimpleStmt .)


state 412

    (233) ExprSwitchStmt -> SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE .

    SEMICOLON       reduce using rule 233 (ExprSwitchStmt -> SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE .)


state 413

    (236) ExprCaseClauseMult -> ExprCaseClause ExprCaseClauseMult .

    RBRACE          reduce using rule 236 (ExprCaseClauseMult -> ExprCaseClause ExprCaseClauseMult .)


state 414

    (238) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (175) StatementList -> . Statement SEMICOLON StatementList
    (176) StatementList -> .
    (177) Statement -> . Decl
    (178) Statement -> . LabeledStmt
    (179) Statement -> . SimpleStmt
    (180) Statement -> . GotoStmt
    (181) Statement -> . ReturnStmt
    (182) Statement -> . BreakStmt
    (183) Statement -> . ContinueStmt
    (184) Statement -> . FallthroughStmt
    (185) Statement -> . Block
    (186) Statement -> . IfStmt
    (187) Statement -> . SwitchStmt
    (188) Statement -> . ForStmt
    (18) Decl -> . ConstDecl
    (19) Decl -> . VarDecl
    (20) Decl -> . TypeDecl
    (189) LabeledStmt -> . Label COLON Statement
    (191) SimpleStmt -> . EmptyStmt
    (192) SimpleStmt -> . ExpressionStmt
    (193) SimpleStmt -> . IncDecStmt
    (194) SimpleStmt -> . Assignment
    (195) SimpleStmt -> . ShortVarDecl
    (221) GotoStmt -> . GOTO Label
    (215) ReturnStmt -> . RETURN ExpressionList
    (216) ReturnStmt -> . RETURN
    (217) BreakStmt -> . BREAK Label
    (218) BreakStmt -> . BREAK
    (219) ContinueStmt -> . CONTINUE Label
    (220) ContinueStmt -> . CONTINUE
    (222) FallthroughStmt -> . FALLTHROUGH
    (223) Block -> . LBRACE StatementList RBRACE
    (224) IfStmt -> . IF Expr Block else_stmt
    (225) IfStmt -> . IF SimpleStmt SEMICOLON Expr else_stmt
    (231) SwitchStmt -> . ExprSwitchStmt
    (232) SwitchStmt -> . TypeSwitchStmt
    (253) ForStmt -> . FOR Condition Block
    (254) ForStmt -> . FOR ForClause Block
    (255) ForStmt -> . FOR RangeClause Block
    (21) ConstDecl -> . CONST ConstSpec
    (22) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (152) VarDecl -> . VAR VarSpec
    (153) VarDecl -> . VAR LPAREN VarMult RPAREN
    (144) TypeDecl -> . TYPE TypeSpec
    (145) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (190) Label -> . IDENT
    (196) EmptyStmt -> .
    (197) ExpressionStmt -> . Expr
    (198) IncDecStmt -> . Expr INC
    (199) IncDecStmt -> . Expr DEC
    (200) Assignment -> . ExpressionList assign_op ExpressionList
    (159) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (233) ExprSwitchStmt -> . SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE
    (241) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (55) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    CASE            reduce using rule 176 (StatementList -> .)
    DEFAULT         reduce using rule 176 (StatementList -> .)
    RBRACE          reduce using rule 176 (StatementList -> .)
    GOTO            shift and go to state 170
    RETURN          shift and go to state 171
    BREAK           shift and go to state 173
    CONTINUE        shift and go to state 174
    FALLTHROUGH     shift and go to state 175
    LBRACE          shift and go to state 84
    IF              shift and go to state 176
    FOR             shift and go to state 180
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 181
    SEMICOLON       reduce using rule 196 (EmptyStmt -> .)
    SWITCH          shift and go to state 183
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    StatementList                  shift and go to state 425
    Statement                      shift and go to state 151
    Decl                           shift and go to state 152
    LabeledStmt                    shift and go to state 153
    SimpleStmt                     shift and go to state 154
    GotoStmt                       shift and go to state 155
    ReturnStmt                     shift and go to state 156
    BreakStmt                      shift and go to state 157
    ContinueStmt                   shift and go to state 158
    FallthroughStmt                shift and go to state 159
    Block                          shift and go to state 160
    IfStmt                         shift and go to state 161
    SwitchStmt                     shift and go to state 162
    ForStmt                        shift and go to state 163
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    Label                          shift and go to state 164
    EmptyStmt                      shift and go to state 165
    ExpressionStmt                 shift and go to state 166
    IncDecStmt                     shift and go to state 167
    Assignment                     shift and go to state 168
    ShortVarDecl                   shift and go to state 169
    ExpressionList                 shift and go to state 172
    Expr                           shift and go to state 177
    ExprSwitchStmt                 shift and go to state 178
    TypeSwitchStmt                 shift and go to state 179
    IdentifierList                 shift and go to state 182
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 415

    (239) ExprSwitchCase -> CASE ExpressionList .

    COLON           reduce using rule 239 (ExprSwitchCase -> CASE ExpressionList .)


state 416

    (241) TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE .

    SEMICOLON       reduce using rule 241 (TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE .)


state 417

    (245) TypeCaseClauseMult -> TypeCaseClause TypeCaseClauseMult .

    RBRACE          reduce using rule 245 (TypeCaseClauseMult -> TypeCaseClause TypeCaseClauseMult .)


state 418

    (247) TypeCaseClause -> TypeSwitchCase COLON . StatementList
    (175) StatementList -> . Statement SEMICOLON StatementList
    (176) StatementList -> .
    (177) Statement -> . Decl
    (178) Statement -> . LabeledStmt
    (179) Statement -> . SimpleStmt
    (180) Statement -> . GotoStmt
    (181) Statement -> . ReturnStmt
    (182) Statement -> . BreakStmt
    (183) Statement -> . ContinueStmt
    (184) Statement -> . FallthroughStmt
    (185) Statement -> . Block
    (186) Statement -> . IfStmt
    (187) Statement -> . SwitchStmt
    (188) Statement -> . ForStmt
    (18) Decl -> . ConstDecl
    (19) Decl -> . VarDecl
    (20) Decl -> . TypeDecl
    (189) LabeledStmt -> . Label COLON Statement
    (191) SimpleStmt -> . EmptyStmt
    (192) SimpleStmt -> . ExpressionStmt
    (193) SimpleStmt -> . IncDecStmt
    (194) SimpleStmt -> . Assignment
    (195) SimpleStmt -> . ShortVarDecl
    (221) GotoStmt -> . GOTO Label
    (215) ReturnStmt -> . RETURN ExpressionList
    (216) ReturnStmt -> . RETURN
    (217) BreakStmt -> . BREAK Label
    (218) BreakStmt -> . BREAK
    (219) ContinueStmt -> . CONTINUE Label
    (220) ContinueStmt -> . CONTINUE
    (222) FallthroughStmt -> . FALLTHROUGH
    (223) Block -> . LBRACE StatementList RBRACE
    (224) IfStmt -> . IF Expr Block else_stmt
    (225) IfStmt -> . IF SimpleStmt SEMICOLON Expr else_stmt
    (231) SwitchStmt -> . ExprSwitchStmt
    (232) SwitchStmt -> . TypeSwitchStmt
    (253) ForStmt -> . FOR Condition Block
    (254) ForStmt -> . FOR ForClause Block
    (255) ForStmt -> . FOR RangeClause Block
    (21) ConstDecl -> . CONST ConstSpec
    (22) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (152) VarDecl -> . VAR VarSpec
    (153) VarDecl -> . VAR LPAREN VarMult RPAREN
    (144) TypeDecl -> . TYPE TypeSpec
    (145) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (190) Label -> . IDENT
    (196) EmptyStmt -> .
    (197) ExpressionStmt -> . Expr
    (198) IncDecStmt -> . Expr INC
    (199) IncDecStmt -> . Expr DEC
    (200) Assignment -> . ExpressionList assign_op ExpressionList
    (159) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (233) ExprSwitchStmt -> . SWITCH SimpleStmtOpt ExprOpt LBRACE ExprCaseClauseMult RBRACE
    (241) TypeSwitchStmt -> . SWITCH SimpleStmtOpt TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr BinOp Expr
    (55) ExpressionList -> . Expr ExprOth
    (26) IdentifierList -> . IDENT IdentifierOth
    (58) UnaryExpr -> . PrimaryExpr
    (59) UnaryExpr -> . UnaryOp UnaryExpr
    (121) PrimaryExpr -> . Operand
    (122) PrimaryExpr -> . Conversion
    (123) PrimaryExpr -> . PrimaryExpr Selector
    (124) PrimaryExpr -> . PrimaryExpr Index
    (125) PrimaryExpr -> . PrimaryExpr Slice
    (126) PrimaryExpr -> . PrimaryExpr Arguments
    (82) UnaryOp -> . ADD
    (83) UnaryOp -> . SUB
    (84) UnaryOp -> . NOT
    (85) UnaryOp -> . XOR
    (86) UnaryOp -> . MUL
    (87) UnaryOp -> . AND
    (90) Operand -> . Lit
    (91) Operand -> . OperandName IDENT
    (92) Operand -> . LPAREN Expr RPAREN
    (128) Conversion -> . Type LPAREN Expr RPAREN
    (129) Conversion -> . Type LPAREN Expr COMMA RPAREN
    (93) Lit -> . BasicLit
    (94) Lit -> . CompositeLit
    (95) Lit -> . FunctionLit
    (118) OperandName -> .
    (119) OperandName -> . QualifiedIdentPart
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (96) BasicLit -> . INT
    (97) BasicLit -> . FLOAT
    (98) BasicLit -> . IMAG
    (99) BasicLit -> . RUNE
    (100) BasicLit -> . STRING
    (101) CompositeLit -> . StructType LiteralValue
    (102) CompositeLit -> . ArrayType LiteralValue
    (103) CompositeLit -> . SliceType LiteralValue
    (104) CompositeLit -> . MapType LiteralValue
    (105) CompositeLit -> . TypeName LiteralValue
    (120) FunctionLit -> . FUNC Signature FunctionBody
    (29) QualifiedIdentPart -> . PERIOD IDENT
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (49) PointerType -> . MUL BaseType
    (54) FunctionType -> . FUNC Signature

  ! shift/reduce conflict for IDENT resolved as shift
    CASE            reduce using rule 176 (StatementList -> .)
    DEFAULT         reduce using rule 176 (StatementList -> .)
    RBRACE          reduce using rule 176 (StatementList -> .)
    GOTO            shift and go to state 170
    RETURN          shift and go to state 171
    BREAK           shift and go to state 173
    CONTINUE        shift and go to state 174
    FALLTHROUGH     shift and go to state 175
    LBRACE          shift and go to state 84
    IF              shift and go to state 176
    FOR             shift and go to state 180
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 181
    SEMICOLON       reduce using rule 196 (EmptyStmt -> .)
    SWITCH          shift and go to state 183
    ADD             shift and go to state 110
    SUB             shift and go to state 111
    NOT             shift and go to state 112
    XOR             shift and go to state 113
    MUL             shift and go to state 114
    AND             shift and go to state 115
    LPAREN          shift and go to state 118
    INT             shift and go to state 125
    FLOAT           shift and go to state 126
    IMAG            shift and go to state 127
    RUNE            shift and go to state 128
    STRING          shift and go to state 129
    FUNC            shift and go to state 134
    PERIOD          shift and go to state 101
    STRUCT          shift and go to state 66
    LBRACK          shift and go to state 65
    MAP             shift and go to state 68

  ! IDENT           [ reduce using rule 118 (OperandName -> .) ]

    StatementList                  shift and go to state 426
    Statement                      shift and go to state 151
    Decl                           shift and go to state 152
    LabeledStmt                    shift and go to state 153
    SimpleStmt                     shift and go to state 154
    GotoStmt                       shift and go to state 155
    ReturnStmt                     shift and go to state 156
    BreakStmt                      shift and go to state 157
    ContinueStmt                   shift and go to state 158
    FallthroughStmt                shift and go to state 159
    Block                          shift and go to state 160
    IfStmt                         shift and go to state 161
    SwitchStmt                     shift and go to state 162
    ForStmt                        shift and go to state 163
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    Label                          shift and go to state 164
    EmptyStmt                      shift and go to state 165
    ExpressionStmt                 shift and go to state 166
    IncDecStmt                     shift and go to state 167
    Assignment                     shift and go to state 168
    ShortVarDecl                   shift and go to state 169
    ExpressionList                 shift and go to state 172
    Expr                           shift and go to state 177
    ExprSwitchStmt                 shift and go to state 178
    TypeSwitchStmt                 shift and go to state 179
    IdentifierList                 shift and go to state 182
    UnaryExpr                      shift and go to state 105
    PrimaryExpr                    shift and go to state 106
    UnaryOp                        shift and go to state 107
    Operand                        shift and go to state 108
    Conversion                     shift and go to state 109
    Lit                            shift and go to state 116
    OperandName                    shift and go to state 117
    Type                           shift and go to state 119
    BasicLit                       shift and go to state 120
    CompositeLit                   shift and go to state 121
    FunctionLit                    shift and go to state 122
    QualifiedIdentPart             shift and go to state 123
    TypeName                       shift and go to state 124
    TypeLit                        shift and go to state 56
    StructType                     shift and go to state 130
    ArrayType                      shift and go to state 131
    SliceType                      shift and go to state 132
    MapType                        shift and go to state 133
    PointerType                    shift and go to state 61
    FunctionType                   shift and go to state 64

state 419

    (248) TypeSwitchCase -> CASE TypeList .

    COLON           reduce using rule 248 (TypeSwitchCase -> CASE TypeList .)


state 420

    (250) TypeList -> Type . TypeOth
    (251) TypeOth -> . COMMA Type TypeOth
    (252) TypeOth -> .

    COMMA           shift and go to state 428
    COLON           reduce using rule 252 (TypeOth -> .)

    TypeOth                        shift and go to state 427

state 421

    (242) TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr PERIOD LPAREN . TYPE RPAREN

    TYPE            shift and go to state 429


state 422

    (136) Slice -> LBRACK Expr COLON Expr COLON Expr . RBRACK
    (57) Expr -> Expr . BinOp Expr
    (60) BinOp -> . LOR
    (61) BinOp -> . LAND
    (62) BinOp -> . RelOp
    (63) BinOp -> . AddOp
    (64) BinOp -> . MulOp
    (65) RelOp -> . EQL
    (66) RelOp -> . NEQ
    (67) RelOp -> . LSS
    (68) RelOp -> . LEQ
    (69) RelOp -> . GTR
    (70) RelOp -> . GEQ
    (71) AddOp -> . ADD
    (72) AddOp -> . SUB
    (73) AddOp -> . OR
    (74) AddOp -> . XOR
    (75) MulOp -> . MUL
    (76) MulOp -> . QUO
    (77) MulOp -> . REM
    (78) MulOp -> . SHL
    (79) MulOp -> . SHR
    (80) MulOp -> . AND
    (81) MulOp -> . AND_NOT

    RBRACK          shift and go to state 430
    LOR             shift and go to state 198
    LAND            shift and go to state 199
    EQL             shift and go to state 203
    NEQ             shift and go to state 204
    LSS             shift and go to state 205
    LEQ             shift and go to state 206
    GTR             shift and go to state 207
    GEQ             shift and go to state 208
    ADD             shift and go to state 209
    SUB             shift and go to state 210
    OR              shift and go to state 211
    XOR             shift and go to state 212
    MUL             shift and go to state 213
    QUO             shift and go to state 214
    REM             shift and go to state 215
    SHL             shift and go to state 216
    SHR             shift and go to state 217
    AND             shift and go to state 218
    AND_NOT         shift and go to state 219

    BinOp                          shift and go to state 197
    RelOp                          shift and go to state 200
    AddOp                          shift and go to state 201
    MulOp                          shift and go to state 202

state 423

    (135) Slice -> LBRACK COLON Expr COLON Expr RBRACK .

    PERIOD          reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LBRACK          reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LPAREN          reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LOR             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LAND            reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    EQL             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    NEQ             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LSS             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LEQ             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    GTR             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    GEQ             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    ADD             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SUB             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    OR              reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    XOR             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    MUL             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    QUO             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    REM             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SHL             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SHR             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    AND             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    AND_NOT         reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    RBRACK          reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    COMMA           reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SEMICOLON       reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    INC             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    DEC             reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    ASSIGN          reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    OR_ASSIGN       reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    REM_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    AND_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    RPAREN          reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LBRACE          reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    COLON           reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    RBRACE          reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    ELSE            reduce using rule 135 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)


state 424

    (143) Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .

    PERIOD          reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LBRACK          reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LPAREN          reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LOR             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LAND            reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    EQL             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    NEQ             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LSS             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LEQ             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    GTR             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    GEQ             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    ADD             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SUB             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    OR              reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    XOR             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    MUL             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    QUO             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    REM             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SHL             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SHR             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    AND             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    AND_NOT         reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    RBRACK          reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    COMMA           reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SEMICOLON       reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    INC             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    DEC             reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    ASSIGN          reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    RPAREN          reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    LBRACE          reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    COLON           reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    RBRACE          reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)
    ELSE            reduce using rule 143 (Arguments -> LPAREN Type COMMA ExpressionList COMMA RPAREN .)


state 425

    (238) ExprCaseClause -> ExprSwitchCase COLON StatementList .

    CASE            reduce using rule 238 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 238 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    RBRACE          reduce using rule 238 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)


state 426

    (247) TypeCaseClause -> TypeSwitchCase COLON StatementList .

    CASE            reduce using rule 247 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 247 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)
    RBRACE          reduce using rule 247 (TypeCaseClause -> TypeSwitchCase COLON StatementList .)


state 427

    (250) TypeList -> Type TypeOth .

    COLON           reduce using rule 250 (TypeList -> Type TypeOth .)


state 428

    (251) TypeOth -> COMMA . Type TypeOth
    (266) Type -> . TypeName
    (267) Type -> . TypeLit
    (268) Type -> . LPAREN Type RPAREN
    (269) TypeName -> . IDENT
    (270) TypeName -> . IDENT QualifiedIdentPart
    (30) TypeLit -> . ArrayType
    (31) TypeLit -> . StructType
    (32) TypeLit -> . PointerType
    (33) TypeLit -> . SliceType
    (34) TypeLit -> . MapType
    (35) TypeLit -> . FunctionType
    (36) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (39) StructType -> . STRUCT LBRACE FieldDeclMult RBRACE
    (49) PointerType -> . MUL BaseType
    (51) SliceType -> . LBRACK RBRACK ElementType
    (52) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (54) FunctionType -> . FUNC Signature

    LPAREN          shift and go to state 57
    IDENT           shift and go to state 58
    LBRACK          shift and go to state 65
    STRUCT          shift and go to state 66
    MUL             shift and go to state 67
    MAP             shift and go to state 68
    FUNC            shift and go to state 69

    Type                           shift and go to state 431
    TypeName                       shift and go to state 55
    TypeLit                        shift and go to state 56
    ArrayType                      shift and go to state 59
    StructType                     shift and go to state 60
    PointerType                    shift and go to state 61
    SliceType                      shift and go to state 62
    MapType                        shift and go to state 63
    FunctionType                   shift and go to state 64

state 429

    (242) TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr PERIOD LPAREN TYPE . RPAREN

    RPAREN          shift and go to state 432


state 430

    (136) Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .

    PERIOD          reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LBRACK          reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LPAREN          reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LOR             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LAND            reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    EQL             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    NEQ             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LSS             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LEQ             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    GTR             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    GEQ             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    ADD             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SUB             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    OR              reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    XOR             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    MUL             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    QUO             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    REM             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SHL             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SHR             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    AND             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    AND_NOT         reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    RBRACK          reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    COMMA           reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SEMICOLON       reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    INC             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    DEC             reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    ASSIGN          reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    OR_ASSIGN       reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    REM_ASSIGN      reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    AND_ASSIGN      reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    RPAREN          reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LBRACE          reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    COLON           reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    RBRACE          reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    ELSE            reduce using rule 136 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)


state 431

    (251) TypeOth -> COMMA Type . TypeOth
    (251) TypeOth -> . COMMA Type TypeOth
    (252) TypeOth -> .

    COMMA           shift and go to state 428
    COLON           reduce using rule 252 (TypeOth -> .)

    TypeOth                        shift and go to state 433

state 432

    (242) TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN .

    LBRACE          reduce using rule 242 (TypeSwitchGuard -> ShortVarDeclOpt PrimaryExpr PERIOD LPAREN TYPE RPAREN .)


state 433

    (251) TypeOth -> COMMA Type TypeOth .

    COLON           reduce using rule 251 (TypeOth -> COMMA Type TypeOth .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 50 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 50 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 50 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 50 resolved as shift
WARNING: shift/reduce conflict for MUL in state 50 resolved as shift
WARNING: shift/reduce conflict for MAP in state 50 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 50 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 65 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 75 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 84 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 98 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 107 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 118 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 143 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 145 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 171 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 176 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 180 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 183 resolved as shift
WARNING: shift/reduce conflict for ADD in state 183 resolved as shift
WARNING: shift/reduce conflict for SUB in state 183 resolved as shift
WARNING: shift/reduce conflict for NOT in state 183 resolved as shift
WARNING: shift/reduce conflict for XOR in state 183 resolved as shift
WARNING: shift/reduce conflict for MUL in state 183 resolved as shift
WARNING: shift/reduce conflict for AND in state 183 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 183 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 183 resolved as shift
WARNING: shift/reduce conflict for INT in state 183 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 183 resolved as shift
WARNING: shift/reduce conflict for IMAG in state 183 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 183 resolved as shift
WARNING: shift/reduce conflict for STRING in state 183 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 183 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 183 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 183 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 183 resolved as shift
WARNING: shift/reduce conflict for MAP in state 183 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 184 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 197 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 225 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 226 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 229 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 237 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 239 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 257 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 260 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 261 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 265 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 295 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 296 resolved as shift
WARNING: shift/reduce conflict for MUL in state 296 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 296 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 296 resolved as shift
WARNING: shift/reduce conflict for INT in state 296 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 296 resolved as shift
WARNING: shift/reduce conflict for IMAG in state 296 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 296 resolved as shift
WARNING: shift/reduce conflict for STRING in state 296 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 296 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 296 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 296 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 296 resolved as shift
WARNING: shift/reduce conflict for MAP in state 296 resolved as shift
WARNING: shift/reduce conflict for LOR in state 301 resolved as shift
WARNING: shift/reduce conflict for LAND in state 301 resolved as shift
WARNING: shift/reduce conflict for EQL in state 301 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 301 resolved as shift
WARNING: shift/reduce conflict for LSS in state 301 resolved as shift
WARNING: shift/reduce conflict for LEQ in state 301 resolved as shift
WARNING: shift/reduce conflict for GTR in state 301 resolved as shift
WARNING: shift/reduce conflict for GEQ in state 301 resolved as shift
WARNING: shift/reduce conflict for ADD in state 301 resolved as shift
WARNING: shift/reduce conflict for SUB in state 301 resolved as shift
WARNING: shift/reduce conflict for OR in state 301 resolved as shift
WARNING: shift/reduce conflict for XOR in state 301 resolved as shift
WARNING: shift/reduce conflict for MUL in state 301 resolved as shift
WARNING: shift/reduce conflict for QUO in state 301 resolved as shift
WARNING: shift/reduce conflict for REM in state 301 resolved as shift
WARNING: shift/reduce conflict for SHL in state 301 resolved as shift
WARNING: shift/reduce conflict for SHR in state 301 resolved as shift
WARNING: shift/reduce conflict for AND in state 301 resolved as shift
WARNING: shift/reduce conflict for AND_NOT in state 301 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 304 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 314 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 328 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 333 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 337 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 338 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 340 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 345 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 349 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 355 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 360 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 361 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 379 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 393 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 397 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 405 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 414 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 418 resolved as shift
WARNING: reduce/reduce conflict in state 95 resolved using rule (IdentifierOth -> <empty>)
WARNING: rejected rule (TypeName -> IDENT) in state 95
