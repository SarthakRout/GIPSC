Created by PLY (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> SourceFile
Rule 1     SourceFile -> SetupContext PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult
Rule 2     SetupContext -> <empty>
Rule 3     EndScope -> <empty>
Rule 4     PackageClause -> PACKAGE IDENT
Rule 5     ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult
Rule 6     ImportDeclMult -> <empty>
Rule 7     ImportDecl -> IMPORT ImportSpec
Rule 8     ImportDecl -> IMPORT LPAREN ImportSpecMult RPAREN
Rule 9     ImportSpecMult -> ImportSpec SEMICOLON ImportSpecMult
Rule 10    ImportSpecMult -> <empty>
Rule 11    ImportSpec -> PERIOD ImportPath
Rule 12    ImportSpec -> IDENT ImportPath
Rule 13    ImportSpec -> ImportPath
Rule 14    ImportPath -> STRING
Rule 15    TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult
Rule 16    TopLevelDeclMult -> <empty>
Rule 17    TopLevelDecl -> Decl
Rule 18    TopLevelDecl -> FuncDecl
Rule 19    Decl -> ConstDecl
Rule 20    Decl -> VarDecl
Rule 21    Decl -> TypeDecl
Rule 22    ConstDecl -> CONST ConstSpec
Rule 23    ConstDecl -> CONST LPAREN ConstSpecMult RPAREN
Rule 24    ConstSpecMult -> ConstSpec SEMICOLON ConstSpecMult
Rule 25    ConstSpecMult -> <empty>
Rule 26    ConstSpec -> IdentifierList Type ASSIGN ExpressionList
Rule 27    ConstSpec -> IdentifierList IDENT ASSIGN ExpressionList
Rule 28    ConstSpec -> IdentifierList IDENT PERIOD IDENT ASSIGN ExpressionList
Rule 29    VarDecl -> VAR VarSpec
Rule 30    VarDecl -> VAR LPAREN VarMult RPAREN
Rule 31    VarMult -> VarSpec SEMICOLON VarMult
Rule 32    VarMult -> <empty>
Rule 33    VarSpec -> IdentifierList Type ASSIGN ExpressionList
Rule 34    VarSpec -> IdentifierList IDENT ASSIGN ExpressionList
Rule 35    VarSpec -> IdentifierList IDENT PERIOD IDENT ASSIGN ExpressionList
Rule 36    VarSpec -> IdentifierList ASSIGN ExpressionList
Rule 37    VarSpec -> IdentifierList Type
Rule 38    VarSpec -> IdentifierList IDENT
Rule 39    VarSpec -> IdentifierList IDENT PERIOD IDENT
Rule 40    TypeDecl -> TYPE TypeSpec
Rule 41    TypeDecl -> TYPE LPAREN TypeSpecMult RPAREN
Rule 42    TypeSpecMult -> TypeSpec SEMICOLON TypeSpecMult
Rule 43    TypeSpecMult -> <empty>
Rule 44    TypeSpec -> AliasDecl
Rule 45    TypeSpec -> Typedef
Rule 46    AliasDecl -> IDENT ASSIGN Type
Rule 47    AliasDecl -> IDENT ASSIGN IDENT
Rule 48    AliasDecl -> IDENT ASSIGN IDENT PERIOD IDENT
Rule 49    Typedef -> IDENT Type
Rule 50    Typedef -> IDENT IDENT
Rule 51    Typedef -> IDENT IDENT PERIOD IDENT
Rule 52    IdentifierList -> IDENT
Rule 53    IdentifierList -> IDENT COMMA IdentifierList
Rule 54    ExpressionList -> Expr
Rule 55    ExpressionList -> ExpressionList COMMA Expr
Rule 56    Expr -> UnaryExpr
Rule 57    Expr -> Expr LOR Expr
Rule 58    Expr -> Expr LAND Expr
Rule 59    Expr -> Expr EQL Expr
Rule 60    Expr -> Expr NEQ Expr
Rule 61    Expr -> Expr LSS Expr
Rule 62    Expr -> Expr LEQ Expr
Rule 63    Expr -> Expr GTR Expr
Rule 64    Expr -> Expr GEQ Expr
Rule 65    Expr -> Expr ADD Expr
Rule 66    Expr -> Expr SUB Expr
Rule 67    Expr -> Expr OR Expr
Rule 68    Expr -> Expr XOR Expr
Rule 69    Expr -> Expr MUL Expr
Rule 70    Expr -> Expr QUO Expr
Rule 71    Expr -> Expr REM Expr
Rule 72    Expr -> Expr SHL Expr
Rule 73    Expr -> Expr SHR Expr
Rule 74    Expr -> Expr AND Expr
Rule 75    Expr -> Expr AND_NOT Expr
Rule 76    UnaryExpr -> PrimaryExpr
Rule 77    UnaryExpr -> ADD UnaryExpr
Rule 78    UnaryExpr -> SUB UnaryExpr
Rule 79    UnaryExpr -> NOT UnaryExpr
Rule 80    UnaryExpr -> XOR UnaryExpr
Rule 81    UnaryExpr -> MUL UnaryExpr
Rule 82    UnaryExpr -> AND UnaryExpr
Rule 83    PrimaryExpr -> Lit
Rule 84    PrimaryExpr -> IDENT
Rule 85    PrimaryExpr -> IDENT PERIOD IDENT
Rule 86    PrimaryExpr -> LPAREN Expr RPAREN
Rule 87    PrimaryExpr -> PrimaryExpr Selector
Rule 88    PrimaryExpr -> PrimaryExpr Index
Rule 89    PrimaryExpr -> PrimaryExpr Slice
Rule 90    PrimaryExpr -> PrimaryExpr Arguments
Rule 91    Selector -> PERIOD IDENT
Rule 92    Index -> LBRACK Expr RBRACK
Rule 93    Slice -> LBRACK Expr COLON Expr RBRACK
Rule 94    Slice -> LBRACK COLON Expr RBRACK
Rule 95    Slice -> LBRACK Expr COLON RBRACK
Rule 96    Slice -> LBRACK COLON RBRACK
Rule 97    Slice -> LBRACK COLON Expr COLON Expr RBRACK
Rule 98    Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK
Rule 99    Arguments -> LPAREN RPAREN
Rule 100   Arguments -> LPAREN ExpressionList RPAREN
Rule 101   Arguments -> LPAREN ExpressionList COMMA RPAREN
Rule 102   Arguments -> LPAREN TypeT RPAREN
Rule 103   Arguments -> LPAREN TypeT COMMA RPAREN
Rule 104   Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN
Rule 105   Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN
Rule 106   Arguments -> LPAREN IDENT RPAREN
Rule 107   Arguments -> LPAREN IDENT COMMA RPAREN
Rule 108   Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN
Rule 109   Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN
Rule 110   Arguments -> LPAREN IDENT PERIOD IDENT RPAREN
Rule 111   Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN
Rule 112   Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN
Rule 113   Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN
Rule 114   Type -> TypeT
Rule 115   Type -> PointerType
Rule 116   Type -> LPAREN PointerType RPAREN
Rule 117   TypeT -> ArrayType
Rule 118   TypeT -> StructType
Rule 119   TypeT -> SliceType
Rule 120   TypeT -> MapType
Rule 121   TypeT -> FunctionType
Rule 122   TypeT -> LPAREN TypeT RPAREN
Rule 123   TypeT -> LPAREN IDENT RPAREN
Rule 124   TypeT -> LPAREN IDENT PERIOD IDENT RPAREN
Rule 125   PointerType -> MUL Type
Rule 126   PointerType -> MUL IDENT
Rule 127   PointerType -> MUL IDENT PERIOD IDENT
Rule 128   SliceType -> LBRACK RBRACK ElementType
Rule 129   ArrayType -> LBRACK ArrayLength RBRACK ElementType
Rule 130   ArrayLength -> Expr
Rule 131   ElementType -> Type
Rule 132   ElementType -> IDENT
Rule 133   ElementType -> IDENT PERIOD IDENT
Rule 134   StructType -> STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
Rule 135   BeginStruct -> <empty>
Rule 136   EndStruct -> <empty>
Rule 137   FieldDeclMult -> FieldDeclMult FieldDecl SEMICOLON
Rule 138   FieldDeclMult -> <empty>
Rule 139   FieldDecl -> IdentifierList Type
Rule 140   FieldDecl -> IdentifierList IDENT
Rule 141   FieldDecl -> IdentifierList IDENT PERIOD IDENT
Rule 142   FieldDecl -> EmbeddedField
Rule 143   FieldDecl -> IdentifierList Type Tag
Rule 144   FieldDecl -> IdentifierList IDENT Tag
Rule 145   FieldDecl -> IdentifierList IDENT PERIOD IDENT Tag
Rule 146   FieldDecl -> EmbeddedField Tag
Rule 147   Tag -> STRING
Rule 148   EmbeddedField -> MUL IDENT
Rule 149   EmbeddedField -> IDENT
Rule 150   EmbeddedField -> MUL IDENT PERIOD IDENT
Rule 151   EmbeddedField -> IDENT PERIOD IDENT
Rule 152   MapType -> MAP LBRACK KeyType RBRACK ElementType
Rule 153   KeyType -> Type
Rule 154   KeyType -> IDENT
Rule 155   KeyType -> IDENT PERIOD IDENT
Rule 156   FunctionType -> FUNC Signature
Rule 157   Lit -> BasicLit
Rule 158   Lit -> CompositeLit
Rule 159   Lit -> FunctionLit
Rule 160   BasicLit -> INT
Rule 161   BasicLit -> FLOAT
Rule 162   BasicLit -> IMAG
Rule 163   BasicLit -> RUNE
Rule 164   BasicLit -> STRING
Rule 165   CompositeLit -> StructType Arguments
Rule 166   CompositeLit -> ArrayType LiteralValue
Rule 167   CompositeLit -> SliceType LiteralValue
Rule 168   CompositeLit -> MapType LiteralValue
Rule 169   CompositeLit -> IDENT LiteralValue
Rule 170   CompositeLit -> IDENT PERIOD IDENT LiteralValue
Rule 171   LiteralValue -> LBRACE ElementList COMMA RBRACE
Rule 172   LiteralValue -> LBRACE ElementList RBRACE
Rule 173   LiteralValue -> LBRACE RBRACE
Rule 174   ElementList -> KeyedElement
Rule 175   ElementList -> ElementList COMMA KeyedElement
Rule 176   KeyedElement -> Element
Rule 177   KeyedElement -> Key COLON Element
Rule 178   Key -> Expr
Rule 179   Key -> LiteralValue
Rule 180   Element -> Expr
Rule 181   Element -> LiteralValue
Rule 182   FunctionLit -> FUNC Signature FunctionBody
Rule 183   FuncDecl -> FUNC FunctionName BeginScope Signature FunctionBody EndScope
Rule 184   FuncDecl -> FUNC FunctionName BeginScope Signature EndScope
Rule 185   FunctionName -> IDENT
Rule 186   FunctionBody -> Block
Rule 187   Signature -> Parameters Result
Rule 188   Signature -> Parameters
Rule 189   Parameters -> LPAREN RPAREN
Rule 190   Parameters -> LPAREN ParameterList RPAREN
Rule 191   Parameters -> LPAREN ParameterList COMMA RPAREN
Rule 192   ParameterList -> ParameterDecl
Rule 193   ParameterList -> ParameterList COMMA IDENT
Rule 194   ParameterList -> ParameterList COMMA IDENT PERIOD IDENT
Rule 195   ParameterList -> ParameterList COMMA Type
Rule 196   ParameterList -> ParameterList COMMA ParameterDecl
Rule 197   ParameterDecl -> IdentifierList Type
Rule 198   ParameterDecl -> IdentifierList IDENT
Rule 199   ParameterDecl -> IdentifierList IDENT PERIOD IDENT
Rule 200   Result -> Parameters
Rule 201   Result -> Type
Rule 202   Result -> IDENT
Rule 203   Result -> IDENT PERIOD IDENT
Rule 204   StatementList -> Statement SEMICOLON StatementList
Rule 205   StatementList -> <empty>
Rule 206   Statement -> Decl
Rule 207   Statement -> LabeledStmt
Rule 208   Statement -> SimpleStmt
Rule 209   Statement -> GotoStmt
Rule 210   Statement -> ReturnStmt
Rule 211   Statement -> BreakStmt
Rule 212   Statement -> ContinueStmt
Rule 213   Statement -> FallthroughStmt
Rule 214   Statement -> BeginScope Block EndScope
Rule 215   Statement -> IfStmt
Rule 216   Statement -> SwitchStmt
Rule 217   Statement -> ForStmt
Rule 218   LabeledStmt -> Label COLON Statement
Rule 219   Label -> IDENT
Rule 220   SimpleStmt -> EmptyStmt
Rule 221   SimpleStmt -> ExpressionStmt
Rule 222   SimpleStmt -> IncDecStmt
Rule 223   SimpleStmt -> Assignment
Rule 224   SimpleStmt -> ShortVarDecl
Rule 225   EmptyStmt -> <empty>
Rule 226   ExpressionStmt -> Expr
Rule 227   IncDecStmt -> Expr INC
Rule 228   IncDecStmt -> Expr DEC
Rule 229   Assignment -> ExpressionList assign_op ExpressionList
Rule 230   assign_op -> add_op_assign
Rule 231   assign_op -> mul_op_assign
Rule 232   assign_op -> ASSIGN
Rule 233   add_op_assign -> ADD_ASSIGN
Rule 234   add_op_assign -> SUB_ASSIGN
Rule 235   add_op_assign -> OR_ASSIGN
Rule 236   add_op_assign -> XOR_ASSIGN
Rule 237   mul_op_assign -> MUL_ASSIGN
Rule 238   mul_op_assign -> QUO_ASSIGN
Rule 239   mul_op_assign -> REM_ASSIGN
Rule 240   mul_op_assign -> AND_ASSIGN
Rule 241   mul_op_assign -> SHL_ASSIGN
Rule 242   mul_op_assign -> SHR_ASSIGN
Rule 243   mul_op_assign -> AND_NOT_ASSIGN
Rule 244   ShortVarDecl -> IdentifierList DEFINE ExpressionList
Rule 245   GotoStmt -> GOTO Label
Rule 246   ReturnStmt -> RETURN ExpressionList
Rule 247   ReturnStmt -> RETURN
Rule 248   BreakStmt -> BREAK Label
Rule 249   BreakStmt -> BREAK
Rule 250   ContinueStmt -> CONTINUE Label
Rule 251   ContinueStmt -> CONTINUE
Rule 252   FallthroughStmt -> FALLTHROUGH
Rule 253   Block -> LBRACE StatementList RBRACE
Rule 254   IfStmt -> IF Expr BeginScope Block EndScope else_stmt
Rule 255   IfStmt -> IF BeginScope SimpleStmt EndScope SEMICOLON Expr else_stmt
Rule 256   else_stmt -> ELSE IfStmt
Rule 257   else_stmt -> ELSE BeginScope Block EndScope
Rule 258   else_stmt -> <empty>
Rule 259   SwitchStmt -> ExprSwitchStmt
Rule 260   SwitchStmt -> TypeSwitchStmt
Rule 261   ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
Rule 262   ExprSwitchStmt -> SWITCH Expr LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
Rule 263   ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
Rule 264   ExprSwitchStmt -> SWITCH LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
Rule 265   BeginSwitch -> <empty>
Rule 266   EndSwitch -> <empty>
Rule 267   ExprCaseClauseMult -> ExprCaseClause ExprCaseClauseMult
Rule 268   ExprCaseClauseMult -> <empty>
Rule 269   ExprCaseClause -> BeginScope ExprSwitchCase COLON StatementList EndScope
Rule 270   ExprSwitchCase -> CASE ExpressionList
Rule 271   ExprSwitchCase -> DEFAULT
Rule 272   TypeSwitchStmt -> SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
Rule 273   TypeSwitchStmt -> SWITCH TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
Rule 274   TypeSwitchGuard -> IDENT DEFINE PrimaryExpr PERIOD LPAREN TYPE RPAREN
Rule 275   TypeSwitchGuard -> PrimaryExpr PERIOD LPAREN TYPE RPAREN
Rule 276   TypeCaseClauseMult -> TypeCaseClause TypeCaseClauseMult
Rule 277   TypeCaseClauseMult -> <empty>
Rule 278   TypeCaseClause -> CASE BeginScope TypeList EndScope COLON BeginScope StatementList EndScope
Rule 279   TypeCaseClause -> DEFAULT COLON BeginScope StatementList EndScope
Rule 280   TypeList -> Type
Rule 281   TypeList -> IDENT
Rule 282   TypeList -> IDENT PERIOD IDENT
Rule 283   TypeList -> Type COMMA TypeList
Rule 284   TypeList -> IDENT COMMA TypeList
Rule 285   TypeList -> IDENT PERIOD IDENT COMMA TypeList
Rule 286   ForStmt -> FOR BeginFor Condition Block EndFor
Rule 287   ForStmt -> FOR BeginFor ForClause Block EndFor
Rule 288   ForStmt -> FOR BeginFor RangeClause Block EndFor
Rule 289   ForStmt -> FOR BeginFor Block EndFor
Rule 290   BeginFor -> <empty>
Rule 291   EndFor -> <empty>
Rule 292   Condition -> Expr
Rule 293   ForClause -> InitStmt SEMICOLON Condition SEMICOLON PostStmt
Rule 294   ForClause -> InitStmt SEMICOLON SEMICOLON PostStmt
Rule 295   InitStmt -> SimpleStmt
Rule 296   PostStmt -> SimpleStmt
Rule 297   RangeClause -> RangeList RANGE Expr
Rule 298   RangeList -> ExpressionList ASSIGN
Rule 299   RangeList -> IdentifierList DEFINE
Rule 300   RangeList -> <empty>
Rule 301   BeginScope -> <empty>

Terminals, with rules where they appear

ADD                  : 65 77
ADD_ASSIGN           : 233
AND                  : 74 82
AND_ASSIGN           : 240
AND_NOT              : 75
AND_NOT_ASSIGN       : 243
ASSIGN               : 26 27 28 33 34 35 36 46 47 48 232 298
BREAK                : 248 249
CASE                 : 270 278
COLON                : 93 94 95 96 97 97 98 98 177 218 269 278 279
COMMA                : 53 55 101 103 104 105 105 107 108 109 109 111 112 113 113 171 175 191 193 194 195 196 283 284 285
CONST                : 22 23
CONTINUE             : 250 251
DEC                  : 228
DEFAULT              : 271 279
DEFINE               : 244 274 299
ELSE                 : 256 257
EQL                  : 59
FALLTHROUGH          : 252
FLOAT                : 161
FOR                  : 286 287 288 289
FUNC                 : 156 182 183 184
GEQ                  : 64
GOTO                 : 245
GTR                  : 63
IDENT                : 4 12 27 28 28 34 35 35 38 39 39 46 47 47 48 48 48 49 50 50 51 51 51 52 53 84 85 85 91 106 107 108 109 110 110 111 111 112 112 113 113 123 124 124 126 127 127 132 133 133 140 141 141 144 145 145 148 149 150 150 151 151 154 155 155 169 170 170 185 193 194 194 198 199 199 202 203 203 219 274 281 282 282 284 285 285
IF                   : 254 255
IMAG                 : 162
IMPORT               : 7 8
INC                  : 227
INT                  : 160
LAND                 : 58
LBRACE               : 134 171 172 173 253 261 262 263 264 272 273
LBRACK               : 92 93 94 95 96 97 98 128 129 152
LEQ                  : 62
LOR                  : 57
LPAREN               : 8 23 30 41 86 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 116 122 123 124 189 190 191 274 275
LSS                  : 61
MAP                  : 152
MUL                  : 69 81 125 126 127 148 150
MUL_ASSIGN           : 237
NEQ                  : 60
NOT                  : 79
OR                   : 67
OR_ASSIGN            : 235
PACKAGE              : 4
PERIOD               : 11 28 35 39 48 51 85 91 110 111 112 113 124 127 133 141 145 150 151 155 170 194 199 203 274 275 282 285
QUO                  : 70
QUO_ASSIGN           : 238
RANGE                : 297
RBRACE               : 134 171 172 173 253 261 262 263 264 272 273
RBRACK               : 92 93 94 95 96 97 98 128 129 152
REM                  : 71
REM_ASSIGN           : 239
RETURN               : 246 247
RPAREN               : 8 23 30 41 86 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 116 122 123 124 189 190 191 274 275
RUNE                 : 163
SEMICOLON            : 1 5 9 15 24 31 42 137 204 255 261 263 272 293 293 294 294
SHL                  : 72
SHL_ASSIGN           : 241
SHR                  : 73
SHR_ASSIGN           : 242
STRING               : 14 147 164
STRUCT               : 134
SUB                  : 66 78
SUB_ASSIGN           : 234
SWITCH               : 261 262 263 264 272 273
TYPE                 : 40 41 274 275
VAR                  : 29 30
XOR                  : 68 80
XOR_ASSIGN           : 236
error                : 

Nonterminals, with rules where they appear

AliasDecl            : 44
Arguments            : 90 165
ArrayLength          : 129
ArrayType            : 117 166
Assignment           : 223
BasicLit             : 157
BeginFor             : 286 287 288 289
BeginScope           : 183 184 214 254 255 257 261 261 263 269 278 278 279
BeginStruct          : 134
BeginSwitch          : 261 262 263 264
Block                : 186 214 254 257 286 287 288 289
BreakStmt            : 211
CompositeLit         : 158
Condition            : 286 293
ConstDecl            : 19
ConstSpec            : 22 24
ConstSpecMult        : 23 24
ContinueStmt         : 212
Decl                 : 17 206
Element              : 176 177
ElementList          : 171 172 175
ElementType          : 128 129 152
EmbeddedField        : 142 146
EmptyStmt            : 220
EndFor               : 286 287 288 289
EndScope             : 183 184 214 254 255 257 261 261 263 269 278 278 279
EndStruct            : 134
EndSwitch            : 261 262 263 264
Expr                 : 54 55 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 75 86 92 93 93 94 95 97 97 98 98 98 130 178 180 226 227 228 254 255 261 262 292 297
ExprCaseClause       : 267
ExprCaseClauseMult   : 261 262 263 264 267
ExprSwitchCase       : 269
ExprSwitchStmt       : 259
ExpressionList       : 26 27 28 33 34 35 36 55 100 101 104 105 108 109 112 113 229 229 244 246 270 298
ExpressionStmt       : 221
FallthroughStmt      : 213
FieldDecl            : 137
FieldDeclMult        : 134 137
ForClause            : 287
ForStmt              : 217
FuncDecl             : 18
FunctionBody         : 182 183
FunctionLit          : 159
FunctionName         : 183 184
FunctionType         : 121
GotoStmt             : 209
IdentifierList       : 26 27 28 33 34 35 36 37 38 39 53 139 140 141 143 144 145 197 198 199 244 299
IfStmt               : 215 256
ImportDecl           : 5
ImportDeclMult       : 1 5
ImportPath           : 11 12 13
ImportSpec           : 7 9
ImportSpecMult       : 8 9
IncDecStmt           : 222
Index                : 88
InitStmt             : 293 294
Key                  : 177
KeyType              : 152
KeyedElement         : 174 175
Label                : 218 245 248 250
LabeledStmt          : 207
Lit                  : 83
LiteralValue         : 166 167 168 169 170 179 181
MapType              : 120 168
PackageClause        : 1
ParameterDecl        : 192 196
ParameterList        : 190 191 193 194 195 196
Parameters           : 187 188 200
PointerType          : 115 116
PostStmt             : 293 294
PrimaryExpr          : 76 87 88 89 90 274 275
RangeClause          : 288
RangeList            : 297
Result               : 187
ReturnStmt           : 210
Selector             : 87
SetupContext         : 1
ShortVarDecl         : 224
Signature            : 156 182 183 184
SimpleStmt           : 208 255 261 263 272 295 296
Slice                : 89
SliceType            : 119 167
SourceFile           : 0
Statement            : 204 218
StatementList        : 204 253 269 278 279
StructType           : 118 165
SwitchStmt           : 216
Tag                  : 143 144 145 146
TopLevelDecl         : 15
TopLevelDeclMult     : 1 15
Type                 : 26 33 37 46 49 125 131 139 143 153 195 197 201 280 283
TypeCaseClause       : 276
TypeCaseClauseMult   : 272 273 276
TypeDecl             : 21
TypeList             : 278 283 284 285
TypeSpec             : 40 42
TypeSpecMult         : 41 42
TypeSwitchGuard      : 272 273
TypeSwitchStmt       : 260
TypeT                : 102 103 104 105 114 122
Typedef              : 45
UnaryExpr            : 56 77 78 79 80 81 82
VarDecl              : 20
VarMult              : 30 31
VarSpec              : 29 31
add_op_assign        : 230
assign_op            : 229
else_stmt            : 254 255
mul_op_assign        : 231


state 0

    (0) S' -> . SourceFile
    (1) SourceFile -> . SetupContext PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult
    (2) SetupContext -> .

    PACKAGE         reduce using rule 2 (SetupContext -> .)

    SourceFile                     shift and go to state 1
    SetupContext                   shift and go to state 2

state 1

    (0) S' -> SourceFile .



state 2

    (1) SourceFile -> SetupContext . PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult
    (4) PackageClause -> . PACKAGE IDENT

    PACKAGE         shift and go to state 4

    PackageClause                  shift and go to state 3

state 3

    (1) SourceFile -> SetupContext PackageClause . SEMICOLON ImportDeclMult TopLevelDeclMult

    SEMICOLON       shift and go to state 5


state 4

    (4) PackageClause -> PACKAGE . IDENT

    IDENT           shift and go to state 6


state 5

    (1) SourceFile -> SetupContext PackageClause SEMICOLON . ImportDeclMult TopLevelDeclMult
    (5) ImportDeclMult -> . ImportDecl SEMICOLON ImportDeclMult
    (6) ImportDeclMult -> .
    (7) ImportDecl -> . IMPORT ImportSpec
    (8) ImportDecl -> . IMPORT LPAREN ImportSpecMult RPAREN

    FUNC            reduce using rule 6 (ImportDeclMult -> .)
    CONST           reduce using rule 6 (ImportDeclMult -> .)
    VAR             reduce using rule 6 (ImportDeclMult -> .)
    TYPE            reduce using rule 6 (ImportDeclMult -> .)
    $end            reduce using rule 6 (ImportDeclMult -> .)
    IMPORT          shift and go to state 9

    ImportDeclMult                 shift and go to state 7
    ImportDecl                     shift and go to state 8

state 6

    (4) PackageClause -> PACKAGE IDENT .

    SEMICOLON       reduce using rule 4 (PackageClause -> PACKAGE IDENT .)


state 7

    (1) SourceFile -> SetupContext PackageClause SEMICOLON ImportDeclMult . TopLevelDeclMult
    (15) TopLevelDeclMult -> . TopLevelDecl SEMICOLON TopLevelDeclMult
    (16) TopLevelDeclMult -> .
    (17) TopLevelDecl -> . Decl
    (18) TopLevelDecl -> . FuncDecl
    (19) Decl -> . ConstDecl
    (20) Decl -> . VarDecl
    (21) Decl -> . TypeDecl
    (183) FuncDecl -> . FUNC FunctionName BeginScope Signature FunctionBody EndScope
    (184) FuncDecl -> . FUNC FunctionName BeginScope Signature EndScope
    (22) ConstDecl -> . CONST ConstSpec
    (23) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (29) VarDecl -> . VAR VarSpec
    (30) VarDecl -> . VAR LPAREN VarMult RPAREN
    (40) TypeDecl -> . TYPE TypeSpec
    (41) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN

    $end            reduce using rule 16 (TopLevelDeclMult -> .)
    FUNC            shift and go to state 17
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20

    TopLevelDeclMult               shift and go to state 10
    TopLevelDecl                   shift and go to state 11
    Decl                           shift and go to state 12
    FuncDecl                       shift and go to state 13
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16

state 8

    (5) ImportDeclMult -> ImportDecl . SEMICOLON ImportDeclMult

    SEMICOLON       shift and go to state 21


state 9

    (7) ImportDecl -> IMPORT . ImportSpec
    (8) ImportDecl -> IMPORT . LPAREN ImportSpecMult RPAREN
    (11) ImportSpec -> . PERIOD ImportPath
    (12) ImportSpec -> . IDENT ImportPath
    (13) ImportSpec -> . ImportPath
    (14) ImportPath -> . STRING

    LPAREN          shift and go to state 23
    PERIOD          shift and go to state 24
    IDENT           shift and go to state 26
    STRING          shift and go to state 27

    ImportSpec                     shift and go to state 22
    ImportPath                     shift and go to state 25

state 10

    (1) SourceFile -> SetupContext PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult .

    $end            reduce using rule 1 (SourceFile -> SetupContext PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult .)


state 11

    (15) TopLevelDeclMult -> TopLevelDecl . SEMICOLON TopLevelDeclMult

    SEMICOLON       shift and go to state 28


state 12

    (17) TopLevelDecl -> Decl .

    SEMICOLON       reduce using rule 17 (TopLevelDecl -> Decl .)


state 13

    (18) TopLevelDecl -> FuncDecl .

    SEMICOLON       reduce using rule 18 (TopLevelDecl -> FuncDecl .)


state 14

    (19) Decl -> ConstDecl .

    SEMICOLON       reduce using rule 19 (Decl -> ConstDecl .)


state 15

    (20) Decl -> VarDecl .

    SEMICOLON       reduce using rule 20 (Decl -> VarDecl .)


state 16

    (21) Decl -> TypeDecl .

    SEMICOLON       reduce using rule 21 (Decl -> TypeDecl .)


state 17

    (183) FuncDecl -> FUNC . FunctionName BeginScope Signature FunctionBody EndScope
    (184) FuncDecl -> FUNC . FunctionName BeginScope Signature EndScope
    (185) FunctionName -> . IDENT

    IDENT           shift and go to state 30

    FunctionName                   shift and go to state 29

state 18

    (22) ConstDecl -> CONST . ConstSpec
    (23) ConstDecl -> CONST . LPAREN ConstSpecMult RPAREN
    (26) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (27) ConstSpec -> . IdentifierList IDENT ASSIGN ExpressionList
    (28) ConstSpec -> . IdentifierList IDENT PERIOD IDENT ASSIGN ExpressionList
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList

    LPAREN          shift and go to state 32
    IDENT           shift and go to state 34

    ConstSpec                      shift and go to state 31
    IdentifierList                 shift and go to state 33

state 19

    (29) VarDecl -> VAR . VarSpec
    (30) VarDecl -> VAR . LPAREN VarMult RPAREN
    (33) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (34) VarSpec -> . IdentifierList IDENT ASSIGN ExpressionList
    (35) VarSpec -> . IdentifierList IDENT PERIOD IDENT ASSIGN ExpressionList
    (36) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (37) VarSpec -> . IdentifierList Type
    (38) VarSpec -> . IdentifierList IDENT
    (39) VarSpec -> . IdentifierList IDENT PERIOD IDENT
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList

    LPAREN          shift and go to state 36
    IDENT           shift and go to state 34

    VarSpec                        shift and go to state 35
    IdentifierList                 shift and go to state 37

state 20

    (40) TypeDecl -> TYPE . TypeSpec
    (41) TypeDecl -> TYPE . LPAREN TypeSpecMult RPAREN
    (44) TypeSpec -> . AliasDecl
    (45) TypeSpec -> . Typedef
    (46) AliasDecl -> . IDENT ASSIGN Type
    (47) AliasDecl -> . IDENT ASSIGN IDENT
    (48) AliasDecl -> . IDENT ASSIGN IDENT PERIOD IDENT
    (49) Typedef -> . IDENT Type
    (50) Typedef -> . IDENT IDENT
    (51) Typedef -> . IDENT IDENT PERIOD IDENT

    LPAREN          shift and go to state 39
    IDENT           shift and go to state 42

    TypeSpec                       shift and go to state 38
    AliasDecl                      shift and go to state 40
    Typedef                        shift and go to state 41

state 21

    (5) ImportDeclMult -> ImportDecl SEMICOLON . ImportDeclMult
    (5) ImportDeclMult -> . ImportDecl SEMICOLON ImportDeclMult
    (6) ImportDeclMult -> .
    (7) ImportDecl -> . IMPORT ImportSpec
    (8) ImportDecl -> . IMPORT LPAREN ImportSpecMult RPAREN

    FUNC            reduce using rule 6 (ImportDeclMult -> .)
    CONST           reduce using rule 6 (ImportDeclMult -> .)
    VAR             reduce using rule 6 (ImportDeclMult -> .)
    TYPE            reduce using rule 6 (ImportDeclMult -> .)
    $end            reduce using rule 6 (ImportDeclMult -> .)
    IMPORT          shift and go to state 9

    ImportDecl                     shift and go to state 8
    ImportDeclMult                 shift and go to state 43

state 22

    (7) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 7 (ImportDecl -> IMPORT ImportSpec .)


state 23

    (8) ImportDecl -> IMPORT LPAREN . ImportSpecMult RPAREN
    (9) ImportSpecMult -> . ImportSpec SEMICOLON ImportSpecMult
    (10) ImportSpecMult -> .
    (11) ImportSpec -> . PERIOD ImportPath
    (12) ImportSpec -> . IDENT ImportPath
    (13) ImportSpec -> . ImportPath
    (14) ImportPath -> . STRING

    RPAREN          reduce using rule 10 (ImportSpecMult -> .)
    PERIOD          shift and go to state 24
    IDENT           shift and go to state 26
    STRING          shift and go to state 27

    ImportSpecMult                 shift and go to state 44
    ImportSpec                     shift and go to state 45
    ImportPath                     shift and go to state 25

state 24

    (11) ImportSpec -> PERIOD . ImportPath
    (14) ImportPath -> . STRING

    STRING          shift and go to state 27

    ImportPath                     shift and go to state 46

state 25

    (13) ImportSpec -> ImportPath .

    SEMICOLON       reduce using rule 13 (ImportSpec -> ImportPath .)


state 26

    (12) ImportSpec -> IDENT . ImportPath
    (14) ImportPath -> . STRING

    STRING          shift and go to state 27

    ImportPath                     shift and go to state 47

state 27

    (14) ImportPath -> STRING .

    SEMICOLON       reduce using rule 14 (ImportPath -> STRING .)


state 28

    (15) TopLevelDeclMult -> TopLevelDecl SEMICOLON . TopLevelDeclMult
    (15) TopLevelDeclMult -> . TopLevelDecl SEMICOLON TopLevelDeclMult
    (16) TopLevelDeclMult -> .
    (17) TopLevelDecl -> . Decl
    (18) TopLevelDecl -> . FuncDecl
    (19) Decl -> . ConstDecl
    (20) Decl -> . VarDecl
    (21) Decl -> . TypeDecl
    (183) FuncDecl -> . FUNC FunctionName BeginScope Signature FunctionBody EndScope
    (184) FuncDecl -> . FUNC FunctionName BeginScope Signature EndScope
    (22) ConstDecl -> . CONST ConstSpec
    (23) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (29) VarDecl -> . VAR VarSpec
    (30) VarDecl -> . VAR LPAREN VarMult RPAREN
    (40) TypeDecl -> . TYPE TypeSpec
    (41) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN

    $end            reduce using rule 16 (TopLevelDeclMult -> .)
    FUNC            shift and go to state 17
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20

    TopLevelDecl                   shift and go to state 11
    TopLevelDeclMult               shift and go to state 48
    Decl                           shift and go to state 12
    FuncDecl                       shift and go to state 13
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16

state 29

    (183) FuncDecl -> FUNC FunctionName . BeginScope Signature FunctionBody EndScope
    (184) FuncDecl -> FUNC FunctionName . BeginScope Signature EndScope
    (301) BeginScope -> .

    LPAREN          reduce using rule 301 (BeginScope -> .)

    BeginScope                     shift and go to state 49

state 30

    (185) FunctionName -> IDENT .

    LPAREN          reduce using rule 185 (FunctionName -> IDENT .)


state 31

    (22) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 22 (ConstDecl -> CONST ConstSpec .)


state 32

    (23) ConstDecl -> CONST LPAREN . ConstSpecMult RPAREN
    (24) ConstSpecMult -> . ConstSpec SEMICOLON ConstSpecMult
    (25) ConstSpecMult -> .
    (26) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (27) ConstSpec -> . IdentifierList IDENT ASSIGN ExpressionList
    (28) ConstSpec -> . IdentifierList IDENT PERIOD IDENT ASSIGN ExpressionList
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList

    RPAREN          reduce using rule 25 (ConstSpecMult -> .)
    IDENT           shift and go to state 34

    ConstSpecMult                  shift and go to state 50
    ConstSpec                      shift and go to state 51
    IdentifierList                 shift and go to state 33

state 33

    (26) ConstSpec -> IdentifierList . Type ASSIGN ExpressionList
    (27) ConstSpec -> IdentifierList . IDENT ASSIGN ExpressionList
    (28) ConstSpec -> IdentifierList . IDENT PERIOD IDENT ASSIGN ExpressionList
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 53
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 52
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 34

    (52) IdentifierList -> IDENT .
    (53) IdentifierList -> IDENT . COMMA IdentifierList

    IDENT           reduce using rule 52 (IdentifierList -> IDENT .)
    LPAREN          reduce using rule 52 (IdentifierList -> IDENT .)
    MUL             reduce using rule 52 (IdentifierList -> IDENT .)
    LBRACK          reduce using rule 52 (IdentifierList -> IDENT .)
    STRUCT          reduce using rule 52 (IdentifierList -> IDENT .)
    MAP             reduce using rule 52 (IdentifierList -> IDENT .)
    FUNC            reduce using rule 52 (IdentifierList -> IDENT .)
    ASSIGN          reduce using rule 52 (IdentifierList -> IDENT .)
    DEFINE          reduce using rule 52 (IdentifierList -> IDENT .)
    COMMA           shift and go to state 67


state 35

    (29) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 29 (VarDecl -> VAR VarSpec .)


state 36

    (30) VarDecl -> VAR LPAREN . VarMult RPAREN
    (31) VarMult -> . VarSpec SEMICOLON VarMult
    (32) VarMult -> .
    (33) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (34) VarSpec -> . IdentifierList IDENT ASSIGN ExpressionList
    (35) VarSpec -> . IdentifierList IDENT PERIOD IDENT ASSIGN ExpressionList
    (36) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (37) VarSpec -> . IdentifierList Type
    (38) VarSpec -> . IdentifierList IDENT
    (39) VarSpec -> . IdentifierList IDENT PERIOD IDENT
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList

    RPAREN          reduce using rule 32 (VarMult -> .)
    IDENT           shift and go to state 34

    VarMult                        shift and go to state 68
    VarSpec                        shift and go to state 69
    IdentifierList                 shift and go to state 37

state 37

    (33) VarSpec -> IdentifierList . Type ASSIGN ExpressionList
    (34) VarSpec -> IdentifierList . IDENT ASSIGN ExpressionList
    (35) VarSpec -> IdentifierList . IDENT PERIOD IDENT ASSIGN ExpressionList
    (36) VarSpec -> IdentifierList . ASSIGN ExpressionList
    (37) VarSpec -> IdentifierList . Type
    (38) VarSpec -> IdentifierList . IDENT
    (39) VarSpec -> IdentifierList . IDENT PERIOD IDENT
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 72
    ASSIGN          shift and go to state 71
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 70
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 38

    (40) TypeDecl -> TYPE TypeSpec .

    SEMICOLON       reduce using rule 40 (TypeDecl -> TYPE TypeSpec .)


state 39

    (41) TypeDecl -> TYPE LPAREN . TypeSpecMult RPAREN
    (42) TypeSpecMult -> . TypeSpec SEMICOLON TypeSpecMult
    (43) TypeSpecMult -> .
    (44) TypeSpec -> . AliasDecl
    (45) TypeSpec -> . Typedef
    (46) AliasDecl -> . IDENT ASSIGN Type
    (47) AliasDecl -> . IDENT ASSIGN IDENT
    (48) AliasDecl -> . IDENT ASSIGN IDENT PERIOD IDENT
    (49) Typedef -> . IDENT Type
    (50) Typedef -> . IDENT IDENT
    (51) Typedef -> . IDENT IDENT PERIOD IDENT

    RPAREN          reduce using rule 43 (TypeSpecMult -> .)
    IDENT           shift and go to state 42

    TypeSpecMult                   shift and go to state 73
    TypeSpec                       shift and go to state 74
    AliasDecl                      shift and go to state 40
    Typedef                        shift and go to state 41

state 40

    (44) TypeSpec -> AliasDecl .

    SEMICOLON       reduce using rule 44 (TypeSpec -> AliasDecl .)


state 41

    (45) TypeSpec -> Typedef .

    SEMICOLON       reduce using rule 45 (TypeSpec -> Typedef .)


state 42

    (46) AliasDecl -> IDENT . ASSIGN Type
    (47) AliasDecl -> IDENT . ASSIGN IDENT
    (48) AliasDecl -> IDENT . ASSIGN IDENT PERIOD IDENT
    (49) Typedef -> IDENT . Type
    (50) Typedef -> IDENT . IDENT
    (51) Typedef -> IDENT . IDENT PERIOD IDENT
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    ASSIGN          shift and go to state 76
    IDENT           shift and go to state 75
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 77
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 43

    (5) ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult .

    FUNC            reduce using rule 5 (ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult .)
    CONST           reduce using rule 5 (ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult .)
    VAR             reduce using rule 5 (ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult .)
    TYPE            reduce using rule 5 (ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult .)
    $end            reduce using rule 5 (ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult .)


state 44

    (8) ImportDecl -> IMPORT LPAREN ImportSpecMult . RPAREN

    RPAREN          shift and go to state 78


state 45

    (9) ImportSpecMult -> ImportSpec . SEMICOLON ImportSpecMult

    SEMICOLON       shift and go to state 79


state 46

    (11) ImportSpec -> PERIOD ImportPath .

    SEMICOLON       reduce using rule 11 (ImportSpec -> PERIOD ImportPath .)


state 47

    (12) ImportSpec -> IDENT ImportPath .

    SEMICOLON       reduce using rule 12 (ImportSpec -> IDENT ImportPath .)


state 48

    (15) TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult .

    $end            reduce using rule 15 (TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult .)


state 49

    (183) FuncDecl -> FUNC FunctionName BeginScope . Signature FunctionBody EndScope
    (184) FuncDecl -> FUNC FunctionName BeginScope . Signature EndScope
    (187) Signature -> . Parameters Result
    (188) Signature -> . Parameters
    (189) Parameters -> . LPAREN RPAREN
    (190) Parameters -> . LPAREN ParameterList RPAREN
    (191) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 82

    Signature                      shift and go to state 80
    Parameters                     shift and go to state 81

state 50

    (23) ConstDecl -> CONST LPAREN ConstSpecMult . RPAREN

    RPAREN          shift and go to state 83


state 51

    (24) ConstSpecMult -> ConstSpec . SEMICOLON ConstSpecMult

    SEMICOLON       shift and go to state 84


state 52

    (26) ConstSpec -> IdentifierList Type . ASSIGN ExpressionList

    ASSIGN          shift and go to state 85


state 53

    (27) ConstSpec -> IdentifierList IDENT . ASSIGN ExpressionList
    (28) ConstSpec -> IdentifierList IDENT . PERIOD IDENT ASSIGN ExpressionList

    ASSIGN          shift and go to state 86
    PERIOD          shift and go to state 87


state 54

    (114) Type -> TypeT .

    ASSIGN          reduce using rule 114 (Type -> TypeT .)
    SEMICOLON       reduce using rule 114 (Type -> TypeT .)
    RPAREN          reduce using rule 114 (Type -> TypeT .)
    LBRACE          reduce using rule 114 (Type -> TypeT .)
    RBRACK          reduce using rule 114 (Type -> TypeT .)
    COMMA           reduce using rule 114 (Type -> TypeT .)
    STRING          reduce using rule 114 (Type -> TypeT .)
    COLON           reduce using rule 114 (Type -> TypeT .)


state 55

    (115) Type -> PointerType .

    ASSIGN          reduce using rule 115 (Type -> PointerType .)
    SEMICOLON       reduce using rule 115 (Type -> PointerType .)
    RPAREN          reduce using rule 115 (Type -> PointerType .)
    LBRACE          reduce using rule 115 (Type -> PointerType .)
    RBRACK          reduce using rule 115 (Type -> PointerType .)
    COMMA           reduce using rule 115 (Type -> PointerType .)
    STRING          reduce using rule 115 (Type -> PointerType .)
    COLON           reduce using rule 115 (Type -> PointerType .)


state 56

    (116) Type -> LPAREN . PointerType RPAREN
    (122) TypeT -> LPAREN . TypeT RPAREN
    (123) TypeT -> LPAREN . IDENT RPAREN
    (124) TypeT -> LPAREN . IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 91
    MUL             shift and go to state 62
    LPAREN          shift and go to state 88
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    PointerType                    shift and go to state 89
    TypeT                          shift and go to state 90
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 57

    (117) TypeT -> ArrayType .

    ASSIGN          reduce using rule 117 (TypeT -> ArrayType .)
    SEMICOLON       reduce using rule 117 (TypeT -> ArrayType .)
    RPAREN          reduce using rule 117 (TypeT -> ArrayType .)
    LBRACE          reduce using rule 117 (TypeT -> ArrayType .)
    RBRACK          reduce using rule 117 (TypeT -> ArrayType .)
    COMMA           reduce using rule 117 (TypeT -> ArrayType .)
    STRING          reduce using rule 117 (TypeT -> ArrayType .)
    COLON           reduce using rule 117 (TypeT -> ArrayType .)


state 58

    (118) TypeT -> StructType .

    ASSIGN          reduce using rule 118 (TypeT -> StructType .)
    SEMICOLON       reduce using rule 118 (TypeT -> StructType .)
    RPAREN          reduce using rule 118 (TypeT -> StructType .)
    LBRACE          reduce using rule 118 (TypeT -> StructType .)
    RBRACK          reduce using rule 118 (TypeT -> StructType .)
    COMMA           reduce using rule 118 (TypeT -> StructType .)
    STRING          reduce using rule 118 (TypeT -> StructType .)
    COLON           reduce using rule 118 (TypeT -> StructType .)


state 59

    (119) TypeT -> SliceType .

    ASSIGN          reduce using rule 119 (TypeT -> SliceType .)
    SEMICOLON       reduce using rule 119 (TypeT -> SliceType .)
    RPAREN          reduce using rule 119 (TypeT -> SliceType .)
    LBRACE          reduce using rule 119 (TypeT -> SliceType .)
    RBRACK          reduce using rule 119 (TypeT -> SliceType .)
    COMMA           reduce using rule 119 (TypeT -> SliceType .)
    STRING          reduce using rule 119 (TypeT -> SliceType .)
    COLON           reduce using rule 119 (TypeT -> SliceType .)


state 60

    (120) TypeT -> MapType .

    ASSIGN          reduce using rule 120 (TypeT -> MapType .)
    SEMICOLON       reduce using rule 120 (TypeT -> MapType .)
    RPAREN          reduce using rule 120 (TypeT -> MapType .)
    LBRACE          reduce using rule 120 (TypeT -> MapType .)
    RBRACK          reduce using rule 120 (TypeT -> MapType .)
    COMMA           reduce using rule 120 (TypeT -> MapType .)
    STRING          reduce using rule 120 (TypeT -> MapType .)
    COLON           reduce using rule 120 (TypeT -> MapType .)


state 61

    (121) TypeT -> FunctionType .

    ASSIGN          reduce using rule 121 (TypeT -> FunctionType .)
    SEMICOLON       reduce using rule 121 (TypeT -> FunctionType .)
    RPAREN          reduce using rule 121 (TypeT -> FunctionType .)
    LBRACE          reduce using rule 121 (TypeT -> FunctionType .)
    RBRACK          reduce using rule 121 (TypeT -> FunctionType .)
    COMMA           reduce using rule 121 (TypeT -> FunctionType .)
    STRING          reduce using rule 121 (TypeT -> FunctionType .)
    COLON           reduce using rule 121 (TypeT -> FunctionType .)


state 62

    (125) PointerType -> MUL . Type
    (126) PointerType -> MUL . IDENT
    (127) PointerType -> MUL . IDENT PERIOD IDENT
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 93
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 92
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 63

    (129) ArrayType -> LBRACK . ArrayLength RBRACK ElementType
    (128) SliceType -> LBRACK . RBRACK ElementType
    (130) ArrayLength -> . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RBRACK          shift and go to state 95
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ArrayLength                    shift and go to state 94
    Expr                           shift and go to state 96
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 64

    (134) StructType -> STRUCT . BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (135) BeginStruct -> .

    LBRACE          reduce using rule 135 (BeginStruct -> .)

    BeginStruct                    shift and go to state 121

state 65

    (152) MapType -> MAP . LBRACK KeyType RBRACK ElementType

    LBRACK          shift and go to state 122


state 66

    (156) FunctionType -> FUNC . Signature
    (187) Signature -> . Parameters Result
    (188) Signature -> . Parameters
    (189) Parameters -> . LPAREN RPAREN
    (190) Parameters -> . LPAREN ParameterList RPAREN
    (191) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 82

    Signature                      shift and go to state 123
    Parameters                     shift and go to state 81

state 67

    (53) IdentifierList -> IDENT COMMA . IdentifierList
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList

    IDENT           shift and go to state 34

    IdentifierList                 shift and go to state 124

state 68

    (30) VarDecl -> VAR LPAREN VarMult . RPAREN

    RPAREN          shift and go to state 125


state 69

    (31) VarMult -> VarSpec . SEMICOLON VarMult

    SEMICOLON       shift and go to state 126


state 70

    (33) VarSpec -> IdentifierList Type . ASSIGN ExpressionList
    (37) VarSpec -> IdentifierList Type .

    ASSIGN          shift and go to state 127
    SEMICOLON       reduce using rule 37 (VarSpec -> IdentifierList Type .)


state 71

    (36) VarSpec -> IdentifierList ASSIGN . ExpressionList
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 128
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 72

    (34) VarSpec -> IdentifierList IDENT . ASSIGN ExpressionList
    (35) VarSpec -> IdentifierList IDENT . PERIOD IDENT ASSIGN ExpressionList
    (38) VarSpec -> IdentifierList IDENT .
    (39) VarSpec -> IdentifierList IDENT . PERIOD IDENT

    ASSIGN          shift and go to state 130
    PERIOD          shift and go to state 131
    SEMICOLON       reduce using rule 38 (VarSpec -> IdentifierList IDENT .)


state 73

    (41) TypeDecl -> TYPE LPAREN TypeSpecMult . RPAREN

    RPAREN          shift and go to state 132


state 74

    (42) TypeSpecMult -> TypeSpec . SEMICOLON TypeSpecMult

    SEMICOLON       shift and go to state 133


state 75

    (50) Typedef -> IDENT IDENT .
    (51) Typedef -> IDENT IDENT . PERIOD IDENT

    SEMICOLON       reduce using rule 50 (Typedef -> IDENT IDENT .)
    PERIOD          shift and go to state 134


state 76

    (46) AliasDecl -> IDENT ASSIGN . Type
    (47) AliasDecl -> IDENT ASSIGN . IDENT
    (48) AliasDecl -> IDENT ASSIGN . IDENT PERIOD IDENT
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 135
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 136
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 77

    (49) Typedef -> IDENT Type .

    SEMICOLON       reduce using rule 49 (Typedef -> IDENT Type .)


state 78

    (8) ImportDecl -> IMPORT LPAREN ImportSpecMult RPAREN .

    SEMICOLON       reduce using rule 8 (ImportDecl -> IMPORT LPAREN ImportSpecMult RPAREN .)


state 79

    (9) ImportSpecMult -> ImportSpec SEMICOLON . ImportSpecMult
    (9) ImportSpecMult -> . ImportSpec SEMICOLON ImportSpecMult
    (10) ImportSpecMult -> .
    (11) ImportSpec -> . PERIOD ImportPath
    (12) ImportSpec -> . IDENT ImportPath
    (13) ImportSpec -> . ImportPath
    (14) ImportPath -> . STRING

    RPAREN          reduce using rule 10 (ImportSpecMult -> .)
    PERIOD          shift and go to state 24
    IDENT           shift and go to state 26
    STRING          shift and go to state 27

    ImportSpec                     shift and go to state 45
    ImportSpecMult                 shift and go to state 137
    ImportPath                     shift and go to state 25

state 80

    (183) FuncDecl -> FUNC FunctionName BeginScope Signature . FunctionBody EndScope
    (184) FuncDecl -> FUNC FunctionName BeginScope Signature . EndScope
    (186) FunctionBody -> . Block
    (3) EndScope -> .
    (253) Block -> . LBRACE StatementList RBRACE

    SEMICOLON       reduce using rule 3 (EndScope -> .)
    LBRACE          shift and go to state 141

    FunctionBody                   shift and go to state 138
    EndScope                       shift and go to state 139
    Block                          shift and go to state 140

state 81

    (187) Signature -> Parameters . Result
    (188) Signature -> Parameters .
    (200) Result -> . Parameters
    (201) Result -> . Type
    (202) Result -> . IDENT
    (203) Result -> . IDENT PERIOD IDENT
    (189) Parameters -> . LPAREN RPAREN
    (190) Parameters -> . LPAREN ParameterList RPAREN
    (191) Parameters -> . LPAREN ParameterList COMMA RPAREN
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    LBRACE          reduce using rule 188 (Signature -> Parameters .)
    SEMICOLON       reduce using rule 188 (Signature -> Parameters .)
    ASSIGN          reduce using rule 188 (Signature -> Parameters .)
    RPAREN          reduce using rule 188 (Signature -> Parameters .)
    RBRACK          reduce using rule 188 (Signature -> Parameters .)
    COMMA           reduce using rule 188 (Signature -> Parameters .)
    STRING          reduce using rule 188 (Signature -> Parameters .)
    COLON           reduce using rule 188 (Signature -> Parameters .)
    IDENT           shift and go to state 145
    LPAREN          shift and go to state 146
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Parameters                     shift and go to state 142
    Result                         shift and go to state 143
    Type                           shift and go to state 144
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 82

    (189) Parameters -> LPAREN . RPAREN
    (190) Parameters -> LPAREN . ParameterList RPAREN
    (191) Parameters -> LPAREN . ParameterList COMMA RPAREN
    (192) ParameterList -> . ParameterDecl
    (193) ParameterList -> . ParameterList COMMA IDENT
    (194) ParameterList -> . ParameterList COMMA IDENT PERIOD IDENT
    (195) ParameterList -> . ParameterList COMMA Type
    (196) ParameterList -> . ParameterList COMMA ParameterDecl
    (197) ParameterDecl -> . IdentifierList Type
    (198) ParameterDecl -> . IdentifierList IDENT
    (199) ParameterDecl -> . IdentifierList IDENT PERIOD IDENT
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList

    RPAREN          shift and go to state 147
    IDENT           shift and go to state 34

    ParameterList                  shift and go to state 148
    ParameterDecl                  shift and go to state 149
    IdentifierList                 shift and go to state 150

state 83

    (23) ConstDecl -> CONST LPAREN ConstSpecMult RPAREN .

    SEMICOLON       reduce using rule 23 (ConstDecl -> CONST LPAREN ConstSpecMult RPAREN .)


state 84

    (24) ConstSpecMult -> ConstSpec SEMICOLON . ConstSpecMult
    (24) ConstSpecMult -> . ConstSpec SEMICOLON ConstSpecMult
    (25) ConstSpecMult -> .
    (26) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (27) ConstSpec -> . IdentifierList IDENT ASSIGN ExpressionList
    (28) ConstSpec -> . IdentifierList IDENT PERIOD IDENT ASSIGN ExpressionList
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList

    RPAREN          reduce using rule 25 (ConstSpecMult -> .)
    IDENT           shift and go to state 34

    ConstSpec                      shift and go to state 51
    ConstSpecMult                  shift and go to state 151
    IdentifierList                 shift and go to state 33

state 85

    (26) ConstSpec -> IdentifierList Type ASSIGN . ExpressionList
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 152
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 86

    (27) ConstSpec -> IdentifierList IDENT ASSIGN . ExpressionList
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 153
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 87

    (28) ConstSpec -> IdentifierList IDENT PERIOD . IDENT ASSIGN ExpressionList

    IDENT           shift and go to state 154


state 88

    (122) TypeT -> LPAREN . TypeT RPAREN
    (123) TypeT -> LPAREN . IDENT RPAREN
    (124) TypeT -> LPAREN . IDENT PERIOD IDENT RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 91
    LPAREN          shift and go to state 88
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    TypeT                          shift and go to state 90
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 89

    (116) Type -> LPAREN PointerType . RPAREN

    RPAREN          shift and go to state 155


state 90

    (122) TypeT -> LPAREN TypeT . RPAREN

    RPAREN          shift and go to state 156


state 91

    (123) TypeT -> LPAREN IDENT . RPAREN
    (124) TypeT -> LPAREN IDENT . PERIOD IDENT RPAREN

    RPAREN          shift and go to state 157
    PERIOD          shift and go to state 158


state 92

    (125) PointerType -> MUL Type .

    ASSIGN          reduce using rule 125 (PointerType -> MUL Type .)
    SEMICOLON       reduce using rule 125 (PointerType -> MUL Type .)
    RPAREN          reduce using rule 125 (PointerType -> MUL Type .)
    LBRACE          reduce using rule 125 (PointerType -> MUL Type .)
    RBRACK          reduce using rule 125 (PointerType -> MUL Type .)
    COMMA           reduce using rule 125 (PointerType -> MUL Type .)
    STRING          reduce using rule 125 (PointerType -> MUL Type .)
    COLON           reduce using rule 125 (PointerType -> MUL Type .)


state 93

    (126) PointerType -> MUL IDENT .
    (127) PointerType -> MUL IDENT . PERIOD IDENT

    ASSIGN          reduce using rule 126 (PointerType -> MUL IDENT .)
    SEMICOLON       reduce using rule 126 (PointerType -> MUL IDENT .)
    RPAREN          reduce using rule 126 (PointerType -> MUL IDENT .)
    LBRACE          reduce using rule 126 (PointerType -> MUL IDENT .)
    RBRACK          reduce using rule 126 (PointerType -> MUL IDENT .)
    COMMA           reduce using rule 126 (PointerType -> MUL IDENT .)
    STRING          reduce using rule 126 (PointerType -> MUL IDENT .)
    COLON           reduce using rule 126 (PointerType -> MUL IDENT .)
    PERIOD          shift and go to state 159


state 94

    (129) ArrayType -> LBRACK ArrayLength . RBRACK ElementType

    RBRACK          shift and go to state 160


state 95

    (128) SliceType -> LBRACK RBRACK . ElementType
    (131) ElementType -> . Type
    (132) ElementType -> . IDENT
    (133) ElementType -> . IDENT PERIOD IDENT
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 163
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    ElementType                    shift and go to state 161
    Type                           shift and go to state 162
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 96

    (130) ArrayLength -> Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    RBRACK          reduce using rule 130 (ArrayLength -> Expr .)
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182


state 97

    (56) Expr -> UnaryExpr .

    LOR             reduce using rule 56 (Expr -> UnaryExpr .)
    LAND            reduce using rule 56 (Expr -> UnaryExpr .)
    EQL             reduce using rule 56 (Expr -> UnaryExpr .)
    NEQ             reduce using rule 56 (Expr -> UnaryExpr .)
    LSS             reduce using rule 56 (Expr -> UnaryExpr .)
    LEQ             reduce using rule 56 (Expr -> UnaryExpr .)
    GTR             reduce using rule 56 (Expr -> UnaryExpr .)
    GEQ             reduce using rule 56 (Expr -> UnaryExpr .)
    ADD             reduce using rule 56 (Expr -> UnaryExpr .)
    SUB             reduce using rule 56 (Expr -> UnaryExpr .)
    OR              reduce using rule 56 (Expr -> UnaryExpr .)
    XOR             reduce using rule 56 (Expr -> UnaryExpr .)
    MUL             reduce using rule 56 (Expr -> UnaryExpr .)
    QUO             reduce using rule 56 (Expr -> UnaryExpr .)
    REM             reduce using rule 56 (Expr -> UnaryExpr .)
    SHL             reduce using rule 56 (Expr -> UnaryExpr .)
    SHR             reduce using rule 56 (Expr -> UnaryExpr .)
    AND             reduce using rule 56 (Expr -> UnaryExpr .)
    AND_NOT         reduce using rule 56 (Expr -> UnaryExpr .)
    RBRACK          reduce using rule 56 (Expr -> UnaryExpr .)
    COMMA           reduce using rule 56 (Expr -> UnaryExpr .)
    SEMICOLON       reduce using rule 56 (Expr -> UnaryExpr .)
    RPAREN          reduce using rule 56 (Expr -> UnaryExpr .)
    INC             reduce using rule 56 (Expr -> UnaryExpr .)
    DEC             reduce using rule 56 (Expr -> UnaryExpr .)
    ASSIGN          reduce using rule 56 (Expr -> UnaryExpr .)
    ADD_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    SUB_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    OR_ASSIGN       reduce using rule 56 (Expr -> UnaryExpr .)
    XOR_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    MUL_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    QUO_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    REM_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    AND_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    SHL_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    SHR_ASSIGN      reduce using rule 56 (Expr -> UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 56 (Expr -> UnaryExpr .)
    COLON           reduce using rule 56 (Expr -> UnaryExpr .)
    RBRACE          reduce using rule 56 (Expr -> UnaryExpr .)
    LBRACE          reduce using rule 56 (Expr -> UnaryExpr .)
    ELSE            reduce using rule 56 (Expr -> UnaryExpr .)


state 98

    (77) UnaryExpr -> ADD . UnaryExpr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    UnaryExpr                      shift and go to state 183
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 99

    (78) UnaryExpr -> SUB . UnaryExpr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    UnaryExpr                      shift and go to state 184
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 100

    (80) UnaryExpr -> XOR . UnaryExpr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    UnaryExpr                      shift and go to state 185
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 101

    (81) UnaryExpr -> MUL . UnaryExpr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    UnaryExpr                      shift and go to state 186
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 102

    (82) UnaryExpr -> AND . UnaryExpr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    UnaryExpr                      shift and go to state 187
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 103

    (76) UnaryExpr -> PrimaryExpr .
    (87) PrimaryExpr -> PrimaryExpr . Selector
    (88) PrimaryExpr -> PrimaryExpr . Index
    (89) PrimaryExpr -> PrimaryExpr . Slice
    (90) PrimaryExpr -> PrimaryExpr . Arguments
    (91) Selector -> . PERIOD IDENT
    (92) Index -> . LBRACK Expr RBRACK
    (93) Slice -> . LBRACK Expr COLON Expr RBRACK
    (94) Slice -> . LBRACK COLON Expr RBRACK
    (95) Slice -> . LBRACK Expr COLON RBRACK
    (96) Slice -> . LBRACK COLON RBRACK
    (97) Slice -> . LBRACK COLON Expr COLON Expr RBRACK
    (98) Slice -> . LBRACK Expr COLON Expr COLON Expr RBRACK
    (99) Arguments -> . LPAREN RPAREN
    (100) Arguments -> . LPAREN ExpressionList RPAREN
    (101) Arguments -> . LPAREN ExpressionList COMMA RPAREN
    (102) Arguments -> . LPAREN TypeT RPAREN
    (103) Arguments -> . LPAREN TypeT COMMA RPAREN
    (104) Arguments -> . LPAREN TypeT COMMA ExpressionList RPAREN
    (105) Arguments -> . LPAREN TypeT COMMA ExpressionList COMMA RPAREN
    (106) Arguments -> . LPAREN IDENT RPAREN
    (107) Arguments -> . LPAREN IDENT COMMA RPAREN
    (108) Arguments -> . LPAREN IDENT COMMA ExpressionList RPAREN
    (109) Arguments -> . LPAREN IDENT COMMA ExpressionList COMMA RPAREN
    (110) Arguments -> . LPAREN IDENT PERIOD IDENT RPAREN
    (111) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA RPAREN
    (112) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN
    (113) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN

    LOR             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    LAND            reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    EQL             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    NEQ             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    LSS             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    GTR             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SUB             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    MUL             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    QUO             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    REM             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SHL             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SHR             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    AND_NOT         reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    RBRACK          reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    INC             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    DEC             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    ADD_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SUB_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGN       reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    MUL_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    QUO_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    REM_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    AND_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SHL_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SHR_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    RBRACE          reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    LBRACE          reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    ELSE            reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    PERIOD          shift and go to state 192
    LBRACK          shift and go to state 193
    LPAREN          shift and go to state 194

    Selector                       shift and go to state 188
    Index                          shift and go to state 189
    Slice                          shift and go to state 190
    Arguments                      shift and go to state 191

state 104

    (79) UnaryExpr -> NOT . UnaryExpr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    UnaryExpr                      shift and go to state 195
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 105

    (83) PrimaryExpr -> Lit .

    PERIOD          reduce using rule 83 (PrimaryExpr -> Lit .)
    LBRACK          reduce using rule 83 (PrimaryExpr -> Lit .)
    LPAREN          reduce using rule 83 (PrimaryExpr -> Lit .)
    LOR             reduce using rule 83 (PrimaryExpr -> Lit .)
    LAND            reduce using rule 83 (PrimaryExpr -> Lit .)
    EQL             reduce using rule 83 (PrimaryExpr -> Lit .)
    NEQ             reduce using rule 83 (PrimaryExpr -> Lit .)
    LSS             reduce using rule 83 (PrimaryExpr -> Lit .)
    LEQ             reduce using rule 83 (PrimaryExpr -> Lit .)
    GTR             reduce using rule 83 (PrimaryExpr -> Lit .)
    GEQ             reduce using rule 83 (PrimaryExpr -> Lit .)
    ADD             reduce using rule 83 (PrimaryExpr -> Lit .)
    SUB             reduce using rule 83 (PrimaryExpr -> Lit .)
    OR              reduce using rule 83 (PrimaryExpr -> Lit .)
    XOR             reduce using rule 83 (PrimaryExpr -> Lit .)
    MUL             reduce using rule 83 (PrimaryExpr -> Lit .)
    QUO             reduce using rule 83 (PrimaryExpr -> Lit .)
    REM             reduce using rule 83 (PrimaryExpr -> Lit .)
    SHL             reduce using rule 83 (PrimaryExpr -> Lit .)
    SHR             reduce using rule 83 (PrimaryExpr -> Lit .)
    AND             reduce using rule 83 (PrimaryExpr -> Lit .)
    AND_NOT         reduce using rule 83 (PrimaryExpr -> Lit .)
    RBRACK          reduce using rule 83 (PrimaryExpr -> Lit .)
    COMMA           reduce using rule 83 (PrimaryExpr -> Lit .)
    SEMICOLON       reduce using rule 83 (PrimaryExpr -> Lit .)
    RPAREN          reduce using rule 83 (PrimaryExpr -> Lit .)
    INC             reduce using rule 83 (PrimaryExpr -> Lit .)
    DEC             reduce using rule 83 (PrimaryExpr -> Lit .)
    ASSIGN          reduce using rule 83 (PrimaryExpr -> Lit .)
    ADD_ASSIGN      reduce using rule 83 (PrimaryExpr -> Lit .)
    SUB_ASSIGN      reduce using rule 83 (PrimaryExpr -> Lit .)
    OR_ASSIGN       reduce using rule 83 (PrimaryExpr -> Lit .)
    XOR_ASSIGN      reduce using rule 83 (PrimaryExpr -> Lit .)
    MUL_ASSIGN      reduce using rule 83 (PrimaryExpr -> Lit .)
    QUO_ASSIGN      reduce using rule 83 (PrimaryExpr -> Lit .)
    REM_ASSIGN      reduce using rule 83 (PrimaryExpr -> Lit .)
    AND_ASSIGN      reduce using rule 83 (PrimaryExpr -> Lit .)
    SHL_ASSIGN      reduce using rule 83 (PrimaryExpr -> Lit .)
    SHR_ASSIGN      reduce using rule 83 (PrimaryExpr -> Lit .)
    AND_NOT_ASSIGN  reduce using rule 83 (PrimaryExpr -> Lit .)
    COLON           reduce using rule 83 (PrimaryExpr -> Lit .)
    RBRACE          reduce using rule 83 (PrimaryExpr -> Lit .)
    LBRACE          reduce using rule 83 (PrimaryExpr -> Lit .)
    ELSE            reduce using rule 83 (PrimaryExpr -> Lit .)


state 106

    (84) PrimaryExpr -> IDENT .
    (85) PrimaryExpr -> IDENT . PERIOD IDENT
    (169) CompositeLit -> IDENT . LiteralValue
    (170) CompositeLit -> IDENT . PERIOD IDENT LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    LBRACK          reduce using rule 84 (PrimaryExpr -> IDENT .)
    LPAREN          reduce using rule 84 (PrimaryExpr -> IDENT .)
    LOR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LAND            reduce using rule 84 (PrimaryExpr -> IDENT .)
    EQL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    NEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LSS             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    GTR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    GEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    ADD             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SUB             reduce using rule 84 (PrimaryExpr -> IDENT .)
    OR              reduce using rule 84 (PrimaryExpr -> IDENT .)
    XOR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    MUL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    QUO             reduce using rule 84 (PrimaryExpr -> IDENT .)
    REM             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND             reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_NOT         reduce using rule 84 (PrimaryExpr -> IDENT .)
    RBRACK          reduce using rule 84 (PrimaryExpr -> IDENT .)
    COMMA           reduce using rule 84 (PrimaryExpr -> IDENT .)
    SEMICOLON       reduce using rule 84 (PrimaryExpr -> IDENT .)
    RPAREN          reduce using rule 84 (PrimaryExpr -> IDENT .)
    INC             reduce using rule 84 (PrimaryExpr -> IDENT .)
    DEC             reduce using rule 84 (PrimaryExpr -> IDENT .)
    ASSIGN          reduce using rule 84 (PrimaryExpr -> IDENT .)
    ADD_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    SUB_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    OR_ASSIGN       reduce using rule 84 (PrimaryExpr -> IDENT .)
    XOR_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    MUL_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    QUO_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    REM_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHL_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHR_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_NOT_ASSIGN  reduce using rule 84 (PrimaryExpr -> IDENT .)
    COLON           reduce using rule 84 (PrimaryExpr -> IDENT .)
    RBRACE          reduce using rule 84 (PrimaryExpr -> IDENT .)
    LBRACE          reduce using rule 84 (PrimaryExpr -> IDENT .)
    ELSE            reduce using rule 84 (PrimaryExpr -> IDENT .)
    PERIOD          shift and go to state 196

  ! PERIOD          [ reduce using rule 84 (PrimaryExpr -> IDENT .) ]
  ! LBRACE          [ shift and go to state 198 ]

    LiteralValue                   shift and go to state 197

state 107

    (86) PrimaryExpr -> LPAREN . Expr RPAREN
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 199
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 108

    (157) Lit -> BasicLit .

    PERIOD          reduce using rule 157 (Lit -> BasicLit .)
    LBRACK          reduce using rule 157 (Lit -> BasicLit .)
    LPAREN          reduce using rule 157 (Lit -> BasicLit .)
    LOR             reduce using rule 157 (Lit -> BasicLit .)
    LAND            reduce using rule 157 (Lit -> BasicLit .)
    EQL             reduce using rule 157 (Lit -> BasicLit .)
    NEQ             reduce using rule 157 (Lit -> BasicLit .)
    LSS             reduce using rule 157 (Lit -> BasicLit .)
    LEQ             reduce using rule 157 (Lit -> BasicLit .)
    GTR             reduce using rule 157 (Lit -> BasicLit .)
    GEQ             reduce using rule 157 (Lit -> BasicLit .)
    ADD             reduce using rule 157 (Lit -> BasicLit .)
    SUB             reduce using rule 157 (Lit -> BasicLit .)
    OR              reduce using rule 157 (Lit -> BasicLit .)
    XOR             reduce using rule 157 (Lit -> BasicLit .)
    MUL             reduce using rule 157 (Lit -> BasicLit .)
    QUO             reduce using rule 157 (Lit -> BasicLit .)
    REM             reduce using rule 157 (Lit -> BasicLit .)
    SHL             reduce using rule 157 (Lit -> BasicLit .)
    SHR             reduce using rule 157 (Lit -> BasicLit .)
    AND             reduce using rule 157 (Lit -> BasicLit .)
    AND_NOT         reduce using rule 157 (Lit -> BasicLit .)
    RBRACK          reduce using rule 157 (Lit -> BasicLit .)
    COMMA           reduce using rule 157 (Lit -> BasicLit .)
    SEMICOLON       reduce using rule 157 (Lit -> BasicLit .)
    RPAREN          reduce using rule 157 (Lit -> BasicLit .)
    INC             reduce using rule 157 (Lit -> BasicLit .)
    DEC             reduce using rule 157 (Lit -> BasicLit .)
    ASSIGN          reduce using rule 157 (Lit -> BasicLit .)
    ADD_ASSIGN      reduce using rule 157 (Lit -> BasicLit .)
    SUB_ASSIGN      reduce using rule 157 (Lit -> BasicLit .)
    OR_ASSIGN       reduce using rule 157 (Lit -> BasicLit .)
    XOR_ASSIGN      reduce using rule 157 (Lit -> BasicLit .)
    MUL_ASSIGN      reduce using rule 157 (Lit -> BasicLit .)
    QUO_ASSIGN      reduce using rule 157 (Lit -> BasicLit .)
    REM_ASSIGN      reduce using rule 157 (Lit -> BasicLit .)
    AND_ASSIGN      reduce using rule 157 (Lit -> BasicLit .)
    SHL_ASSIGN      reduce using rule 157 (Lit -> BasicLit .)
    SHR_ASSIGN      reduce using rule 157 (Lit -> BasicLit .)
    AND_NOT_ASSIGN  reduce using rule 157 (Lit -> BasicLit .)
    COLON           reduce using rule 157 (Lit -> BasicLit .)
    RBRACE          reduce using rule 157 (Lit -> BasicLit .)
    LBRACE          reduce using rule 157 (Lit -> BasicLit .)
    ELSE            reduce using rule 157 (Lit -> BasicLit .)


state 109

    (158) Lit -> CompositeLit .

    PERIOD          reduce using rule 158 (Lit -> CompositeLit .)
    LBRACK          reduce using rule 158 (Lit -> CompositeLit .)
    LPAREN          reduce using rule 158 (Lit -> CompositeLit .)
    LOR             reduce using rule 158 (Lit -> CompositeLit .)
    LAND            reduce using rule 158 (Lit -> CompositeLit .)
    EQL             reduce using rule 158 (Lit -> CompositeLit .)
    NEQ             reduce using rule 158 (Lit -> CompositeLit .)
    LSS             reduce using rule 158 (Lit -> CompositeLit .)
    LEQ             reduce using rule 158 (Lit -> CompositeLit .)
    GTR             reduce using rule 158 (Lit -> CompositeLit .)
    GEQ             reduce using rule 158 (Lit -> CompositeLit .)
    ADD             reduce using rule 158 (Lit -> CompositeLit .)
    SUB             reduce using rule 158 (Lit -> CompositeLit .)
    OR              reduce using rule 158 (Lit -> CompositeLit .)
    XOR             reduce using rule 158 (Lit -> CompositeLit .)
    MUL             reduce using rule 158 (Lit -> CompositeLit .)
    QUO             reduce using rule 158 (Lit -> CompositeLit .)
    REM             reduce using rule 158 (Lit -> CompositeLit .)
    SHL             reduce using rule 158 (Lit -> CompositeLit .)
    SHR             reduce using rule 158 (Lit -> CompositeLit .)
    AND             reduce using rule 158 (Lit -> CompositeLit .)
    AND_NOT         reduce using rule 158 (Lit -> CompositeLit .)
    RBRACK          reduce using rule 158 (Lit -> CompositeLit .)
    COMMA           reduce using rule 158 (Lit -> CompositeLit .)
    SEMICOLON       reduce using rule 158 (Lit -> CompositeLit .)
    RPAREN          reduce using rule 158 (Lit -> CompositeLit .)
    INC             reduce using rule 158 (Lit -> CompositeLit .)
    DEC             reduce using rule 158 (Lit -> CompositeLit .)
    ASSIGN          reduce using rule 158 (Lit -> CompositeLit .)
    ADD_ASSIGN      reduce using rule 158 (Lit -> CompositeLit .)
    SUB_ASSIGN      reduce using rule 158 (Lit -> CompositeLit .)
    OR_ASSIGN       reduce using rule 158 (Lit -> CompositeLit .)
    XOR_ASSIGN      reduce using rule 158 (Lit -> CompositeLit .)
    MUL_ASSIGN      reduce using rule 158 (Lit -> CompositeLit .)
    QUO_ASSIGN      reduce using rule 158 (Lit -> CompositeLit .)
    REM_ASSIGN      reduce using rule 158 (Lit -> CompositeLit .)
    AND_ASSIGN      reduce using rule 158 (Lit -> CompositeLit .)
    SHL_ASSIGN      reduce using rule 158 (Lit -> CompositeLit .)
    SHR_ASSIGN      reduce using rule 158 (Lit -> CompositeLit .)
    AND_NOT_ASSIGN  reduce using rule 158 (Lit -> CompositeLit .)
    COLON           reduce using rule 158 (Lit -> CompositeLit .)
    RBRACE          reduce using rule 158 (Lit -> CompositeLit .)
    LBRACE          reduce using rule 158 (Lit -> CompositeLit .)
    ELSE            reduce using rule 158 (Lit -> CompositeLit .)


state 110

    (159) Lit -> FunctionLit .

    PERIOD          reduce using rule 159 (Lit -> FunctionLit .)
    LBRACK          reduce using rule 159 (Lit -> FunctionLit .)
    LPAREN          reduce using rule 159 (Lit -> FunctionLit .)
    LOR             reduce using rule 159 (Lit -> FunctionLit .)
    LAND            reduce using rule 159 (Lit -> FunctionLit .)
    EQL             reduce using rule 159 (Lit -> FunctionLit .)
    NEQ             reduce using rule 159 (Lit -> FunctionLit .)
    LSS             reduce using rule 159 (Lit -> FunctionLit .)
    LEQ             reduce using rule 159 (Lit -> FunctionLit .)
    GTR             reduce using rule 159 (Lit -> FunctionLit .)
    GEQ             reduce using rule 159 (Lit -> FunctionLit .)
    ADD             reduce using rule 159 (Lit -> FunctionLit .)
    SUB             reduce using rule 159 (Lit -> FunctionLit .)
    OR              reduce using rule 159 (Lit -> FunctionLit .)
    XOR             reduce using rule 159 (Lit -> FunctionLit .)
    MUL             reduce using rule 159 (Lit -> FunctionLit .)
    QUO             reduce using rule 159 (Lit -> FunctionLit .)
    REM             reduce using rule 159 (Lit -> FunctionLit .)
    SHL             reduce using rule 159 (Lit -> FunctionLit .)
    SHR             reduce using rule 159 (Lit -> FunctionLit .)
    AND             reduce using rule 159 (Lit -> FunctionLit .)
    AND_NOT         reduce using rule 159 (Lit -> FunctionLit .)
    RBRACK          reduce using rule 159 (Lit -> FunctionLit .)
    COMMA           reduce using rule 159 (Lit -> FunctionLit .)
    SEMICOLON       reduce using rule 159 (Lit -> FunctionLit .)
    RPAREN          reduce using rule 159 (Lit -> FunctionLit .)
    INC             reduce using rule 159 (Lit -> FunctionLit .)
    DEC             reduce using rule 159 (Lit -> FunctionLit .)
    ASSIGN          reduce using rule 159 (Lit -> FunctionLit .)
    ADD_ASSIGN      reduce using rule 159 (Lit -> FunctionLit .)
    SUB_ASSIGN      reduce using rule 159 (Lit -> FunctionLit .)
    OR_ASSIGN       reduce using rule 159 (Lit -> FunctionLit .)
    XOR_ASSIGN      reduce using rule 159 (Lit -> FunctionLit .)
    MUL_ASSIGN      reduce using rule 159 (Lit -> FunctionLit .)
    QUO_ASSIGN      reduce using rule 159 (Lit -> FunctionLit .)
    REM_ASSIGN      reduce using rule 159 (Lit -> FunctionLit .)
    AND_ASSIGN      reduce using rule 159 (Lit -> FunctionLit .)
    SHL_ASSIGN      reduce using rule 159 (Lit -> FunctionLit .)
    SHR_ASSIGN      reduce using rule 159 (Lit -> FunctionLit .)
    AND_NOT_ASSIGN  reduce using rule 159 (Lit -> FunctionLit .)
    COLON           reduce using rule 159 (Lit -> FunctionLit .)
    RBRACE          reduce using rule 159 (Lit -> FunctionLit .)
    LBRACE          reduce using rule 159 (Lit -> FunctionLit .)
    ELSE            reduce using rule 159 (Lit -> FunctionLit .)


state 111

    (160) BasicLit -> INT .

    PERIOD          reduce using rule 160 (BasicLit -> INT .)
    LBRACK          reduce using rule 160 (BasicLit -> INT .)
    LPAREN          reduce using rule 160 (BasicLit -> INT .)
    LOR             reduce using rule 160 (BasicLit -> INT .)
    LAND            reduce using rule 160 (BasicLit -> INT .)
    EQL             reduce using rule 160 (BasicLit -> INT .)
    NEQ             reduce using rule 160 (BasicLit -> INT .)
    LSS             reduce using rule 160 (BasicLit -> INT .)
    LEQ             reduce using rule 160 (BasicLit -> INT .)
    GTR             reduce using rule 160 (BasicLit -> INT .)
    GEQ             reduce using rule 160 (BasicLit -> INT .)
    ADD             reduce using rule 160 (BasicLit -> INT .)
    SUB             reduce using rule 160 (BasicLit -> INT .)
    OR              reduce using rule 160 (BasicLit -> INT .)
    XOR             reduce using rule 160 (BasicLit -> INT .)
    MUL             reduce using rule 160 (BasicLit -> INT .)
    QUO             reduce using rule 160 (BasicLit -> INT .)
    REM             reduce using rule 160 (BasicLit -> INT .)
    SHL             reduce using rule 160 (BasicLit -> INT .)
    SHR             reduce using rule 160 (BasicLit -> INT .)
    AND             reduce using rule 160 (BasicLit -> INT .)
    AND_NOT         reduce using rule 160 (BasicLit -> INT .)
    RBRACK          reduce using rule 160 (BasicLit -> INT .)
    COMMA           reduce using rule 160 (BasicLit -> INT .)
    SEMICOLON       reduce using rule 160 (BasicLit -> INT .)
    RPAREN          reduce using rule 160 (BasicLit -> INT .)
    INC             reduce using rule 160 (BasicLit -> INT .)
    DEC             reduce using rule 160 (BasicLit -> INT .)
    ASSIGN          reduce using rule 160 (BasicLit -> INT .)
    ADD_ASSIGN      reduce using rule 160 (BasicLit -> INT .)
    SUB_ASSIGN      reduce using rule 160 (BasicLit -> INT .)
    OR_ASSIGN       reduce using rule 160 (BasicLit -> INT .)
    XOR_ASSIGN      reduce using rule 160 (BasicLit -> INT .)
    MUL_ASSIGN      reduce using rule 160 (BasicLit -> INT .)
    QUO_ASSIGN      reduce using rule 160 (BasicLit -> INT .)
    REM_ASSIGN      reduce using rule 160 (BasicLit -> INT .)
    AND_ASSIGN      reduce using rule 160 (BasicLit -> INT .)
    SHL_ASSIGN      reduce using rule 160 (BasicLit -> INT .)
    SHR_ASSIGN      reduce using rule 160 (BasicLit -> INT .)
    AND_NOT_ASSIGN  reduce using rule 160 (BasicLit -> INT .)
    COLON           reduce using rule 160 (BasicLit -> INT .)
    RBRACE          reduce using rule 160 (BasicLit -> INT .)
    LBRACE          reduce using rule 160 (BasicLit -> INT .)
    ELSE            reduce using rule 160 (BasicLit -> INT .)


state 112

    (161) BasicLit -> FLOAT .

    PERIOD          reduce using rule 161 (BasicLit -> FLOAT .)
    LBRACK          reduce using rule 161 (BasicLit -> FLOAT .)
    LPAREN          reduce using rule 161 (BasicLit -> FLOAT .)
    LOR             reduce using rule 161 (BasicLit -> FLOAT .)
    LAND            reduce using rule 161 (BasicLit -> FLOAT .)
    EQL             reduce using rule 161 (BasicLit -> FLOAT .)
    NEQ             reduce using rule 161 (BasicLit -> FLOAT .)
    LSS             reduce using rule 161 (BasicLit -> FLOAT .)
    LEQ             reduce using rule 161 (BasicLit -> FLOAT .)
    GTR             reduce using rule 161 (BasicLit -> FLOAT .)
    GEQ             reduce using rule 161 (BasicLit -> FLOAT .)
    ADD             reduce using rule 161 (BasicLit -> FLOAT .)
    SUB             reduce using rule 161 (BasicLit -> FLOAT .)
    OR              reduce using rule 161 (BasicLit -> FLOAT .)
    XOR             reduce using rule 161 (BasicLit -> FLOAT .)
    MUL             reduce using rule 161 (BasicLit -> FLOAT .)
    QUO             reduce using rule 161 (BasicLit -> FLOAT .)
    REM             reduce using rule 161 (BasicLit -> FLOAT .)
    SHL             reduce using rule 161 (BasicLit -> FLOAT .)
    SHR             reduce using rule 161 (BasicLit -> FLOAT .)
    AND             reduce using rule 161 (BasicLit -> FLOAT .)
    AND_NOT         reduce using rule 161 (BasicLit -> FLOAT .)
    RBRACK          reduce using rule 161 (BasicLit -> FLOAT .)
    COMMA           reduce using rule 161 (BasicLit -> FLOAT .)
    SEMICOLON       reduce using rule 161 (BasicLit -> FLOAT .)
    RPAREN          reduce using rule 161 (BasicLit -> FLOAT .)
    INC             reduce using rule 161 (BasicLit -> FLOAT .)
    DEC             reduce using rule 161 (BasicLit -> FLOAT .)
    ASSIGN          reduce using rule 161 (BasicLit -> FLOAT .)
    ADD_ASSIGN      reduce using rule 161 (BasicLit -> FLOAT .)
    SUB_ASSIGN      reduce using rule 161 (BasicLit -> FLOAT .)
    OR_ASSIGN       reduce using rule 161 (BasicLit -> FLOAT .)
    XOR_ASSIGN      reduce using rule 161 (BasicLit -> FLOAT .)
    MUL_ASSIGN      reduce using rule 161 (BasicLit -> FLOAT .)
    QUO_ASSIGN      reduce using rule 161 (BasicLit -> FLOAT .)
    REM_ASSIGN      reduce using rule 161 (BasicLit -> FLOAT .)
    AND_ASSIGN      reduce using rule 161 (BasicLit -> FLOAT .)
    SHL_ASSIGN      reduce using rule 161 (BasicLit -> FLOAT .)
    SHR_ASSIGN      reduce using rule 161 (BasicLit -> FLOAT .)
    AND_NOT_ASSIGN  reduce using rule 161 (BasicLit -> FLOAT .)
    COLON           reduce using rule 161 (BasicLit -> FLOAT .)
    RBRACE          reduce using rule 161 (BasicLit -> FLOAT .)
    LBRACE          reduce using rule 161 (BasicLit -> FLOAT .)
    ELSE            reduce using rule 161 (BasicLit -> FLOAT .)


state 113

    (162) BasicLit -> IMAG .

    PERIOD          reduce using rule 162 (BasicLit -> IMAG .)
    LBRACK          reduce using rule 162 (BasicLit -> IMAG .)
    LPAREN          reduce using rule 162 (BasicLit -> IMAG .)
    LOR             reduce using rule 162 (BasicLit -> IMAG .)
    LAND            reduce using rule 162 (BasicLit -> IMAG .)
    EQL             reduce using rule 162 (BasicLit -> IMAG .)
    NEQ             reduce using rule 162 (BasicLit -> IMAG .)
    LSS             reduce using rule 162 (BasicLit -> IMAG .)
    LEQ             reduce using rule 162 (BasicLit -> IMAG .)
    GTR             reduce using rule 162 (BasicLit -> IMAG .)
    GEQ             reduce using rule 162 (BasicLit -> IMAG .)
    ADD             reduce using rule 162 (BasicLit -> IMAG .)
    SUB             reduce using rule 162 (BasicLit -> IMAG .)
    OR              reduce using rule 162 (BasicLit -> IMAG .)
    XOR             reduce using rule 162 (BasicLit -> IMAG .)
    MUL             reduce using rule 162 (BasicLit -> IMAG .)
    QUO             reduce using rule 162 (BasicLit -> IMAG .)
    REM             reduce using rule 162 (BasicLit -> IMAG .)
    SHL             reduce using rule 162 (BasicLit -> IMAG .)
    SHR             reduce using rule 162 (BasicLit -> IMAG .)
    AND             reduce using rule 162 (BasicLit -> IMAG .)
    AND_NOT         reduce using rule 162 (BasicLit -> IMAG .)
    RBRACK          reduce using rule 162 (BasicLit -> IMAG .)
    COMMA           reduce using rule 162 (BasicLit -> IMAG .)
    SEMICOLON       reduce using rule 162 (BasicLit -> IMAG .)
    RPAREN          reduce using rule 162 (BasicLit -> IMAG .)
    INC             reduce using rule 162 (BasicLit -> IMAG .)
    DEC             reduce using rule 162 (BasicLit -> IMAG .)
    ASSIGN          reduce using rule 162 (BasicLit -> IMAG .)
    ADD_ASSIGN      reduce using rule 162 (BasicLit -> IMAG .)
    SUB_ASSIGN      reduce using rule 162 (BasicLit -> IMAG .)
    OR_ASSIGN       reduce using rule 162 (BasicLit -> IMAG .)
    XOR_ASSIGN      reduce using rule 162 (BasicLit -> IMAG .)
    MUL_ASSIGN      reduce using rule 162 (BasicLit -> IMAG .)
    QUO_ASSIGN      reduce using rule 162 (BasicLit -> IMAG .)
    REM_ASSIGN      reduce using rule 162 (BasicLit -> IMAG .)
    AND_ASSIGN      reduce using rule 162 (BasicLit -> IMAG .)
    SHL_ASSIGN      reduce using rule 162 (BasicLit -> IMAG .)
    SHR_ASSIGN      reduce using rule 162 (BasicLit -> IMAG .)
    AND_NOT_ASSIGN  reduce using rule 162 (BasicLit -> IMAG .)
    COLON           reduce using rule 162 (BasicLit -> IMAG .)
    RBRACE          reduce using rule 162 (BasicLit -> IMAG .)
    LBRACE          reduce using rule 162 (BasicLit -> IMAG .)
    ELSE            reduce using rule 162 (BasicLit -> IMAG .)


state 114

    (163) BasicLit -> RUNE .

    PERIOD          reduce using rule 163 (BasicLit -> RUNE .)
    LBRACK          reduce using rule 163 (BasicLit -> RUNE .)
    LPAREN          reduce using rule 163 (BasicLit -> RUNE .)
    LOR             reduce using rule 163 (BasicLit -> RUNE .)
    LAND            reduce using rule 163 (BasicLit -> RUNE .)
    EQL             reduce using rule 163 (BasicLit -> RUNE .)
    NEQ             reduce using rule 163 (BasicLit -> RUNE .)
    LSS             reduce using rule 163 (BasicLit -> RUNE .)
    LEQ             reduce using rule 163 (BasicLit -> RUNE .)
    GTR             reduce using rule 163 (BasicLit -> RUNE .)
    GEQ             reduce using rule 163 (BasicLit -> RUNE .)
    ADD             reduce using rule 163 (BasicLit -> RUNE .)
    SUB             reduce using rule 163 (BasicLit -> RUNE .)
    OR              reduce using rule 163 (BasicLit -> RUNE .)
    XOR             reduce using rule 163 (BasicLit -> RUNE .)
    MUL             reduce using rule 163 (BasicLit -> RUNE .)
    QUO             reduce using rule 163 (BasicLit -> RUNE .)
    REM             reduce using rule 163 (BasicLit -> RUNE .)
    SHL             reduce using rule 163 (BasicLit -> RUNE .)
    SHR             reduce using rule 163 (BasicLit -> RUNE .)
    AND             reduce using rule 163 (BasicLit -> RUNE .)
    AND_NOT         reduce using rule 163 (BasicLit -> RUNE .)
    RBRACK          reduce using rule 163 (BasicLit -> RUNE .)
    COMMA           reduce using rule 163 (BasicLit -> RUNE .)
    SEMICOLON       reduce using rule 163 (BasicLit -> RUNE .)
    RPAREN          reduce using rule 163 (BasicLit -> RUNE .)
    INC             reduce using rule 163 (BasicLit -> RUNE .)
    DEC             reduce using rule 163 (BasicLit -> RUNE .)
    ASSIGN          reduce using rule 163 (BasicLit -> RUNE .)
    ADD_ASSIGN      reduce using rule 163 (BasicLit -> RUNE .)
    SUB_ASSIGN      reduce using rule 163 (BasicLit -> RUNE .)
    OR_ASSIGN       reduce using rule 163 (BasicLit -> RUNE .)
    XOR_ASSIGN      reduce using rule 163 (BasicLit -> RUNE .)
    MUL_ASSIGN      reduce using rule 163 (BasicLit -> RUNE .)
    QUO_ASSIGN      reduce using rule 163 (BasicLit -> RUNE .)
    REM_ASSIGN      reduce using rule 163 (BasicLit -> RUNE .)
    AND_ASSIGN      reduce using rule 163 (BasicLit -> RUNE .)
    SHL_ASSIGN      reduce using rule 163 (BasicLit -> RUNE .)
    SHR_ASSIGN      reduce using rule 163 (BasicLit -> RUNE .)
    AND_NOT_ASSIGN  reduce using rule 163 (BasicLit -> RUNE .)
    COLON           reduce using rule 163 (BasicLit -> RUNE .)
    RBRACE          reduce using rule 163 (BasicLit -> RUNE .)
    LBRACE          reduce using rule 163 (BasicLit -> RUNE .)
    ELSE            reduce using rule 163 (BasicLit -> RUNE .)


state 115

    (164) BasicLit -> STRING .

    PERIOD          reduce using rule 164 (BasicLit -> STRING .)
    LBRACK          reduce using rule 164 (BasicLit -> STRING .)
    LPAREN          reduce using rule 164 (BasicLit -> STRING .)
    LOR             reduce using rule 164 (BasicLit -> STRING .)
    LAND            reduce using rule 164 (BasicLit -> STRING .)
    EQL             reduce using rule 164 (BasicLit -> STRING .)
    NEQ             reduce using rule 164 (BasicLit -> STRING .)
    LSS             reduce using rule 164 (BasicLit -> STRING .)
    LEQ             reduce using rule 164 (BasicLit -> STRING .)
    GTR             reduce using rule 164 (BasicLit -> STRING .)
    GEQ             reduce using rule 164 (BasicLit -> STRING .)
    ADD             reduce using rule 164 (BasicLit -> STRING .)
    SUB             reduce using rule 164 (BasicLit -> STRING .)
    OR              reduce using rule 164 (BasicLit -> STRING .)
    XOR             reduce using rule 164 (BasicLit -> STRING .)
    MUL             reduce using rule 164 (BasicLit -> STRING .)
    QUO             reduce using rule 164 (BasicLit -> STRING .)
    REM             reduce using rule 164 (BasicLit -> STRING .)
    SHL             reduce using rule 164 (BasicLit -> STRING .)
    SHR             reduce using rule 164 (BasicLit -> STRING .)
    AND             reduce using rule 164 (BasicLit -> STRING .)
    AND_NOT         reduce using rule 164 (BasicLit -> STRING .)
    RBRACK          reduce using rule 164 (BasicLit -> STRING .)
    COMMA           reduce using rule 164 (BasicLit -> STRING .)
    SEMICOLON       reduce using rule 164 (BasicLit -> STRING .)
    RPAREN          reduce using rule 164 (BasicLit -> STRING .)
    INC             reduce using rule 164 (BasicLit -> STRING .)
    DEC             reduce using rule 164 (BasicLit -> STRING .)
    ASSIGN          reduce using rule 164 (BasicLit -> STRING .)
    ADD_ASSIGN      reduce using rule 164 (BasicLit -> STRING .)
    SUB_ASSIGN      reduce using rule 164 (BasicLit -> STRING .)
    OR_ASSIGN       reduce using rule 164 (BasicLit -> STRING .)
    XOR_ASSIGN      reduce using rule 164 (BasicLit -> STRING .)
    MUL_ASSIGN      reduce using rule 164 (BasicLit -> STRING .)
    QUO_ASSIGN      reduce using rule 164 (BasicLit -> STRING .)
    REM_ASSIGN      reduce using rule 164 (BasicLit -> STRING .)
    AND_ASSIGN      reduce using rule 164 (BasicLit -> STRING .)
    SHL_ASSIGN      reduce using rule 164 (BasicLit -> STRING .)
    SHR_ASSIGN      reduce using rule 164 (BasicLit -> STRING .)
    AND_NOT_ASSIGN  reduce using rule 164 (BasicLit -> STRING .)
    COLON           reduce using rule 164 (BasicLit -> STRING .)
    RBRACE          reduce using rule 164 (BasicLit -> STRING .)
    LBRACE          reduce using rule 164 (BasicLit -> STRING .)
    ELSE            reduce using rule 164 (BasicLit -> STRING .)


state 116

    (165) CompositeLit -> StructType . Arguments
    (99) Arguments -> . LPAREN RPAREN
    (100) Arguments -> . LPAREN ExpressionList RPAREN
    (101) Arguments -> . LPAREN ExpressionList COMMA RPAREN
    (102) Arguments -> . LPAREN TypeT RPAREN
    (103) Arguments -> . LPAREN TypeT COMMA RPAREN
    (104) Arguments -> . LPAREN TypeT COMMA ExpressionList RPAREN
    (105) Arguments -> . LPAREN TypeT COMMA ExpressionList COMMA RPAREN
    (106) Arguments -> . LPAREN IDENT RPAREN
    (107) Arguments -> . LPAREN IDENT COMMA RPAREN
    (108) Arguments -> . LPAREN IDENT COMMA ExpressionList RPAREN
    (109) Arguments -> . LPAREN IDENT COMMA ExpressionList COMMA RPAREN
    (110) Arguments -> . LPAREN IDENT PERIOD IDENT RPAREN
    (111) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA RPAREN
    (112) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN
    (113) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN

    LPAREN          shift and go to state 194

    Arguments                      shift and go to state 200

state 117

    (166) CompositeLit -> ArrayType . LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    LBRACE          shift and go to state 198

    LiteralValue                   shift and go to state 201

state 118

    (167) CompositeLit -> SliceType . LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    LBRACE          shift and go to state 198

    LiteralValue                   shift and go to state 202

state 119

    (168) CompositeLit -> MapType . LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    LBRACE          shift and go to state 198

    LiteralValue                   shift and go to state 203

state 120

    (182) FunctionLit -> FUNC . Signature FunctionBody
    (187) Signature -> . Parameters Result
    (188) Signature -> . Parameters
    (189) Parameters -> . LPAREN RPAREN
    (190) Parameters -> . LPAREN ParameterList RPAREN
    (191) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 82

    Signature                      shift and go to state 204
    Parameters                     shift and go to state 81

state 121

    (134) StructType -> STRUCT BeginStruct . LBRACE FieldDeclMult RBRACE EndStruct

    LBRACE          shift and go to state 205


state 122

    (152) MapType -> MAP LBRACK . KeyType RBRACK ElementType
    (153) KeyType -> . Type
    (154) KeyType -> . IDENT
    (155) KeyType -> . IDENT PERIOD IDENT
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 208
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    KeyType                        shift and go to state 206
    Type                           shift and go to state 207
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 123

    (156) FunctionType -> FUNC Signature .

    ASSIGN          reduce using rule 156 (FunctionType -> FUNC Signature .)
    SEMICOLON       reduce using rule 156 (FunctionType -> FUNC Signature .)
    RPAREN          reduce using rule 156 (FunctionType -> FUNC Signature .)
    LBRACE          reduce using rule 156 (FunctionType -> FUNC Signature .)
    RBRACK          reduce using rule 156 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 156 (FunctionType -> FUNC Signature .)
    STRING          reduce using rule 156 (FunctionType -> FUNC Signature .)
    COLON           reduce using rule 156 (FunctionType -> FUNC Signature .)


state 124

    (53) IdentifierList -> IDENT COMMA IdentifierList .

    IDENT           reduce using rule 53 (IdentifierList -> IDENT COMMA IdentifierList .)
    LPAREN          reduce using rule 53 (IdentifierList -> IDENT COMMA IdentifierList .)
    MUL             reduce using rule 53 (IdentifierList -> IDENT COMMA IdentifierList .)
    LBRACK          reduce using rule 53 (IdentifierList -> IDENT COMMA IdentifierList .)
    STRUCT          reduce using rule 53 (IdentifierList -> IDENT COMMA IdentifierList .)
    MAP             reduce using rule 53 (IdentifierList -> IDENT COMMA IdentifierList .)
    FUNC            reduce using rule 53 (IdentifierList -> IDENT COMMA IdentifierList .)
    ASSIGN          reduce using rule 53 (IdentifierList -> IDENT COMMA IdentifierList .)
    DEFINE          reduce using rule 53 (IdentifierList -> IDENT COMMA IdentifierList .)


state 125

    (30) VarDecl -> VAR LPAREN VarMult RPAREN .

    SEMICOLON       reduce using rule 30 (VarDecl -> VAR LPAREN VarMult RPAREN .)


state 126

    (31) VarMult -> VarSpec SEMICOLON . VarMult
    (31) VarMult -> . VarSpec SEMICOLON VarMult
    (32) VarMult -> .
    (33) VarSpec -> . IdentifierList Type ASSIGN ExpressionList
    (34) VarSpec -> . IdentifierList IDENT ASSIGN ExpressionList
    (35) VarSpec -> . IdentifierList IDENT PERIOD IDENT ASSIGN ExpressionList
    (36) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (37) VarSpec -> . IdentifierList Type
    (38) VarSpec -> . IdentifierList IDENT
    (39) VarSpec -> . IdentifierList IDENT PERIOD IDENT
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList

    RPAREN          reduce using rule 32 (VarMult -> .)
    IDENT           shift and go to state 34

    VarSpec                        shift and go to state 69
    VarMult                        shift and go to state 209
    IdentifierList                 shift and go to state 37

state 127

    (33) VarSpec -> IdentifierList Type ASSIGN . ExpressionList
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 210
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 128

    (36) VarSpec -> IdentifierList ASSIGN ExpressionList .
    (55) ExpressionList -> ExpressionList . COMMA Expr

    SEMICOLON       reduce using rule 36 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    COMMA           shift and go to state 211


state 129

    (54) ExpressionList -> Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    COMMA           reduce using rule 54 (ExpressionList -> Expr .)
    SEMICOLON       reduce using rule 54 (ExpressionList -> Expr .)
    RPAREN          reduce using rule 54 (ExpressionList -> Expr .)
    LBRACE          reduce using rule 54 (ExpressionList -> Expr .)
    COLON           reduce using rule 54 (ExpressionList -> Expr .)
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182


state 130

    (34) VarSpec -> IdentifierList IDENT ASSIGN . ExpressionList
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 212
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 131

    (35) VarSpec -> IdentifierList IDENT PERIOD . IDENT ASSIGN ExpressionList
    (39) VarSpec -> IdentifierList IDENT PERIOD . IDENT

    IDENT           shift and go to state 213


state 132

    (41) TypeDecl -> TYPE LPAREN TypeSpecMult RPAREN .

    SEMICOLON       reduce using rule 41 (TypeDecl -> TYPE LPAREN TypeSpecMult RPAREN .)


state 133

    (42) TypeSpecMult -> TypeSpec SEMICOLON . TypeSpecMult
    (42) TypeSpecMult -> . TypeSpec SEMICOLON TypeSpecMult
    (43) TypeSpecMult -> .
    (44) TypeSpec -> . AliasDecl
    (45) TypeSpec -> . Typedef
    (46) AliasDecl -> . IDENT ASSIGN Type
    (47) AliasDecl -> . IDENT ASSIGN IDENT
    (48) AliasDecl -> . IDENT ASSIGN IDENT PERIOD IDENT
    (49) Typedef -> . IDENT Type
    (50) Typedef -> . IDENT IDENT
    (51) Typedef -> . IDENT IDENT PERIOD IDENT

    RPAREN          reduce using rule 43 (TypeSpecMult -> .)
    IDENT           shift and go to state 42

    TypeSpec                       shift and go to state 74
    TypeSpecMult                   shift and go to state 214
    AliasDecl                      shift and go to state 40
    Typedef                        shift and go to state 41

state 134

    (51) Typedef -> IDENT IDENT PERIOD . IDENT

    IDENT           shift and go to state 215


state 135

    (47) AliasDecl -> IDENT ASSIGN IDENT .
    (48) AliasDecl -> IDENT ASSIGN IDENT . PERIOD IDENT

    SEMICOLON       reduce using rule 47 (AliasDecl -> IDENT ASSIGN IDENT .)
    PERIOD          shift and go to state 216


state 136

    (46) AliasDecl -> IDENT ASSIGN Type .

    SEMICOLON       reduce using rule 46 (AliasDecl -> IDENT ASSIGN Type .)


state 137

    (9) ImportSpecMult -> ImportSpec SEMICOLON ImportSpecMult .

    RPAREN          reduce using rule 9 (ImportSpecMult -> ImportSpec SEMICOLON ImportSpecMult .)


state 138

    (183) FuncDecl -> FUNC FunctionName BeginScope Signature FunctionBody . EndScope
    (3) EndScope -> .

    SEMICOLON       reduce using rule 3 (EndScope -> .)

    EndScope                       shift and go to state 217

state 139

    (184) FuncDecl -> FUNC FunctionName BeginScope Signature EndScope .

    SEMICOLON       reduce using rule 184 (FuncDecl -> FUNC FunctionName BeginScope Signature EndScope .)


state 140

    (186) FunctionBody -> Block .

    SEMICOLON       reduce using rule 186 (FunctionBody -> Block .)
    PERIOD          reduce using rule 186 (FunctionBody -> Block .)
    LBRACK          reduce using rule 186 (FunctionBody -> Block .)
    LPAREN          reduce using rule 186 (FunctionBody -> Block .)
    LOR             reduce using rule 186 (FunctionBody -> Block .)
    LAND            reduce using rule 186 (FunctionBody -> Block .)
    EQL             reduce using rule 186 (FunctionBody -> Block .)
    NEQ             reduce using rule 186 (FunctionBody -> Block .)
    LSS             reduce using rule 186 (FunctionBody -> Block .)
    LEQ             reduce using rule 186 (FunctionBody -> Block .)
    GTR             reduce using rule 186 (FunctionBody -> Block .)
    GEQ             reduce using rule 186 (FunctionBody -> Block .)
    ADD             reduce using rule 186 (FunctionBody -> Block .)
    SUB             reduce using rule 186 (FunctionBody -> Block .)
    OR              reduce using rule 186 (FunctionBody -> Block .)
    XOR             reduce using rule 186 (FunctionBody -> Block .)
    MUL             reduce using rule 186 (FunctionBody -> Block .)
    QUO             reduce using rule 186 (FunctionBody -> Block .)
    REM             reduce using rule 186 (FunctionBody -> Block .)
    SHL             reduce using rule 186 (FunctionBody -> Block .)
    SHR             reduce using rule 186 (FunctionBody -> Block .)
    AND             reduce using rule 186 (FunctionBody -> Block .)
    AND_NOT         reduce using rule 186 (FunctionBody -> Block .)
    RBRACK          reduce using rule 186 (FunctionBody -> Block .)
    COMMA           reduce using rule 186 (FunctionBody -> Block .)
    RPAREN          reduce using rule 186 (FunctionBody -> Block .)
    INC             reduce using rule 186 (FunctionBody -> Block .)
    DEC             reduce using rule 186 (FunctionBody -> Block .)
    ASSIGN          reduce using rule 186 (FunctionBody -> Block .)
    ADD_ASSIGN      reduce using rule 186 (FunctionBody -> Block .)
    SUB_ASSIGN      reduce using rule 186 (FunctionBody -> Block .)
    OR_ASSIGN       reduce using rule 186 (FunctionBody -> Block .)
    XOR_ASSIGN      reduce using rule 186 (FunctionBody -> Block .)
    MUL_ASSIGN      reduce using rule 186 (FunctionBody -> Block .)
    QUO_ASSIGN      reduce using rule 186 (FunctionBody -> Block .)
    REM_ASSIGN      reduce using rule 186 (FunctionBody -> Block .)
    AND_ASSIGN      reduce using rule 186 (FunctionBody -> Block .)
    SHL_ASSIGN      reduce using rule 186 (FunctionBody -> Block .)
    SHR_ASSIGN      reduce using rule 186 (FunctionBody -> Block .)
    AND_NOT_ASSIGN  reduce using rule 186 (FunctionBody -> Block .)
    COLON           reduce using rule 186 (FunctionBody -> Block .)
    RBRACE          reduce using rule 186 (FunctionBody -> Block .)
    LBRACE          reduce using rule 186 (FunctionBody -> Block .)
    ELSE            reduce using rule 186 (FunctionBody -> Block .)


state 141

    (253) Block -> LBRACE . StatementList RBRACE
    (204) StatementList -> . Statement SEMICOLON StatementList
    (205) StatementList -> .
    (206) Statement -> . Decl
    (207) Statement -> . LabeledStmt
    (208) Statement -> . SimpleStmt
    (209) Statement -> . GotoStmt
    (210) Statement -> . ReturnStmt
    (211) Statement -> . BreakStmt
    (212) Statement -> . ContinueStmt
    (213) Statement -> . FallthroughStmt
    (214) Statement -> . BeginScope Block EndScope
    (215) Statement -> . IfStmt
    (216) Statement -> . SwitchStmt
    (217) Statement -> . ForStmt
    (19) Decl -> . ConstDecl
    (20) Decl -> . VarDecl
    (21) Decl -> . TypeDecl
    (218) LabeledStmt -> . Label COLON Statement
    (220) SimpleStmt -> . EmptyStmt
    (221) SimpleStmt -> . ExpressionStmt
    (222) SimpleStmt -> . IncDecStmt
    (223) SimpleStmt -> . Assignment
    (224) SimpleStmt -> . ShortVarDecl
    (245) GotoStmt -> . GOTO Label
    (246) ReturnStmt -> . RETURN ExpressionList
    (247) ReturnStmt -> . RETURN
    (248) BreakStmt -> . BREAK Label
    (249) BreakStmt -> . BREAK
    (250) ContinueStmt -> . CONTINUE Label
    (251) ContinueStmt -> . CONTINUE
    (252) FallthroughStmt -> . FALLTHROUGH
    (301) BeginScope -> .
    (254) IfStmt -> . IF Expr BeginScope Block EndScope else_stmt
    (255) IfStmt -> . IF BeginScope SimpleStmt EndScope SEMICOLON Expr else_stmt
    (259) SwitchStmt -> . ExprSwitchStmt
    (260) SwitchStmt -> . TypeSwitchStmt
    (286) ForStmt -> . FOR BeginFor Condition Block EndFor
    (287) ForStmt -> . FOR BeginFor ForClause Block EndFor
    (288) ForStmt -> . FOR BeginFor RangeClause Block EndFor
    (289) ForStmt -> . FOR BeginFor Block EndFor
    (22) ConstDecl -> . CONST ConstSpec
    (23) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (29) VarDecl -> . VAR VarSpec
    (30) VarDecl -> . VAR LPAREN VarMult RPAREN
    (40) TypeDecl -> . TYPE TypeSpec
    (41) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (219) Label -> . IDENT
    (225) EmptyStmt -> .
    (226) ExpressionStmt -> . Expr
    (227) IncDecStmt -> . Expr INC
    (228) IncDecStmt -> . Expr DEC
    (229) Assignment -> . ExpressionList assign_op ExpressionList
    (244) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (261) ExprSwitchStmt -> . SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (262) ExprSwitchStmt -> . SWITCH Expr LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (263) ExprSwitchStmt -> . SWITCH BeginScope SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (264) ExprSwitchStmt -> . SWITCH LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (272) TypeSwitchStmt -> . SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (273) TypeSwitchStmt -> . SWITCH TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RBRACE          reduce using rule 205 (StatementList -> .)
    GOTO            shift and go to state 238
    RETURN          shift and go to state 239
    BREAK           shift and go to state 241
    CONTINUE        shift and go to state 242
    FALLTHROUGH     shift and go to state 243
    LBRACE          reduce using rule 301 (BeginScope -> .)
    IF              shift and go to state 244
    FOR             shift and go to state 248
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 249
    SEMICOLON       reduce using rule 225 (EmptyStmt -> .)
    SWITCH          shift and go to state 251
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    StatementList                  shift and go to state 218
    Statement                      shift and go to state 219
    Decl                           shift and go to state 220
    LabeledStmt                    shift and go to state 221
    SimpleStmt                     shift and go to state 222
    GotoStmt                       shift and go to state 223
    ReturnStmt                     shift and go to state 224
    BreakStmt                      shift and go to state 225
    ContinueStmt                   shift and go to state 226
    FallthroughStmt                shift and go to state 227
    BeginScope                     shift and go to state 228
    IfStmt                         shift and go to state 229
    SwitchStmt                     shift and go to state 230
    ForStmt                        shift and go to state 231
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    Label                          shift and go to state 232
    EmptyStmt                      shift and go to state 233
    ExpressionStmt                 shift and go to state 234
    IncDecStmt                     shift and go to state 235
    Assignment                     shift and go to state 236
    ShortVarDecl                   shift and go to state 237
    ExpressionList                 shift and go to state 240
    Expr                           shift and go to state 245
    ExprSwitchStmt                 shift and go to state 246
    TypeSwitchStmt                 shift and go to state 247
    IdentifierList                 shift and go to state 250
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 142

    (200) Result -> Parameters .

    ASSIGN          reduce using rule 200 (Result -> Parameters .)
    SEMICOLON       reduce using rule 200 (Result -> Parameters .)
    RPAREN          reduce using rule 200 (Result -> Parameters .)
    LBRACE          reduce using rule 200 (Result -> Parameters .)
    RBRACK          reduce using rule 200 (Result -> Parameters .)
    COMMA           reduce using rule 200 (Result -> Parameters .)
    STRING          reduce using rule 200 (Result -> Parameters .)
    COLON           reduce using rule 200 (Result -> Parameters .)


state 143

    (187) Signature -> Parameters Result .

    LBRACE          reduce using rule 187 (Signature -> Parameters Result .)
    SEMICOLON       reduce using rule 187 (Signature -> Parameters Result .)
    ASSIGN          reduce using rule 187 (Signature -> Parameters Result .)
    RPAREN          reduce using rule 187 (Signature -> Parameters Result .)
    RBRACK          reduce using rule 187 (Signature -> Parameters Result .)
    COMMA           reduce using rule 187 (Signature -> Parameters Result .)
    STRING          reduce using rule 187 (Signature -> Parameters Result .)
    COLON           reduce using rule 187 (Signature -> Parameters Result .)


state 144

    (201) Result -> Type .

    ASSIGN          reduce using rule 201 (Result -> Type .)
    SEMICOLON       reduce using rule 201 (Result -> Type .)
    RPAREN          reduce using rule 201 (Result -> Type .)
    LBRACE          reduce using rule 201 (Result -> Type .)
    RBRACK          reduce using rule 201 (Result -> Type .)
    COMMA           reduce using rule 201 (Result -> Type .)
    STRING          reduce using rule 201 (Result -> Type .)
    COLON           reduce using rule 201 (Result -> Type .)


state 145

    (202) Result -> IDENT .
    (203) Result -> IDENT . PERIOD IDENT

    ASSIGN          reduce using rule 202 (Result -> IDENT .)
    SEMICOLON       reduce using rule 202 (Result -> IDENT .)
    RPAREN          reduce using rule 202 (Result -> IDENT .)
    LBRACE          reduce using rule 202 (Result -> IDENT .)
    RBRACK          reduce using rule 202 (Result -> IDENT .)
    COMMA           reduce using rule 202 (Result -> IDENT .)
    STRING          reduce using rule 202 (Result -> IDENT .)
    COLON           reduce using rule 202 (Result -> IDENT .)
    PERIOD          shift and go to state 252


state 146

    (189) Parameters -> LPAREN . RPAREN
    (190) Parameters -> LPAREN . ParameterList RPAREN
    (191) Parameters -> LPAREN . ParameterList COMMA RPAREN
    (116) Type -> LPAREN . PointerType RPAREN
    (122) TypeT -> LPAREN . TypeT RPAREN
    (123) TypeT -> LPAREN . IDENT RPAREN
    (124) TypeT -> LPAREN . IDENT PERIOD IDENT RPAREN
    (192) ParameterList -> . ParameterDecl
    (193) ParameterList -> . ParameterList COMMA IDENT
    (194) ParameterList -> . ParameterList COMMA IDENT PERIOD IDENT
    (195) ParameterList -> . ParameterList COMMA Type
    (196) ParameterList -> . ParameterList COMMA ParameterDecl
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (197) ParameterDecl -> . IdentifierList Type
    (198) ParameterDecl -> . IdentifierList IDENT
    (199) ParameterDecl -> . IdentifierList IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList

    RPAREN          shift and go to state 147
    IDENT           shift and go to state 253
    MUL             shift and go to state 62
    LPAREN          shift and go to state 88
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    ParameterList                  shift and go to state 148
    PointerType                    shift and go to state 89
    TypeT                          shift and go to state 90
    ParameterDecl                  shift and go to state 149
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61
    IdentifierList                 shift and go to state 150

state 147

    (189) Parameters -> LPAREN RPAREN .

    IDENT           reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    LPAREN          reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    MUL             reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    LBRACK          reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    STRUCT          reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    MAP             reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    FUNC            reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    LBRACE          reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    SEMICOLON       reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    ASSIGN          reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    RPAREN          reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    RBRACK          reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    COMMA           reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    STRING          reduce using rule 189 (Parameters -> LPAREN RPAREN .)
    COLON           reduce using rule 189 (Parameters -> LPAREN RPAREN .)


state 148

    (190) Parameters -> LPAREN ParameterList . RPAREN
    (191) Parameters -> LPAREN ParameterList . COMMA RPAREN
    (193) ParameterList -> ParameterList . COMMA IDENT
    (194) ParameterList -> ParameterList . COMMA IDENT PERIOD IDENT
    (195) ParameterList -> ParameterList . COMMA Type
    (196) ParameterList -> ParameterList . COMMA ParameterDecl

    RPAREN          shift and go to state 254
    COMMA           shift and go to state 255


state 149

    (192) ParameterList -> ParameterDecl .

    RPAREN          reduce using rule 192 (ParameterList -> ParameterDecl .)
    COMMA           reduce using rule 192 (ParameterList -> ParameterDecl .)


state 150

    (197) ParameterDecl -> IdentifierList . Type
    (198) ParameterDecl -> IdentifierList . IDENT
    (199) ParameterDecl -> IdentifierList . IDENT PERIOD IDENT
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 257
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 256
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 151

    (24) ConstSpecMult -> ConstSpec SEMICOLON ConstSpecMult .

    RPAREN          reduce using rule 24 (ConstSpecMult -> ConstSpec SEMICOLON ConstSpecMult .)


state 152

    (26) ConstSpec -> IdentifierList Type ASSIGN ExpressionList .
    (55) ExpressionList -> ExpressionList . COMMA Expr

    SEMICOLON       reduce using rule 26 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    COMMA           shift and go to state 211


state 153

    (27) ConstSpec -> IdentifierList IDENT ASSIGN ExpressionList .
    (55) ExpressionList -> ExpressionList . COMMA Expr

    SEMICOLON       reduce using rule 27 (ConstSpec -> IdentifierList IDENT ASSIGN ExpressionList .)
    COMMA           shift and go to state 211


state 154

    (28) ConstSpec -> IdentifierList IDENT PERIOD IDENT . ASSIGN ExpressionList

    ASSIGN          shift and go to state 258


state 155

    (116) Type -> LPAREN PointerType RPAREN .

    ASSIGN          reduce using rule 116 (Type -> LPAREN PointerType RPAREN .)
    SEMICOLON       reduce using rule 116 (Type -> LPAREN PointerType RPAREN .)
    RPAREN          reduce using rule 116 (Type -> LPAREN PointerType RPAREN .)
    LBRACE          reduce using rule 116 (Type -> LPAREN PointerType RPAREN .)
    RBRACK          reduce using rule 116 (Type -> LPAREN PointerType RPAREN .)
    COMMA           reduce using rule 116 (Type -> LPAREN PointerType RPAREN .)
    STRING          reduce using rule 116 (Type -> LPAREN PointerType RPAREN .)
    COLON           reduce using rule 116 (Type -> LPAREN PointerType RPAREN .)


state 156

    (122) TypeT -> LPAREN TypeT RPAREN .

    ASSIGN          reduce using rule 122 (TypeT -> LPAREN TypeT RPAREN .)
    SEMICOLON       reduce using rule 122 (TypeT -> LPAREN TypeT RPAREN .)
    RPAREN          reduce using rule 122 (TypeT -> LPAREN TypeT RPAREN .)
    LBRACE          reduce using rule 122 (TypeT -> LPAREN TypeT RPAREN .)
    RBRACK          reduce using rule 122 (TypeT -> LPAREN TypeT RPAREN .)
    COMMA           reduce using rule 122 (TypeT -> LPAREN TypeT RPAREN .)
    STRING          reduce using rule 122 (TypeT -> LPAREN TypeT RPAREN .)
    COLON           reduce using rule 122 (TypeT -> LPAREN TypeT RPAREN .)


state 157

    (123) TypeT -> LPAREN IDENT RPAREN .

    ASSIGN          reduce using rule 123 (TypeT -> LPAREN IDENT RPAREN .)
    SEMICOLON       reduce using rule 123 (TypeT -> LPAREN IDENT RPAREN .)
    RPAREN          reduce using rule 123 (TypeT -> LPAREN IDENT RPAREN .)
    LBRACE          reduce using rule 123 (TypeT -> LPAREN IDENT RPAREN .)
    RBRACK          reduce using rule 123 (TypeT -> LPAREN IDENT RPAREN .)
    COMMA           reduce using rule 123 (TypeT -> LPAREN IDENT RPAREN .)
    STRING          reduce using rule 123 (TypeT -> LPAREN IDENT RPAREN .)
    COLON           reduce using rule 123 (TypeT -> LPAREN IDENT RPAREN .)


state 158

    (124) TypeT -> LPAREN IDENT PERIOD . IDENT RPAREN

    IDENT           shift and go to state 259


state 159

    (127) PointerType -> MUL IDENT PERIOD . IDENT

    IDENT           shift and go to state 260


state 160

    (129) ArrayType -> LBRACK ArrayLength RBRACK . ElementType
    (131) ElementType -> . Type
    (132) ElementType -> . IDENT
    (133) ElementType -> . IDENT PERIOD IDENT
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 163
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    ElementType                    shift and go to state 261
    Type                           shift and go to state 162
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 161

    (128) SliceType -> LBRACK RBRACK ElementType .

    ASSIGN          reduce using rule 128 (SliceType -> LBRACK RBRACK ElementType .)
    SEMICOLON       reduce using rule 128 (SliceType -> LBRACK RBRACK ElementType .)
    RPAREN          reduce using rule 128 (SliceType -> LBRACK RBRACK ElementType .)
    LBRACE          reduce using rule 128 (SliceType -> LBRACK RBRACK ElementType .)
    RBRACK          reduce using rule 128 (SliceType -> LBRACK RBRACK ElementType .)
    COMMA           reduce using rule 128 (SliceType -> LBRACK RBRACK ElementType .)
    STRING          reduce using rule 128 (SliceType -> LBRACK RBRACK ElementType .)
    COLON           reduce using rule 128 (SliceType -> LBRACK RBRACK ElementType .)


state 162

    (131) ElementType -> Type .

    ASSIGN          reduce using rule 131 (ElementType -> Type .)
    SEMICOLON       reduce using rule 131 (ElementType -> Type .)
    RPAREN          reduce using rule 131 (ElementType -> Type .)
    LBRACE          reduce using rule 131 (ElementType -> Type .)
    RBRACK          reduce using rule 131 (ElementType -> Type .)
    COMMA           reduce using rule 131 (ElementType -> Type .)
    STRING          reduce using rule 131 (ElementType -> Type .)
    COLON           reduce using rule 131 (ElementType -> Type .)


state 163

    (132) ElementType -> IDENT .
    (133) ElementType -> IDENT . PERIOD IDENT

    ASSIGN          reduce using rule 132 (ElementType -> IDENT .)
    SEMICOLON       reduce using rule 132 (ElementType -> IDENT .)
    RPAREN          reduce using rule 132 (ElementType -> IDENT .)
    LBRACE          reduce using rule 132 (ElementType -> IDENT .)
    RBRACK          reduce using rule 132 (ElementType -> IDENT .)
    COMMA           reduce using rule 132 (ElementType -> IDENT .)
    STRING          reduce using rule 132 (ElementType -> IDENT .)
    COLON           reduce using rule 132 (ElementType -> IDENT .)
    PERIOD          shift and go to state 262


state 164

    (57) Expr -> Expr LOR . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 263
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 165

    (58) Expr -> Expr LAND . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 264
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 166

    (59) Expr -> Expr EQL . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 265
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 167

    (60) Expr -> Expr NEQ . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 266
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 168

    (61) Expr -> Expr LSS . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 267
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 169

    (62) Expr -> Expr LEQ . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 268
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 170

    (63) Expr -> Expr GTR . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 269
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 171

    (64) Expr -> Expr GEQ . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 270
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 172

    (65) Expr -> Expr ADD . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 271
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 173

    (66) Expr -> Expr SUB . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 272
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 174

    (67) Expr -> Expr OR . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 273
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 175

    (68) Expr -> Expr XOR . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 274
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 176

    (69) Expr -> Expr MUL . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 275
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 177

    (70) Expr -> Expr QUO . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 276
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 178

    (71) Expr -> Expr REM . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 277
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 179

    (72) Expr -> Expr SHL . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 278
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 180

    (73) Expr -> Expr SHR . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 279
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 181

    (74) Expr -> Expr AND . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 280
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 182

    (75) Expr -> Expr AND_NOT . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 281
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 183

    (77) UnaryExpr -> ADD UnaryExpr .

    LOR             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    LAND            reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    EQL             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    NEQ             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    LSS             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    LEQ             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    GTR             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    GEQ             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    ADD             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    SUB             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    OR              reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    XOR             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    MUL             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    QUO             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    REM             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    SHL             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    SHR             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    AND             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    AND_NOT         reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    RBRACK          reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    COMMA           reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    SEMICOLON       reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    RPAREN          reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    INC             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    DEC             reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    ASSIGN          reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    ADD_ASSIGN      reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    SUB_ASSIGN      reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    OR_ASSIGN       reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    XOR_ASSIGN      reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    MUL_ASSIGN      reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    QUO_ASSIGN      reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    REM_ASSIGN      reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    AND_ASSIGN      reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    SHL_ASSIGN      reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    SHR_ASSIGN      reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    COLON           reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    RBRACE          reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    LBRACE          reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)
    ELSE            reduce using rule 77 (UnaryExpr -> ADD UnaryExpr .)


state 184

    (78) UnaryExpr -> SUB UnaryExpr .

    LOR             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    LAND            reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    EQL             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    NEQ             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    LSS             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    LEQ             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    GTR             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    GEQ             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    ADD             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    SUB             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    OR              reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    XOR             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    MUL             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    QUO             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    REM             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    SHL             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    SHR             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    AND             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    AND_NOT         reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    RBRACK          reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    COMMA           reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    SEMICOLON       reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    RPAREN          reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    INC             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    DEC             reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    ASSIGN          reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    ADD_ASSIGN      reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    SUB_ASSIGN      reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    OR_ASSIGN       reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    XOR_ASSIGN      reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    MUL_ASSIGN      reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    QUO_ASSIGN      reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    REM_ASSIGN      reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    AND_ASSIGN      reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    SHL_ASSIGN      reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    SHR_ASSIGN      reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    COLON           reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    RBRACE          reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    LBRACE          reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)
    ELSE            reduce using rule 78 (UnaryExpr -> SUB UnaryExpr .)


state 185

    (80) UnaryExpr -> XOR UnaryExpr .

    LOR             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    LAND            reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    EQL             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    NEQ             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    LSS             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    LEQ             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    GTR             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    GEQ             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    ADD             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    SUB             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    OR              reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    XOR             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    MUL             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    QUO             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    REM             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    SHL             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    SHR             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    AND             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    AND_NOT         reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    RBRACK          reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    COMMA           reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    SEMICOLON       reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    RPAREN          reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    INC             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    DEC             reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    ASSIGN          reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    ADD_ASSIGN      reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    SUB_ASSIGN      reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    OR_ASSIGN       reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    XOR_ASSIGN      reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    MUL_ASSIGN      reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    QUO_ASSIGN      reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    REM_ASSIGN      reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    AND_ASSIGN      reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    SHL_ASSIGN      reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    SHR_ASSIGN      reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    COLON           reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    RBRACE          reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    LBRACE          reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)
    ELSE            reduce using rule 80 (UnaryExpr -> XOR UnaryExpr .)


state 186

    (81) UnaryExpr -> MUL UnaryExpr .

    LOR             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    LAND            reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    EQL             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    NEQ             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    LSS             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    LEQ             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    GTR             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    GEQ             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    ADD             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    SUB             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    OR              reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    XOR             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    MUL             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    QUO             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    REM             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    SHL             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    SHR             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    AND             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    AND_NOT         reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    RBRACK          reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    COMMA           reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    SEMICOLON       reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    RPAREN          reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    INC             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    DEC             reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    ASSIGN          reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    ADD_ASSIGN      reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    SUB_ASSIGN      reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    OR_ASSIGN       reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    XOR_ASSIGN      reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    MUL_ASSIGN      reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    QUO_ASSIGN      reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    REM_ASSIGN      reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    AND_ASSIGN      reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    SHL_ASSIGN      reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    SHR_ASSIGN      reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    COLON           reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    RBRACE          reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    LBRACE          reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)
    ELSE            reduce using rule 81 (UnaryExpr -> MUL UnaryExpr .)


state 187

    (82) UnaryExpr -> AND UnaryExpr .

    LOR             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    LAND            reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    EQL             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    NEQ             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    LSS             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    LEQ             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    GTR             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    GEQ             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    ADD             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    SUB             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    OR              reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    XOR             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    MUL             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    QUO             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    REM             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    SHL             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    SHR             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    AND             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    AND_NOT         reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    RBRACK          reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    COMMA           reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    SEMICOLON       reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    RPAREN          reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    INC             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    DEC             reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    ASSIGN          reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    ADD_ASSIGN      reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    SUB_ASSIGN      reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    OR_ASSIGN       reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    XOR_ASSIGN      reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    MUL_ASSIGN      reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    QUO_ASSIGN      reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    REM_ASSIGN      reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    AND_ASSIGN      reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    SHL_ASSIGN      reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    SHR_ASSIGN      reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    COLON           reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    RBRACE          reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    LBRACE          reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)
    ELSE            reduce using rule 82 (UnaryExpr -> AND UnaryExpr .)


state 188

    (87) PrimaryExpr -> PrimaryExpr Selector .

    PERIOD          reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACK          reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    LOR             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    LAND            reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    EQL             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    NEQ             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    LSS             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    LEQ             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    GTR             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    GEQ             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    SUB             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    MUL             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    QUO             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    REM             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    SHL             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    SHR             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_NOT         reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACK          reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOLON       reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    INC             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    DEC             reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    ASSIGN          reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    ADD_ASSIGN      reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    SUB_ASSIGN      reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    OR_ASSIGN       reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR_ASSIGN      reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    MUL_ASSIGN      reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    QUO_ASSIGN      reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    REM_ASSIGN      reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_ASSIGN      reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    SHL_ASSIGN      reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    SHR_ASSIGN      reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_NOT_ASSIGN  reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACE          reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)
    ELSE            reduce using rule 87 (PrimaryExpr -> PrimaryExpr Selector .)


state 189

    (88) PrimaryExpr -> PrimaryExpr Index .

    PERIOD          reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACK          reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    LOR             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    LAND            reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    EQL             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    NEQ             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    LSS             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    LEQ             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    GTR             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    GEQ             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    ADD             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    SUB             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    MUL             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    QUO             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    REM             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    SHL             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    SHR             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT         reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACK          reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    SEMICOLON       reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    INC             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    DEC             reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    ASSIGN          reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    ADD_ASSIGN      reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    SUB_ASSIGN      reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    OR_ASSIGN       reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    XOR_ASSIGN      reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    MUL_ASSIGN      reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    QUO_ASSIGN      reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    REM_ASSIGN      reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    AND_ASSIGN      reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    SHL_ASSIGN      reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    SHR_ASSIGN      reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    AND_NOT_ASSIGN  reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACE          reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)
    ELSE            reduce using rule 88 (PrimaryExpr -> PrimaryExpr Index .)


state 190

    (89) PrimaryExpr -> PrimaryExpr Slice .

    PERIOD          reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACK          reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    LOR             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    LAND            reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    EQL             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    NEQ             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    LSS             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    LEQ             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    GTR             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    GEQ             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    QUO             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    REM             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT         reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACK          reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    INC             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    DEC             reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    ASSIGN          reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    ADD_ASSIGN      reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    SUB_ASSIGN      reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    OR_ASSIGN       reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR_ASSIGN      reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    MUL_ASSIGN      reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    QUO_ASSIGN      reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    REM_ASSIGN      reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_ASSIGN      reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    SHL_ASSIGN      reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    SHR_ASSIGN      reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_NOT_ASSIGN  reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    RBRACE          reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    LBRACE          reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)
    ELSE            reduce using rule 89 (PrimaryExpr -> PrimaryExpr Slice .)


state 191

    (90) PrimaryExpr -> PrimaryExpr Arguments .

    PERIOD          reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACK          reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOR             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    LAND            reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQL             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    NEQ             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSS             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    LEQ             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    GTR             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    GEQ             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUO             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    REM             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT         reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACK          reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMICOLON       reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    INC             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    DEC             reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    ASSIGN          reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    ADD_ASSIGN      reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    SUB_ASSIGN      reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR_ASSIGN       reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR_ASSIGN      reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    MUL_ASSIGN      reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    QUO_ASSIGN      reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    REM_ASSIGN      reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_ASSIGN      reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHL_ASSIGN      reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    SHR_ASSIGN      reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND_NOT_ASSIGN  reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACE          reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)
    ELSE            reduce using rule 90 (PrimaryExpr -> PrimaryExpr Arguments .)


state 192

    (91) Selector -> PERIOD . IDENT

    IDENT           shift and go to state 282


state 193

    (92) Index -> LBRACK . Expr RBRACK
    (93) Slice -> LBRACK . Expr COLON Expr RBRACK
    (94) Slice -> LBRACK . COLON Expr RBRACK
    (95) Slice -> LBRACK . Expr COLON RBRACK
    (96) Slice -> LBRACK . COLON RBRACK
    (97) Slice -> LBRACK . COLON Expr COLON Expr RBRACK
    (98) Slice -> LBRACK . Expr COLON Expr COLON Expr RBRACK
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    COLON           shift and go to state 284
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 283
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 194

    (99) Arguments -> LPAREN . RPAREN
    (100) Arguments -> LPAREN . ExpressionList RPAREN
    (101) Arguments -> LPAREN . ExpressionList COMMA RPAREN
    (102) Arguments -> LPAREN . TypeT RPAREN
    (103) Arguments -> LPAREN . TypeT COMMA RPAREN
    (104) Arguments -> LPAREN . TypeT COMMA ExpressionList RPAREN
    (105) Arguments -> LPAREN . TypeT COMMA ExpressionList COMMA RPAREN
    (106) Arguments -> LPAREN . IDENT RPAREN
    (107) Arguments -> LPAREN . IDENT COMMA RPAREN
    (108) Arguments -> LPAREN . IDENT COMMA ExpressionList RPAREN
    (109) Arguments -> LPAREN . IDENT COMMA ExpressionList COMMA RPAREN
    (110) Arguments -> LPAREN . IDENT PERIOD IDENT RPAREN
    (111) Arguments -> LPAREN . IDENT PERIOD IDENT COMMA RPAREN
    (112) Arguments -> LPAREN . IDENT PERIOD IDENT COMMA ExpressionList RPAREN
    (113) Arguments -> LPAREN . IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody

    RPAREN          shift and go to state 286
    IDENT           shift and go to state 289
    LPAREN          shift and go to state 285
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 294
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115

    ExpressionList                 shift and go to state 287
    TypeT                          shift and go to state 288
    Expr                           shift and go to state 129
    ArrayType                      shift and go to state 290
    StructType                     shift and go to state 291
    SliceType                      shift and go to state 292
    MapType                        shift and go to state 293
    FunctionType                   shift and go to state 61
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110

state 195

    (79) UnaryExpr -> NOT UnaryExpr .

    LOR             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    LAND            reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    EQL             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    NEQ             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    LSS             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    LEQ             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    GTR             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    GEQ             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    ADD             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    SUB             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    OR              reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    XOR             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    MUL             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    QUO             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    REM             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    SHL             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    SHR             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    AND             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    AND_NOT         reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    RBRACK          reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    COMMA           reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    SEMICOLON       reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    RPAREN          reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    INC             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    DEC             reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    ASSIGN          reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    ADD_ASSIGN      reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    SUB_ASSIGN      reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    OR_ASSIGN       reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    XOR_ASSIGN      reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    MUL_ASSIGN      reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    QUO_ASSIGN      reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    REM_ASSIGN      reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    AND_ASSIGN      reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    SHL_ASSIGN      reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    SHR_ASSIGN      reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    COLON           reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    RBRACE          reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    LBRACE          reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)
    ELSE            reduce using rule 79 (UnaryExpr -> NOT UnaryExpr .)


state 196

    (85) PrimaryExpr -> IDENT PERIOD . IDENT
    (170) CompositeLit -> IDENT PERIOD . IDENT LiteralValue

    IDENT           shift and go to state 295


state 197

    (169) CompositeLit -> IDENT LiteralValue .

    PERIOD          reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    LBRACK          reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    LPAREN          reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    LOR             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    LAND            reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    EQL             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    NEQ             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    LSS             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    LEQ             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    GTR             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    GEQ             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    ADD             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    SUB             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    OR              reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    XOR             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    MUL             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    QUO             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    REM             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    SHL             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    SHR             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    AND             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    AND_NOT         reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    RBRACK          reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    COMMA           reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    SEMICOLON       reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    RPAREN          reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    INC             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    DEC             reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    ASSIGN          reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    ADD_ASSIGN      reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    SUB_ASSIGN      reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    OR_ASSIGN       reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    XOR_ASSIGN      reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    MUL_ASSIGN      reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    QUO_ASSIGN      reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    REM_ASSIGN      reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    AND_ASSIGN      reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    SHL_ASSIGN      reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    SHR_ASSIGN      reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    COLON           reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    RBRACE          reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    LBRACE          reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)
    ELSE            reduce using rule 169 (CompositeLit -> IDENT LiteralValue .)


state 198

    (171) LiteralValue -> LBRACE . ElementList COMMA RBRACE
    (172) LiteralValue -> LBRACE . ElementList RBRACE
    (173) LiteralValue -> LBRACE . RBRACE
    (174) ElementList -> . KeyedElement
    (175) ElementList -> . ElementList COMMA KeyedElement
    (176) KeyedElement -> . Element
    (177) KeyedElement -> . Key COLON Element
    (180) Element -> . Expr
    (181) Element -> . LiteralValue
    (178) Key -> . Expr
    (179) Key -> . LiteralValue
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RBRACE          shift and go to state 297
    LBRACE          shift and go to state 198
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ElementList                    shift and go to state 296
    KeyedElement                   shift and go to state 298
    Element                        shift and go to state 299
    Key                            shift and go to state 300
    Expr                           shift and go to state 301
    LiteralValue                   shift and go to state 302
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 199

    (86) PrimaryExpr -> LPAREN Expr . RPAREN
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    RPAREN          shift and go to state 303
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182


state 200

    (165) CompositeLit -> StructType Arguments .

    PERIOD          reduce using rule 165 (CompositeLit -> StructType Arguments .)
    LBRACK          reduce using rule 165 (CompositeLit -> StructType Arguments .)
    LPAREN          reduce using rule 165 (CompositeLit -> StructType Arguments .)
    LOR             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    LAND            reduce using rule 165 (CompositeLit -> StructType Arguments .)
    EQL             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    NEQ             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    LSS             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    LEQ             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    GTR             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    GEQ             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    ADD             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    SUB             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    OR              reduce using rule 165 (CompositeLit -> StructType Arguments .)
    XOR             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    MUL             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    QUO             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    REM             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    SHL             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    SHR             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    AND             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    AND_NOT         reduce using rule 165 (CompositeLit -> StructType Arguments .)
    RBRACK          reduce using rule 165 (CompositeLit -> StructType Arguments .)
    COMMA           reduce using rule 165 (CompositeLit -> StructType Arguments .)
    SEMICOLON       reduce using rule 165 (CompositeLit -> StructType Arguments .)
    RPAREN          reduce using rule 165 (CompositeLit -> StructType Arguments .)
    INC             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    DEC             reduce using rule 165 (CompositeLit -> StructType Arguments .)
    ASSIGN          reduce using rule 165 (CompositeLit -> StructType Arguments .)
    ADD_ASSIGN      reduce using rule 165 (CompositeLit -> StructType Arguments .)
    SUB_ASSIGN      reduce using rule 165 (CompositeLit -> StructType Arguments .)
    OR_ASSIGN       reduce using rule 165 (CompositeLit -> StructType Arguments .)
    XOR_ASSIGN      reduce using rule 165 (CompositeLit -> StructType Arguments .)
    MUL_ASSIGN      reduce using rule 165 (CompositeLit -> StructType Arguments .)
    QUO_ASSIGN      reduce using rule 165 (CompositeLit -> StructType Arguments .)
    REM_ASSIGN      reduce using rule 165 (CompositeLit -> StructType Arguments .)
    AND_ASSIGN      reduce using rule 165 (CompositeLit -> StructType Arguments .)
    SHL_ASSIGN      reduce using rule 165 (CompositeLit -> StructType Arguments .)
    SHR_ASSIGN      reduce using rule 165 (CompositeLit -> StructType Arguments .)
    AND_NOT_ASSIGN  reduce using rule 165 (CompositeLit -> StructType Arguments .)
    COLON           reduce using rule 165 (CompositeLit -> StructType Arguments .)
    RBRACE          reduce using rule 165 (CompositeLit -> StructType Arguments .)
    LBRACE          reduce using rule 165 (CompositeLit -> StructType Arguments .)
    ELSE            reduce using rule 165 (CompositeLit -> StructType Arguments .)


state 201

    (166) CompositeLit -> ArrayType LiteralValue .

    PERIOD          reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    LBRACK          reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    LPAREN          reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    LOR             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    LAND            reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    EQL             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    NEQ             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    LSS             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    LEQ             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    GTR             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    GEQ             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    ADD             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    SUB             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    OR              reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    XOR             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    MUL             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    QUO             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    REM             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    SHL             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    SHR             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    AND             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    AND_NOT         reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    RBRACK          reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    COMMA           reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    SEMICOLON       reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    RPAREN          reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    INC             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    DEC             reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    ASSIGN          reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    ADD_ASSIGN      reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    SUB_ASSIGN      reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    OR_ASSIGN       reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    XOR_ASSIGN      reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    MUL_ASSIGN      reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    QUO_ASSIGN      reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    REM_ASSIGN      reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    AND_ASSIGN      reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    SHL_ASSIGN      reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    SHR_ASSIGN      reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    COLON           reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    RBRACE          reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    LBRACE          reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)
    ELSE            reduce using rule 166 (CompositeLit -> ArrayType LiteralValue .)


state 202

    (167) CompositeLit -> SliceType LiteralValue .

    PERIOD          reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    LBRACK          reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    LPAREN          reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    LOR             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    LAND            reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    EQL             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    NEQ             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    LSS             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    LEQ             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    GTR             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    GEQ             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    ADD             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    SUB             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    OR              reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    XOR             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    MUL             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    QUO             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    REM             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    SHL             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    SHR             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    AND             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    AND_NOT         reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    RBRACK          reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    COMMA           reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    SEMICOLON       reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    RPAREN          reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    INC             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    DEC             reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    ASSIGN          reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    ADD_ASSIGN      reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    SUB_ASSIGN      reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    OR_ASSIGN       reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    XOR_ASSIGN      reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    MUL_ASSIGN      reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    QUO_ASSIGN      reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    REM_ASSIGN      reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    AND_ASSIGN      reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    SHL_ASSIGN      reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    SHR_ASSIGN      reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    COLON           reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    RBRACE          reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    LBRACE          reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)
    ELSE            reduce using rule 167 (CompositeLit -> SliceType LiteralValue .)


state 203

    (168) CompositeLit -> MapType LiteralValue .

    PERIOD          reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    LBRACK          reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    LPAREN          reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    LOR             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    LAND            reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    EQL             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    NEQ             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    LSS             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    LEQ             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    GTR             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    GEQ             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    ADD             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    SUB             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    OR              reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    XOR             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    MUL             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    QUO             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    REM             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    SHL             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    SHR             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    AND             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    AND_NOT         reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    RBRACK          reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    COMMA           reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    SEMICOLON       reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    RPAREN          reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    INC             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    DEC             reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    ASSIGN          reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    ADD_ASSIGN      reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    SUB_ASSIGN      reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    OR_ASSIGN       reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    XOR_ASSIGN      reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    MUL_ASSIGN      reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    QUO_ASSIGN      reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    REM_ASSIGN      reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    AND_ASSIGN      reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    SHL_ASSIGN      reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    SHR_ASSIGN      reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    COLON           reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    RBRACE          reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    LBRACE          reduce using rule 168 (CompositeLit -> MapType LiteralValue .)
    ELSE            reduce using rule 168 (CompositeLit -> MapType LiteralValue .)


state 204

    (182) FunctionLit -> FUNC Signature . FunctionBody
    (186) FunctionBody -> . Block
    (253) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 141

    FunctionBody                   shift and go to state 304
    Block                          shift and go to state 140

state 205

    (134) StructType -> STRUCT BeginStruct LBRACE . FieldDeclMult RBRACE EndStruct
    (137) FieldDeclMult -> . FieldDeclMult FieldDecl SEMICOLON
    (138) FieldDeclMult -> .

    RBRACE          reduce using rule 138 (FieldDeclMult -> .)
    IDENT           reduce using rule 138 (FieldDeclMult -> .)
    MUL             reduce using rule 138 (FieldDeclMult -> .)

    FieldDeclMult                  shift and go to state 305

state 206

    (152) MapType -> MAP LBRACK KeyType . RBRACK ElementType

    RBRACK          shift and go to state 306


state 207

    (153) KeyType -> Type .

    RBRACK          reduce using rule 153 (KeyType -> Type .)


state 208

    (154) KeyType -> IDENT .
    (155) KeyType -> IDENT . PERIOD IDENT

    RBRACK          reduce using rule 154 (KeyType -> IDENT .)
    PERIOD          shift and go to state 307


state 209

    (31) VarMult -> VarSpec SEMICOLON VarMult .

    RPAREN          reduce using rule 31 (VarMult -> VarSpec SEMICOLON VarMult .)


state 210

    (33) VarSpec -> IdentifierList Type ASSIGN ExpressionList .
    (55) ExpressionList -> ExpressionList . COMMA Expr

    SEMICOLON       reduce using rule 33 (VarSpec -> IdentifierList Type ASSIGN ExpressionList .)
    COMMA           shift and go to state 211


state 211

    (55) ExpressionList -> ExpressionList COMMA . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 308
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 212

    (34) VarSpec -> IdentifierList IDENT ASSIGN ExpressionList .
    (55) ExpressionList -> ExpressionList . COMMA Expr

    SEMICOLON       reduce using rule 34 (VarSpec -> IdentifierList IDENT ASSIGN ExpressionList .)
    COMMA           shift and go to state 211


state 213

    (35) VarSpec -> IdentifierList IDENT PERIOD IDENT . ASSIGN ExpressionList
    (39) VarSpec -> IdentifierList IDENT PERIOD IDENT .

    ASSIGN          shift and go to state 309
    SEMICOLON       reduce using rule 39 (VarSpec -> IdentifierList IDENT PERIOD IDENT .)


state 214

    (42) TypeSpecMult -> TypeSpec SEMICOLON TypeSpecMult .

    RPAREN          reduce using rule 42 (TypeSpecMult -> TypeSpec SEMICOLON TypeSpecMult .)


state 215

    (51) Typedef -> IDENT IDENT PERIOD IDENT .

    SEMICOLON       reduce using rule 51 (Typedef -> IDENT IDENT PERIOD IDENT .)


state 216

    (48) AliasDecl -> IDENT ASSIGN IDENT PERIOD . IDENT

    IDENT           shift and go to state 310


state 217

    (183) FuncDecl -> FUNC FunctionName BeginScope Signature FunctionBody EndScope .

    SEMICOLON       reduce using rule 183 (FuncDecl -> FUNC FunctionName BeginScope Signature FunctionBody EndScope .)


state 218

    (253) Block -> LBRACE StatementList . RBRACE

    RBRACE          shift and go to state 311


state 219

    (204) StatementList -> Statement . SEMICOLON StatementList

    SEMICOLON       shift and go to state 312


state 220

    (206) Statement -> Decl .

    SEMICOLON       reduce using rule 206 (Statement -> Decl .)


state 221

    (207) Statement -> LabeledStmt .

    SEMICOLON       reduce using rule 207 (Statement -> LabeledStmt .)


state 222

    (208) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 208 (Statement -> SimpleStmt .)


state 223

    (209) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 209 (Statement -> GotoStmt .)


state 224

    (210) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 210 (Statement -> ReturnStmt .)


state 225

    (211) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 211 (Statement -> BreakStmt .)


state 226

    (212) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 212 (Statement -> ContinueStmt .)


state 227

    (213) Statement -> FallthroughStmt .

    SEMICOLON       reduce using rule 213 (Statement -> FallthroughStmt .)


state 228

    (214) Statement -> BeginScope . Block EndScope
    (253) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 141

    Block                          shift and go to state 313

state 229

    (215) Statement -> IfStmt .

    SEMICOLON       reduce using rule 215 (Statement -> IfStmt .)


state 230

    (216) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 216 (Statement -> SwitchStmt .)


state 231

    (217) Statement -> ForStmt .

    SEMICOLON       reduce using rule 217 (Statement -> ForStmt .)


state 232

    (218) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 314


state 233

    (220) SimpleStmt -> EmptyStmt .

    SEMICOLON       reduce using rule 220 (SimpleStmt -> EmptyStmt .)
    LBRACE          reduce using rule 220 (SimpleStmt -> EmptyStmt .)


state 234

    (221) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 221 (SimpleStmt -> ExpressionStmt .)
    LBRACE          reduce using rule 221 (SimpleStmt -> ExpressionStmt .)


state 235

    (222) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 222 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 222 (SimpleStmt -> IncDecStmt .)


state 236

    (223) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 223 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 223 (SimpleStmt -> Assignment .)


state 237

    (224) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 224 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 224 (SimpleStmt -> ShortVarDecl .)


state 238

    (245) GotoStmt -> GOTO . Label
    (219) Label -> . IDENT

    IDENT           shift and go to state 316

    Label                          shift and go to state 315

state 239

    (246) ReturnStmt -> RETURN . ExpressionList
    (247) ReturnStmt -> RETURN .
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    SEMICOLON       reduce using rule 247 (ReturnStmt -> RETURN .)
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 317
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 240

    (229) Assignment -> ExpressionList . assign_op ExpressionList
    (55) ExpressionList -> ExpressionList . COMMA Expr
    (230) assign_op -> . add_op_assign
    (231) assign_op -> . mul_op_assign
    (232) assign_op -> . ASSIGN
    (233) add_op_assign -> . ADD_ASSIGN
    (234) add_op_assign -> . SUB_ASSIGN
    (235) add_op_assign -> . OR_ASSIGN
    (236) add_op_assign -> . XOR_ASSIGN
    (237) mul_op_assign -> . MUL_ASSIGN
    (238) mul_op_assign -> . QUO_ASSIGN
    (239) mul_op_assign -> . REM_ASSIGN
    (240) mul_op_assign -> . AND_ASSIGN
    (241) mul_op_assign -> . SHL_ASSIGN
    (242) mul_op_assign -> . SHR_ASSIGN
    (243) mul_op_assign -> . AND_NOT_ASSIGN

    COMMA           shift and go to state 211
    ASSIGN          shift and go to state 321
    ADD_ASSIGN      shift and go to state 322
    SUB_ASSIGN      shift and go to state 323
    OR_ASSIGN       shift and go to state 324
    XOR_ASSIGN      shift and go to state 325
    MUL_ASSIGN      shift and go to state 326
    QUO_ASSIGN      shift and go to state 327
    REM_ASSIGN      shift and go to state 328
    AND_ASSIGN      shift and go to state 329
    SHL_ASSIGN      shift and go to state 330
    SHR_ASSIGN      shift and go to state 331
    AND_NOT_ASSIGN  shift and go to state 332

    assign_op                      shift and go to state 318
    add_op_assign                  shift and go to state 319
    mul_op_assign                  shift and go to state 320

state 241

    (248) BreakStmt -> BREAK . Label
    (249) BreakStmt -> BREAK .
    (219) Label -> . IDENT

    SEMICOLON       reduce using rule 249 (BreakStmt -> BREAK .)
    IDENT           shift and go to state 316

    Label                          shift and go to state 333

state 242

    (250) ContinueStmt -> CONTINUE . Label
    (251) ContinueStmt -> CONTINUE .
    (219) Label -> . IDENT

    SEMICOLON       reduce using rule 251 (ContinueStmt -> CONTINUE .)
    IDENT           shift and go to state 316

    Label                          shift and go to state 334

state 243

    (252) FallthroughStmt -> FALLTHROUGH .

    SEMICOLON       reduce using rule 252 (FallthroughStmt -> FALLTHROUGH .)


state 244

    (254) IfStmt -> IF . Expr BeginScope Block EndScope else_stmt
    (255) IfStmt -> IF . BeginScope SimpleStmt EndScope SEMICOLON Expr else_stmt
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (301) BeginScope -> .
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAG resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
    SEMICOLON       reduce using rule 301 (BeginScope -> .)
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

  ! IDENT           [ reduce using rule 301 (BeginScope -> .) ]
  ! ADD             [ reduce using rule 301 (BeginScope -> .) ]
  ! SUB             [ reduce using rule 301 (BeginScope -> .) ]
  ! NOT             [ reduce using rule 301 (BeginScope -> .) ]
  ! XOR             [ reduce using rule 301 (BeginScope -> .) ]
  ! MUL             [ reduce using rule 301 (BeginScope -> .) ]
  ! AND             [ reduce using rule 301 (BeginScope -> .) ]
  ! LPAREN          [ reduce using rule 301 (BeginScope -> .) ]
  ! INT             [ reduce using rule 301 (BeginScope -> .) ]
  ! FLOAT           [ reduce using rule 301 (BeginScope -> .) ]
  ! IMAG            [ reduce using rule 301 (BeginScope -> .) ]
  ! RUNE            [ reduce using rule 301 (BeginScope -> .) ]
  ! STRING          [ reduce using rule 301 (BeginScope -> .) ]
  ! FUNC            [ reduce using rule 301 (BeginScope -> .) ]
  ! STRUCT          [ reduce using rule 301 (BeginScope -> .) ]
  ! LBRACK          [ reduce using rule 301 (BeginScope -> .) ]
  ! MAP             [ reduce using rule 301 (BeginScope -> .) ]

    Expr                           shift and go to state 335
    BeginScope                     shift and go to state 336
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 245

    (226) ExpressionStmt -> Expr .
    (227) IncDecStmt -> Expr . INC
    (228) IncDecStmt -> Expr . DEC
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr
    (54) ExpressionList -> Expr .

    SEMICOLON       reduce using rule 226 (ExpressionStmt -> Expr .)
    LBRACE          reduce using rule 226 (ExpressionStmt -> Expr .)
    INC             shift and go to state 337
    DEC             shift and go to state 338
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182
    COMMA           reduce using rule 54 (ExpressionList -> Expr .)
    ASSIGN          reduce using rule 54 (ExpressionList -> Expr .)
    ADD_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    SUB_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    OR_ASSIGN       reduce using rule 54 (ExpressionList -> Expr .)
    XOR_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    MUL_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    QUO_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    REM_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    AND_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    SHL_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    SHR_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    AND_NOT_ASSIGN  reduce using rule 54 (ExpressionList -> Expr .)


state 246

    (259) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 259 (SwitchStmt -> ExprSwitchStmt .)


state 247

    (260) SwitchStmt -> TypeSwitchStmt .

    SEMICOLON       reduce using rule 260 (SwitchStmt -> TypeSwitchStmt .)


state 248

    (286) ForStmt -> FOR . BeginFor Condition Block EndFor
    (287) ForStmt -> FOR . BeginFor ForClause Block EndFor
    (288) ForStmt -> FOR . BeginFor RangeClause Block EndFor
    (289) ForStmt -> FOR . BeginFor Block EndFor
    (290) BeginFor -> .

    LBRACE          reduce using rule 290 (BeginFor -> .)
    ADD             reduce using rule 290 (BeginFor -> .)
    SUB             reduce using rule 290 (BeginFor -> .)
    NOT             reduce using rule 290 (BeginFor -> .)
    XOR             reduce using rule 290 (BeginFor -> .)
    MUL             reduce using rule 290 (BeginFor -> .)
    AND             reduce using rule 290 (BeginFor -> .)
    IDENT           reduce using rule 290 (BeginFor -> .)
    LPAREN          reduce using rule 290 (BeginFor -> .)
    INT             reduce using rule 290 (BeginFor -> .)
    FLOAT           reduce using rule 290 (BeginFor -> .)
    IMAG            reduce using rule 290 (BeginFor -> .)
    RUNE            reduce using rule 290 (BeginFor -> .)
    STRING          reduce using rule 290 (BeginFor -> .)
    FUNC            reduce using rule 290 (BeginFor -> .)
    STRUCT          reduce using rule 290 (BeginFor -> .)
    LBRACK          reduce using rule 290 (BeginFor -> .)
    MAP             reduce using rule 290 (BeginFor -> .)
    SEMICOLON       reduce using rule 290 (BeginFor -> .)
    RANGE           reduce using rule 290 (BeginFor -> .)

    BeginFor                       shift and go to state 339

state 249

    (219) Label -> IDENT .
    (52) IdentifierList -> IDENT .
    (53) IdentifierList -> IDENT . COMMA IdentifierList
    (84) PrimaryExpr -> IDENT .
    (85) PrimaryExpr -> IDENT . PERIOD IDENT
    (169) CompositeLit -> IDENT . LiteralValue
    (170) CompositeLit -> IDENT . PERIOD IDENT LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    COLON           reduce using rule 219 (Label -> IDENT .)
    DEFINE          reduce using rule 52 (IdentifierList -> IDENT .)
    COMMA           shift and go to state 67
    LBRACK          reduce using rule 84 (PrimaryExpr -> IDENT .)
    LPAREN          reduce using rule 84 (PrimaryExpr -> IDENT .)
    INC             reduce using rule 84 (PrimaryExpr -> IDENT .)
    DEC             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LOR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LAND            reduce using rule 84 (PrimaryExpr -> IDENT .)
    EQL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    NEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LSS             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    GTR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    GEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    ADD             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SUB             reduce using rule 84 (PrimaryExpr -> IDENT .)
    OR              reduce using rule 84 (PrimaryExpr -> IDENT .)
    XOR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    MUL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    QUO             reduce using rule 84 (PrimaryExpr -> IDENT .)
    REM             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND             reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_NOT         reduce using rule 84 (PrimaryExpr -> IDENT .)
    SEMICOLON       reduce using rule 84 (PrimaryExpr -> IDENT .)
    ASSIGN          reduce using rule 84 (PrimaryExpr -> IDENT .)
    ADD_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    SUB_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    OR_ASSIGN       reduce using rule 84 (PrimaryExpr -> IDENT .)
    XOR_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    MUL_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    QUO_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    REM_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHL_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHR_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_NOT_ASSIGN  reduce using rule 84 (PrimaryExpr -> IDENT .)
    PERIOD          shift and go to state 196
    LBRACE          shift and go to state 198

  ! PERIOD          [ reduce using rule 84 (PrimaryExpr -> IDENT .) ]
  ! COMMA           [ reduce using rule 84 (PrimaryExpr -> IDENT .) ]

    LiteralValue                   shift and go to state 197

state 250

    (244) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 340


state 251

    (261) ExprSwitchStmt -> SWITCH . BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (262) ExprSwitchStmt -> SWITCH . Expr LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (263) ExprSwitchStmt -> SWITCH . BeginScope SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (264) ExprSwitchStmt -> SWITCH . LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (272) TypeSwitchStmt -> SWITCH . SimpleStmt SEMICOLON TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (273) TypeSwitchStmt -> SWITCH . TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (301) BeginScope -> .
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (220) SimpleStmt -> . EmptyStmt
    (221) SimpleStmt -> . ExpressionStmt
    (222) SimpleStmt -> . IncDecStmt
    (223) SimpleStmt -> . Assignment
    (224) SimpleStmt -> . ShortVarDecl
    (274) TypeSwitchGuard -> . IDENT DEFINE PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (275) TypeSwitchGuard -> . PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (225) EmptyStmt -> .
    (226) ExpressionStmt -> . Expr
    (227) IncDecStmt -> . Expr INC
    (228) IncDecStmt -> . Expr DEC
    (229) Assignment -> . ExpressionList assign_op ExpressionList
    (244) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

  ! shift/reduce conflict for IDENT resolved as shift
  ! shift/reduce conflict for ADD resolved as shift
  ! shift/reduce conflict for SUB resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! reduce/reduce conflict for SEMICOLON resolved using rule 225 (EmptyStmt -> .)
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for IMAG resolved as shift
  ! shift/reduce conflict for RUNE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for FUNC resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for LBRACK resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
    LBRACE          shift and go to state 344
    IDENT           shift and go to state 346
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    SEMICOLON       reduce using rule 225 (EmptyStmt -> .)
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

  ! IDENT           [ reduce using rule 301 (BeginScope -> .) ]
  ! ADD             [ reduce using rule 301 (BeginScope -> .) ]
  ! SUB             [ reduce using rule 301 (BeginScope -> .) ]
  ! NOT             [ reduce using rule 301 (BeginScope -> .) ]
  ! XOR             [ reduce using rule 301 (BeginScope -> .) ]
  ! MUL             [ reduce using rule 301 (BeginScope -> .) ]
  ! AND             [ reduce using rule 301 (BeginScope -> .) ]
  ! LPAREN          [ reduce using rule 301 (BeginScope -> .) ]
  ! INT             [ reduce using rule 301 (BeginScope -> .) ]
  ! FLOAT           [ reduce using rule 301 (BeginScope -> .) ]
  ! IMAG            [ reduce using rule 301 (BeginScope -> .) ]
  ! RUNE            [ reduce using rule 301 (BeginScope -> .) ]
  ! STRING          [ reduce using rule 301 (BeginScope -> .) ]
  ! FUNC            [ reduce using rule 301 (BeginScope -> .) ]
  ! STRUCT          [ reduce using rule 301 (BeginScope -> .) ]
  ! LBRACK          [ reduce using rule 301 (BeginScope -> .) ]
  ! MAP             [ reduce using rule 301 (BeginScope -> .) ]
  ! SEMICOLON       [ reduce using rule 301 (BeginScope -> .) ]

    BeginScope                     shift and go to state 341
    SimpleStmt                     shift and go to state 342
    Expr                           shift and go to state 343
    TypeSwitchGuard                shift and go to state 345
    UnaryExpr                      shift and go to state 97
    EmptyStmt                      shift and go to state 233
    ExpressionStmt                 shift and go to state 234
    IncDecStmt                     shift and go to state 235
    Assignment                     shift and go to state 236
    ShortVarDecl                   shift and go to state 237
    PrimaryExpr                    shift and go to state 347
    ExpressionList                 shift and go to state 240
    IdentifierList                 shift and go to state 250
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 252

    (203) Result -> IDENT PERIOD . IDENT

    IDENT           shift and go to state 348


state 253

    (123) TypeT -> LPAREN IDENT . RPAREN
    (124) TypeT -> LPAREN IDENT . PERIOD IDENT RPAREN
    (52) IdentifierList -> IDENT .
    (53) IdentifierList -> IDENT . COMMA IdentifierList

    RPAREN          shift and go to state 157
    PERIOD          shift and go to state 158
    IDENT           reduce using rule 52 (IdentifierList -> IDENT .)
    LPAREN          reduce using rule 52 (IdentifierList -> IDENT .)
    MUL             reduce using rule 52 (IdentifierList -> IDENT .)
    LBRACK          reduce using rule 52 (IdentifierList -> IDENT .)
    STRUCT          reduce using rule 52 (IdentifierList -> IDENT .)
    MAP             reduce using rule 52 (IdentifierList -> IDENT .)
    FUNC            reduce using rule 52 (IdentifierList -> IDENT .)
    COMMA           shift and go to state 67


state 254

    (190) Parameters -> LPAREN ParameterList RPAREN .

    IDENT           reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    LPAREN          reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    MUL             reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    LBRACK          reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    STRUCT          reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    MAP             reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    FUNC            reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    LBRACE          reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    SEMICOLON       reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    ASSIGN          reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    RPAREN          reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    RBRACK          reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    COMMA           reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    STRING          reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)
    COLON           reduce using rule 190 (Parameters -> LPAREN ParameterList RPAREN .)


state 255

    (191) Parameters -> LPAREN ParameterList COMMA . RPAREN
    (193) ParameterList -> ParameterList COMMA . IDENT
    (194) ParameterList -> ParameterList COMMA . IDENT PERIOD IDENT
    (195) ParameterList -> ParameterList COMMA . Type
    (196) ParameterList -> ParameterList COMMA . ParameterDecl
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (197) ParameterDecl -> . IdentifierList Type
    (198) ParameterDecl -> . IdentifierList IDENT
    (199) ParameterDecl -> . IdentifierList IDENT PERIOD IDENT
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    RPAREN          shift and go to state 349
    IDENT           shift and go to state 350
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 351
    ParameterDecl                  shift and go to state 352
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    IdentifierList                 shift and go to state 150
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 256

    (197) ParameterDecl -> IdentifierList Type .

    RPAREN          reduce using rule 197 (ParameterDecl -> IdentifierList Type .)
    COMMA           reduce using rule 197 (ParameterDecl -> IdentifierList Type .)


state 257

    (198) ParameterDecl -> IdentifierList IDENT .
    (199) ParameterDecl -> IdentifierList IDENT . PERIOD IDENT

    RPAREN          reduce using rule 198 (ParameterDecl -> IdentifierList IDENT .)
    COMMA           reduce using rule 198 (ParameterDecl -> IdentifierList IDENT .)
    PERIOD          shift and go to state 353


state 258

    (28) ConstSpec -> IdentifierList IDENT PERIOD IDENT ASSIGN . ExpressionList
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 354
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 259

    (124) TypeT -> LPAREN IDENT PERIOD IDENT . RPAREN

    RPAREN          shift and go to state 355


state 260

    (127) PointerType -> MUL IDENT PERIOD IDENT .

    ASSIGN          reduce using rule 127 (PointerType -> MUL IDENT PERIOD IDENT .)
    SEMICOLON       reduce using rule 127 (PointerType -> MUL IDENT PERIOD IDENT .)
    RPAREN          reduce using rule 127 (PointerType -> MUL IDENT PERIOD IDENT .)
    LBRACE          reduce using rule 127 (PointerType -> MUL IDENT PERIOD IDENT .)
    RBRACK          reduce using rule 127 (PointerType -> MUL IDENT PERIOD IDENT .)
    COMMA           reduce using rule 127 (PointerType -> MUL IDENT PERIOD IDENT .)
    STRING          reduce using rule 127 (PointerType -> MUL IDENT PERIOD IDENT .)
    COLON           reduce using rule 127 (PointerType -> MUL IDENT PERIOD IDENT .)


state 261

    (129) ArrayType -> LBRACK ArrayLength RBRACK ElementType .

    ASSIGN          reduce using rule 129 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    SEMICOLON       reduce using rule 129 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RPAREN          reduce using rule 129 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    LBRACE          reduce using rule 129 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    RBRACK          reduce using rule 129 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COMMA           reduce using rule 129 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    STRING          reduce using rule 129 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)
    COLON           reduce using rule 129 (ArrayType -> LBRACK ArrayLength RBRACK ElementType .)


state 262

    (133) ElementType -> IDENT PERIOD . IDENT

    IDENT           shift and go to state 356


state 263

    (57) Expr -> Expr LOR Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 57 (Expr -> Expr LOR Expr .)
    RBRACK          reduce using rule 57 (Expr -> Expr LOR Expr .)
    COMMA           reduce using rule 57 (Expr -> Expr LOR Expr .)
    SEMICOLON       reduce using rule 57 (Expr -> Expr LOR Expr .)
    RPAREN          reduce using rule 57 (Expr -> Expr LOR Expr .)
    INC             reduce using rule 57 (Expr -> Expr LOR Expr .)
    DEC             reduce using rule 57 (Expr -> Expr LOR Expr .)
    ASSIGN          reduce using rule 57 (Expr -> Expr LOR Expr .)
    ADD_ASSIGN      reduce using rule 57 (Expr -> Expr LOR Expr .)
    SUB_ASSIGN      reduce using rule 57 (Expr -> Expr LOR Expr .)
    OR_ASSIGN       reduce using rule 57 (Expr -> Expr LOR Expr .)
    XOR_ASSIGN      reduce using rule 57 (Expr -> Expr LOR Expr .)
    MUL_ASSIGN      reduce using rule 57 (Expr -> Expr LOR Expr .)
    QUO_ASSIGN      reduce using rule 57 (Expr -> Expr LOR Expr .)
    REM_ASSIGN      reduce using rule 57 (Expr -> Expr LOR Expr .)
    AND_ASSIGN      reduce using rule 57 (Expr -> Expr LOR Expr .)
    SHL_ASSIGN      reduce using rule 57 (Expr -> Expr LOR Expr .)
    SHR_ASSIGN      reduce using rule 57 (Expr -> Expr LOR Expr .)
    AND_NOT_ASSIGN  reduce using rule 57 (Expr -> Expr LOR Expr .)
    COLON           reduce using rule 57 (Expr -> Expr LOR Expr .)
    RBRACE          reduce using rule 57 (Expr -> Expr LOR Expr .)
    LBRACE          reduce using rule 57 (Expr -> Expr LOR Expr .)
    ELSE            reduce using rule 57 (Expr -> Expr LOR Expr .)
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182

  ! LAND            [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! EQL             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! NEQ             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! LSS             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! LEQ             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! GTR             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! GEQ             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! ADD             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! SUB             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! OR              [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! XOR             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! MUL             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! QUO             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! REM             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! SHL             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! SHR             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! AND             [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! AND_NOT         [ reduce using rule 57 (Expr -> Expr LOR Expr .) ]
  ! LOR             [ shift and go to state 164 ]


state 264

    (58) Expr -> Expr LAND Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 58 (Expr -> Expr LAND Expr .)
    LAND            reduce using rule 58 (Expr -> Expr LAND Expr .)
    RBRACK          reduce using rule 58 (Expr -> Expr LAND Expr .)
    COMMA           reduce using rule 58 (Expr -> Expr LAND Expr .)
    SEMICOLON       reduce using rule 58 (Expr -> Expr LAND Expr .)
    RPAREN          reduce using rule 58 (Expr -> Expr LAND Expr .)
    INC             reduce using rule 58 (Expr -> Expr LAND Expr .)
    DEC             reduce using rule 58 (Expr -> Expr LAND Expr .)
    ASSIGN          reduce using rule 58 (Expr -> Expr LAND Expr .)
    ADD_ASSIGN      reduce using rule 58 (Expr -> Expr LAND Expr .)
    SUB_ASSIGN      reduce using rule 58 (Expr -> Expr LAND Expr .)
    OR_ASSIGN       reduce using rule 58 (Expr -> Expr LAND Expr .)
    XOR_ASSIGN      reduce using rule 58 (Expr -> Expr LAND Expr .)
    MUL_ASSIGN      reduce using rule 58 (Expr -> Expr LAND Expr .)
    QUO_ASSIGN      reduce using rule 58 (Expr -> Expr LAND Expr .)
    REM_ASSIGN      reduce using rule 58 (Expr -> Expr LAND Expr .)
    AND_ASSIGN      reduce using rule 58 (Expr -> Expr LAND Expr .)
    SHL_ASSIGN      reduce using rule 58 (Expr -> Expr LAND Expr .)
    SHR_ASSIGN      reduce using rule 58 (Expr -> Expr LAND Expr .)
    AND_NOT_ASSIGN  reduce using rule 58 (Expr -> Expr LAND Expr .)
    COLON           reduce using rule 58 (Expr -> Expr LAND Expr .)
    RBRACE          reduce using rule 58 (Expr -> Expr LAND Expr .)
    LBRACE          reduce using rule 58 (Expr -> Expr LAND Expr .)
    ELSE            reduce using rule 58 (Expr -> Expr LAND Expr .)
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182

  ! EQL             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! NEQ             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! LSS             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! LEQ             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! GTR             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! GEQ             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! ADD             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! SUB             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! OR              [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! XOR             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! MUL             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! QUO             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! REM             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! SHL             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! SHR             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! AND             [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! AND_NOT         [ reduce using rule 58 (Expr -> Expr LAND Expr .) ]
  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]


state 265

    (59) Expr -> Expr EQL Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 59 (Expr -> Expr EQL Expr .)
    LAND            reduce using rule 59 (Expr -> Expr EQL Expr .)
    EQL             reduce using rule 59 (Expr -> Expr EQL Expr .)
    NEQ             reduce using rule 59 (Expr -> Expr EQL Expr .)
    LSS             reduce using rule 59 (Expr -> Expr EQL Expr .)
    LEQ             reduce using rule 59 (Expr -> Expr EQL Expr .)
    GTR             reduce using rule 59 (Expr -> Expr EQL Expr .)
    GEQ             reduce using rule 59 (Expr -> Expr EQL Expr .)
    RBRACK          reduce using rule 59 (Expr -> Expr EQL Expr .)
    COMMA           reduce using rule 59 (Expr -> Expr EQL Expr .)
    SEMICOLON       reduce using rule 59 (Expr -> Expr EQL Expr .)
    RPAREN          reduce using rule 59 (Expr -> Expr EQL Expr .)
    INC             reduce using rule 59 (Expr -> Expr EQL Expr .)
    DEC             reduce using rule 59 (Expr -> Expr EQL Expr .)
    ASSIGN          reduce using rule 59 (Expr -> Expr EQL Expr .)
    ADD_ASSIGN      reduce using rule 59 (Expr -> Expr EQL Expr .)
    SUB_ASSIGN      reduce using rule 59 (Expr -> Expr EQL Expr .)
    OR_ASSIGN       reduce using rule 59 (Expr -> Expr EQL Expr .)
    XOR_ASSIGN      reduce using rule 59 (Expr -> Expr EQL Expr .)
    MUL_ASSIGN      reduce using rule 59 (Expr -> Expr EQL Expr .)
    QUO_ASSIGN      reduce using rule 59 (Expr -> Expr EQL Expr .)
    REM_ASSIGN      reduce using rule 59 (Expr -> Expr EQL Expr .)
    AND_ASSIGN      reduce using rule 59 (Expr -> Expr EQL Expr .)
    SHL_ASSIGN      reduce using rule 59 (Expr -> Expr EQL Expr .)
    SHR_ASSIGN      reduce using rule 59 (Expr -> Expr EQL Expr .)
    AND_NOT_ASSIGN  reduce using rule 59 (Expr -> Expr EQL Expr .)
    COLON           reduce using rule 59 (Expr -> Expr EQL Expr .)
    RBRACE          reduce using rule 59 (Expr -> Expr EQL Expr .)
    LBRACE          reduce using rule 59 (Expr -> Expr EQL Expr .)
    ELSE            reduce using rule 59 (Expr -> Expr EQL Expr .)
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182

  ! ADD             [ reduce using rule 59 (Expr -> Expr EQL Expr .) ]
  ! SUB             [ reduce using rule 59 (Expr -> Expr EQL Expr .) ]
  ! OR              [ reduce using rule 59 (Expr -> Expr EQL Expr .) ]
  ! XOR             [ reduce using rule 59 (Expr -> Expr EQL Expr .) ]
  ! MUL             [ reduce using rule 59 (Expr -> Expr EQL Expr .) ]
  ! QUO             [ reduce using rule 59 (Expr -> Expr EQL Expr .) ]
  ! REM             [ reduce using rule 59 (Expr -> Expr EQL Expr .) ]
  ! SHL             [ reduce using rule 59 (Expr -> Expr EQL Expr .) ]
  ! SHR             [ reduce using rule 59 (Expr -> Expr EQL Expr .) ]
  ! AND             [ reduce using rule 59 (Expr -> Expr EQL Expr .) ]
  ! AND_NOT         [ reduce using rule 59 (Expr -> Expr EQL Expr .) ]
  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]


state 266

    (60) Expr -> Expr NEQ Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 60 (Expr -> Expr NEQ Expr .)
    LAND            reduce using rule 60 (Expr -> Expr NEQ Expr .)
    EQL             reduce using rule 60 (Expr -> Expr NEQ Expr .)
    NEQ             reduce using rule 60 (Expr -> Expr NEQ Expr .)
    LSS             reduce using rule 60 (Expr -> Expr NEQ Expr .)
    LEQ             reduce using rule 60 (Expr -> Expr NEQ Expr .)
    GTR             reduce using rule 60 (Expr -> Expr NEQ Expr .)
    GEQ             reduce using rule 60 (Expr -> Expr NEQ Expr .)
    RBRACK          reduce using rule 60 (Expr -> Expr NEQ Expr .)
    COMMA           reduce using rule 60 (Expr -> Expr NEQ Expr .)
    SEMICOLON       reduce using rule 60 (Expr -> Expr NEQ Expr .)
    RPAREN          reduce using rule 60 (Expr -> Expr NEQ Expr .)
    INC             reduce using rule 60 (Expr -> Expr NEQ Expr .)
    DEC             reduce using rule 60 (Expr -> Expr NEQ Expr .)
    ASSIGN          reduce using rule 60 (Expr -> Expr NEQ Expr .)
    ADD_ASSIGN      reduce using rule 60 (Expr -> Expr NEQ Expr .)
    SUB_ASSIGN      reduce using rule 60 (Expr -> Expr NEQ Expr .)
    OR_ASSIGN       reduce using rule 60 (Expr -> Expr NEQ Expr .)
    XOR_ASSIGN      reduce using rule 60 (Expr -> Expr NEQ Expr .)
    MUL_ASSIGN      reduce using rule 60 (Expr -> Expr NEQ Expr .)
    QUO_ASSIGN      reduce using rule 60 (Expr -> Expr NEQ Expr .)
    REM_ASSIGN      reduce using rule 60 (Expr -> Expr NEQ Expr .)
    AND_ASSIGN      reduce using rule 60 (Expr -> Expr NEQ Expr .)
    SHL_ASSIGN      reduce using rule 60 (Expr -> Expr NEQ Expr .)
    SHR_ASSIGN      reduce using rule 60 (Expr -> Expr NEQ Expr .)
    AND_NOT_ASSIGN  reduce using rule 60 (Expr -> Expr NEQ Expr .)
    COLON           reduce using rule 60 (Expr -> Expr NEQ Expr .)
    RBRACE          reduce using rule 60 (Expr -> Expr NEQ Expr .)
    LBRACE          reduce using rule 60 (Expr -> Expr NEQ Expr .)
    ELSE            reduce using rule 60 (Expr -> Expr NEQ Expr .)
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182

  ! ADD             [ reduce using rule 60 (Expr -> Expr NEQ Expr .) ]
  ! SUB             [ reduce using rule 60 (Expr -> Expr NEQ Expr .) ]
  ! OR              [ reduce using rule 60 (Expr -> Expr NEQ Expr .) ]
  ! XOR             [ reduce using rule 60 (Expr -> Expr NEQ Expr .) ]
  ! MUL             [ reduce using rule 60 (Expr -> Expr NEQ Expr .) ]
  ! QUO             [ reduce using rule 60 (Expr -> Expr NEQ Expr .) ]
  ! REM             [ reduce using rule 60 (Expr -> Expr NEQ Expr .) ]
  ! SHL             [ reduce using rule 60 (Expr -> Expr NEQ Expr .) ]
  ! SHR             [ reduce using rule 60 (Expr -> Expr NEQ Expr .) ]
  ! AND             [ reduce using rule 60 (Expr -> Expr NEQ Expr .) ]
  ! AND_NOT         [ reduce using rule 60 (Expr -> Expr NEQ Expr .) ]
  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]


state 267

    (61) Expr -> Expr LSS Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 61 (Expr -> Expr LSS Expr .)
    LAND            reduce using rule 61 (Expr -> Expr LSS Expr .)
    EQL             reduce using rule 61 (Expr -> Expr LSS Expr .)
    NEQ             reduce using rule 61 (Expr -> Expr LSS Expr .)
    LSS             reduce using rule 61 (Expr -> Expr LSS Expr .)
    LEQ             reduce using rule 61 (Expr -> Expr LSS Expr .)
    GTR             reduce using rule 61 (Expr -> Expr LSS Expr .)
    GEQ             reduce using rule 61 (Expr -> Expr LSS Expr .)
    RBRACK          reduce using rule 61 (Expr -> Expr LSS Expr .)
    COMMA           reduce using rule 61 (Expr -> Expr LSS Expr .)
    SEMICOLON       reduce using rule 61 (Expr -> Expr LSS Expr .)
    RPAREN          reduce using rule 61 (Expr -> Expr LSS Expr .)
    INC             reduce using rule 61 (Expr -> Expr LSS Expr .)
    DEC             reduce using rule 61 (Expr -> Expr LSS Expr .)
    ASSIGN          reduce using rule 61 (Expr -> Expr LSS Expr .)
    ADD_ASSIGN      reduce using rule 61 (Expr -> Expr LSS Expr .)
    SUB_ASSIGN      reduce using rule 61 (Expr -> Expr LSS Expr .)
    OR_ASSIGN       reduce using rule 61 (Expr -> Expr LSS Expr .)
    XOR_ASSIGN      reduce using rule 61 (Expr -> Expr LSS Expr .)
    MUL_ASSIGN      reduce using rule 61 (Expr -> Expr LSS Expr .)
    QUO_ASSIGN      reduce using rule 61 (Expr -> Expr LSS Expr .)
    REM_ASSIGN      reduce using rule 61 (Expr -> Expr LSS Expr .)
    AND_ASSIGN      reduce using rule 61 (Expr -> Expr LSS Expr .)
    SHL_ASSIGN      reduce using rule 61 (Expr -> Expr LSS Expr .)
    SHR_ASSIGN      reduce using rule 61 (Expr -> Expr LSS Expr .)
    AND_NOT_ASSIGN  reduce using rule 61 (Expr -> Expr LSS Expr .)
    COLON           reduce using rule 61 (Expr -> Expr LSS Expr .)
    RBRACE          reduce using rule 61 (Expr -> Expr LSS Expr .)
    LBRACE          reduce using rule 61 (Expr -> Expr LSS Expr .)
    ELSE            reduce using rule 61 (Expr -> Expr LSS Expr .)
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182

  ! ADD             [ reduce using rule 61 (Expr -> Expr LSS Expr .) ]
  ! SUB             [ reduce using rule 61 (Expr -> Expr LSS Expr .) ]
  ! OR              [ reduce using rule 61 (Expr -> Expr LSS Expr .) ]
  ! XOR             [ reduce using rule 61 (Expr -> Expr LSS Expr .) ]
  ! MUL             [ reduce using rule 61 (Expr -> Expr LSS Expr .) ]
  ! QUO             [ reduce using rule 61 (Expr -> Expr LSS Expr .) ]
  ! REM             [ reduce using rule 61 (Expr -> Expr LSS Expr .) ]
  ! SHL             [ reduce using rule 61 (Expr -> Expr LSS Expr .) ]
  ! SHR             [ reduce using rule 61 (Expr -> Expr LSS Expr .) ]
  ! AND             [ reduce using rule 61 (Expr -> Expr LSS Expr .) ]
  ! AND_NOT         [ reduce using rule 61 (Expr -> Expr LSS Expr .) ]
  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]


state 268

    (62) Expr -> Expr LEQ Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 62 (Expr -> Expr LEQ Expr .)
    LAND            reduce using rule 62 (Expr -> Expr LEQ Expr .)
    EQL             reduce using rule 62 (Expr -> Expr LEQ Expr .)
    NEQ             reduce using rule 62 (Expr -> Expr LEQ Expr .)
    LSS             reduce using rule 62 (Expr -> Expr LEQ Expr .)
    LEQ             reduce using rule 62 (Expr -> Expr LEQ Expr .)
    GTR             reduce using rule 62 (Expr -> Expr LEQ Expr .)
    GEQ             reduce using rule 62 (Expr -> Expr LEQ Expr .)
    RBRACK          reduce using rule 62 (Expr -> Expr LEQ Expr .)
    COMMA           reduce using rule 62 (Expr -> Expr LEQ Expr .)
    SEMICOLON       reduce using rule 62 (Expr -> Expr LEQ Expr .)
    RPAREN          reduce using rule 62 (Expr -> Expr LEQ Expr .)
    INC             reduce using rule 62 (Expr -> Expr LEQ Expr .)
    DEC             reduce using rule 62 (Expr -> Expr LEQ Expr .)
    ASSIGN          reduce using rule 62 (Expr -> Expr LEQ Expr .)
    ADD_ASSIGN      reduce using rule 62 (Expr -> Expr LEQ Expr .)
    SUB_ASSIGN      reduce using rule 62 (Expr -> Expr LEQ Expr .)
    OR_ASSIGN       reduce using rule 62 (Expr -> Expr LEQ Expr .)
    XOR_ASSIGN      reduce using rule 62 (Expr -> Expr LEQ Expr .)
    MUL_ASSIGN      reduce using rule 62 (Expr -> Expr LEQ Expr .)
    QUO_ASSIGN      reduce using rule 62 (Expr -> Expr LEQ Expr .)
    REM_ASSIGN      reduce using rule 62 (Expr -> Expr LEQ Expr .)
    AND_ASSIGN      reduce using rule 62 (Expr -> Expr LEQ Expr .)
    SHL_ASSIGN      reduce using rule 62 (Expr -> Expr LEQ Expr .)
    SHR_ASSIGN      reduce using rule 62 (Expr -> Expr LEQ Expr .)
    AND_NOT_ASSIGN  reduce using rule 62 (Expr -> Expr LEQ Expr .)
    COLON           reduce using rule 62 (Expr -> Expr LEQ Expr .)
    RBRACE          reduce using rule 62 (Expr -> Expr LEQ Expr .)
    LBRACE          reduce using rule 62 (Expr -> Expr LEQ Expr .)
    ELSE            reduce using rule 62 (Expr -> Expr LEQ Expr .)
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182

  ! ADD             [ reduce using rule 62 (Expr -> Expr LEQ Expr .) ]
  ! SUB             [ reduce using rule 62 (Expr -> Expr LEQ Expr .) ]
  ! OR              [ reduce using rule 62 (Expr -> Expr LEQ Expr .) ]
  ! XOR             [ reduce using rule 62 (Expr -> Expr LEQ Expr .) ]
  ! MUL             [ reduce using rule 62 (Expr -> Expr LEQ Expr .) ]
  ! QUO             [ reduce using rule 62 (Expr -> Expr LEQ Expr .) ]
  ! REM             [ reduce using rule 62 (Expr -> Expr LEQ Expr .) ]
  ! SHL             [ reduce using rule 62 (Expr -> Expr LEQ Expr .) ]
  ! SHR             [ reduce using rule 62 (Expr -> Expr LEQ Expr .) ]
  ! AND             [ reduce using rule 62 (Expr -> Expr LEQ Expr .) ]
  ! AND_NOT         [ reduce using rule 62 (Expr -> Expr LEQ Expr .) ]
  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]


state 269

    (63) Expr -> Expr GTR Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 63 (Expr -> Expr GTR Expr .)
    LAND            reduce using rule 63 (Expr -> Expr GTR Expr .)
    EQL             reduce using rule 63 (Expr -> Expr GTR Expr .)
    NEQ             reduce using rule 63 (Expr -> Expr GTR Expr .)
    LSS             reduce using rule 63 (Expr -> Expr GTR Expr .)
    LEQ             reduce using rule 63 (Expr -> Expr GTR Expr .)
    GTR             reduce using rule 63 (Expr -> Expr GTR Expr .)
    GEQ             reduce using rule 63 (Expr -> Expr GTR Expr .)
    RBRACK          reduce using rule 63 (Expr -> Expr GTR Expr .)
    COMMA           reduce using rule 63 (Expr -> Expr GTR Expr .)
    SEMICOLON       reduce using rule 63 (Expr -> Expr GTR Expr .)
    RPAREN          reduce using rule 63 (Expr -> Expr GTR Expr .)
    INC             reduce using rule 63 (Expr -> Expr GTR Expr .)
    DEC             reduce using rule 63 (Expr -> Expr GTR Expr .)
    ASSIGN          reduce using rule 63 (Expr -> Expr GTR Expr .)
    ADD_ASSIGN      reduce using rule 63 (Expr -> Expr GTR Expr .)
    SUB_ASSIGN      reduce using rule 63 (Expr -> Expr GTR Expr .)
    OR_ASSIGN       reduce using rule 63 (Expr -> Expr GTR Expr .)
    XOR_ASSIGN      reduce using rule 63 (Expr -> Expr GTR Expr .)
    MUL_ASSIGN      reduce using rule 63 (Expr -> Expr GTR Expr .)
    QUO_ASSIGN      reduce using rule 63 (Expr -> Expr GTR Expr .)
    REM_ASSIGN      reduce using rule 63 (Expr -> Expr GTR Expr .)
    AND_ASSIGN      reduce using rule 63 (Expr -> Expr GTR Expr .)
    SHL_ASSIGN      reduce using rule 63 (Expr -> Expr GTR Expr .)
    SHR_ASSIGN      reduce using rule 63 (Expr -> Expr GTR Expr .)
    AND_NOT_ASSIGN  reduce using rule 63 (Expr -> Expr GTR Expr .)
    COLON           reduce using rule 63 (Expr -> Expr GTR Expr .)
    RBRACE          reduce using rule 63 (Expr -> Expr GTR Expr .)
    LBRACE          reduce using rule 63 (Expr -> Expr GTR Expr .)
    ELSE            reduce using rule 63 (Expr -> Expr GTR Expr .)
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182

  ! ADD             [ reduce using rule 63 (Expr -> Expr GTR Expr .) ]
  ! SUB             [ reduce using rule 63 (Expr -> Expr GTR Expr .) ]
  ! OR              [ reduce using rule 63 (Expr -> Expr GTR Expr .) ]
  ! XOR             [ reduce using rule 63 (Expr -> Expr GTR Expr .) ]
  ! MUL             [ reduce using rule 63 (Expr -> Expr GTR Expr .) ]
  ! QUO             [ reduce using rule 63 (Expr -> Expr GTR Expr .) ]
  ! REM             [ reduce using rule 63 (Expr -> Expr GTR Expr .) ]
  ! SHL             [ reduce using rule 63 (Expr -> Expr GTR Expr .) ]
  ! SHR             [ reduce using rule 63 (Expr -> Expr GTR Expr .) ]
  ! AND             [ reduce using rule 63 (Expr -> Expr GTR Expr .) ]
  ! AND_NOT         [ reduce using rule 63 (Expr -> Expr GTR Expr .) ]
  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]


state 270

    (64) Expr -> Expr GEQ Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 64 (Expr -> Expr GEQ Expr .)
    LAND            reduce using rule 64 (Expr -> Expr GEQ Expr .)
    EQL             reduce using rule 64 (Expr -> Expr GEQ Expr .)
    NEQ             reduce using rule 64 (Expr -> Expr GEQ Expr .)
    LSS             reduce using rule 64 (Expr -> Expr GEQ Expr .)
    LEQ             reduce using rule 64 (Expr -> Expr GEQ Expr .)
    GTR             reduce using rule 64 (Expr -> Expr GEQ Expr .)
    GEQ             reduce using rule 64 (Expr -> Expr GEQ Expr .)
    RBRACK          reduce using rule 64 (Expr -> Expr GEQ Expr .)
    COMMA           reduce using rule 64 (Expr -> Expr GEQ Expr .)
    SEMICOLON       reduce using rule 64 (Expr -> Expr GEQ Expr .)
    RPAREN          reduce using rule 64 (Expr -> Expr GEQ Expr .)
    INC             reduce using rule 64 (Expr -> Expr GEQ Expr .)
    DEC             reduce using rule 64 (Expr -> Expr GEQ Expr .)
    ASSIGN          reduce using rule 64 (Expr -> Expr GEQ Expr .)
    ADD_ASSIGN      reduce using rule 64 (Expr -> Expr GEQ Expr .)
    SUB_ASSIGN      reduce using rule 64 (Expr -> Expr GEQ Expr .)
    OR_ASSIGN       reduce using rule 64 (Expr -> Expr GEQ Expr .)
    XOR_ASSIGN      reduce using rule 64 (Expr -> Expr GEQ Expr .)
    MUL_ASSIGN      reduce using rule 64 (Expr -> Expr GEQ Expr .)
    QUO_ASSIGN      reduce using rule 64 (Expr -> Expr GEQ Expr .)
    REM_ASSIGN      reduce using rule 64 (Expr -> Expr GEQ Expr .)
    AND_ASSIGN      reduce using rule 64 (Expr -> Expr GEQ Expr .)
    SHL_ASSIGN      reduce using rule 64 (Expr -> Expr GEQ Expr .)
    SHR_ASSIGN      reduce using rule 64 (Expr -> Expr GEQ Expr .)
    AND_NOT_ASSIGN  reduce using rule 64 (Expr -> Expr GEQ Expr .)
    COLON           reduce using rule 64 (Expr -> Expr GEQ Expr .)
    RBRACE          reduce using rule 64 (Expr -> Expr GEQ Expr .)
    LBRACE          reduce using rule 64 (Expr -> Expr GEQ Expr .)
    ELSE            reduce using rule 64 (Expr -> Expr GEQ Expr .)
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182

  ! ADD             [ reduce using rule 64 (Expr -> Expr GEQ Expr .) ]
  ! SUB             [ reduce using rule 64 (Expr -> Expr GEQ Expr .) ]
  ! OR              [ reduce using rule 64 (Expr -> Expr GEQ Expr .) ]
  ! XOR             [ reduce using rule 64 (Expr -> Expr GEQ Expr .) ]
  ! MUL             [ reduce using rule 64 (Expr -> Expr GEQ Expr .) ]
  ! QUO             [ reduce using rule 64 (Expr -> Expr GEQ Expr .) ]
  ! REM             [ reduce using rule 64 (Expr -> Expr GEQ Expr .) ]
  ! SHL             [ reduce using rule 64 (Expr -> Expr GEQ Expr .) ]
  ! SHR             [ reduce using rule 64 (Expr -> Expr GEQ Expr .) ]
  ! AND             [ reduce using rule 64 (Expr -> Expr GEQ Expr .) ]
  ! AND_NOT         [ reduce using rule 64 (Expr -> Expr GEQ Expr .) ]
  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]


state 271

    (65) Expr -> Expr ADD Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 65 (Expr -> Expr ADD Expr .)
    LAND            reduce using rule 65 (Expr -> Expr ADD Expr .)
    EQL             reduce using rule 65 (Expr -> Expr ADD Expr .)
    NEQ             reduce using rule 65 (Expr -> Expr ADD Expr .)
    LSS             reduce using rule 65 (Expr -> Expr ADD Expr .)
    LEQ             reduce using rule 65 (Expr -> Expr ADD Expr .)
    GTR             reduce using rule 65 (Expr -> Expr ADD Expr .)
    GEQ             reduce using rule 65 (Expr -> Expr ADD Expr .)
    ADD             reduce using rule 65 (Expr -> Expr ADD Expr .)
    SUB             reduce using rule 65 (Expr -> Expr ADD Expr .)
    OR              reduce using rule 65 (Expr -> Expr ADD Expr .)
    XOR             reduce using rule 65 (Expr -> Expr ADD Expr .)
    RBRACK          reduce using rule 65 (Expr -> Expr ADD Expr .)
    COMMA           reduce using rule 65 (Expr -> Expr ADD Expr .)
    SEMICOLON       reduce using rule 65 (Expr -> Expr ADD Expr .)
    RPAREN          reduce using rule 65 (Expr -> Expr ADD Expr .)
    INC             reduce using rule 65 (Expr -> Expr ADD Expr .)
    DEC             reduce using rule 65 (Expr -> Expr ADD Expr .)
    ASSIGN          reduce using rule 65 (Expr -> Expr ADD Expr .)
    ADD_ASSIGN      reduce using rule 65 (Expr -> Expr ADD Expr .)
    SUB_ASSIGN      reduce using rule 65 (Expr -> Expr ADD Expr .)
    OR_ASSIGN       reduce using rule 65 (Expr -> Expr ADD Expr .)
    XOR_ASSIGN      reduce using rule 65 (Expr -> Expr ADD Expr .)
    MUL_ASSIGN      reduce using rule 65 (Expr -> Expr ADD Expr .)
    QUO_ASSIGN      reduce using rule 65 (Expr -> Expr ADD Expr .)
    REM_ASSIGN      reduce using rule 65 (Expr -> Expr ADD Expr .)
    AND_ASSIGN      reduce using rule 65 (Expr -> Expr ADD Expr .)
    SHL_ASSIGN      reduce using rule 65 (Expr -> Expr ADD Expr .)
    SHR_ASSIGN      reduce using rule 65 (Expr -> Expr ADD Expr .)
    AND_NOT_ASSIGN  reduce using rule 65 (Expr -> Expr ADD Expr .)
    COLON           reduce using rule 65 (Expr -> Expr ADD Expr .)
    RBRACE          reduce using rule 65 (Expr -> Expr ADD Expr .)
    LBRACE          reduce using rule 65 (Expr -> Expr ADD Expr .)
    ELSE            reduce using rule 65 (Expr -> Expr ADD Expr .)
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182

  ! MUL             [ reduce using rule 65 (Expr -> Expr ADD Expr .) ]
  ! QUO             [ reduce using rule 65 (Expr -> Expr ADD Expr .) ]
  ! REM             [ reduce using rule 65 (Expr -> Expr ADD Expr .) ]
  ! SHL             [ reduce using rule 65 (Expr -> Expr ADD Expr .) ]
  ! SHR             [ reduce using rule 65 (Expr -> Expr ADD Expr .) ]
  ! AND             [ reduce using rule 65 (Expr -> Expr ADD Expr .) ]
  ! AND_NOT         [ reduce using rule 65 (Expr -> Expr ADD Expr .) ]
  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]
  ! ADD             [ shift and go to state 172 ]
  ! SUB             [ shift and go to state 173 ]
  ! OR              [ shift and go to state 174 ]
  ! XOR             [ shift and go to state 175 ]


state 272

    (66) Expr -> Expr SUB Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 66 (Expr -> Expr SUB Expr .)
    LAND            reduce using rule 66 (Expr -> Expr SUB Expr .)
    EQL             reduce using rule 66 (Expr -> Expr SUB Expr .)
    NEQ             reduce using rule 66 (Expr -> Expr SUB Expr .)
    LSS             reduce using rule 66 (Expr -> Expr SUB Expr .)
    LEQ             reduce using rule 66 (Expr -> Expr SUB Expr .)
    GTR             reduce using rule 66 (Expr -> Expr SUB Expr .)
    GEQ             reduce using rule 66 (Expr -> Expr SUB Expr .)
    ADD             reduce using rule 66 (Expr -> Expr SUB Expr .)
    SUB             reduce using rule 66 (Expr -> Expr SUB Expr .)
    OR              reduce using rule 66 (Expr -> Expr SUB Expr .)
    XOR             reduce using rule 66 (Expr -> Expr SUB Expr .)
    RBRACK          reduce using rule 66 (Expr -> Expr SUB Expr .)
    COMMA           reduce using rule 66 (Expr -> Expr SUB Expr .)
    SEMICOLON       reduce using rule 66 (Expr -> Expr SUB Expr .)
    RPAREN          reduce using rule 66 (Expr -> Expr SUB Expr .)
    INC             reduce using rule 66 (Expr -> Expr SUB Expr .)
    DEC             reduce using rule 66 (Expr -> Expr SUB Expr .)
    ASSIGN          reduce using rule 66 (Expr -> Expr SUB Expr .)
    ADD_ASSIGN      reduce using rule 66 (Expr -> Expr SUB Expr .)
    SUB_ASSIGN      reduce using rule 66 (Expr -> Expr SUB Expr .)
    OR_ASSIGN       reduce using rule 66 (Expr -> Expr SUB Expr .)
    XOR_ASSIGN      reduce using rule 66 (Expr -> Expr SUB Expr .)
    MUL_ASSIGN      reduce using rule 66 (Expr -> Expr SUB Expr .)
    QUO_ASSIGN      reduce using rule 66 (Expr -> Expr SUB Expr .)
    REM_ASSIGN      reduce using rule 66 (Expr -> Expr SUB Expr .)
    AND_ASSIGN      reduce using rule 66 (Expr -> Expr SUB Expr .)
    SHL_ASSIGN      reduce using rule 66 (Expr -> Expr SUB Expr .)
    SHR_ASSIGN      reduce using rule 66 (Expr -> Expr SUB Expr .)
    AND_NOT_ASSIGN  reduce using rule 66 (Expr -> Expr SUB Expr .)
    COLON           reduce using rule 66 (Expr -> Expr SUB Expr .)
    RBRACE          reduce using rule 66 (Expr -> Expr SUB Expr .)
    LBRACE          reduce using rule 66 (Expr -> Expr SUB Expr .)
    ELSE            reduce using rule 66 (Expr -> Expr SUB Expr .)
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182

  ! MUL             [ reduce using rule 66 (Expr -> Expr SUB Expr .) ]
  ! QUO             [ reduce using rule 66 (Expr -> Expr SUB Expr .) ]
  ! REM             [ reduce using rule 66 (Expr -> Expr SUB Expr .) ]
  ! SHL             [ reduce using rule 66 (Expr -> Expr SUB Expr .) ]
  ! SHR             [ reduce using rule 66 (Expr -> Expr SUB Expr .) ]
  ! AND             [ reduce using rule 66 (Expr -> Expr SUB Expr .) ]
  ! AND_NOT         [ reduce using rule 66 (Expr -> Expr SUB Expr .) ]
  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]
  ! ADD             [ shift and go to state 172 ]
  ! SUB             [ shift and go to state 173 ]
  ! OR              [ shift and go to state 174 ]
  ! XOR             [ shift and go to state 175 ]


state 273

    (67) Expr -> Expr OR Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 67 (Expr -> Expr OR Expr .)
    LAND            reduce using rule 67 (Expr -> Expr OR Expr .)
    EQL             reduce using rule 67 (Expr -> Expr OR Expr .)
    NEQ             reduce using rule 67 (Expr -> Expr OR Expr .)
    LSS             reduce using rule 67 (Expr -> Expr OR Expr .)
    LEQ             reduce using rule 67 (Expr -> Expr OR Expr .)
    GTR             reduce using rule 67 (Expr -> Expr OR Expr .)
    GEQ             reduce using rule 67 (Expr -> Expr OR Expr .)
    ADD             reduce using rule 67 (Expr -> Expr OR Expr .)
    SUB             reduce using rule 67 (Expr -> Expr OR Expr .)
    OR              reduce using rule 67 (Expr -> Expr OR Expr .)
    XOR             reduce using rule 67 (Expr -> Expr OR Expr .)
    RBRACK          reduce using rule 67 (Expr -> Expr OR Expr .)
    COMMA           reduce using rule 67 (Expr -> Expr OR Expr .)
    SEMICOLON       reduce using rule 67 (Expr -> Expr OR Expr .)
    RPAREN          reduce using rule 67 (Expr -> Expr OR Expr .)
    INC             reduce using rule 67 (Expr -> Expr OR Expr .)
    DEC             reduce using rule 67 (Expr -> Expr OR Expr .)
    ASSIGN          reduce using rule 67 (Expr -> Expr OR Expr .)
    ADD_ASSIGN      reduce using rule 67 (Expr -> Expr OR Expr .)
    SUB_ASSIGN      reduce using rule 67 (Expr -> Expr OR Expr .)
    OR_ASSIGN       reduce using rule 67 (Expr -> Expr OR Expr .)
    XOR_ASSIGN      reduce using rule 67 (Expr -> Expr OR Expr .)
    MUL_ASSIGN      reduce using rule 67 (Expr -> Expr OR Expr .)
    QUO_ASSIGN      reduce using rule 67 (Expr -> Expr OR Expr .)
    REM_ASSIGN      reduce using rule 67 (Expr -> Expr OR Expr .)
    AND_ASSIGN      reduce using rule 67 (Expr -> Expr OR Expr .)
    SHL_ASSIGN      reduce using rule 67 (Expr -> Expr OR Expr .)
    SHR_ASSIGN      reduce using rule 67 (Expr -> Expr OR Expr .)
    AND_NOT_ASSIGN  reduce using rule 67 (Expr -> Expr OR Expr .)
    COLON           reduce using rule 67 (Expr -> Expr OR Expr .)
    RBRACE          reduce using rule 67 (Expr -> Expr OR Expr .)
    LBRACE          reduce using rule 67 (Expr -> Expr OR Expr .)
    ELSE            reduce using rule 67 (Expr -> Expr OR Expr .)
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182

  ! MUL             [ reduce using rule 67 (Expr -> Expr OR Expr .) ]
  ! QUO             [ reduce using rule 67 (Expr -> Expr OR Expr .) ]
  ! REM             [ reduce using rule 67 (Expr -> Expr OR Expr .) ]
  ! SHL             [ reduce using rule 67 (Expr -> Expr OR Expr .) ]
  ! SHR             [ reduce using rule 67 (Expr -> Expr OR Expr .) ]
  ! AND             [ reduce using rule 67 (Expr -> Expr OR Expr .) ]
  ! AND_NOT         [ reduce using rule 67 (Expr -> Expr OR Expr .) ]
  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]
  ! ADD             [ shift and go to state 172 ]
  ! SUB             [ shift and go to state 173 ]
  ! OR              [ shift and go to state 174 ]
  ! XOR             [ shift and go to state 175 ]


state 274

    (68) Expr -> Expr XOR Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 68 (Expr -> Expr XOR Expr .)
    LAND            reduce using rule 68 (Expr -> Expr XOR Expr .)
    EQL             reduce using rule 68 (Expr -> Expr XOR Expr .)
    NEQ             reduce using rule 68 (Expr -> Expr XOR Expr .)
    LSS             reduce using rule 68 (Expr -> Expr XOR Expr .)
    LEQ             reduce using rule 68 (Expr -> Expr XOR Expr .)
    GTR             reduce using rule 68 (Expr -> Expr XOR Expr .)
    GEQ             reduce using rule 68 (Expr -> Expr XOR Expr .)
    ADD             reduce using rule 68 (Expr -> Expr XOR Expr .)
    SUB             reduce using rule 68 (Expr -> Expr XOR Expr .)
    OR              reduce using rule 68 (Expr -> Expr XOR Expr .)
    XOR             reduce using rule 68 (Expr -> Expr XOR Expr .)
    RBRACK          reduce using rule 68 (Expr -> Expr XOR Expr .)
    COMMA           reduce using rule 68 (Expr -> Expr XOR Expr .)
    SEMICOLON       reduce using rule 68 (Expr -> Expr XOR Expr .)
    RPAREN          reduce using rule 68 (Expr -> Expr XOR Expr .)
    INC             reduce using rule 68 (Expr -> Expr XOR Expr .)
    DEC             reduce using rule 68 (Expr -> Expr XOR Expr .)
    ASSIGN          reduce using rule 68 (Expr -> Expr XOR Expr .)
    ADD_ASSIGN      reduce using rule 68 (Expr -> Expr XOR Expr .)
    SUB_ASSIGN      reduce using rule 68 (Expr -> Expr XOR Expr .)
    OR_ASSIGN       reduce using rule 68 (Expr -> Expr XOR Expr .)
    XOR_ASSIGN      reduce using rule 68 (Expr -> Expr XOR Expr .)
    MUL_ASSIGN      reduce using rule 68 (Expr -> Expr XOR Expr .)
    QUO_ASSIGN      reduce using rule 68 (Expr -> Expr XOR Expr .)
    REM_ASSIGN      reduce using rule 68 (Expr -> Expr XOR Expr .)
    AND_ASSIGN      reduce using rule 68 (Expr -> Expr XOR Expr .)
    SHL_ASSIGN      reduce using rule 68 (Expr -> Expr XOR Expr .)
    SHR_ASSIGN      reduce using rule 68 (Expr -> Expr XOR Expr .)
    AND_NOT_ASSIGN  reduce using rule 68 (Expr -> Expr XOR Expr .)
    COLON           reduce using rule 68 (Expr -> Expr XOR Expr .)
    RBRACE          reduce using rule 68 (Expr -> Expr XOR Expr .)
    LBRACE          reduce using rule 68 (Expr -> Expr XOR Expr .)
    ELSE            reduce using rule 68 (Expr -> Expr XOR Expr .)
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182

  ! MUL             [ reduce using rule 68 (Expr -> Expr XOR Expr .) ]
  ! QUO             [ reduce using rule 68 (Expr -> Expr XOR Expr .) ]
  ! REM             [ reduce using rule 68 (Expr -> Expr XOR Expr .) ]
  ! SHL             [ reduce using rule 68 (Expr -> Expr XOR Expr .) ]
  ! SHR             [ reduce using rule 68 (Expr -> Expr XOR Expr .) ]
  ! AND             [ reduce using rule 68 (Expr -> Expr XOR Expr .) ]
  ! AND_NOT         [ reduce using rule 68 (Expr -> Expr XOR Expr .) ]
  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]
  ! ADD             [ shift and go to state 172 ]
  ! SUB             [ shift and go to state 173 ]
  ! OR              [ shift and go to state 174 ]
  ! XOR             [ shift and go to state 175 ]


state 275

    (69) Expr -> Expr MUL Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 69 (Expr -> Expr MUL Expr .)
    LAND            reduce using rule 69 (Expr -> Expr MUL Expr .)
    EQL             reduce using rule 69 (Expr -> Expr MUL Expr .)
    NEQ             reduce using rule 69 (Expr -> Expr MUL Expr .)
    LSS             reduce using rule 69 (Expr -> Expr MUL Expr .)
    LEQ             reduce using rule 69 (Expr -> Expr MUL Expr .)
    GTR             reduce using rule 69 (Expr -> Expr MUL Expr .)
    GEQ             reduce using rule 69 (Expr -> Expr MUL Expr .)
    ADD             reduce using rule 69 (Expr -> Expr MUL Expr .)
    SUB             reduce using rule 69 (Expr -> Expr MUL Expr .)
    OR              reduce using rule 69 (Expr -> Expr MUL Expr .)
    XOR             reduce using rule 69 (Expr -> Expr MUL Expr .)
    MUL             reduce using rule 69 (Expr -> Expr MUL Expr .)
    QUO             reduce using rule 69 (Expr -> Expr MUL Expr .)
    REM             reduce using rule 69 (Expr -> Expr MUL Expr .)
    SHL             reduce using rule 69 (Expr -> Expr MUL Expr .)
    SHR             reduce using rule 69 (Expr -> Expr MUL Expr .)
    AND             reduce using rule 69 (Expr -> Expr MUL Expr .)
    AND_NOT         reduce using rule 69 (Expr -> Expr MUL Expr .)
    RBRACK          reduce using rule 69 (Expr -> Expr MUL Expr .)
    COMMA           reduce using rule 69 (Expr -> Expr MUL Expr .)
    SEMICOLON       reduce using rule 69 (Expr -> Expr MUL Expr .)
    RPAREN          reduce using rule 69 (Expr -> Expr MUL Expr .)
    INC             reduce using rule 69 (Expr -> Expr MUL Expr .)
    DEC             reduce using rule 69 (Expr -> Expr MUL Expr .)
    ASSIGN          reduce using rule 69 (Expr -> Expr MUL Expr .)
    ADD_ASSIGN      reduce using rule 69 (Expr -> Expr MUL Expr .)
    SUB_ASSIGN      reduce using rule 69 (Expr -> Expr MUL Expr .)
    OR_ASSIGN       reduce using rule 69 (Expr -> Expr MUL Expr .)
    XOR_ASSIGN      reduce using rule 69 (Expr -> Expr MUL Expr .)
    MUL_ASSIGN      reduce using rule 69 (Expr -> Expr MUL Expr .)
    QUO_ASSIGN      reduce using rule 69 (Expr -> Expr MUL Expr .)
    REM_ASSIGN      reduce using rule 69 (Expr -> Expr MUL Expr .)
    AND_ASSIGN      reduce using rule 69 (Expr -> Expr MUL Expr .)
    SHL_ASSIGN      reduce using rule 69 (Expr -> Expr MUL Expr .)
    SHR_ASSIGN      reduce using rule 69 (Expr -> Expr MUL Expr .)
    AND_NOT_ASSIGN  reduce using rule 69 (Expr -> Expr MUL Expr .)
    COLON           reduce using rule 69 (Expr -> Expr MUL Expr .)
    RBRACE          reduce using rule 69 (Expr -> Expr MUL Expr .)
    LBRACE          reduce using rule 69 (Expr -> Expr MUL Expr .)
    ELSE            reduce using rule 69 (Expr -> Expr MUL Expr .)

  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]
  ! ADD             [ shift and go to state 172 ]
  ! SUB             [ shift and go to state 173 ]
  ! OR              [ shift and go to state 174 ]
  ! XOR             [ shift and go to state 175 ]
  ! MUL             [ shift and go to state 176 ]
  ! QUO             [ shift and go to state 177 ]
  ! REM             [ shift and go to state 178 ]
  ! SHL             [ shift and go to state 179 ]
  ! SHR             [ shift and go to state 180 ]
  ! AND             [ shift and go to state 181 ]
  ! AND_NOT         [ shift and go to state 182 ]


state 276

    (70) Expr -> Expr QUO Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 70 (Expr -> Expr QUO Expr .)
    LAND            reduce using rule 70 (Expr -> Expr QUO Expr .)
    EQL             reduce using rule 70 (Expr -> Expr QUO Expr .)
    NEQ             reduce using rule 70 (Expr -> Expr QUO Expr .)
    LSS             reduce using rule 70 (Expr -> Expr QUO Expr .)
    LEQ             reduce using rule 70 (Expr -> Expr QUO Expr .)
    GTR             reduce using rule 70 (Expr -> Expr QUO Expr .)
    GEQ             reduce using rule 70 (Expr -> Expr QUO Expr .)
    ADD             reduce using rule 70 (Expr -> Expr QUO Expr .)
    SUB             reduce using rule 70 (Expr -> Expr QUO Expr .)
    OR              reduce using rule 70 (Expr -> Expr QUO Expr .)
    XOR             reduce using rule 70 (Expr -> Expr QUO Expr .)
    MUL             reduce using rule 70 (Expr -> Expr QUO Expr .)
    QUO             reduce using rule 70 (Expr -> Expr QUO Expr .)
    REM             reduce using rule 70 (Expr -> Expr QUO Expr .)
    SHL             reduce using rule 70 (Expr -> Expr QUO Expr .)
    SHR             reduce using rule 70 (Expr -> Expr QUO Expr .)
    AND             reduce using rule 70 (Expr -> Expr QUO Expr .)
    AND_NOT         reduce using rule 70 (Expr -> Expr QUO Expr .)
    RBRACK          reduce using rule 70 (Expr -> Expr QUO Expr .)
    COMMA           reduce using rule 70 (Expr -> Expr QUO Expr .)
    SEMICOLON       reduce using rule 70 (Expr -> Expr QUO Expr .)
    RPAREN          reduce using rule 70 (Expr -> Expr QUO Expr .)
    INC             reduce using rule 70 (Expr -> Expr QUO Expr .)
    DEC             reduce using rule 70 (Expr -> Expr QUO Expr .)
    ASSIGN          reduce using rule 70 (Expr -> Expr QUO Expr .)
    ADD_ASSIGN      reduce using rule 70 (Expr -> Expr QUO Expr .)
    SUB_ASSIGN      reduce using rule 70 (Expr -> Expr QUO Expr .)
    OR_ASSIGN       reduce using rule 70 (Expr -> Expr QUO Expr .)
    XOR_ASSIGN      reduce using rule 70 (Expr -> Expr QUO Expr .)
    MUL_ASSIGN      reduce using rule 70 (Expr -> Expr QUO Expr .)
    QUO_ASSIGN      reduce using rule 70 (Expr -> Expr QUO Expr .)
    REM_ASSIGN      reduce using rule 70 (Expr -> Expr QUO Expr .)
    AND_ASSIGN      reduce using rule 70 (Expr -> Expr QUO Expr .)
    SHL_ASSIGN      reduce using rule 70 (Expr -> Expr QUO Expr .)
    SHR_ASSIGN      reduce using rule 70 (Expr -> Expr QUO Expr .)
    AND_NOT_ASSIGN  reduce using rule 70 (Expr -> Expr QUO Expr .)
    COLON           reduce using rule 70 (Expr -> Expr QUO Expr .)
    RBRACE          reduce using rule 70 (Expr -> Expr QUO Expr .)
    LBRACE          reduce using rule 70 (Expr -> Expr QUO Expr .)
    ELSE            reduce using rule 70 (Expr -> Expr QUO Expr .)

  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]
  ! ADD             [ shift and go to state 172 ]
  ! SUB             [ shift and go to state 173 ]
  ! OR              [ shift and go to state 174 ]
  ! XOR             [ shift and go to state 175 ]
  ! MUL             [ shift and go to state 176 ]
  ! QUO             [ shift and go to state 177 ]
  ! REM             [ shift and go to state 178 ]
  ! SHL             [ shift and go to state 179 ]
  ! SHR             [ shift and go to state 180 ]
  ! AND             [ shift and go to state 181 ]
  ! AND_NOT         [ shift and go to state 182 ]


state 277

    (71) Expr -> Expr REM Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 71 (Expr -> Expr REM Expr .)
    LAND            reduce using rule 71 (Expr -> Expr REM Expr .)
    EQL             reduce using rule 71 (Expr -> Expr REM Expr .)
    NEQ             reduce using rule 71 (Expr -> Expr REM Expr .)
    LSS             reduce using rule 71 (Expr -> Expr REM Expr .)
    LEQ             reduce using rule 71 (Expr -> Expr REM Expr .)
    GTR             reduce using rule 71 (Expr -> Expr REM Expr .)
    GEQ             reduce using rule 71 (Expr -> Expr REM Expr .)
    ADD             reduce using rule 71 (Expr -> Expr REM Expr .)
    SUB             reduce using rule 71 (Expr -> Expr REM Expr .)
    OR              reduce using rule 71 (Expr -> Expr REM Expr .)
    XOR             reduce using rule 71 (Expr -> Expr REM Expr .)
    MUL             reduce using rule 71 (Expr -> Expr REM Expr .)
    QUO             reduce using rule 71 (Expr -> Expr REM Expr .)
    REM             reduce using rule 71 (Expr -> Expr REM Expr .)
    SHL             reduce using rule 71 (Expr -> Expr REM Expr .)
    SHR             reduce using rule 71 (Expr -> Expr REM Expr .)
    AND             reduce using rule 71 (Expr -> Expr REM Expr .)
    AND_NOT         reduce using rule 71 (Expr -> Expr REM Expr .)
    RBRACK          reduce using rule 71 (Expr -> Expr REM Expr .)
    COMMA           reduce using rule 71 (Expr -> Expr REM Expr .)
    SEMICOLON       reduce using rule 71 (Expr -> Expr REM Expr .)
    RPAREN          reduce using rule 71 (Expr -> Expr REM Expr .)
    INC             reduce using rule 71 (Expr -> Expr REM Expr .)
    DEC             reduce using rule 71 (Expr -> Expr REM Expr .)
    ASSIGN          reduce using rule 71 (Expr -> Expr REM Expr .)
    ADD_ASSIGN      reduce using rule 71 (Expr -> Expr REM Expr .)
    SUB_ASSIGN      reduce using rule 71 (Expr -> Expr REM Expr .)
    OR_ASSIGN       reduce using rule 71 (Expr -> Expr REM Expr .)
    XOR_ASSIGN      reduce using rule 71 (Expr -> Expr REM Expr .)
    MUL_ASSIGN      reduce using rule 71 (Expr -> Expr REM Expr .)
    QUO_ASSIGN      reduce using rule 71 (Expr -> Expr REM Expr .)
    REM_ASSIGN      reduce using rule 71 (Expr -> Expr REM Expr .)
    AND_ASSIGN      reduce using rule 71 (Expr -> Expr REM Expr .)
    SHL_ASSIGN      reduce using rule 71 (Expr -> Expr REM Expr .)
    SHR_ASSIGN      reduce using rule 71 (Expr -> Expr REM Expr .)
    AND_NOT_ASSIGN  reduce using rule 71 (Expr -> Expr REM Expr .)
    COLON           reduce using rule 71 (Expr -> Expr REM Expr .)
    RBRACE          reduce using rule 71 (Expr -> Expr REM Expr .)
    LBRACE          reduce using rule 71 (Expr -> Expr REM Expr .)
    ELSE            reduce using rule 71 (Expr -> Expr REM Expr .)

  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]
  ! ADD             [ shift and go to state 172 ]
  ! SUB             [ shift and go to state 173 ]
  ! OR              [ shift and go to state 174 ]
  ! XOR             [ shift and go to state 175 ]
  ! MUL             [ shift and go to state 176 ]
  ! QUO             [ shift and go to state 177 ]
  ! REM             [ shift and go to state 178 ]
  ! SHL             [ shift and go to state 179 ]
  ! SHR             [ shift and go to state 180 ]
  ! AND             [ shift and go to state 181 ]
  ! AND_NOT         [ shift and go to state 182 ]


state 278

    (72) Expr -> Expr SHL Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 72 (Expr -> Expr SHL Expr .)
    LAND            reduce using rule 72 (Expr -> Expr SHL Expr .)
    EQL             reduce using rule 72 (Expr -> Expr SHL Expr .)
    NEQ             reduce using rule 72 (Expr -> Expr SHL Expr .)
    LSS             reduce using rule 72 (Expr -> Expr SHL Expr .)
    LEQ             reduce using rule 72 (Expr -> Expr SHL Expr .)
    GTR             reduce using rule 72 (Expr -> Expr SHL Expr .)
    GEQ             reduce using rule 72 (Expr -> Expr SHL Expr .)
    ADD             reduce using rule 72 (Expr -> Expr SHL Expr .)
    SUB             reduce using rule 72 (Expr -> Expr SHL Expr .)
    OR              reduce using rule 72 (Expr -> Expr SHL Expr .)
    XOR             reduce using rule 72 (Expr -> Expr SHL Expr .)
    MUL             reduce using rule 72 (Expr -> Expr SHL Expr .)
    QUO             reduce using rule 72 (Expr -> Expr SHL Expr .)
    REM             reduce using rule 72 (Expr -> Expr SHL Expr .)
    SHL             reduce using rule 72 (Expr -> Expr SHL Expr .)
    SHR             reduce using rule 72 (Expr -> Expr SHL Expr .)
    AND             reduce using rule 72 (Expr -> Expr SHL Expr .)
    AND_NOT         reduce using rule 72 (Expr -> Expr SHL Expr .)
    RBRACK          reduce using rule 72 (Expr -> Expr SHL Expr .)
    COMMA           reduce using rule 72 (Expr -> Expr SHL Expr .)
    SEMICOLON       reduce using rule 72 (Expr -> Expr SHL Expr .)
    RPAREN          reduce using rule 72 (Expr -> Expr SHL Expr .)
    INC             reduce using rule 72 (Expr -> Expr SHL Expr .)
    DEC             reduce using rule 72 (Expr -> Expr SHL Expr .)
    ASSIGN          reduce using rule 72 (Expr -> Expr SHL Expr .)
    ADD_ASSIGN      reduce using rule 72 (Expr -> Expr SHL Expr .)
    SUB_ASSIGN      reduce using rule 72 (Expr -> Expr SHL Expr .)
    OR_ASSIGN       reduce using rule 72 (Expr -> Expr SHL Expr .)
    XOR_ASSIGN      reduce using rule 72 (Expr -> Expr SHL Expr .)
    MUL_ASSIGN      reduce using rule 72 (Expr -> Expr SHL Expr .)
    QUO_ASSIGN      reduce using rule 72 (Expr -> Expr SHL Expr .)
    REM_ASSIGN      reduce using rule 72 (Expr -> Expr SHL Expr .)
    AND_ASSIGN      reduce using rule 72 (Expr -> Expr SHL Expr .)
    SHL_ASSIGN      reduce using rule 72 (Expr -> Expr SHL Expr .)
    SHR_ASSIGN      reduce using rule 72 (Expr -> Expr SHL Expr .)
    AND_NOT_ASSIGN  reduce using rule 72 (Expr -> Expr SHL Expr .)
    COLON           reduce using rule 72 (Expr -> Expr SHL Expr .)
    RBRACE          reduce using rule 72 (Expr -> Expr SHL Expr .)
    LBRACE          reduce using rule 72 (Expr -> Expr SHL Expr .)
    ELSE            reduce using rule 72 (Expr -> Expr SHL Expr .)

  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]
  ! ADD             [ shift and go to state 172 ]
  ! SUB             [ shift and go to state 173 ]
  ! OR              [ shift and go to state 174 ]
  ! XOR             [ shift and go to state 175 ]
  ! MUL             [ shift and go to state 176 ]
  ! QUO             [ shift and go to state 177 ]
  ! REM             [ shift and go to state 178 ]
  ! SHL             [ shift and go to state 179 ]
  ! SHR             [ shift and go to state 180 ]
  ! AND             [ shift and go to state 181 ]
  ! AND_NOT         [ shift and go to state 182 ]


state 279

    (73) Expr -> Expr SHR Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 73 (Expr -> Expr SHR Expr .)
    LAND            reduce using rule 73 (Expr -> Expr SHR Expr .)
    EQL             reduce using rule 73 (Expr -> Expr SHR Expr .)
    NEQ             reduce using rule 73 (Expr -> Expr SHR Expr .)
    LSS             reduce using rule 73 (Expr -> Expr SHR Expr .)
    LEQ             reduce using rule 73 (Expr -> Expr SHR Expr .)
    GTR             reduce using rule 73 (Expr -> Expr SHR Expr .)
    GEQ             reduce using rule 73 (Expr -> Expr SHR Expr .)
    ADD             reduce using rule 73 (Expr -> Expr SHR Expr .)
    SUB             reduce using rule 73 (Expr -> Expr SHR Expr .)
    OR              reduce using rule 73 (Expr -> Expr SHR Expr .)
    XOR             reduce using rule 73 (Expr -> Expr SHR Expr .)
    MUL             reduce using rule 73 (Expr -> Expr SHR Expr .)
    QUO             reduce using rule 73 (Expr -> Expr SHR Expr .)
    REM             reduce using rule 73 (Expr -> Expr SHR Expr .)
    SHL             reduce using rule 73 (Expr -> Expr SHR Expr .)
    SHR             reduce using rule 73 (Expr -> Expr SHR Expr .)
    AND             reduce using rule 73 (Expr -> Expr SHR Expr .)
    AND_NOT         reduce using rule 73 (Expr -> Expr SHR Expr .)
    RBRACK          reduce using rule 73 (Expr -> Expr SHR Expr .)
    COMMA           reduce using rule 73 (Expr -> Expr SHR Expr .)
    SEMICOLON       reduce using rule 73 (Expr -> Expr SHR Expr .)
    RPAREN          reduce using rule 73 (Expr -> Expr SHR Expr .)
    INC             reduce using rule 73 (Expr -> Expr SHR Expr .)
    DEC             reduce using rule 73 (Expr -> Expr SHR Expr .)
    ASSIGN          reduce using rule 73 (Expr -> Expr SHR Expr .)
    ADD_ASSIGN      reduce using rule 73 (Expr -> Expr SHR Expr .)
    SUB_ASSIGN      reduce using rule 73 (Expr -> Expr SHR Expr .)
    OR_ASSIGN       reduce using rule 73 (Expr -> Expr SHR Expr .)
    XOR_ASSIGN      reduce using rule 73 (Expr -> Expr SHR Expr .)
    MUL_ASSIGN      reduce using rule 73 (Expr -> Expr SHR Expr .)
    QUO_ASSIGN      reduce using rule 73 (Expr -> Expr SHR Expr .)
    REM_ASSIGN      reduce using rule 73 (Expr -> Expr SHR Expr .)
    AND_ASSIGN      reduce using rule 73 (Expr -> Expr SHR Expr .)
    SHL_ASSIGN      reduce using rule 73 (Expr -> Expr SHR Expr .)
    SHR_ASSIGN      reduce using rule 73 (Expr -> Expr SHR Expr .)
    AND_NOT_ASSIGN  reduce using rule 73 (Expr -> Expr SHR Expr .)
    COLON           reduce using rule 73 (Expr -> Expr SHR Expr .)
    RBRACE          reduce using rule 73 (Expr -> Expr SHR Expr .)
    LBRACE          reduce using rule 73 (Expr -> Expr SHR Expr .)
    ELSE            reduce using rule 73 (Expr -> Expr SHR Expr .)

  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]
  ! ADD             [ shift and go to state 172 ]
  ! SUB             [ shift and go to state 173 ]
  ! OR              [ shift and go to state 174 ]
  ! XOR             [ shift and go to state 175 ]
  ! MUL             [ shift and go to state 176 ]
  ! QUO             [ shift and go to state 177 ]
  ! REM             [ shift and go to state 178 ]
  ! SHL             [ shift and go to state 179 ]
  ! SHR             [ shift and go to state 180 ]
  ! AND             [ shift and go to state 181 ]
  ! AND_NOT         [ shift and go to state 182 ]


state 280

    (74) Expr -> Expr AND Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 74 (Expr -> Expr AND Expr .)
    LAND            reduce using rule 74 (Expr -> Expr AND Expr .)
    EQL             reduce using rule 74 (Expr -> Expr AND Expr .)
    NEQ             reduce using rule 74 (Expr -> Expr AND Expr .)
    LSS             reduce using rule 74 (Expr -> Expr AND Expr .)
    LEQ             reduce using rule 74 (Expr -> Expr AND Expr .)
    GTR             reduce using rule 74 (Expr -> Expr AND Expr .)
    GEQ             reduce using rule 74 (Expr -> Expr AND Expr .)
    ADD             reduce using rule 74 (Expr -> Expr AND Expr .)
    SUB             reduce using rule 74 (Expr -> Expr AND Expr .)
    OR              reduce using rule 74 (Expr -> Expr AND Expr .)
    XOR             reduce using rule 74 (Expr -> Expr AND Expr .)
    MUL             reduce using rule 74 (Expr -> Expr AND Expr .)
    QUO             reduce using rule 74 (Expr -> Expr AND Expr .)
    REM             reduce using rule 74 (Expr -> Expr AND Expr .)
    SHL             reduce using rule 74 (Expr -> Expr AND Expr .)
    SHR             reduce using rule 74 (Expr -> Expr AND Expr .)
    AND             reduce using rule 74 (Expr -> Expr AND Expr .)
    AND_NOT         reduce using rule 74 (Expr -> Expr AND Expr .)
    RBRACK          reduce using rule 74 (Expr -> Expr AND Expr .)
    COMMA           reduce using rule 74 (Expr -> Expr AND Expr .)
    SEMICOLON       reduce using rule 74 (Expr -> Expr AND Expr .)
    RPAREN          reduce using rule 74 (Expr -> Expr AND Expr .)
    INC             reduce using rule 74 (Expr -> Expr AND Expr .)
    DEC             reduce using rule 74 (Expr -> Expr AND Expr .)
    ASSIGN          reduce using rule 74 (Expr -> Expr AND Expr .)
    ADD_ASSIGN      reduce using rule 74 (Expr -> Expr AND Expr .)
    SUB_ASSIGN      reduce using rule 74 (Expr -> Expr AND Expr .)
    OR_ASSIGN       reduce using rule 74 (Expr -> Expr AND Expr .)
    XOR_ASSIGN      reduce using rule 74 (Expr -> Expr AND Expr .)
    MUL_ASSIGN      reduce using rule 74 (Expr -> Expr AND Expr .)
    QUO_ASSIGN      reduce using rule 74 (Expr -> Expr AND Expr .)
    REM_ASSIGN      reduce using rule 74 (Expr -> Expr AND Expr .)
    AND_ASSIGN      reduce using rule 74 (Expr -> Expr AND Expr .)
    SHL_ASSIGN      reduce using rule 74 (Expr -> Expr AND Expr .)
    SHR_ASSIGN      reduce using rule 74 (Expr -> Expr AND Expr .)
    AND_NOT_ASSIGN  reduce using rule 74 (Expr -> Expr AND Expr .)
    COLON           reduce using rule 74 (Expr -> Expr AND Expr .)
    RBRACE          reduce using rule 74 (Expr -> Expr AND Expr .)
    LBRACE          reduce using rule 74 (Expr -> Expr AND Expr .)
    ELSE            reduce using rule 74 (Expr -> Expr AND Expr .)

  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]
  ! ADD             [ shift and go to state 172 ]
  ! SUB             [ shift and go to state 173 ]
  ! OR              [ shift and go to state 174 ]
  ! XOR             [ shift and go to state 175 ]
  ! MUL             [ shift and go to state 176 ]
  ! QUO             [ shift and go to state 177 ]
  ! REM             [ shift and go to state 178 ]
  ! SHL             [ shift and go to state 179 ]
  ! SHR             [ shift and go to state 180 ]
  ! AND             [ shift and go to state 181 ]
  ! AND_NOT         [ shift and go to state 182 ]


state 281

    (75) Expr -> Expr AND_NOT Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LOR             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    LAND            reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    EQL             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    NEQ             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    LSS             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    LEQ             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    GTR             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    GEQ             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    ADD             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    SUB             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    OR              reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    XOR             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    MUL             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    QUO             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    REM             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    SHL             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    SHR             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    AND             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    AND_NOT         reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    RBRACK          reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    COMMA           reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    SEMICOLON       reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    RPAREN          reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    INC             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    DEC             reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    ASSIGN          reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    ADD_ASSIGN      reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    SUB_ASSIGN      reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    OR_ASSIGN       reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    XOR_ASSIGN      reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    MUL_ASSIGN      reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    QUO_ASSIGN      reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    REM_ASSIGN      reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    AND_ASSIGN      reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    SHL_ASSIGN      reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    SHR_ASSIGN      reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    AND_NOT_ASSIGN  reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    COLON           reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    RBRACE          reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    LBRACE          reduce using rule 75 (Expr -> Expr AND_NOT Expr .)
    ELSE            reduce using rule 75 (Expr -> Expr AND_NOT Expr .)

  ! LOR             [ shift and go to state 164 ]
  ! LAND            [ shift and go to state 165 ]
  ! EQL             [ shift and go to state 166 ]
  ! NEQ             [ shift and go to state 167 ]
  ! LSS             [ shift and go to state 168 ]
  ! LEQ             [ shift and go to state 169 ]
  ! GTR             [ shift and go to state 170 ]
  ! GEQ             [ shift and go to state 171 ]
  ! ADD             [ shift and go to state 172 ]
  ! SUB             [ shift and go to state 173 ]
  ! OR              [ shift and go to state 174 ]
  ! XOR             [ shift and go to state 175 ]
  ! MUL             [ shift and go to state 176 ]
  ! QUO             [ shift and go to state 177 ]
  ! REM             [ shift and go to state 178 ]
  ! SHL             [ shift and go to state 179 ]
  ! SHR             [ shift and go to state 180 ]
  ! AND             [ shift and go to state 181 ]
  ! AND_NOT         [ shift and go to state 182 ]


state 282

    (91) Selector -> PERIOD IDENT .

    PERIOD          reduce using rule 91 (Selector -> PERIOD IDENT .)
    LBRACK          reduce using rule 91 (Selector -> PERIOD IDENT .)
    LPAREN          reduce using rule 91 (Selector -> PERIOD IDENT .)
    LOR             reduce using rule 91 (Selector -> PERIOD IDENT .)
    LAND            reduce using rule 91 (Selector -> PERIOD IDENT .)
    EQL             reduce using rule 91 (Selector -> PERIOD IDENT .)
    NEQ             reduce using rule 91 (Selector -> PERIOD IDENT .)
    LSS             reduce using rule 91 (Selector -> PERIOD IDENT .)
    LEQ             reduce using rule 91 (Selector -> PERIOD IDENT .)
    GTR             reduce using rule 91 (Selector -> PERIOD IDENT .)
    GEQ             reduce using rule 91 (Selector -> PERIOD IDENT .)
    ADD             reduce using rule 91 (Selector -> PERIOD IDENT .)
    SUB             reduce using rule 91 (Selector -> PERIOD IDENT .)
    OR              reduce using rule 91 (Selector -> PERIOD IDENT .)
    XOR             reduce using rule 91 (Selector -> PERIOD IDENT .)
    MUL             reduce using rule 91 (Selector -> PERIOD IDENT .)
    QUO             reduce using rule 91 (Selector -> PERIOD IDENT .)
    REM             reduce using rule 91 (Selector -> PERIOD IDENT .)
    SHL             reduce using rule 91 (Selector -> PERIOD IDENT .)
    SHR             reduce using rule 91 (Selector -> PERIOD IDENT .)
    AND             reduce using rule 91 (Selector -> PERIOD IDENT .)
    AND_NOT         reduce using rule 91 (Selector -> PERIOD IDENT .)
    RBRACK          reduce using rule 91 (Selector -> PERIOD IDENT .)
    COMMA           reduce using rule 91 (Selector -> PERIOD IDENT .)
    SEMICOLON       reduce using rule 91 (Selector -> PERIOD IDENT .)
    RPAREN          reduce using rule 91 (Selector -> PERIOD IDENT .)
    INC             reduce using rule 91 (Selector -> PERIOD IDENT .)
    DEC             reduce using rule 91 (Selector -> PERIOD IDENT .)
    ASSIGN          reduce using rule 91 (Selector -> PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 91 (Selector -> PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 91 (Selector -> PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 91 (Selector -> PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 91 (Selector -> PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 91 (Selector -> PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 91 (Selector -> PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 91 (Selector -> PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 91 (Selector -> PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 91 (Selector -> PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 91 (Selector -> PERIOD IDENT .)
    AND_NOT_ASSIGN  reduce using rule 91 (Selector -> PERIOD IDENT .)
    COLON           reduce using rule 91 (Selector -> PERIOD IDENT .)
    RBRACE          reduce using rule 91 (Selector -> PERIOD IDENT .)
    LBRACE          reduce using rule 91 (Selector -> PERIOD IDENT .)
    ELSE            reduce using rule 91 (Selector -> PERIOD IDENT .)


state 283

    (92) Index -> LBRACK Expr . RBRACK
    (93) Slice -> LBRACK Expr . COLON Expr RBRACK
    (95) Slice -> LBRACK Expr . COLON RBRACK
    (98) Slice -> LBRACK Expr . COLON Expr COLON Expr RBRACK
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    RBRACK          shift and go to state 357
    COLON           shift and go to state 358
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182


state 284

    (94) Slice -> LBRACK COLON . Expr RBRACK
    (96) Slice -> LBRACK COLON . RBRACK
    (97) Slice -> LBRACK COLON . Expr COLON Expr RBRACK
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RBRACK          shift and go to state 360
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 359
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 285

    (122) TypeT -> LPAREN . TypeT RPAREN
    (123) TypeT -> LPAREN . IDENT RPAREN
    (124) TypeT -> LPAREN . IDENT PERIOD IDENT RPAREN
    (86) PrimaryExpr -> LPAREN . Expr RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody

    IDENT           shift and go to state 361
    LPAREN          shift and go to state 285
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 294
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115

    TypeT                          shift and go to state 90
    Expr                           shift and go to state 199
    ArrayType                      shift and go to state 290
    StructType                     shift and go to state 291
    SliceType                      shift and go to state 292
    MapType                        shift and go to state 293
    FunctionType                   shift and go to state 61
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110

state 286

    (99) Arguments -> LPAREN RPAREN .

    PERIOD          reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    LBRACK          reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    LPAREN          reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    LOR             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    LAND            reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    EQL             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    NEQ             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    LSS             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    LEQ             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    GTR             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    GEQ             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    ADD             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    SUB             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    OR              reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    XOR             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    MUL             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    QUO             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    REM             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    SHL             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    SHR             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    AND             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    AND_NOT         reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    RBRACK          reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    COMMA           reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    SEMICOLON       reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    RPAREN          reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    INC             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    DEC             reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    ASSIGN          reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    ADD_ASSIGN      reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    SUB_ASSIGN      reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    OR_ASSIGN       reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    XOR_ASSIGN      reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    MUL_ASSIGN      reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    QUO_ASSIGN      reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    REM_ASSIGN      reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    AND_ASSIGN      reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    SHL_ASSIGN      reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    SHR_ASSIGN      reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    COLON           reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    RBRACE          reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    LBRACE          reduce using rule 99 (Arguments -> LPAREN RPAREN .)
    ELSE            reduce using rule 99 (Arguments -> LPAREN RPAREN .)


state 287

    (100) Arguments -> LPAREN ExpressionList . RPAREN
    (101) Arguments -> LPAREN ExpressionList . COMMA RPAREN
    (55) ExpressionList -> ExpressionList . COMMA Expr

    RPAREN          shift and go to state 362
    COMMA           shift and go to state 363


state 288

    (102) Arguments -> LPAREN TypeT . RPAREN
    (103) Arguments -> LPAREN TypeT . COMMA RPAREN
    (104) Arguments -> LPAREN TypeT . COMMA ExpressionList RPAREN
    (105) Arguments -> LPAREN TypeT . COMMA ExpressionList COMMA RPAREN

    RPAREN          shift and go to state 364
    COMMA           shift and go to state 365


state 289

    (106) Arguments -> LPAREN IDENT . RPAREN
    (107) Arguments -> LPAREN IDENT . COMMA RPAREN
    (108) Arguments -> LPAREN IDENT . COMMA ExpressionList RPAREN
    (109) Arguments -> LPAREN IDENT . COMMA ExpressionList COMMA RPAREN
    (110) Arguments -> LPAREN IDENT . PERIOD IDENT RPAREN
    (111) Arguments -> LPAREN IDENT . PERIOD IDENT COMMA RPAREN
    (112) Arguments -> LPAREN IDENT . PERIOD IDENT COMMA ExpressionList RPAREN
    (113) Arguments -> LPAREN IDENT . PERIOD IDENT COMMA ExpressionList COMMA RPAREN
    (84) PrimaryExpr -> IDENT .
    (85) PrimaryExpr -> IDENT . PERIOD IDENT
    (169) CompositeLit -> IDENT . LiteralValue
    (170) CompositeLit -> IDENT . PERIOD IDENT LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    RPAREN          shift and go to state 366
    COMMA           shift and go to state 367
    PERIOD          shift and go to state 368
    LBRACK          reduce using rule 84 (PrimaryExpr -> IDENT .)
    LPAREN          reduce using rule 84 (PrimaryExpr -> IDENT .)
    LOR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LAND            reduce using rule 84 (PrimaryExpr -> IDENT .)
    EQL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    NEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LSS             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    GTR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    GEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    ADD             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SUB             reduce using rule 84 (PrimaryExpr -> IDENT .)
    OR              reduce using rule 84 (PrimaryExpr -> IDENT .)
    XOR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    MUL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    QUO             reduce using rule 84 (PrimaryExpr -> IDENT .)
    REM             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND             reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_NOT         reduce using rule 84 (PrimaryExpr -> IDENT .)
    LBRACE          shift and go to state 198

  ! PERIOD          [ reduce using rule 84 (PrimaryExpr -> IDENT .) ]
  ! RPAREN          [ reduce using rule 84 (PrimaryExpr -> IDENT .) ]
  ! COMMA           [ reduce using rule 84 (PrimaryExpr -> IDENT .) ]

    LiteralValue                   shift and go to state 197

state 290

    (117) TypeT -> ArrayType .
    (166) CompositeLit -> ArrayType . LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    RPAREN          reduce using rule 117 (TypeT -> ArrayType .)
    COMMA           reduce using rule 117 (TypeT -> ArrayType .)
    LBRACE          shift and go to state 198

    LiteralValue                   shift and go to state 201

state 291

    (118) TypeT -> StructType .
    (165) CompositeLit -> StructType . Arguments
    (99) Arguments -> . LPAREN RPAREN
    (100) Arguments -> . LPAREN ExpressionList RPAREN
    (101) Arguments -> . LPAREN ExpressionList COMMA RPAREN
    (102) Arguments -> . LPAREN TypeT RPAREN
    (103) Arguments -> . LPAREN TypeT COMMA RPAREN
    (104) Arguments -> . LPAREN TypeT COMMA ExpressionList RPAREN
    (105) Arguments -> . LPAREN TypeT COMMA ExpressionList COMMA RPAREN
    (106) Arguments -> . LPAREN IDENT RPAREN
    (107) Arguments -> . LPAREN IDENT COMMA RPAREN
    (108) Arguments -> . LPAREN IDENT COMMA ExpressionList RPAREN
    (109) Arguments -> . LPAREN IDENT COMMA ExpressionList COMMA RPAREN
    (110) Arguments -> . LPAREN IDENT PERIOD IDENT RPAREN
    (111) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA RPAREN
    (112) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN
    (113) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN

    RPAREN          reduce using rule 118 (TypeT -> StructType .)
    COMMA           reduce using rule 118 (TypeT -> StructType .)
    LPAREN          shift and go to state 194

    Arguments                      shift and go to state 200

state 292

    (119) TypeT -> SliceType .
    (167) CompositeLit -> SliceType . LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    RPAREN          reduce using rule 119 (TypeT -> SliceType .)
    COMMA           reduce using rule 119 (TypeT -> SliceType .)
    LBRACE          shift and go to state 198

    LiteralValue                   shift and go to state 202

state 293

    (120) TypeT -> MapType .
    (168) CompositeLit -> MapType . LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    RPAREN          reduce using rule 120 (TypeT -> MapType .)
    COMMA           reduce using rule 120 (TypeT -> MapType .)
    LBRACE          shift and go to state 198

    LiteralValue                   shift and go to state 203

state 294

    (156) FunctionType -> FUNC . Signature
    (182) FunctionLit -> FUNC . Signature FunctionBody
    (187) Signature -> . Parameters Result
    (188) Signature -> . Parameters
    (189) Parameters -> . LPAREN RPAREN
    (190) Parameters -> . LPAREN ParameterList RPAREN
    (191) Parameters -> . LPAREN ParameterList COMMA RPAREN

    LPAREN          shift and go to state 82

    Signature                      shift and go to state 369
    Parameters                     shift and go to state 81

state 295

    (85) PrimaryExpr -> IDENT PERIOD IDENT .
    (170) CompositeLit -> IDENT PERIOD IDENT . LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    PERIOD          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LBRACK          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LPAREN          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LOR             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LAND            reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    EQL             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    NEQ             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LSS             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LEQ             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    GTR             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    GEQ             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    ADD             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    SUB             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    OR              reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    XOR             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    MUL             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    QUO             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    REM             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    SHL             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    SHR             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    AND             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    AND_NOT         reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    RBRACK          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    COMMA           reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    SEMICOLON       reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    RPAREN          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    INC             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    DEC             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    ASSIGN          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    ADD_ASSIGN      reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    SUB_ASSIGN      reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    OR_ASSIGN       reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    XOR_ASSIGN      reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    MUL_ASSIGN      reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    QUO_ASSIGN      reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    REM_ASSIGN      reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    AND_ASSIGN      reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    SHL_ASSIGN      reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    SHR_ASSIGN      reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    AND_NOT_ASSIGN  reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    COLON           reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    RBRACE          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LBRACE          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    ELSE            reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)

  ! LBRACE          [ shift and go to state 198 ]

    LiteralValue                   shift and go to state 370

state 296

    (171) LiteralValue -> LBRACE ElementList . COMMA RBRACE
    (172) LiteralValue -> LBRACE ElementList . RBRACE
    (175) ElementList -> ElementList . COMMA KeyedElement

    COMMA           shift and go to state 371
    RBRACE          shift and go to state 372


state 297

    (173) LiteralValue -> LBRACE RBRACE .

    PERIOD          reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    LBRACK          reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    LPAREN          reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    LOR             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    LAND            reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    EQL             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    NEQ             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    LSS             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    LEQ             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    GTR             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    GEQ             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    ADD             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    SUB             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    OR              reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    XOR             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    MUL             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    QUO             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    REM             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    SHL             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    SHR             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    AND             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    AND_NOT         reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    RBRACK          reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    COMMA           reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    SEMICOLON       reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    RPAREN          reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    INC             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    DEC             reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    ASSIGN          reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    ADD_ASSIGN      reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    SUB_ASSIGN      reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    OR_ASSIGN       reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    XOR_ASSIGN      reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    MUL_ASSIGN      reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    QUO_ASSIGN      reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    REM_ASSIGN      reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    AND_ASSIGN      reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    SHL_ASSIGN      reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    SHR_ASSIGN      reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    AND_NOT_ASSIGN  reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    COLON           reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    RBRACE          reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    LBRACE          reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)
    ELSE            reduce using rule 173 (LiteralValue -> LBRACE RBRACE .)


state 298

    (174) ElementList -> KeyedElement .

    COMMA           reduce using rule 174 (ElementList -> KeyedElement .)
    RBRACE          reduce using rule 174 (ElementList -> KeyedElement .)


state 299

    (176) KeyedElement -> Element .

    COMMA           reduce using rule 176 (KeyedElement -> Element .)
    RBRACE          reduce using rule 176 (KeyedElement -> Element .)


state 300

    (177) KeyedElement -> Key . COLON Element

    COLON           shift and go to state 373


state 301

    (180) Element -> Expr .
    (178) Key -> Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    COMMA           reduce using rule 180 (Element -> Expr .)
    RBRACE          reduce using rule 180 (Element -> Expr .)
    COLON           reduce using rule 178 (Key -> Expr .)
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182


state 302

    (181) Element -> LiteralValue .
    (179) Key -> LiteralValue .

    COMMA           reduce using rule 181 (Element -> LiteralValue .)
    RBRACE          reduce using rule 181 (Element -> LiteralValue .)
    COLON           reduce using rule 179 (Key -> LiteralValue .)


state 303

    (86) PrimaryExpr -> LPAREN Expr RPAREN .

    PERIOD          reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    LBRACK          reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    LPAREN          reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    LOR             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    LAND            reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    EQL             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    NEQ             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    LSS             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    LEQ             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    GTR             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    GEQ             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    ADD             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    SUB             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    OR              reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    XOR             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    MUL             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    QUO             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    REM             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    SHL             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    SHR             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    AND             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    AND_NOT         reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    RBRACK          reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    COMMA           reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    SEMICOLON       reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    RPAREN          reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    INC             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    DEC             reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    ASSIGN          reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    ADD_ASSIGN      reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    SUB_ASSIGN      reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    OR_ASSIGN       reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    XOR_ASSIGN      reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    MUL_ASSIGN      reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    QUO_ASSIGN      reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    REM_ASSIGN      reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    AND_ASSIGN      reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    SHL_ASSIGN      reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    SHR_ASSIGN      reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    COLON           reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    RBRACE          reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    LBRACE          reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)
    ELSE            reduce using rule 86 (PrimaryExpr -> LPAREN Expr RPAREN .)


state 304

    (182) FunctionLit -> FUNC Signature FunctionBody .

    PERIOD          reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    LBRACK          reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    LPAREN          reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    LOR             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    LAND            reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    EQL             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    NEQ             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    LSS             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    LEQ             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    GTR             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    GEQ             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    ADD             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    SUB             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    OR              reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    XOR             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    MUL             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    QUO             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    REM             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    SHL             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    SHR             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    AND             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    AND_NOT         reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    RBRACK          reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    COMMA           reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    SEMICOLON       reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    RPAREN          reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    INC             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    DEC             reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    ASSIGN          reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    ADD_ASSIGN      reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    SUB_ASSIGN      reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    OR_ASSIGN       reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    XOR_ASSIGN      reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    MUL_ASSIGN      reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    QUO_ASSIGN      reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    REM_ASSIGN      reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    AND_ASSIGN      reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    SHL_ASSIGN      reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    SHR_ASSIGN      reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    AND_NOT_ASSIGN  reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    COLON           reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    RBRACE          reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    LBRACE          reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)
    ELSE            reduce using rule 182 (FunctionLit -> FUNC Signature FunctionBody .)


state 305

    (134) StructType -> STRUCT BeginStruct LBRACE FieldDeclMult . RBRACE EndStruct
    (137) FieldDeclMult -> FieldDeclMult . FieldDecl SEMICOLON
    (139) FieldDecl -> . IdentifierList Type
    (140) FieldDecl -> . IdentifierList IDENT
    (141) FieldDecl -> . IdentifierList IDENT PERIOD IDENT
    (142) FieldDecl -> . EmbeddedField
    (143) FieldDecl -> . IdentifierList Type Tag
    (144) FieldDecl -> . IdentifierList IDENT Tag
    (145) FieldDecl -> . IdentifierList IDENT PERIOD IDENT Tag
    (146) FieldDecl -> . EmbeddedField Tag
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (148) EmbeddedField -> . MUL IDENT
    (149) EmbeddedField -> . IDENT
    (150) EmbeddedField -> . MUL IDENT PERIOD IDENT
    (151) EmbeddedField -> . IDENT PERIOD IDENT

    RBRACE          shift and go to state 374
    IDENT           shift and go to state 377
    MUL             shift and go to state 379

    FieldDecl                      shift and go to state 375
    IdentifierList                 shift and go to state 376
    EmbeddedField                  shift and go to state 378

state 306

    (152) MapType -> MAP LBRACK KeyType RBRACK . ElementType
    (131) ElementType -> . Type
    (132) ElementType -> . IDENT
    (133) ElementType -> . IDENT PERIOD IDENT
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 163
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    ElementType                    shift and go to state 380
    Type                           shift and go to state 162
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 307

    (155) KeyType -> IDENT PERIOD . IDENT

    IDENT           shift and go to state 381


state 308

    (55) ExpressionList -> ExpressionList COMMA Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    COMMA           reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    SEMICOLON       reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    ASSIGN          reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    ADD_ASSIGN      reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    SUB_ASSIGN      reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    OR_ASSIGN       reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    XOR_ASSIGN      reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    MUL_ASSIGN      reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    QUO_ASSIGN      reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    REM_ASSIGN      reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    AND_ASSIGN      reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    SHL_ASSIGN      reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    SHR_ASSIGN      reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    AND_NOT_ASSIGN  reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    RPAREN          reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    LBRACE          reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    COLON           reduce using rule 55 (ExpressionList -> ExpressionList COMMA Expr .)
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182


state 309

    (35) VarSpec -> IdentifierList IDENT PERIOD IDENT ASSIGN . ExpressionList
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 382
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 310

    (48) AliasDecl -> IDENT ASSIGN IDENT PERIOD IDENT .

    SEMICOLON       reduce using rule 48 (AliasDecl -> IDENT ASSIGN IDENT PERIOD IDENT .)


state 311

    (253) Block -> LBRACE StatementList RBRACE .

    SEMICOLON       reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    PERIOD          reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    LBRACK          reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    LPAREN          reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    LOR             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    LAND            reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    EQL             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    NEQ             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    LSS             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    LEQ             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    GTR             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    GEQ             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    ADD             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    SUB             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    OR              reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    XOR             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    MUL             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    QUO             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    REM             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    SHL             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    SHR             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    AND             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    AND_NOT         reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    RBRACK          reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    COMMA           reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    RPAREN          reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    INC             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    DEC             reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    ASSIGN          reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    ADD_ASSIGN      reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    SUB_ASSIGN      reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    OR_ASSIGN       reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    XOR_ASSIGN      reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    MUL_ASSIGN      reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    QUO_ASSIGN      reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    REM_ASSIGN      reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    AND_ASSIGN      reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    SHL_ASSIGN      reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    SHR_ASSIGN      reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    AND_NOT_ASSIGN  reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    COLON           reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    RBRACE          reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    LBRACE          reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)
    ELSE            reduce using rule 253 (Block -> LBRACE StatementList RBRACE .)


state 312

    (204) StatementList -> Statement SEMICOLON . StatementList
    (204) StatementList -> . Statement SEMICOLON StatementList
    (205) StatementList -> .
    (206) Statement -> . Decl
    (207) Statement -> . LabeledStmt
    (208) Statement -> . SimpleStmt
    (209) Statement -> . GotoStmt
    (210) Statement -> . ReturnStmt
    (211) Statement -> . BreakStmt
    (212) Statement -> . ContinueStmt
    (213) Statement -> . FallthroughStmt
    (214) Statement -> . BeginScope Block EndScope
    (215) Statement -> . IfStmt
    (216) Statement -> . SwitchStmt
    (217) Statement -> . ForStmt
    (19) Decl -> . ConstDecl
    (20) Decl -> . VarDecl
    (21) Decl -> . TypeDecl
    (218) LabeledStmt -> . Label COLON Statement
    (220) SimpleStmt -> . EmptyStmt
    (221) SimpleStmt -> . ExpressionStmt
    (222) SimpleStmt -> . IncDecStmt
    (223) SimpleStmt -> . Assignment
    (224) SimpleStmt -> . ShortVarDecl
    (245) GotoStmt -> . GOTO Label
    (246) ReturnStmt -> . RETURN ExpressionList
    (247) ReturnStmt -> . RETURN
    (248) BreakStmt -> . BREAK Label
    (249) BreakStmt -> . BREAK
    (250) ContinueStmt -> . CONTINUE Label
    (251) ContinueStmt -> . CONTINUE
    (252) FallthroughStmt -> . FALLTHROUGH
    (301) BeginScope -> .
    (254) IfStmt -> . IF Expr BeginScope Block EndScope else_stmt
    (255) IfStmt -> . IF BeginScope SimpleStmt EndScope SEMICOLON Expr else_stmt
    (259) SwitchStmt -> . ExprSwitchStmt
    (260) SwitchStmt -> . TypeSwitchStmt
    (286) ForStmt -> . FOR BeginFor Condition Block EndFor
    (287) ForStmt -> . FOR BeginFor ForClause Block EndFor
    (288) ForStmt -> . FOR BeginFor RangeClause Block EndFor
    (289) ForStmt -> . FOR BeginFor Block EndFor
    (22) ConstDecl -> . CONST ConstSpec
    (23) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (29) VarDecl -> . VAR VarSpec
    (30) VarDecl -> . VAR LPAREN VarMult RPAREN
    (40) TypeDecl -> . TYPE TypeSpec
    (41) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (219) Label -> . IDENT
    (225) EmptyStmt -> .
    (226) ExpressionStmt -> . Expr
    (227) IncDecStmt -> . Expr INC
    (228) IncDecStmt -> . Expr DEC
    (229) Assignment -> . ExpressionList assign_op ExpressionList
    (244) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (261) ExprSwitchStmt -> . SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (262) ExprSwitchStmt -> . SWITCH Expr LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (263) ExprSwitchStmt -> . SWITCH BeginScope SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (264) ExprSwitchStmt -> . SWITCH LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (272) TypeSwitchStmt -> . SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (273) TypeSwitchStmt -> . SWITCH TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RBRACE          reduce using rule 205 (StatementList -> .)
    CASE            reduce using rule 205 (StatementList -> .)
    DEFAULT         reduce using rule 205 (StatementList -> .)
    GOTO            shift and go to state 238
    RETURN          shift and go to state 239
    BREAK           shift and go to state 241
    CONTINUE        shift and go to state 242
    FALLTHROUGH     shift and go to state 243
    LBRACE          reduce using rule 301 (BeginScope -> .)
    IF              shift and go to state 244
    FOR             shift and go to state 248
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 249
    SEMICOLON       reduce using rule 225 (EmptyStmt -> .)
    SWITCH          shift and go to state 251
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Statement                      shift and go to state 219
    StatementList                  shift and go to state 383
    Decl                           shift and go to state 220
    LabeledStmt                    shift and go to state 221
    SimpleStmt                     shift and go to state 222
    GotoStmt                       shift and go to state 223
    ReturnStmt                     shift and go to state 224
    BreakStmt                      shift and go to state 225
    ContinueStmt                   shift and go to state 226
    FallthroughStmt                shift and go to state 227
    BeginScope                     shift and go to state 228
    IfStmt                         shift and go to state 229
    SwitchStmt                     shift and go to state 230
    ForStmt                        shift and go to state 231
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    Label                          shift and go to state 232
    EmptyStmt                      shift and go to state 233
    ExpressionStmt                 shift and go to state 234
    IncDecStmt                     shift and go to state 235
    Assignment                     shift and go to state 236
    ShortVarDecl                   shift and go to state 237
    ExpressionList                 shift and go to state 240
    Expr                           shift and go to state 245
    ExprSwitchStmt                 shift and go to state 246
    TypeSwitchStmt                 shift and go to state 247
    IdentifierList                 shift and go to state 250
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 313

    (214) Statement -> BeginScope Block . EndScope
    (3) EndScope -> .

    SEMICOLON       reduce using rule 3 (EndScope -> .)

    EndScope                       shift and go to state 384

state 314

    (218) LabeledStmt -> Label COLON . Statement
    (206) Statement -> . Decl
    (207) Statement -> . LabeledStmt
    (208) Statement -> . SimpleStmt
    (209) Statement -> . GotoStmt
    (210) Statement -> . ReturnStmt
    (211) Statement -> . BreakStmt
    (212) Statement -> . ContinueStmt
    (213) Statement -> . FallthroughStmt
    (214) Statement -> . BeginScope Block EndScope
    (215) Statement -> . IfStmt
    (216) Statement -> . SwitchStmt
    (217) Statement -> . ForStmt
    (19) Decl -> . ConstDecl
    (20) Decl -> . VarDecl
    (21) Decl -> . TypeDecl
    (218) LabeledStmt -> . Label COLON Statement
    (220) SimpleStmt -> . EmptyStmt
    (221) SimpleStmt -> . ExpressionStmt
    (222) SimpleStmt -> . IncDecStmt
    (223) SimpleStmt -> . Assignment
    (224) SimpleStmt -> . ShortVarDecl
    (245) GotoStmt -> . GOTO Label
    (246) ReturnStmt -> . RETURN ExpressionList
    (247) ReturnStmt -> . RETURN
    (248) BreakStmt -> . BREAK Label
    (249) BreakStmt -> . BREAK
    (250) ContinueStmt -> . CONTINUE Label
    (251) ContinueStmt -> . CONTINUE
    (252) FallthroughStmt -> . FALLTHROUGH
    (301) BeginScope -> .
    (254) IfStmt -> . IF Expr BeginScope Block EndScope else_stmt
    (255) IfStmt -> . IF BeginScope SimpleStmt EndScope SEMICOLON Expr else_stmt
    (259) SwitchStmt -> . ExprSwitchStmt
    (260) SwitchStmt -> . TypeSwitchStmt
    (286) ForStmt -> . FOR BeginFor Condition Block EndFor
    (287) ForStmt -> . FOR BeginFor ForClause Block EndFor
    (288) ForStmt -> . FOR BeginFor RangeClause Block EndFor
    (289) ForStmt -> . FOR BeginFor Block EndFor
    (22) ConstDecl -> . CONST ConstSpec
    (23) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (29) VarDecl -> . VAR VarSpec
    (30) VarDecl -> . VAR LPAREN VarMult RPAREN
    (40) TypeDecl -> . TYPE TypeSpec
    (41) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (219) Label -> . IDENT
    (225) EmptyStmt -> .
    (226) ExpressionStmt -> . Expr
    (227) IncDecStmt -> . Expr INC
    (228) IncDecStmt -> . Expr DEC
    (229) Assignment -> . ExpressionList assign_op ExpressionList
    (244) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (261) ExprSwitchStmt -> . SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (262) ExprSwitchStmt -> . SWITCH Expr LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (263) ExprSwitchStmt -> . SWITCH BeginScope SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (264) ExprSwitchStmt -> . SWITCH LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (272) TypeSwitchStmt -> . SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (273) TypeSwitchStmt -> . SWITCH TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    GOTO            shift and go to state 238
    RETURN          shift and go to state 239
    BREAK           shift and go to state 241
    CONTINUE        shift and go to state 242
    FALLTHROUGH     shift and go to state 243
    LBRACE          reduce using rule 301 (BeginScope -> .)
    IF              shift and go to state 244
    FOR             shift and go to state 248
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 249
    SEMICOLON       reduce using rule 225 (EmptyStmt -> .)
    SWITCH          shift and go to state 251
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Label                          shift and go to state 232
    Statement                      shift and go to state 385
    Decl                           shift and go to state 220
    LabeledStmt                    shift and go to state 221
    SimpleStmt                     shift and go to state 222
    GotoStmt                       shift and go to state 223
    ReturnStmt                     shift and go to state 224
    BreakStmt                      shift and go to state 225
    ContinueStmt                   shift and go to state 226
    FallthroughStmt                shift and go to state 227
    BeginScope                     shift and go to state 228
    IfStmt                         shift and go to state 229
    SwitchStmt                     shift and go to state 230
    ForStmt                        shift and go to state 231
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    EmptyStmt                      shift and go to state 233
    ExpressionStmt                 shift and go to state 234
    IncDecStmt                     shift and go to state 235
    Assignment                     shift and go to state 236
    ShortVarDecl                   shift and go to state 237
    ExpressionList                 shift and go to state 240
    Expr                           shift and go to state 245
    ExprSwitchStmt                 shift and go to state 246
    TypeSwitchStmt                 shift and go to state 247
    IdentifierList                 shift and go to state 250
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 315

    (245) GotoStmt -> GOTO Label .

    SEMICOLON       reduce using rule 245 (GotoStmt -> GOTO Label .)


state 316

    (219) Label -> IDENT .

    SEMICOLON       reduce using rule 219 (Label -> IDENT .)


state 317

    (246) ReturnStmt -> RETURN ExpressionList .
    (55) ExpressionList -> ExpressionList . COMMA Expr

    SEMICOLON       reduce using rule 246 (ReturnStmt -> RETURN ExpressionList .)
    COMMA           shift and go to state 211


state 318

    (229) Assignment -> ExpressionList assign_op . ExpressionList
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 386
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 319

    (230) assign_op -> add_op_assign .

    ADD             reduce using rule 230 (assign_op -> add_op_assign .)
    SUB             reduce using rule 230 (assign_op -> add_op_assign .)
    NOT             reduce using rule 230 (assign_op -> add_op_assign .)
    XOR             reduce using rule 230 (assign_op -> add_op_assign .)
    MUL             reduce using rule 230 (assign_op -> add_op_assign .)
    AND             reduce using rule 230 (assign_op -> add_op_assign .)
    IDENT           reduce using rule 230 (assign_op -> add_op_assign .)
    LPAREN          reduce using rule 230 (assign_op -> add_op_assign .)
    INT             reduce using rule 230 (assign_op -> add_op_assign .)
    FLOAT           reduce using rule 230 (assign_op -> add_op_assign .)
    IMAG            reduce using rule 230 (assign_op -> add_op_assign .)
    RUNE            reduce using rule 230 (assign_op -> add_op_assign .)
    STRING          reduce using rule 230 (assign_op -> add_op_assign .)
    FUNC            reduce using rule 230 (assign_op -> add_op_assign .)
    STRUCT          reduce using rule 230 (assign_op -> add_op_assign .)
    LBRACK          reduce using rule 230 (assign_op -> add_op_assign .)
    MAP             reduce using rule 230 (assign_op -> add_op_assign .)


state 320

    (231) assign_op -> mul_op_assign .

    ADD             reduce using rule 231 (assign_op -> mul_op_assign .)
    SUB             reduce using rule 231 (assign_op -> mul_op_assign .)
    NOT             reduce using rule 231 (assign_op -> mul_op_assign .)
    XOR             reduce using rule 231 (assign_op -> mul_op_assign .)
    MUL             reduce using rule 231 (assign_op -> mul_op_assign .)
    AND             reduce using rule 231 (assign_op -> mul_op_assign .)
    IDENT           reduce using rule 231 (assign_op -> mul_op_assign .)
    LPAREN          reduce using rule 231 (assign_op -> mul_op_assign .)
    INT             reduce using rule 231 (assign_op -> mul_op_assign .)
    FLOAT           reduce using rule 231 (assign_op -> mul_op_assign .)
    IMAG            reduce using rule 231 (assign_op -> mul_op_assign .)
    RUNE            reduce using rule 231 (assign_op -> mul_op_assign .)
    STRING          reduce using rule 231 (assign_op -> mul_op_assign .)
    FUNC            reduce using rule 231 (assign_op -> mul_op_assign .)
    STRUCT          reduce using rule 231 (assign_op -> mul_op_assign .)
    LBRACK          reduce using rule 231 (assign_op -> mul_op_assign .)
    MAP             reduce using rule 231 (assign_op -> mul_op_assign .)


state 321

    (232) assign_op -> ASSIGN .

    ADD             reduce using rule 232 (assign_op -> ASSIGN .)
    SUB             reduce using rule 232 (assign_op -> ASSIGN .)
    NOT             reduce using rule 232 (assign_op -> ASSIGN .)
    XOR             reduce using rule 232 (assign_op -> ASSIGN .)
    MUL             reduce using rule 232 (assign_op -> ASSIGN .)
    AND             reduce using rule 232 (assign_op -> ASSIGN .)
    IDENT           reduce using rule 232 (assign_op -> ASSIGN .)
    LPAREN          reduce using rule 232 (assign_op -> ASSIGN .)
    INT             reduce using rule 232 (assign_op -> ASSIGN .)
    FLOAT           reduce using rule 232 (assign_op -> ASSIGN .)
    IMAG            reduce using rule 232 (assign_op -> ASSIGN .)
    RUNE            reduce using rule 232 (assign_op -> ASSIGN .)
    STRING          reduce using rule 232 (assign_op -> ASSIGN .)
    FUNC            reduce using rule 232 (assign_op -> ASSIGN .)
    STRUCT          reduce using rule 232 (assign_op -> ASSIGN .)
    LBRACK          reduce using rule 232 (assign_op -> ASSIGN .)
    MAP             reduce using rule 232 (assign_op -> ASSIGN .)


state 322

    (233) add_op_assign -> ADD_ASSIGN .

    ADD             reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    SUB             reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    NOT             reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    XOR             reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    MUL             reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    AND             reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    IDENT           reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    LPAREN          reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    INT             reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    FLOAT           reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    IMAG            reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    RUNE            reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    STRING          reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    FUNC            reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    STRUCT          reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    LBRACK          reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)
    MAP             reduce using rule 233 (add_op_assign -> ADD_ASSIGN .)


state 323

    (234) add_op_assign -> SUB_ASSIGN .

    ADD             reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    SUB             reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    NOT             reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    XOR             reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    MUL             reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    AND             reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    IDENT           reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    LPAREN          reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    INT             reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    FLOAT           reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    IMAG            reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    RUNE            reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    STRING          reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    FUNC            reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    STRUCT          reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    LBRACK          reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)
    MAP             reduce using rule 234 (add_op_assign -> SUB_ASSIGN .)


state 324

    (235) add_op_assign -> OR_ASSIGN .

    ADD             reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    SUB             reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    NOT             reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    XOR             reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    MUL             reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    AND             reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    IDENT           reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    LPAREN          reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    INT             reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    FLOAT           reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    IMAG            reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    RUNE            reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    STRING          reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    FUNC            reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    STRUCT          reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    LBRACK          reduce using rule 235 (add_op_assign -> OR_ASSIGN .)
    MAP             reduce using rule 235 (add_op_assign -> OR_ASSIGN .)


state 325

    (236) add_op_assign -> XOR_ASSIGN .

    ADD             reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    SUB             reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    NOT             reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    XOR             reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    MUL             reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    AND             reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    IDENT           reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    LPAREN          reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    INT             reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    FLOAT           reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    IMAG            reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    RUNE            reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    STRING          reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    FUNC            reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    STRUCT          reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    LBRACK          reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)
    MAP             reduce using rule 236 (add_op_assign -> XOR_ASSIGN .)


state 326

    (237) mul_op_assign -> MUL_ASSIGN .

    ADD             reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    SUB             reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    NOT             reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    XOR             reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    MUL             reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    AND             reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    IDENT           reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    LPAREN          reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    INT             reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    FLOAT           reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    IMAG            reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    RUNE            reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    STRING          reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    FUNC            reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    STRUCT          reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    LBRACK          reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)
    MAP             reduce using rule 237 (mul_op_assign -> MUL_ASSIGN .)


state 327

    (238) mul_op_assign -> QUO_ASSIGN .

    ADD             reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    SUB             reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    NOT             reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    XOR             reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    MUL             reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    AND             reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    IDENT           reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    LPAREN          reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    INT             reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    FLOAT           reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    IMAG            reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    RUNE            reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    STRING          reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    FUNC            reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    STRUCT          reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    LBRACK          reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)
    MAP             reduce using rule 238 (mul_op_assign -> QUO_ASSIGN .)


state 328

    (239) mul_op_assign -> REM_ASSIGN .

    ADD             reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    SUB             reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    NOT             reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    XOR             reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    MUL             reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    AND             reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    IDENT           reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    LPAREN          reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    INT             reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    FLOAT           reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    IMAG            reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    RUNE            reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    STRING          reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    FUNC            reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    STRUCT          reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    LBRACK          reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)
    MAP             reduce using rule 239 (mul_op_assign -> REM_ASSIGN .)


state 329

    (240) mul_op_assign -> AND_ASSIGN .

    ADD             reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    SUB             reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    NOT             reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    XOR             reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    MUL             reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    AND             reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    IDENT           reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    LPAREN          reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    INT             reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    FLOAT           reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    IMAG            reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    RUNE            reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    STRING          reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    FUNC            reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    STRUCT          reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    LBRACK          reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)
    MAP             reduce using rule 240 (mul_op_assign -> AND_ASSIGN .)


state 330

    (241) mul_op_assign -> SHL_ASSIGN .

    ADD             reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    SUB             reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    NOT             reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    XOR             reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    MUL             reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    AND             reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    IDENT           reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    LPAREN          reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    INT             reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    FLOAT           reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    IMAG            reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    RUNE            reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    STRING          reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    FUNC            reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    STRUCT          reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    LBRACK          reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)
    MAP             reduce using rule 241 (mul_op_assign -> SHL_ASSIGN .)


state 331

    (242) mul_op_assign -> SHR_ASSIGN .

    ADD             reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    SUB             reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    NOT             reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    XOR             reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    MUL             reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    AND             reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    IDENT           reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    LPAREN          reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    INT             reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    FLOAT           reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    IMAG            reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    RUNE            reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    STRING          reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    FUNC            reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    STRUCT          reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    LBRACK          reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)
    MAP             reduce using rule 242 (mul_op_assign -> SHR_ASSIGN .)


state 332

    (243) mul_op_assign -> AND_NOT_ASSIGN .

    ADD             reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    SUB             reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    NOT             reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    XOR             reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    MUL             reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    AND             reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    IDENT           reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    LPAREN          reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    INT             reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    FLOAT           reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    IMAG            reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    RUNE            reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    STRING          reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    FUNC            reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    STRUCT          reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    LBRACK          reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)
    MAP             reduce using rule 243 (mul_op_assign -> AND_NOT_ASSIGN .)


state 333

    (248) BreakStmt -> BREAK Label .

    SEMICOLON       reduce using rule 248 (BreakStmt -> BREAK Label .)


state 334

    (250) ContinueStmt -> CONTINUE Label .

    SEMICOLON       reduce using rule 250 (ContinueStmt -> CONTINUE Label .)


state 335

    (254) IfStmt -> IF Expr . BeginScope Block EndScope else_stmt
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr
    (301) BeginScope -> .

    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182
    LBRACE          reduce using rule 301 (BeginScope -> .)

    BeginScope                     shift and go to state 387

state 336

    (255) IfStmt -> IF BeginScope . SimpleStmt EndScope SEMICOLON Expr else_stmt
    (220) SimpleStmt -> . EmptyStmt
    (221) SimpleStmt -> . ExpressionStmt
    (222) SimpleStmt -> . IncDecStmt
    (223) SimpleStmt -> . Assignment
    (224) SimpleStmt -> . ShortVarDecl
    (225) EmptyStmt -> .
    (226) ExpressionStmt -> . Expr
    (227) IncDecStmt -> . Expr INC
    (228) IncDecStmt -> . Expr DEC
    (229) Assignment -> . ExpressionList assign_op ExpressionList
    (244) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    SEMICOLON       reduce using rule 225 (EmptyStmt -> .)
    IDENT           shift and go to state 389
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    SimpleStmt                     shift and go to state 388
    Expr                           shift and go to state 245
    EmptyStmt                      shift and go to state 233
    ExpressionStmt                 shift and go to state 234
    IncDecStmt                     shift and go to state 235
    Assignment                     shift and go to state 236
    ShortVarDecl                   shift and go to state 237
    ExpressionList                 shift and go to state 240
    IdentifierList                 shift and go to state 250
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 337

    (227) IncDecStmt -> Expr INC .

    SEMICOLON       reduce using rule 227 (IncDecStmt -> Expr INC .)
    LBRACE          reduce using rule 227 (IncDecStmt -> Expr INC .)


state 338

    (228) IncDecStmt -> Expr DEC .

    SEMICOLON       reduce using rule 228 (IncDecStmt -> Expr DEC .)
    LBRACE          reduce using rule 228 (IncDecStmt -> Expr DEC .)


state 339

    (286) ForStmt -> FOR BeginFor . Condition Block EndFor
    (287) ForStmt -> FOR BeginFor . ForClause Block EndFor
    (288) ForStmt -> FOR BeginFor . RangeClause Block EndFor
    (289) ForStmt -> FOR BeginFor . Block EndFor
    (292) Condition -> . Expr
    (293) ForClause -> . InitStmt SEMICOLON Condition SEMICOLON PostStmt
    (294) ForClause -> . InitStmt SEMICOLON SEMICOLON PostStmt
    (297) RangeClause -> . RangeList RANGE Expr
    (253) Block -> . LBRACE StatementList RBRACE
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (295) InitStmt -> . SimpleStmt
    (298) RangeList -> . ExpressionList ASSIGN
    (299) RangeList -> . IdentifierList DEFINE
    (300) RangeList -> .
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (220) SimpleStmt -> . EmptyStmt
    (221) SimpleStmt -> . ExpressionStmt
    (222) SimpleStmt -> . IncDecStmt
    (223) SimpleStmt -> . Assignment
    (224) SimpleStmt -> . ShortVarDecl
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (225) EmptyStmt -> .
    (226) ExpressionStmt -> . Expr
    (227) IncDecStmt -> . Expr INC
    (228) IncDecStmt -> . Expr DEC
    (229) Assignment -> . ExpressionList assign_op ExpressionList
    (244) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    LBRACE          shift and go to state 141
    RANGE           reduce using rule 300 (RangeList -> .)
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 389
    LPAREN          shift and go to state 107
    SEMICOLON       reduce using rule 225 (EmptyStmt -> .)
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Condition                      shift and go to state 390
    Block                          shift and go to state 391
    ForClause                      shift and go to state 392
    RangeClause                    shift and go to state 393
    Expr                           shift and go to state 394
    InitStmt                       shift and go to state 395
    RangeList                      shift and go to state 396
    UnaryExpr                      shift and go to state 97
    SimpleStmt                     shift and go to state 397
    ExpressionList                 shift and go to state 398
    IdentifierList                 shift and go to state 399
    PrimaryExpr                    shift and go to state 103
    EmptyStmt                      shift and go to state 233
    ExpressionStmt                 shift and go to state 234
    IncDecStmt                     shift and go to state 235
    Assignment                     shift and go to state 236
    ShortVarDecl                   shift and go to state 237
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 340

    (244) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 400
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 341

    (261) ExprSwitchStmt -> SWITCH BeginScope . SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (263) ExprSwitchStmt -> SWITCH BeginScope . SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (220) SimpleStmt -> . EmptyStmt
    (221) SimpleStmt -> . ExpressionStmt
    (222) SimpleStmt -> . IncDecStmt
    (223) SimpleStmt -> . Assignment
    (224) SimpleStmt -> . ShortVarDecl
    (225) EmptyStmt -> .
    (226) ExpressionStmt -> . Expr
    (227) IncDecStmt -> . Expr INC
    (228) IncDecStmt -> . Expr DEC
    (229) Assignment -> . ExpressionList assign_op ExpressionList
    (244) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    SEMICOLON       reduce using rule 225 (EmptyStmt -> .)
    IDENT           shift and go to state 389
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    SimpleStmt                     shift and go to state 401
    Expr                           shift and go to state 245
    EmptyStmt                      shift and go to state 233
    ExpressionStmt                 shift and go to state 234
    IncDecStmt                     shift and go to state 235
    Assignment                     shift and go to state 236
    ShortVarDecl                   shift and go to state 237
    ExpressionList                 shift and go to state 240
    IdentifierList                 shift and go to state 250
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 342

    (272) TypeSwitchStmt -> SWITCH SimpleStmt . SEMICOLON TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE

    SEMICOLON       shift and go to state 402


state 343

    (262) ExprSwitchStmt -> SWITCH Expr . LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr
    (226) ExpressionStmt -> Expr .
    (227) IncDecStmt -> Expr . INC
    (228) IncDecStmt -> Expr . DEC
    (54) ExpressionList -> Expr .

    LBRACE          shift and go to state 403
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182
    SEMICOLON       reduce using rule 226 (ExpressionStmt -> Expr .)
    INC             shift and go to state 337
    DEC             shift and go to state 338
    COMMA           reduce using rule 54 (ExpressionList -> Expr .)
    ASSIGN          reduce using rule 54 (ExpressionList -> Expr .)
    ADD_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    SUB_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    OR_ASSIGN       reduce using rule 54 (ExpressionList -> Expr .)
    XOR_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    MUL_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    QUO_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    REM_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    AND_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    SHL_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    SHR_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    AND_NOT_ASSIGN  reduce using rule 54 (ExpressionList -> Expr .)


state 344

    (264) ExprSwitchStmt -> SWITCH LBRACE . BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (265) BeginSwitch -> .

    RBRACE          reduce using rule 265 (BeginSwitch -> .)
    CASE            reduce using rule 265 (BeginSwitch -> .)
    DEFAULT         reduce using rule 265 (BeginSwitch -> .)

    BeginSwitch                    shift and go to state 404

state 345

    (273) TypeSwitchStmt -> SWITCH TypeSwitchGuard . LBRACE TypeCaseClauseMult RBRACE

    LBRACE          shift and go to state 405


state 346

    (274) TypeSwitchGuard -> IDENT . DEFINE PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (84) PrimaryExpr -> IDENT .
    (85) PrimaryExpr -> IDENT . PERIOD IDENT
    (52) IdentifierList -> IDENT .
    (53) IdentifierList -> IDENT . COMMA IdentifierList
    (169) CompositeLit -> IDENT . LiteralValue
    (170) CompositeLit -> IDENT . PERIOD IDENT LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    LBRACK          reduce using rule 84 (PrimaryExpr -> IDENT .)
    LPAREN          reduce using rule 84 (PrimaryExpr -> IDENT .)
    LBRACE          reduce using rule 84 (PrimaryExpr -> IDENT .)
    LOR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LAND            reduce using rule 84 (PrimaryExpr -> IDENT .)
    EQL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    NEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LSS             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    GTR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    GEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    ADD             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SUB             reduce using rule 84 (PrimaryExpr -> IDENT .)
    OR              reduce using rule 84 (PrimaryExpr -> IDENT .)
    XOR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    MUL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    QUO             reduce using rule 84 (PrimaryExpr -> IDENT .)
    REM             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND             reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_NOT         reduce using rule 84 (PrimaryExpr -> IDENT .)
    INC             reduce using rule 84 (PrimaryExpr -> IDENT .)
    DEC             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SEMICOLON       reduce using rule 84 (PrimaryExpr -> IDENT .)
    ASSIGN          reduce using rule 84 (PrimaryExpr -> IDENT .)
    ADD_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    SUB_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    OR_ASSIGN       reduce using rule 84 (PrimaryExpr -> IDENT .)
    XOR_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    MUL_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    QUO_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    REM_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHL_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHR_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_NOT_ASSIGN  reduce using rule 84 (PrimaryExpr -> IDENT .)
    PERIOD          shift and go to state 196
    DEFINE          reduce using rule 52 (IdentifierList -> IDENT .)
    COMMA           shift and go to state 67

  ! DEFINE          [ shift and go to state 406 ]
  ! PERIOD          [ reduce using rule 84 (PrimaryExpr -> IDENT .) ]
  ! COMMA           [ reduce using rule 84 (PrimaryExpr -> IDENT .) ]
  ! LBRACE          [ shift and go to state 198 ]

    LiteralValue                   shift and go to state 197

state 347

    (275) TypeSwitchGuard -> PrimaryExpr . PERIOD LPAREN TYPE RPAREN
    (76) UnaryExpr -> PrimaryExpr .
    (87) PrimaryExpr -> PrimaryExpr . Selector
    (88) PrimaryExpr -> PrimaryExpr . Index
    (89) PrimaryExpr -> PrimaryExpr . Slice
    (90) PrimaryExpr -> PrimaryExpr . Arguments
    (91) Selector -> . PERIOD IDENT
    (92) Index -> . LBRACK Expr RBRACK
    (93) Slice -> . LBRACK Expr COLON Expr RBRACK
    (94) Slice -> . LBRACK COLON Expr RBRACK
    (95) Slice -> . LBRACK Expr COLON RBRACK
    (96) Slice -> . LBRACK COLON RBRACK
    (97) Slice -> . LBRACK COLON Expr COLON Expr RBRACK
    (98) Slice -> . LBRACK Expr COLON Expr COLON Expr RBRACK
    (99) Arguments -> . LPAREN RPAREN
    (100) Arguments -> . LPAREN ExpressionList RPAREN
    (101) Arguments -> . LPAREN ExpressionList COMMA RPAREN
    (102) Arguments -> . LPAREN TypeT RPAREN
    (103) Arguments -> . LPAREN TypeT COMMA RPAREN
    (104) Arguments -> . LPAREN TypeT COMMA ExpressionList RPAREN
    (105) Arguments -> . LPAREN TypeT COMMA ExpressionList COMMA RPAREN
    (106) Arguments -> . LPAREN IDENT RPAREN
    (107) Arguments -> . LPAREN IDENT COMMA RPAREN
    (108) Arguments -> . LPAREN IDENT COMMA ExpressionList RPAREN
    (109) Arguments -> . LPAREN IDENT COMMA ExpressionList COMMA RPAREN
    (110) Arguments -> . LPAREN IDENT PERIOD IDENT RPAREN
    (111) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA RPAREN
    (112) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN
    (113) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN

    PERIOD          shift and go to state 407
    LBRACE          reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    LOR             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    LAND            reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    EQL             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    NEQ             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    LSS             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    LEQ             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    GTR             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    GEQ             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    ADD             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SUB             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    MUL             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    QUO             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    REM             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SHL             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SHR             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    AND_NOT         reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    INC             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    DEC             reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    ADD_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SUB_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGN       reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    MUL_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    QUO_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    REM_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    AND_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SHL_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    SHR_ASSIGN      reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    AND_NOT_ASSIGN  reduce using rule 76 (UnaryExpr -> PrimaryExpr .)
    LBRACK          shift and go to state 193
    LPAREN          shift and go to state 194

    Selector                       shift and go to state 188
    Index                          shift and go to state 189
    Slice                          shift and go to state 190
    Arguments                      shift and go to state 191

state 348

    (203) Result -> IDENT PERIOD IDENT .

    ASSIGN          reduce using rule 203 (Result -> IDENT PERIOD IDENT .)
    SEMICOLON       reduce using rule 203 (Result -> IDENT PERIOD IDENT .)
    RPAREN          reduce using rule 203 (Result -> IDENT PERIOD IDENT .)
    LBRACE          reduce using rule 203 (Result -> IDENT PERIOD IDENT .)
    RBRACK          reduce using rule 203 (Result -> IDENT PERIOD IDENT .)
    COMMA           reduce using rule 203 (Result -> IDENT PERIOD IDENT .)
    STRING          reduce using rule 203 (Result -> IDENT PERIOD IDENT .)
    COLON           reduce using rule 203 (Result -> IDENT PERIOD IDENT .)


state 349

    (191) Parameters -> LPAREN ParameterList COMMA RPAREN .

    IDENT           reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    LPAREN          reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    MUL             reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    LBRACK          reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    STRUCT          reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    MAP             reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    FUNC            reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    LBRACE          reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    SEMICOLON       reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    ASSIGN          reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    RPAREN          reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    RBRACK          reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    COMMA           reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    STRING          reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)
    COLON           reduce using rule 191 (Parameters -> LPAREN ParameterList COMMA RPAREN .)


state 350

    (193) ParameterList -> ParameterList COMMA IDENT .
    (194) ParameterList -> ParameterList COMMA IDENT . PERIOD IDENT
    (52) IdentifierList -> IDENT .
    (53) IdentifierList -> IDENT . COMMA IdentifierList

    RPAREN          reduce using rule 193 (ParameterList -> ParameterList COMMA IDENT .)
    PERIOD          shift and go to state 408
    IDENT           reduce using rule 52 (IdentifierList -> IDENT .)
    LPAREN          reduce using rule 52 (IdentifierList -> IDENT .)
    MUL             reduce using rule 52 (IdentifierList -> IDENT .)
    LBRACK          reduce using rule 52 (IdentifierList -> IDENT .)
    STRUCT          reduce using rule 52 (IdentifierList -> IDENT .)
    MAP             reduce using rule 52 (IdentifierList -> IDENT .)
    FUNC            reduce using rule 52 (IdentifierList -> IDENT .)
    COMMA           shift and go to state 67

  ! COMMA           [ reduce using rule 193 (ParameterList -> ParameterList COMMA IDENT .) ]


state 351

    (195) ParameterList -> ParameterList COMMA Type .

    RPAREN          reduce using rule 195 (ParameterList -> ParameterList COMMA Type .)
    COMMA           reduce using rule 195 (ParameterList -> ParameterList COMMA Type .)


state 352

    (196) ParameterList -> ParameterList COMMA ParameterDecl .

    RPAREN          reduce using rule 196 (ParameterList -> ParameterList COMMA ParameterDecl .)
    COMMA           reduce using rule 196 (ParameterList -> ParameterList COMMA ParameterDecl .)


state 353

    (199) ParameterDecl -> IdentifierList IDENT PERIOD . IDENT

    IDENT           shift and go to state 409


state 354

    (28) ConstSpec -> IdentifierList IDENT PERIOD IDENT ASSIGN ExpressionList .
    (55) ExpressionList -> ExpressionList . COMMA Expr

    SEMICOLON       reduce using rule 28 (ConstSpec -> IdentifierList IDENT PERIOD IDENT ASSIGN ExpressionList .)
    COMMA           shift and go to state 211


state 355

    (124) TypeT -> LPAREN IDENT PERIOD IDENT RPAREN .

    ASSIGN          reduce using rule 124 (TypeT -> LPAREN IDENT PERIOD IDENT RPAREN .)
    SEMICOLON       reduce using rule 124 (TypeT -> LPAREN IDENT PERIOD IDENT RPAREN .)
    RPAREN          reduce using rule 124 (TypeT -> LPAREN IDENT PERIOD IDENT RPAREN .)
    LBRACE          reduce using rule 124 (TypeT -> LPAREN IDENT PERIOD IDENT RPAREN .)
    RBRACK          reduce using rule 124 (TypeT -> LPAREN IDENT PERIOD IDENT RPAREN .)
    COMMA           reduce using rule 124 (TypeT -> LPAREN IDENT PERIOD IDENT RPAREN .)
    STRING          reduce using rule 124 (TypeT -> LPAREN IDENT PERIOD IDENT RPAREN .)
    COLON           reduce using rule 124 (TypeT -> LPAREN IDENT PERIOD IDENT RPAREN .)


state 356

    (133) ElementType -> IDENT PERIOD IDENT .

    ASSIGN          reduce using rule 133 (ElementType -> IDENT PERIOD IDENT .)
    SEMICOLON       reduce using rule 133 (ElementType -> IDENT PERIOD IDENT .)
    RPAREN          reduce using rule 133 (ElementType -> IDENT PERIOD IDENT .)
    LBRACE          reduce using rule 133 (ElementType -> IDENT PERIOD IDENT .)
    RBRACK          reduce using rule 133 (ElementType -> IDENT PERIOD IDENT .)
    COMMA           reduce using rule 133 (ElementType -> IDENT PERIOD IDENT .)
    STRING          reduce using rule 133 (ElementType -> IDENT PERIOD IDENT .)
    COLON           reduce using rule 133 (ElementType -> IDENT PERIOD IDENT .)


state 357

    (92) Index -> LBRACK Expr RBRACK .

    PERIOD          reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    LBRACK          reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    LPAREN          reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    LOR             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    LAND            reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    EQL             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    NEQ             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    LSS             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    LEQ             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    GTR             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    GEQ             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    ADD             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    SUB             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    OR              reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    XOR             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    MUL             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    QUO             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    REM             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    SHL             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    SHR             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    AND             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    AND_NOT         reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    RBRACK          reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    COMMA           reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    SEMICOLON       reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    RPAREN          reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    INC             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    DEC             reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    ASSIGN          reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    OR_ASSIGN       reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    REM_ASSIGN      reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    AND_ASSIGN      reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    COLON           reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    RBRACE          reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    LBRACE          reduce using rule 92 (Index -> LBRACK Expr RBRACK .)
    ELSE            reduce using rule 92 (Index -> LBRACK Expr RBRACK .)


state 358

    (93) Slice -> LBRACK Expr COLON . Expr RBRACK
    (95) Slice -> LBRACK Expr COLON . RBRACK
    (98) Slice -> LBRACK Expr COLON . Expr COLON Expr RBRACK
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RBRACK          shift and go to state 411
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 410
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 359

    (94) Slice -> LBRACK COLON Expr . RBRACK
    (97) Slice -> LBRACK COLON Expr . COLON Expr RBRACK
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    RBRACK          shift and go to state 413
    COLON           shift and go to state 412
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182


state 360

    (96) Slice -> LBRACK COLON RBRACK .

    PERIOD          reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    LBRACK          reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    LPAREN          reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    LOR             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    LAND            reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    EQL             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    NEQ             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    LSS             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    LEQ             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    GTR             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    GEQ             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    ADD             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    SUB             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    OR              reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    XOR             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    MUL             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    QUO             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    REM             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    SHL             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    SHR             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    AND             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    AND_NOT         reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    RBRACK          reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    COMMA           reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    SEMICOLON       reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    RPAREN          reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    INC             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    DEC             reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    ASSIGN          reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    ADD_ASSIGN      reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    SUB_ASSIGN      reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    OR_ASSIGN       reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    XOR_ASSIGN      reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    MUL_ASSIGN      reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    QUO_ASSIGN      reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    REM_ASSIGN      reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    AND_ASSIGN      reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    SHL_ASSIGN      reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    SHR_ASSIGN      reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    COLON           reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    RBRACE          reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    LBRACE          reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)
    ELSE            reduce using rule 96 (Slice -> LBRACK COLON RBRACK .)


state 361

    (123) TypeT -> LPAREN IDENT . RPAREN
    (124) TypeT -> LPAREN IDENT . PERIOD IDENT RPAREN
    (84) PrimaryExpr -> IDENT .
    (85) PrimaryExpr -> IDENT . PERIOD IDENT
    (169) CompositeLit -> IDENT . LiteralValue
    (170) CompositeLit -> IDENT . PERIOD IDENT LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    RPAREN          shift and go to state 157
    PERIOD          shift and go to state 414
    LBRACK          reduce using rule 84 (PrimaryExpr -> IDENT .)
    LPAREN          reduce using rule 84 (PrimaryExpr -> IDENT .)
    LOR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LAND            reduce using rule 84 (PrimaryExpr -> IDENT .)
    EQL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    NEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LSS             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    GTR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    GEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    ADD             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SUB             reduce using rule 84 (PrimaryExpr -> IDENT .)
    OR              reduce using rule 84 (PrimaryExpr -> IDENT .)
    XOR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    MUL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    QUO             reduce using rule 84 (PrimaryExpr -> IDENT .)
    REM             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND             reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_NOT         reduce using rule 84 (PrimaryExpr -> IDENT .)
    LBRACE          shift and go to state 198

  ! PERIOD          [ reduce using rule 84 (PrimaryExpr -> IDENT .) ]
  ! RPAREN          [ reduce using rule 84 (PrimaryExpr -> IDENT .) ]

    LiteralValue                   shift and go to state 197

state 362

    (100) Arguments -> LPAREN ExpressionList RPAREN .

    PERIOD          reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    LBRACK          reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    LPAREN          reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    LOR             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    LAND            reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    EQL             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    NEQ             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    LSS             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    LEQ             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    GTR             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    GEQ             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR              reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    QUO             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    REM             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_NOT         reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    RBRACK          reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    COMMA           reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    SEMICOLON       reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    RPAREN          reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    INC             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    DEC             reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    ASSIGN          reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    ADD_ASSIGN      reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    SUB_ASSIGN      reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    OR_ASSIGN       reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    XOR_ASSIGN      reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    MUL_ASSIGN      reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    QUO_ASSIGN      reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    REM_ASSIGN      reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_ASSIGN      reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHL_ASSIGN      reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    SHR_ASSIGN      reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    COLON           reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    RBRACE          reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    LBRACE          reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)
    ELSE            reduce using rule 100 (Arguments -> LPAREN ExpressionList RPAREN .)


state 363

    (101) Arguments -> LPAREN ExpressionList COMMA . RPAREN
    (55) ExpressionList -> ExpressionList COMMA . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RPAREN          shift and go to state 415
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 308
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 364

    (102) Arguments -> LPAREN TypeT RPAREN .

    PERIOD          reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    LBRACK          reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    LPAREN          reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    LOR             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    LAND            reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    EQL             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    NEQ             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    LSS             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    LEQ             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    GTR             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    GEQ             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    ADD             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    SUB             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    OR              reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    XOR             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    MUL             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    QUO             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    REM             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    SHL             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    SHR             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    AND             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    AND_NOT         reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    RBRACK          reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    COMMA           reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    SEMICOLON       reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    RPAREN          reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    INC             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    DEC             reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    ASSIGN          reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    ADD_ASSIGN      reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    SUB_ASSIGN      reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    OR_ASSIGN       reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    XOR_ASSIGN      reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    MUL_ASSIGN      reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    QUO_ASSIGN      reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    REM_ASSIGN      reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    AND_ASSIGN      reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    SHL_ASSIGN      reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    SHR_ASSIGN      reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    COLON           reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    RBRACE          reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    LBRACE          reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)
    ELSE            reduce using rule 102 (Arguments -> LPAREN TypeT RPAREN .)


state 365

    (103) Arguments -> LPAREN TypeT COMMA . RPAREN
    (104) Arguments -> LPAREN TypeT COMMA . ExpressionList RPAREN
    (105) Arguments -> LPAREN TypeT COMMA . ExpressionList COMMA RPAREN
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RPAREN          shift and go to state 416
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 417
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 366

    (106) Arguments -> LPAREN IDENT RPAREN .

    PERIOD          reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    LBRACK          reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    LPAREN          reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    LOR             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    LAND            reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    EQL             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    NEQ             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    LSS             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    LEQ             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    GTR             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    GEQ             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    ADD             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    SUB             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    OR              reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    XOR             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    MUL             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    QUO             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    REM             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    SHL             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    SHR             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    AND             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    AND_NOT         reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    RBRACK          reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    COMMA           reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    SEMICOLON       reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    RPAREN          reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    INC             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    DEC             reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    ASSIGN          reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    ADD_ASSIGN      reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    SUB_ASSIGN      reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    OR_ASSIGN       reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    XOR_ASSIGN      reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    MUL_ASSIGN      reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    QUO_ASSIGN      reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    REM_ASSIGN      reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    AND_ASSIGN      reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    SHL_ASSIGN      reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    SHR_ASSIGN      reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    COLON           reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    RBRACE          reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    LBRACE          reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)
    ELSE            reduce using rule 106 (Arguments -> LPAREN IDENT RPAREN .)


state 367

    (107) Arguments -> LPAREN IDENT COMMA . RPAREN
    (108) Arguments -> LPAREN IDENT COMMA . ExpressionList RPAREN
    (109) Arguments -> LPAREN IDENT COMMA . ExpressionList COMMA RPAREN
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RPAREN          shift and go to state 418
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 419
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 368

    (110) Arguments -> LPAREN IDENT PERIOD . IDENT RPAREN
    (111) Arguments -> LPAREN IDENT PERIOD . IDENT COMMA RPAREN
    (112) Arguments -> LPAREN IDENT PERIOD . IDENT COMMA ExpressionList RPAREN
    (113) Arguments -> LPAREN IDENT PERIOD . IDENT COMMA ExpressionList COMMA RPAREN
    (85) PrimaryExpr -> IDENT PERIOD . IDENT
    (170) CompositeLit -> IDENT PERIOD . IDENT LiteralValue

    IDENT           shift and go to state 420


state 369

    (156) FunctionType -> FUNC Signature .
    (182) FunctionLit -> FUNC Signature . FunctionBody
    (186) FunctionBody -> . Block
    (253) Block -> . LBRACE StatementList RBRACE

    RPAREN          reduce using rule 156 (FunctionType -> FUNC Signature .)
    COMMA           reduce using rule 156 (FunctionType -> FUNC Signature .)
    LBRACE          shift and go to state 141

    FunctionBody                   shift and go to state 304
    Block                          shift and go to state 140

state 370

    (170) CompositeLit -> IDENT PERIOD IDENT LiteralValue .

    PERIOD          reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    LBRACK          reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    LPAREN          reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    LOR             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    LAND            reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    EQL             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    NEQ             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    LSS             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    LEQ             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    GTR             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    GEQ             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    ADD             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    SUB             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    OR              reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    XOR             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    MUL             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    QUO             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    REM             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    SHL             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    SHR             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    AND             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    AND_NOT         reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    RBRACK          reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    COMMA           reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    SEMICOLON       reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    RPAREN          reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    INC             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    DEC             reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    ASSIGN          reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    ADD_ASSIGN      reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    SUB_ASSIGN      reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    OR_ASSIGN       reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    XOR_ASSIGN      reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    MUL_ASSIGN      reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    QUO_ASSIGN      reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    REM_ASSIGN      reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    AND_ASSIGN      reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    SHL_ASSIGN      reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    SHR_ASSIGN      reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    AND_NOT_ASSIGN  reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    COLON           reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    RBRACE          reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    LBRACE          reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)
    ELSE            reduce using rule 170 (CompositeLit -> IDENT PERIOD IDENT LiteralValue .)


state 371

    (171) LiteralValue -> LBRACE ElementList COMMA . RBRACE
    (175) ElementList -> ElementList COMMA . KeyedElement
    (176) KeyedElement -> . Element
    (177) KeyedElement -> . Key COLON Element
    (180) Element -> . Expr
    (181) Element -> . LiteralValue
    (178) Key -> . Expr
    (179) Key -> . LiteralValue
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RBRACE          shift and go to state 421
    LBRACE          shift and go to state 198
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    KeyedElement                   shift and go to state 422
    Element                        shift and go to state 299
    Key                            shift and go to state 300
    Expr                           shift and go to state 301
    LiteralValue                   shift and go to state 302
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 372

    (172) LiteralValue -> LBRACE ElementList RBRACE .

    PERIOD          reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    LBRACK          reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    LPAREN          reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    LOR             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    LAND            reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    EQL             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    NEQ             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    LSS             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    LEQ             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    GTR             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    GEQ             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    ADD             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    SUB             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    OR              reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    XOR             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    MUL             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    QUO             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    REM             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    SHL             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    SHR             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    AND             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    AND_NOT         reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    RBRACK          reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    COMMA           reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    SEMICOLON       reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    RPAREN          reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    INC             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    DEC             reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    ASSIGN          reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    ADD_ASSIGN      reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    SUB_ASSIGN      reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    OR_ASSIGN       reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    XOR_ASSIGN      reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    MUL_ASSIGN      reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    QUO_ASSIGN      reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    REM_ASSIGN      reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    AND_ASSIGN      reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    SHL_ASSIGN      reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    SHR_ASSIGN      reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    AND_NOT_ASSIGN  reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    COLON           reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    RBRACE          reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    LBRACE          reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)
    ELSE            reduce using rule 172 (LiteralValue -> LBRACE ElementList RBRACE .)


state 373

    (177) KeyedElement -> Key COLON . Element
    (180) Element -> . Expr
    (181) Element -> . LiteralValue
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    LBRACE          shift and go to state 198
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Element                        shift and go to state 423
    Expr                           shift and go to state 424
    LiteralValue                   shift and go to state 425
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 374

    (134) StructType -> STRUCT BeginStruct LBRACE FieldDeclMult RBRACE . EndStruct
    (136) EndStruct -> .

    ASSIGN          reduce using rule 136 (EndStruct -> .)
    SEMICOLON       reduce using rule 136 (EndStruct -> .)
    RPAREN          reduce using rule 136 (EndStruct -> .)
    LBRACE          reduce using rule 136 (EndStruct -> .)
    RBRACK          reduce using rule 136 (EndStruct -> .)
    COMMA           reduce using rule 136 (EndStruct -> .)
    STRING          reduce using rule 136 (EndStruct -> .)
    COLON           reduce using rule 136 (EndStruct -> .)
    LPAREN          reduce using rule 136 (EndStruct -> .)

    EndStruct                      shift and go to state 426

state 375

    (137) FieldDeclMult -> FieldDeclMult FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 427


state 376

    (139) FieldDecl -> IdentifierList . Type
    (140) FieldDecl -> IdentifierList . IDENT
    (141) FieldDecl -> IdentifierList . IDENT PERIOD IDENT
    (143) FieldDecl -> IdentifierList . Type Tag
    (144) FieldDecl -> IdentifierList . IDENT Tag
    (145) FieldDecl -> IdentifierList . IDENT PERIOD IDENT Tag
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 429
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 428
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 377

    (52) IdentifierList -> IDENT .
    (53) IdentifierList -> IDENT . COMMA IdentifierList
    (149) EmbeddedField -> IDENT .
    (151) EmbeddedField -> IDENT . PERIOD IDENT

    IDENT           reduce using rule 52 (IdentifierList -> IDENT .)
    LPAREN          reduce using rule 52 (IdentifierList -> IDENT .)
    MUL             reduce using rule 52 (IdentifierList -> IDENT .)
    LBRACK          reduce using rule 52 (IdentifierList -> IDENT .)
    STRUCT          reduce using rule 52 (IdentifierList -> IDENT .)
    MAP             reduce using rule 52 (IdentifierList -> IDENT .)
    FUNC            reduce using rule 52 (IdentifierList -> IDENT .)
    COMMA           shift and go to state 67
    STRING          reduce using rule 149 (EmbeddedField -> IDENT .)
    SEMICOLON       reduce using rule 149 (EmbeddedField -> IDENT .)
    PERIOD          shift and go to state 430


state 378

    (142) FieldDecl -> EmbeddedField .
    (146) FieldDecl -> EmbeddedField . Tag
    (147) Tag -> . STRING

    SEMICOLON       reduce using rule 142 (FieldDecl -> EmbeddedField .)
    STRING          shift and go to state 432

    Tag                            shift and go to state 431

state 379

    (148) EmbeddedField -> MUL . IDENT
    (150) EmbeddedField -> MUL . IDENT PERIOD IDENT

    IDENT           shift and go to state 433


state 380

    (152) MapType -> MAP LBRACK KeyType RBRACK ElementType .

    ASSIGN          reduce using rule 152 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    SEMICOLON       reduce using rule 152 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    RPAREN          reduce using rule 152 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    LBRACE          reduce using rule 152 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    RBRACK          reduce using rule 152 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    COMMA           reduce using rule 152 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    STRING          reduce using rule 152 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)
    COLON           reduce using rule 152 (MapType -> MAP LBRACK KeyType RBRACK ElementType .)


state 381

    (155) KeyType -> IDENT PERIOD IDENT .

    RBRACK          reduce using rule 155 (KeyType -> IDENT PERIOD IDENT .)


state 382

    (35) VarSpec -> IdentifierList IDENT PERIOD IDENT ASSIGN ExpressionList .
    (55) ExpressionList -> ExpressionList . COMMA Expr

    SEMICOLON       reduce using rule 35 (VarSpec -> IdentifierList IDENT PERIOD IDENT ASSIGN ExpressionList .)
    COMMA           shift and go to state 211


state 383

    (204) StatementList -> Statement SEMICOLON StatementList .

    RBRACE          reduce using rule 204 (StatementList -> Statement SEMICOLON StatementList .)
    CASE            reduce using rule 204 (StatementList -> Statement SEMICOLON StatementList .)
    DEFAULT         reduce using rule 204 (StatementList -> Statement SEMICOLON StatementList .)


state 384

    (214) Statement -> BeginScope Block EndScope .

    SEMICOLON       reduce using rule 214 (Statement -> BeginScope Block EndScope .)


state 385

    (218) LabeledStmt -> Label COLON Statement .

    SEMICOLON       reduce using rule 218 (LabeledStmt -> Label COLON Statement .)


state 386

    (229) Assignment -> ExpressionList assign_op ExpressionList .
    (55) ExpressionList -> ExpressionList . COMMA Expr

    SEMICOLON       reduce using rule 229 (Assignment -> ExpressionList assign_op ExpressionList .)
    LBRACE          reduce using rule 229 (Assignment -> ExpressionList assign_op ExpressionList .)
    COMMA           shift and go to state 211


state 387

    (254) IfStmt -> IF Expr BeginScope . Block EndScope else_stmt
    (253) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 141

    Block                          shift and go to state 434

state 388

    (255) IfStmt -> IF BeginScope SimpleStmt . EndScope SEMICOLON Expr else_stmt
    (3) EndScope -> .

    SEMICOLON       reduce using rule 3 (EndScope -> .)

    EndScope                       shift and go to state 435

state 389

    (52) IdentifierList -> IDENT .
    (53) IdentifierList -> IDENT . COMMA IdentifierList
    (84) PrimaryExpr -> IDENT .
    (85) PrimaryExpr -> IDENT . PERIOD IDENT
    (169) CompositeLit -> IDENT . LiteralValue
    (170) CompositeLit -> IDENT . PERIOD IDENT LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    DEFINE          reduce using rule 52 (IdentifierList -> IDENT .)
    COMMA           shift and go to state 67
    LBRACK          reduce using rule 84 (PrimaryExpr -> IDENT .)
    LPAREN          reduce using rule 84 (PrimaryExpr -> IDENT .)
    INC             reduce using rule 84 (PrimaryExpr -> IDENT .)
    DEC             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LOR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LAND            reduce using rule 84 (PrimaryExpr -> IDENT .)
    EQL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    NEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LSS             reduce using rule 84 (PrimaryExpr -> IDENT .)
    LEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    GTR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    GEQ             reduce using rule 84 (PrimaryExpr -> IDENT .)
    ADD             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SUB             reduce using rule 84 (PrimaryExpr -> IDENT .)
    OR              reduce using rule 84 (PrimaryExpr -> IDENT .)
    XOR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    MUL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    QUO             reduce using rule 84 (PrimaryExpr -> IDENT .)
    REM             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHL             reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHR             reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND             reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_NOT         reduce using rule 84 (PrimaryExpr -> IDENT .)
    SEMICOLON       reduce using rule 84 (PrimaryExpr -> IDENT .)
    ASSIGN          reduce using rule 84 (PrimaryExpr -> IDENT .)
    ADD_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    SUB_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    OR_ASSIGN       reduce using rule 84 (PrimaryExpr -> IDENT .)
    XOR_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    MUL_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    QUO_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    REM_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHL_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    SHR_ASSIGN      reduce using rule 84 (PrimaryExpr -> IDENT .)
    AND_NOT_ASSIGN  reduce using rule 84 (PrimaryExpr -> IDENT .)
    LBRACE          reduce using rule 84 (PrimaryExpr -> IDENT .)
    PERIOD          shift and go to state 196

  ! PERIOD          [ reduce using rule 84 (PrimaryExpr -> IDENT .) ]
  ! COMMA           [ reduce using rule 84 (PrimaryExpr -> IDENT .) ]
  ! LBRACE          [ shift and go to state 198 ]

    LiteralValue                   shift and go to state 197

state 390

    (286) ForStmt -> FOR BeginFor Condition . Block EndFor
    (253) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 141

    Block                          shift and go to state 436

state 391

    (289) ForStmt -> FOR BeginFor Block . EndFor
    (291) EndFor -> .

    SEMICOLON       reduce using rule 291 (EndFor -> .)

    EndFor                         shift and go to state 437

state 392

    (287) ForStmt -> FOR BeginFor ForClause . Block EndFor
    (253) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 141

    Block                          shift and go to state 438

state 393

    (288) ForStmt -> FOR BeginFor RangeClause . Block EndFor
    (253) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 141

    Block                          shift and go to state 439

state 394

    (292) Condition -> Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr
    (54) ExpressionList -> Expr .
    (226) ExpressionStmt -> Expr .
    (227) IncDecStmt -> Expr . INC
    (228) IncDecStmt -> Expr . DEC

    LBRACE          reduce using rule 292 (Condition -> Expr .)
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182
    ASSIGN          reduce using rule 54 (ExpressionList -> Expr .)
    COMMA           reduce using rule 54 (ExpressionList -> Expr .)
    ADD_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    SUB_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    OR_ASSIGN       reduce using rule 54 (ExpressionList -> Expr .)
    XOR_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    MUL_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    QUO_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    REM_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    AND_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    SHL_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    SHR_ASSIGN      reduce using rule 54 (ExpressionList -> Expr .)
    AND_NOT_ASSIGN  reduce using rule 54 (ExpressionList -> Expr .)
    SEMICOLON       reduce using rule 226 (ExpressionStmt -> Expr .)
    INC             shift and go to state 337
    DEC             shift and go to state 338


state 395

    (293) ForClause -> InitStmt . SEMICOLON Condition SEMICOLON PostStmt
    (294) ForClause -> InitStmt . SEMICOLON SEMICOLON PostStmt

    SEMICOLON       shift and go to state 440


state 396

    (297) RangeClause -> RangeList . RANGE Expr

    RANGE           shift and go to state 441


state 397

    (295) InitStmt -> SimpleStmt .

    SEMICOLON       reduce using rule 295 (InitStmt -> SimpleStmt .)


state 398

    (298) RangeList -> ExpressionList . ASSIGN
    (55) ExpressionList -> ExpressionList . COMMA Expr
    (229) Assignment -> ExpressionList . assign_op ExpressionList
    (230) assign_op -> . add_op_assign
    (231) assign_op -> . mul_op_assign
    (232) assign_op -> . ASSIGN
    (233) add_op_assign -> . ADD_ASSIGN
    (234) add_op_assign -> . SUB_ASSIGN
    (235) add_op_assign -> . OR_ASSIGN
    (236) add_op_assign -> . XOR_ASSIGN
    (237) mul_op_assign -> . MUL_ASSIGN
    (238) mul_op_assign -> . QUO_ASSIGN
    (239) mul_op_assign -> . REM_ASSIGN
    (240) mul_op_assign -> . AND_ASSIGN
    (241) mul_op_assign -> . SHL_ASSIGN
    (242) mul_op_assign -> . SHR_ASSIGN
    (243) mul_op_assign -> . AND_NOT_ASSIGN

    ASSIGN          shift and go to state 442
    COMMA           shift and go to state 211
    ADD_ASSIGN      shift and go to state 322
    SUB_ASSIGN      shift and go to state 323
    OR_ASSIGN       shift and go to state 324
    XOR_ASSIGN      shift and go to state 325
    MUL_ASSIGN      shift and go to state 326
    QUO_ASSIGN      shift and go to state 327
    REM_ASSIGN      shift and go to state 328
    AND_ASSIGN      shift and go to state 329
    SHL_ASSIGN      shift and go to state 330
    SHR_ASSIGN      shift and go to state 331
    AND_NOT_ASSIGN  shift and go to state 332

    assign_op                      shift and go to state 318
    add_op_assign                  shift and go to state 319
    mul_op_assign                  shift and go to state 320

state 399

    (299) RangeList -> IdentifierList . DEFINE
    (244) ShortVarDecl -> IdentifierList . DEFINE ExpressionList

    DEFINE          shift and go to state 443


state 400

    (244) ShortVarDecl -> IdentifierList DEFINE ExpressionList .
    (55) ExpressionList -> ExpressionList . COMMA Expr

    SEMICOLON       reduce using rule 244 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    LBRACE          reduce using rule 244 (ShortVarDecl -> IdentifierList DEFINE ExpressionList .)
    COMMA           shift and go to state 211


state 401

    (261) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt . EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (263) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt . EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (3) EndScope -> .

    SEMICOLON       reduce using rule 3 (EndScope -> .)

    EndScope                       shift and go to state 444

state 402

    (272) TypeSwitchStmt -> SWITCH SimpleStmt SEMICOLON . TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (274) TypeSwitchGuard -> . IDENT DEFINE PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (275) TypeSwitchGuard -> . PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    IDENT           shift and go to state 446
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    TypeSwitchGuard                shift and go to state 445
    PrimaryExpr                    shift and go to state 447
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 403

    (262) ExprSwitchStmt -> SWITCH Expr LBRACE . BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (265) BeginSwitch -> .

    RBRACE          reduce using rule 265 (BeginSwitch -> .)
    CASE            reduce using rule 265 (BeginSwitch -> .)
    DEFAULT         reduce using rule 265 (BeginSwitch -> .)

    BeginSwitch                    shift and go to state 448

state 404

    (264) ExprSwitchStmt -> SWITCH LBRACE BeginSwitch . ExprCaseClauseMult EndSwitch RBRACE
    (267) ExprCaseClauseMult -> . ExprCaseClause ExprCaseClauseMult
    (268) ExprCaseClauseMult -> .
    (269) ExprCaseClause -> . BeginScope ExprSwitchCase COLON StatementList EndScope
    (301) BeginScope -> .

    RBRACE          reduce using rule 268 (ExprCaseClauseMult -> .)
    CASE            reduce using rule 301 (BeginScope -> .)
    DEFAULT         reduce using rule 301 (BeginScope -> .)

    ExprCaseClauseMult             shift and go to state 449
    ExprCaseClause                 shift and go to state 450
    BeginScope                     shift and go to state 451

state 405

    (273) TypeSwitchStmt -> SWITCH TypeSwitchGuard LBRACE . TypeCaseClauseMult RBRACE
    (276) TypeCaseClauseMult -> . TypeCaseClause TypeCaseClauseMult
    (277) TypeCaseClauseMult -> .
    (278) TypeCaseClause -> . CASE BeginScope TypeList EndScope COLON BeginScope StatementList EndScope
    (279) TypeCaseClause -> . DEFAULT COLON BeginScope StatementList EndScope

    RBRACE          reduce using rule 277 (TypeCaseClauseMult -> .)
    CASE            shift and go to state 454
    DEFAULT         shift and go to state 455

    TypeCaseClauseMult             shift and go to state 452
    TypeCaseClause                 shift and go to state 453

state 406

    (274) TypeSwitchGuard -> IDENT DEFINE . PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    PrimaryExpr                    shift and go to state 456
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 407

    (275) TypeSwitchGuard -> PrimaryExpr PERIOD . LPAREN TYPE RPAREN
    (91) Selector -> PERIOD . IDENT

    LPAREN          shift and go to state 457
    IDENT           shift and go to state 282


state 408

    (194) ParameterList -> ParameterList COMMA IDENT PERIOD . IDENT

    IDENT           shift and go to state 458


state 409

    (199) ParameterDecl -> IdentifierList IDENT PERIOD IDENT .

    RPAREN          reduce using rule 199 (ParameterDecl -> IdentifierList IDENT PERIOD IDENT .)
    COMMA           reduce using rule 199 (ParameterDecl -> IdentifierList IDENT PERIOD IDENT .)


state 410

    (93) Slice -> LBRACK Expr COLON Expr . RBRACK
    (98) Slice -> LBRACK Expr COLON Expr . COLON Expr RBRACK
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    RBRACK          shift and go to state 460
    COLON           shift and go to state 459
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182


state 411

    (95) Slice -> LBRACK Expr COLON RBRACK .

    PERIOD          reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    LBRACK          reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    LPAREN          reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    LOR             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    LAND            reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    EQL             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    NEQ             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    LSS             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    LEQ             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    GTR             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    GEQ             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    ADD             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    SUB             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    OR              reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    XOR             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    MUL             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    QUO             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    REM             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    SHL             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    SHR             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    AND             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    AND_NOT         reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    RBRACK          reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    COMMA           reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    SEMICOLON       reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    RPAREN          reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    INC             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    DEC             reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    ASSIGN          reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    ADD_ASSIGN      reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    SUB_ASSIGN      reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    OR_ASSIGN       reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    XOR_ASSIGN      reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    MUL_ASSIGN      reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    QUO_ASSIGN      reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    REM_ASSIGN      reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    AND_ASSIGN      reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    SHL_ASSIGN      reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    SHR_ASSIGN      reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    COLON           reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    RBRACE          reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    LBRACE          reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)
    ELSE            reduce using rule 95 (Slice -> LBRACK Expr COLON RBRACK .)


state 412

    (97) Slice -> LBRACK COLON Expr COLON . Expr RBRACK
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 461
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 413

    (94) Slice -> LBRACK COLON Expr RBRACK .

    PERIOD          reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    LBRACK          reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    LPAREN          reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    LOR             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    LAND            reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    EQL             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    NEQ             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    LSS             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    LEQ             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    GTR             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    GEQ             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    ADD             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    SUB             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    OR              reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    XOR             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    MUL             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    QUO             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    REM             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    SHL             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    SHR             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    AND             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    AND_NOT         reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    RBRACK          reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    COMMA           reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    SEMICOLON       reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    RPAREN          reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    INC             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    DEC             reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    ASSIGN          reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    OR_ASSIGN       reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    REM_ASSIGN      reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    AND_ASSIGN      reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    COLON           reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    RBRACE          reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    LBRACE          reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)
    ELSE            reduce using rule 94 (Slice -> LBRACK COLON Expr RBRACK .)


state 414

    (124) TypeT -> LPAREN IDENT PERIOD . IDENT RPAREN
    (85) PrimaryExpr -> IDENT PERIOD . IDENT
    (170) CompositeLit -> IDENT PERIOD . IDENT LiteralValue

    IDENT           shift and go to state 462


state 415

    (101) Arguments -> LPAREN ExpressionList COMMA RPAREN .

    PERIOD          reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LBRACK          reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LPAREN          reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LOR             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LAND            reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    EQL             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    NEQ             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LSS             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LEQ             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GTR             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    GEQ             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR              reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    QUO             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    REM             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_NOT         reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RBRACK          reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COMMA           reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SEMICOLON       reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RPAREN          reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    INC             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    DEC             reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ASSIGN          reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    COLON           reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    RBRACE          reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    LBRACE          reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)
    ELSE            reduce using rule 101 (Arguments -> LPAREN ExpressionList COMMA RPAREN .)


state 416

    (103) Arguments -> LPAREN TypeT COMMA RPAREN .

    PERIOD          reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    LBRACK          reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    LPAREN          reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    LOR             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    LAND            reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    EQL             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    NEQ             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    LSS             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    LEQ             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    GTR             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    GEQ             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    ADD             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    SUB             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    OR              reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    XOR             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    MUL             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    QUO             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    REM             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    SHL             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    SHR             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    AND             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    AND_NOT         reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    RBRACK          reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    COMMA           reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    SEMICOLON       reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    RPAREN          reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    INC             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    DEC             reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    ASSIGN          reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    COLON           reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    RBRACE          reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    LBRACE          reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)
    ELSE            reduce using rule 103 (Arguments -> LPAREN TypeT COMMA RPAREN .)


state 417

    (104) Arguments -> LPAREN TypeT COMMA ExpressionList . RPAREN
    (105) Arguments -> LPAREN TypeT COMMA ExpressionList . COMMA RPAREN
    (55) ExpressionList -> ExpressionList . COMMA Expr

    RPAREN          shift and go to state 464
    COMMA           shift and go to state 463


state 418

    (107) Arguments -> LPAREN IDENT COMMA RPAREN .

    PERIOD          reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    LBRACK          reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    LPAREN          reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    LOR             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    LAND            reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    EQL             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    NEQ             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    LSS             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    LEQ             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    GTR             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    GEQ             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    ADD             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    SUB             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    OR              reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    XOR             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    MUL             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    QUO             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    REM             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    SHL             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    SHR             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    AND             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    AND_NOT         reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    RBRACK          reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    COMMA           reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    SEMICOLON       reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    RPAREN          reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    INC             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    DEC             reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    ASSIGN          reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    COLON           reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    RBRACE          reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    LBRACE          reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)
    ELSE            reduce using rule 107 (Arguments -> LPAREN IDENT COMMA RPAREN .)


state 419

    (108) Arguments -> LPAREN IDENT COMMA ExpressionList . RPAREN
    (109) Arguments -> LPAREN IDENT COMMA ExpressionList . COMMA RPAREN
    (55) ExpressionList -> ExpressionList . COMMA Expr

    RPAREN          shift and go to state 466
    COMMA           shift and go to state 465


state 420

    (110) Arguments -> LPAREN IDENT PERIOD IDENT . RPAREN
    (111) Arguments -> LPAREN IDENT PERIOD IDENT . COMMA RPAREN
    (112) Arguments -> LPAREN IDENT PERIOD IDENT . COMMA ExpressionList RPAREN
    (113) Arguments -> LPAREN IDENT PERIOD IDENT . COMMA ExpressionList COMMA RPAREN
    (85) PrimaryExpr -> IDENT PERIOD IDENT .
    (170) CompositeLit -> IDENT PERIOD IDENT . LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    RPAREN          shift and go to state 467
    COMMA           shift and go to state 468
    PERIOD          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LBRACK          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LPAREN          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LOR             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LAND            reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    EQL             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    NEQ             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LSS             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LEQ             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    GTR             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    GEQ             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    ADD             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    SUB             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    OR              reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    XOR             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    MUL             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    QUO             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    REM             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    SHL             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    SHR             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    AND             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    AND_NOT         reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LBRACE          shift and go to state 198

  ! RPAREN          [ reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .) ]
  ! COMMA           [ reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .) ]

    LiteralValue                   shift and go to state 370

state 421

    (171) LiteralValue -> LBRACE ElementList COMMA RBRACE .

    PERIOD          reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LBRACK          reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LPAREN          reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LOR             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LAND            reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    EQL             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    NEQ             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LSS             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LEQ             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    GTR             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    GEQ             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    ADD             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SUB             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    OR              reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    XOR             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    MUL             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    QUO             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    REM             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SHL             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SHR             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    AND             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    AND_NOT         reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    RBRACK          reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    COMMA           reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SEMICOLON       reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    RPAREN          reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    INC             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    DEC             reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    ASSIGN          reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    ADD_ASSIGN      reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SUB_ASSIGN      reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    OR_ASSIGN       reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    XOR_ASSIGN      reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    MUL_ASSIGN      reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    QUO_ASSIGN      reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    REM_ASSIGN      reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    AND_ASSIGN      reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SHL_ASSIGN      reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    SHR_ASSIGN      reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    AND_NOT_ASSIGN  reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    COLON           reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    RBRACE          reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    LBRACE          reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)
    ELSE            reduce using rule 171 (LiteralValue -> LBRACE ElementList COMMA RBRACE .)


state 422

    (175) ElementList -> ElementList COMMA KeyedElement .

    COMMA           reduce using rule 175 (ElementList -> ElementList COMMA KeyedElement .)
    RBRACE          reduce using rule 175 (ElementList -> ElementList COMMA KeyedElement .)


state 423

    (177) KeyedElement -> Key COLON Element .

    COMMA           reduce using rule 177 (KeyedElement -> Key COLON Element .)
    RBRACE          reduce using rule 177 (KeyedElement -> Key COLON Element .)


state 424

    (180) Element -> Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    COMMA           reduce using rule 180 (Element -> Expr .)
    RBRACE          reduce using rule 180 (Element -> Expr .)
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182


state 425

    (181) Element -> LiteralValue .

    COMMA           reduce using rule 181 (Element -> LiteralValue .)
    RBRACE          reduce using rule 181 (Element -> LiteralValue .)


state 426

    (134) StructType -> STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct .

    ASSIGN          reduce using rule 134 (StructType -> STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct .)
    SEMICOLON       reduce using rule 134 (StructType -> STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct .)
    RPAREN          reduce using rule 134 (StructType -> STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct .)
    LBRACE          reduce using rule 134 (StructType -> STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct .)
    RBRACK          reduce using rule 134 (StructType -> STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct .)
    COMMA           reduce using rule 134 (StructType -> STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct .)
    STRING          reduce using rule 134 (StructType -> STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct .)
    COLON           reduce using rule 134 (StructType -> STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct .)
    LPAREN          reduce using rule 134 (StructType -> STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct .)


state 427

    (137) FieldDeclMult -> FieldDeclMult FieldDecl SEMICOLON .

    RBRACE          reduce using rule 137 (FieldDeclMult -> FieldDeclMult FieldDecl SEMICOLON .)
    IDENT           reduce using rule 137 (FieldDeclMult -> FieldDeclMult FieldDecl SEMICOLON .)
    MUL             reduce using rule 137 (FieldDeclMult -> FieldDeclMult FieldDecl SEMICOLON .)


state 428

    (139) FieldDecl -> IdentifierList Type .
    (143) FieldDecl -> IdentifierList Type . Tag
    (147) Tag -> . STRING

    SEMICOLON       reduce using rule 139 (FieldDecl -> IdentifierList Type .)
    STRING          shift and go to state 432

    Tag                            shift and go to state 469

state 429

    (140) FieldDecl -> IdentifierList IDENT .
    (141) FieldDecl -> IdentifierList IDENT . PERIOD IDENT
    (144) FieldDecl -> IdentifierList IDENT . Tag
    (145) FieldDecl -> IdentifierList IDENT . PERIOD IDENT Tag
    (147) Tag -> . STRING

    SEMICOLON       reduce using rule 140 (FieldDecl -> IdentifierList IDENT .)
    PERIOD          shift and go to state 470
    STRING          shift and go to state 432

    Tag                            shift and go to state 471

state 430

    (151) EmbeddedField -> IDENT PERIOD . IDENT

    IDENT           shift and go to state 472


state 431

    (146) FieldDecl -> EmbeddedField Tag .

    SEMICOLON       reduce using rule 146 (FieldDecl -> EmbeddedField Tag .)


state 432

    (147) Tag -> STRING .

    SEMICOLON       reduce using rule 147 (Tag -> STRING .)


state 433

    (148) EmbeddedField -> MUL IDENT .
    (150) EmbeddedField -> MUL IDENT . PERIOD IDENT

    STRING          reduce using rule 148 (EmbeddedField -> MUL IDENT .)
    SEMICOLON       reduce using rule 148 (EmbeddedField -> MUL IDENT .)
    PERIOD          shift and go to state 473


state 434

    (254) IfStmt -> IF Expr BeginScope Block . EndScope else_stmt
    (3) EndScope -> .

    ELSE            reduce using rule 3 (EndScope -> .)
    SEMICOLON       reduce using rule 3 (EndScope -> .)

    EndScope                       shift and go to state 474

state 435

    (255) IfStmt -> IF BeginScope SimpleStmt EndScope . SEMICOLON Expr else_stmt

    SEMICOLON       shift and go to state 475


state 436

    (286) ForStmt -> FOR BeginFor Condition Block . EndFor
    (291) EndFor -> .

    SEMICOLON       reduce using rule 291 (EndFor -> .)

    EndFor                         shift and go to state 476

state 437

    (289) ForStmt -> FOR BeginFor Block EndFor .

    SEMICOLON       reduce using rule 289 (ForStmt -> FOR BeginFor Block EndFor .)


state 438

    (287) ForStmt -> FOR BeginFor ForClause Block . EndFor
    (291) EndFor -> .

    SEMICOLON       reduce using rule 291 (EndFor -> .)

    EndFor                         shift and go to state 477

state 439

    (288) ForStmt -> FOR BeginFor RangeClause Block . EndFor
    (291) EndFor -> .

    SEMICOLON       reduce using rule 291 (EndFor -> .)

    EndFor                         shift and go to state 478

state 440

    (293) ForClause -> InitStmt SEMICOLON . Condition SEMICOLON PostStmt
    (294) ForClause -> InitStmt SEMICOLON . SEMICOLON PostStmt
    (292) Condition -> . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    SEMICOLON       shift and go to state 479
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Condition                      shift and go to state 480
    Expr                           shift and go to state 481
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 441

    (297) RangeClause -> RangeList RANGE . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 482
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 442

    (298) RangeList -> ExpressionList ASSIGN .
    (232) assign_op -> ASSIGN .

    RANGE           reduce using rule 298 (RangeList -> ExpressionList ASSIGN .)
    ADD             reduce using rule 232 (assign_op -> ASSIGN .)
    SUB             reduce using rule 232 (assign_op -> ASSIGN .)
    NOT             reduce using rule 232 (assign_op -> ASSIGN .)
    XOR             reduce using rule 232 (assign_op -> ASSIGN .)
    MUL             reduce using rule 232 (assign_op -> ASSIGN .)
    AND             reduce using rule 232 (assign_op -> ASSIGN .)
    IDENT           reduce using rule 232 (assign_op -> ASSIGN .)
    LPAREN          reduce using rule 232 (assign_op -> ASSIGN .)
    INT             reduce using rule 232 (assign_op -> ASSIGN .)
    FLOAT           reduce using rule 232 (assign_op -> ASSIGN .)
    IMAG            reduce using rule 232 (assign_op -> ASSIGN .)
    RUNE            reduce using rule 232 (assign_op -> ASSIGN .)
    STRING          reduce using rule 232 (assign_op -> ASSIGN .)
    FUNC            reduce using rule 232 (assign_op -> ASSIGN .)
    STRUCT          reduce using rule 232 (assign_op -> ASSIGN .)
    LBRACK          reduce using rule 232 (assign_op -> ASSIGN .)
    MAP             reduce using rule 232 (assign_op -> ASSIGN .)


state 443

    (299) RangeList -> IdentifierList DEFINE .
    (244) ShortVarDecl -> IdentifierList DEFINE . ExpressionList
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RANGE           reduce using rule 299 (RangeList -> IdentifierList DEFINE .)
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 400
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 444

    (261) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope . SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (263) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope . SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE

    SEMICOLON       shift and go to state 483


state 445

    (272) TypeSwitchStmt -> SWITCH SimpleStmt SEMICOLON TypeSwitchGuard . LBRACE TypeCaseClauseMult RBRACE

    LBRACE          shift and go to state 484


state 446

    (274) TypeSwitchGuard -> IDENT . DEFINE PrimaryExpr PERIOD LPAREN TYPE RPAREN
    (84) PrimaryExpr -> IDENT .
    (85) PrimaryExpr -> IDENT . PERIOD IDENT
    (169) CompositeLit -> IDENT . LiteralValue
    (170) CompositeLit -> IDENT . PERIOD IDENT LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    DEFINE          shift and go to state 406
    LBRACK          reduce using rule 84 (PrimaryExpr -> IDENT .)
    LPAREN          reduce using rule 84 (PrimaryExpr -> IDENT .)
    PERIOD          shift and go to state 196
    LBRACE          shift and go to state 198

  ! PERIOD          [ reduce using rule 84 (PrimaryExpr -> IDENT .) ]

    LiteralValue                   shift and go to state 197

state 447

    (275) TypeSwitchGuard -> PrimaryExpr . PERIOD LPAREN TYPE RPAREN
    (87) PrimaryExpr -> PrimaryExpr . Selector
    (88) PrimaryExpr -> PrimaryExpr . Index
    (89) PrimaryExpr -> PrimaryExpr . Slice
    (90) PrimaryExpr -> PrimaryExpr . Arguments
    (91) Selector -> . PERIOD IDENT
    (92) Index -> . LBRACK Expr RBRACK
    (93) Slice -> . LBRACK Expr COLON Expr RBRACK
    (94) Slice -> . LBRACK COLON Expr RBRACK
    (95) Slice -> . LBRACK Expr COLON RBRACK
    (96) Slice -> . LBRACK COLON RBRACK
    (97) Slice -> . LBRACK COLON Expr COLON Expr RBRACK
    (98) Slice -> . LBRACK Expr COLON Expr COLON Expr RBRACK
    (99) Arguments -> . LPAREN RPAREN
    (100) Arguments -> . LPAREN ExpressionList RPAREN
    (101) Arguments -> . LPAREN ExpressionList COMMA RPAREN
    (102) Arguments -> . LPAREN TypeT RPAREN
    (103) Arguments -> . LPAREN TypeT COMMA RPAREN
    (104) Arguments -> . LPAREN TypeT COMMA ExpressionList RPAREN
    (105) Arguments -> . LPAREN TypeT COMMA ExpressionList COMMA RPAREN
    (106) Arguments -> . LPAREN IDENT RPAREN
    (107) Arguments -> . LPAREN IDENT COMMA RPAREN
    (108) Arguments -> . LPAREN IDENT COMMA ExpressionList RPAREN
    (109) Arguments -> . LPAREN IDENT COMMA ExpressionList COMMA RPAREN
    (110) Arguments -> . LPAREN IDENT PERIOD IDENT RPAREN
    (111) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA RPAREN
    (112) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN
    (113) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN

    PERIOD          shift and go to state 407
    LBRACK          shift and go to state 193
    LPAREN          shift and go to state 194

    Selector                       shift and go to state 188
    Index                          shift and go to state 189
    Slice                          shift and go to state 190
    Arguments                      shift and go to state 191

state 448

    (262) ExprSwitchStmt -> SWITCH Expr LBRACE BeginSwitch . ExprCaseClauseMult EndSwitch RBRACE
    (267) ExprCaseClauseMult -> . ExprCaseClause ExprCaseClauseMult
    (268) ExprCaseClauseMult -> .
    (269) ExprCaseClause -> . BeginScope ExprSwitchCase COLON StatementList EndScope
    (301) BeginScope -> .

    RBRACE          reduce using rule 268 (ExprCaseClauseMult -> .)
    CASE            reduce using rule 301 (BeginScope -> .)
    DEFAULT         reduce using rule 301 (BeginScope -> .)

    ExprCaseClauseMult             shift and go to state 485
    ExprCaseClause                 shift and go to state 450
    BeginScope                     shift and go to state 451

state 449

    (264) ExprSwitchStmt -> SWITCH LBRACE BeginSwitch ExprCaseClauseMult . EndSwitch RBRACE
    (266) EndSwitch -> .

    RBRACE          reduce using rule 266 (EndSwitch -> .)

    EndSwitch                      shift and go to state 486

state 450

    (267) ExprCaseClauseMult -> ExprCaseClause . ExprCaseClauseMult
    (267) ExprCaseClauseMult -> . ExprCaseClause ExprCaseClauseMult
    (268) ExprCaseClauseMult -> .
    (269) ExprCaseClause -> . BeginScope ExprSwitchCase COLON StatementList EndScope
    (301) BeginScope -> .

    RBRACE          reduce using rule 268 (ExprCaseClauseMult -> .)
    CASE            reduce using rule 301 (BeginScope -> .)
    DEFAULT         reduce using rule 301 (BeginScope -> .)

    ExprCaseClause                 shift and go to state 450
    ExprCaseClauseMult             shift and go to state 487
    BeginScope                     shift and go to state 451

state 451

    (269) ExprCaseClause -> BeginScope . ExprSwitchCase COLON StatementList EndScope
    (270) ExprSwitchCase -> . CASE ExpressionList
    (271) ExprSwitchCase -> . DEFAULT

    CASE            shift and go to state 489
    DEFAULT         shift and go to state 490

    ExprSwitchCase                 shift and go to state 488

state 452

    (273) TypeSwitchStmt -> SWITCH TypeSwitchGuard LBRACE TypeCaseClauseMult . RBRACE

    RBRACE          shift and go to state 491


state 453

    (276) TypeCaseClauseMult -> TypeCaseClause . TypeCaseClauseMult
    (276) TypeCaseClauseMult -> . TypeCaseClause TypeCaseClauseMult
    (277) TypeCaseClauseMult -> .
    (278) TypeCaseClause -> . CASE BeginScope TypeList EndScope COLON BeginScope StatementList EndScope
    (279) TypeCaseClause -> . DEFAULT COLON BeginScope StatementList EndScope

    RBRACE          reduce using rule 277 (TypeCaseClauseMult -> .)
    CASE            shift and go to state 454
    DEFAULT         shift and go to state 455

    TypeCaseClause                 shift and go to state 453
    TypeCaseClauseMult             shift and go to state 492

state 454

    (278) TypeCaseClause -> CASE . BeginScope TypeList EndScope COLON BeginScope StatementList EndScope
    (301) BeginScope -> .

    IDENT           reduce using rule 301 (BeginScope -> .)
    LPAREN          reduce using rule 301 (BeginScope -> .)
    MUL             reduce using rule 301 (BeginScope -> .)
    LBRACK          reduce using rule 301 (BeginScope -> .)
    STRUCT          reduce using rule 301 (BeginScope -> .)
    MAP             reduce using rule 301 (BeginScope -> .)
    FUNC            reduce using rule 301 (BeginScope -> .)

    BeginScope                     shift and go to state 493

state 455

    (279) TypeCaseClause -> DEFAULT . COLON BeginScope StatementList EndScope

    COLON           shift and go to state 494


state 456

    (274) TypeSwitchGuard -> IDENT DEFINE PrimaryExpr . PERIOD LPAREN TYPE RPAREN
    (87) PrimaryExpr -> PrimaryExpr . Selector
    (88) PrimaryExpr -> PrimaryExpr . Index
    (89) PrimaryExpr -> PrimaryExpr . Slice
    (90) PrimaryExpr -> PrimaryExpr . Arguments
    (91) Selector -> . PERIOD IDENT
    (92) Index -> . LBRACK Expr RBRACK
    (93) Slice -> . LBRACK Expr COLON Expr RBRACK
    (94) Slice -> . LBRACK COLON Expr RBRACK
    (95) Slice -> . LBRACK Expr COLON RBRACK
    (96) Slice -> . LBRACK COLON RBRACK
    (97) Slice -> . LBRACK COLON Expr COLON Expr RBRACK
    (98) Slice -> . LBRACK Expr COLON Expr COLON Expr RBRACK
    (99) Arguments -> . LPAREN RPAREN
    (100) Arguments -> . LPAREN ExpressionList RPAREN
    (101) Arguments -> . LPAREN ExpressionList COMMA RPAREN
    (102) Arguments -> . LPAREN TypeT RPAREN
    (103) Arguments -> . LPAREN TypeT COMMA RPAREN
    (104) Arguments -> . LPAREN TypeT COMMA ExpressionList RPAREN
    (105) Arguments -> . LPAREN TypeT COMMA ExpressionList COMMA RPAREN
    (106) Arguments -> . LPAREN IDENT RPAREN
    (107) Arguments -> . LPAREN IDENT COMMA RPAREN
    (108) Arguments -> . LPAREN IDENT COMMA ExpressionList RPAREN
    (109) Arguments -> . LPAREN IDENT COMMA ExpressionList COMMA RPAREN
    (110) Arguments -> . LPAREN IDENT PERIOD IDENT RPAREN
    (111) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA RPAREN
    (112) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN
    (113) Arguments -> . LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN

    PERIOD          shift and go to state 495
    LBRACK          shift and go to state 193
    LPAREN          shift and go to state 194

    Selector                       shift and go to state 188
    Index                          shift and go to state 189
    Slice                          shift and go to state 190
    Arguments                      shift and go to state 191

state 457

    (275) TypeSwitchGuard -> PrimaryExpr PERIOD LPAREN . TYPE RPAREN

    TYPE            shift and go to state 496


state 458

    (194) ParameterList -> ParameterList COMMA IDENT PERIOD IDENT .

    RPAREN          reduce using rule 194 (ParameterList -> ParameterList COMMA IDENT PERIOD IDENT .)
    COMMA           reduce using rule 194 (ParameterList -> ParameterList COMMA IDENT PERIOD IDENT .)


state 459

    (98) Slice -> LBRACK Expr COLON Expr COLON . Expr RBRACK
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 497
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 460

    (93) Slice -> LBRACK Expr COLON Expr RBRACK .

    PERIOD          reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LBRACK          reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LPAREN          reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LOR             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LAND            reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    EQL             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    NEQ             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LSS             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LEQ             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    GTR             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    GEQ             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    ADD             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SUB             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    OR              reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    XOR             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    MUL             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    QUO             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    REM             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SHL             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SHR             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    AND             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    AND_NOT         reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    RBRACK          reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    COMMA           reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SEMICOLON       reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    RPAREN          reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    INC             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    DEC             reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    ASSIGN          reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    OR_ASSIGN       reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    REM_ASSIGN      reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    AND_ASSIGN      reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    COLON           reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    RBRACE          reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    LBRACE          reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)
    ELSE            reduce using rule 93 (Slice -> LBRACK Expr COLON Expr RBRACK .)


state 461

    (97) Slice -> LBRACK COLON Expr COLON Expr . RBRACK
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    RBRACK          shift and go to state 498
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182


state 462

    (124) TypeT -> LPAREN IDENT PERIOD IDENT . RPAREN
    (85) PrimaryExpr -> IDENT PERIOD IDENT .
    (170) CompositeLit -> IDENT PERIOD IDENT . LiteralValue
    (171) LiteralValue -> . LBRACE ElementList COMMA RBRACE
    (172) LiteralValue -> . LBRACE ElementList RBRACE
    (173) LiteralValue -> . LBRACE RBRACE

    RPAREN          shift and go to state 355
    PERIOD          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LBRACK          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LPAREN          reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LOR             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LAND            reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    EQL             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    NEQ             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LSS             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LEQ             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    GTR             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    GEQ             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    ADD             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    SUB             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    OR              reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    XOR             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    MUL             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    QUO             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    REM             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    SHL             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    SHR             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    AND             reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    AND_NOT         reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .)
    LBRACE          shift and go to state 198

  ! RPAREN          [ reduce using rule 85 (PrimaryExpr -> IDENT PERIOD IDENT .) ]

    LiteralValue                   shift and go to state 370

state 463

    (105) Arguments -> LPAREN TypeT COMMA ExpressionList COMMA . RPAREN
    (55) ExpressionList -> ExpressionList COMMA . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RPAREN          shift and go to state 499
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 308
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 464

    (104) Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .

    PERIOD          reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    LBRACK          reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    LPAREN          reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    LOR             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    LAND            reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    EQL             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    NEQ             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    LSS             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    LEQ             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    GTR             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    GEQ             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    ADD             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    SUB             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    OR              reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    XOR             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    MUL             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    QUO             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    REM             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    SHL             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    SHR             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    AND             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    AND_NOT         reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    RBRACK          reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    COMMA           reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    SEMICOLON       reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    RPAREN          reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    INC             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    DEC             reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    ASSIGN          reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    ADD_ASSIGN      reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    SUB_ASSIGN      reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    OR_ASSIGN       reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    XOR_ASSIGN      reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    MUL_ASSIGN      reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    QUO_ASSIGN      reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    REM_ASSIGN      reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    AND_ASSIGN      reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    SHL_ASSIGN      reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    SHR_ASSIGN      reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    COLON           reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    RBRACE          reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    LBRACE          reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)
    ELSE            reduce using rule 104 (Arguments -> LPAREN TypeT COMMA ExpressionList RPAREN .)


state 465

    (109) Arguments -> LPAREN IDENT COMMA ExpressionList COMMA . RPAREN
    (55) ExpressionList -> ExpressionList COMMA . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RPAREN          shift and go to state 500
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 308
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 466

    (108) Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .

    PERIOD          reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    LBRACK          reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    LPAREN          reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    LOR             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    LAND            reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    EQL             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    NEQ             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    LSS             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    LEQ             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    GTR             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    GEQ             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    ADD             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    SUB             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    OR              reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    XOR             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    MUL             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    QUO             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    REM             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    SHL             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    SHR             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    AND             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    AND_NOT         reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    RBRACK          reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    COMMA           reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    SEMICOLON       reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    RPAREN          reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    INC             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    DEC             reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    ASSIGN          reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    ADD_ASSIGN      reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    SUB_ASSIGN      reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    OR_ASSIGN       reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    XOR_ASSIGN      reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    MUL_ASSIGN      reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    QUO_ASSIGN      reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    REM_ASSIGN      reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    AND_ASSIGN      reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    SHL_ASSIGN      reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    SHR_ASSIGN      reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    COLON           reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    RBRACE          reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    LBRACE          reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)
    ELSE            reduce using rule 108 (Arguments -> LPAREN IDENT COMMA ExpressionList RPAREN .)


state 467

    (110) Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .

    PERIOD          reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    LBRACK          reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    LPAREN          reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    LOR             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    LAND            reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    EQL             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    NEQ             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    LSS             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    LEQ             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    GTR             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    GEQ             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    ADD             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    SUB             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    OR              reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    XOR             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    MUL             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    QUO             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    REM             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    SHL             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    SHR             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    AND             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    AND_NOT         reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    RBRACK          reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    COMMA           reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    SEMICOLON       reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    RPAREN          reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    INC             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    DEC             reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    ASSIGN          reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    ADD_ASSIGN      reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    SUB_ASSIGN      reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    OR_ASSIGN       reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    XOR_ASSIGN      reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    MUL_ASSIGN      reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    QUO_ASSIGN      reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    REM_ASSIGN      reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    AND_ASSIGN      reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    SHL_ASSIGN      reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    SHR_ASSIGN      reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    COLON           reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    RBRACE          reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    LBRACE          reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)
    ELSE            reduce using rule 110 (Arguments -> LPAREN IDENT PERIOD IDENT RPAREN .)


state 468

    (111) Arguments -> LPAREN IDENT PERIOD IDENT COMMA . RPAREN
    (112) Arguments -> LPAREN IDENT PERIOD IDENT COMMA . ExpressionList RPAREN
    (113) Arguments -> LPAREN IDENT PERIOD IDENT COMMA . ExpressionList COMMA RPAREN
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RPAREN          shift and go to state 501
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 502
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 469

    (143) FieldDecl -> IdentifierList Type Tag .

    SEMICOLON       reduce using rule 143 (FieldDecl -> IdentifierList Type Tag .)


state 470

    (141) FieldDecl -> IdentifierList IDENT PERIOD . IDENT
    (145) FieldDecl -> IdentifierList IDENT PERIOD . IDENT Tag

    IDENT           shift and go to state 503


state 471

    (144) FieldDecl -> IdentifierList IDENT Tag .

    SEMICOLON       reduce using rule 144 (FieldDecl -> IdentifierList IDENT Tag .)


state 472

    (151) EmbeddedField -> IDENT PERIOD IDENT .

    STRING          reduce using rule 151 (EmbeddedField -> IDENT PERIOD IDENT .)
    SEMICOLON       reduce using rule 151 (EmbeddedField -> IDENT PERIOD IDENT .)


state 473

    (150) EmbeddedField -> MUL IDENT PERIOD . IDENT

    IDENT           shift and go to state 504


state 474

    (254) IfStmt -> IF Expr BeginScope Block EndScope . else_stmt
    (256) else_stmt -> . ELSE IfStmt
    (257) else_stmt -> . ELSE BeginScope Block EndScope
    (258) else_stmt -> .

    ELSE            shift and go to state 506
    SEMICOLON       reduce using rule 258 (else_stmt -> .)

    else_stmt                      shift and go to state 505

state 475

    (255) IfStmt -> IF BeginScope SimpleStmt EndScope SEMICOLON . Expr else_stmt
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 507
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 476

    (286) ForStmt -> FOR BeginFor Condition Block EndFor .

    SEMICOLON       reduce using rule 286 (ForStmt -> FOR BeginFor Condition Block EndFor .)


state 477

    (287) ForStmt -> FOR BeginFor ForClause Block EndFor .

    SEMICOLON       reduce using rule 287 (ForStmt -> FOR BeginFor ForClause Block EndFor .)


state 478

    (288) ForStmt -> FOR BeginFor RangeClause Block EndFor .

    SEMICOLON       reduce using rule 288 (ForStmt -> FOR BeginFor RangeClause Block EndFor .)


state 479

    (294) ForClause -> InitStmt SEMICOLON SEMICOLON . PostStmt
    (296) PostStmt -> . SimpleStmt
    (220) SimpleStmt -> . EmptyStmt
    (221) SimpleStmt -> . ExpressionStmt
    (222) SimpleStmt -> . IncDecStmt
    (223) SimpleStmt -> . Assignment
    (224) SimpleStmt -> . ShortVarDecl
    (225) EmptyStmt -> .
    (226) ExpressionStmt -> . Expr
    (227) IncDecStmt -> . Expr INC
    (228) IncDecStmt -> . Expr DEC
    (229) Assignment -> . ExpressionList assign_op ExpressionList
    (244) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    LBRACE          reduce using rule 225 (EmptyStmt -> .)
    IDENT           shift and go to state 389
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    PostStmt                       shift and go to state 508
    SimpleStmt                     shift and go to state 509
    EmptyStmt                      shift and go to state 233
    ExpressionStmt                 shift and go to state 234
    IncDecStmt                     shift and go to state 235
    Assignment                     shift and go to state 236
    ShortVarDecl                   shift and go to state 237
    Expr                           shift and go to state 245
    ExpressionList                 shift and go to state 240
    IdentifierList                 shift and go to state 250
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 480

    (293) ForClause -> InitStmt SEMICOLON Condition . SEMICOLON PostStmt

    SEMICOLON       shift and go to state 510


state 481

    (292) Condition -> Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    SEMICOLON       reduce using rule 292 (Condition -> Expr .)
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182


state 482

    (297) RangeClause -> RangeList RANGE Expr .
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    LBRACE          reduce using rule 297 (RangeClause -> RangeList RANGE Expr .)
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182


state 483

    (261) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON . BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (263) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON . LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (301) BeginScope -> .

    LBRACE          shift and go to state 512
    ADD             reduce using rule 301 (BeginScope -> .)
    SUB             reduce using rule 301 (BeginScope -> .)
    NOT             reduce using rule 301 (BeginScope -> .)
    XOR             reduce using rule 301 (BeginScope -> .)
    MUL             reduce using rule 301 (BeginScope -> .)
    AND             reduce using rule 301 (BeginScope -> .)
    IDENT           reduce using rule 301 (BeginScope -> .)
    LPAREN          reduce using rule 301 (BeginScope -> .)
    INT             reduce using rule 301 (BeginScope -> .)
    FLOAT           reduce using rule 301 (BeginScope -> .)
    IMAG            reduce using rule 301 (BeginScope -> .)
    RUNE            reduce using rule 301 (BeginScope -> .)
    STRING          reduce using rule 301 (BeginScope -> .)
    FUNC            reduce using rule 301 (BeginScope -> .)
    STRUCT          reduce using rule 301 (BeginScope -> .)
    LBRACK          reduce using rule 301 (BeginScope -> .)
    MAP             reduce using rule 301 (BeginScope -> .)

    BeginScope                     shift and go to state 511

state 484

    (272) TypeSwitchStmt -> SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LBRACE . TypeCaseClauseMult RBRACE
    (276) TypeCaseClauseMult -> . TypeCaseClause TypeCaseClauseMult
    (277) TypeCaseClauseMult -> .
    (278) TypeCaseClause -> . CASE BeginScope TypeList EndScope COLON BeginScope StatementList EndScope
    (279) TypeCaseClause -> . DEFAULT COLON BeginScope StatementList EndScope

    RBRACE          reduce using rule 277 (TypeCaseClauseMult -> .)
    CASE            shift and go to state 454
    DEFAULT         shift and go to state 455

    TypeCaseClauseMult             shift and go to state 513
    TypeCaseClause                 shift and go to state 453

state 485

    (262) ExprSwitchStmt -> SWITCH Expr LBRACE BeginSwitch ExprCaseClauseMult . EndSwitch RBRACE
    (266) EndSwitch -> .

    RBRACE          reduce using rule 266 (EndSwitch -> .)

    EndSwitch                      shift and go to state 514

state 486

    (264) ExprSwitchStmt -> SWITCH LBRACE BeginSwitch ExprCaseClauseMult EndSwitch . RBRACE

    RBRACE          shift and go to state 515


state 487

    (267) ExprCaseClauseMult -> ExprCaseClause ExprCaseClauseMult .

    RBRACE          reduce using rule 267 (ExprCaseClauseMult -> ExprCaseClause ExprCaseClauseMult .)


state 488

    (269) ExprCaseClause -> BeginScope ExprSwitchCase . COLON StatementList EndScope

    COLON           shift and go to state 516


state 489

    (270) ExprSwitchCase -> CASE . ExpressionList
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    ExpressionList                 shift and go to state 517
    Expr                           shift and go to state 129
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 490

    (271) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 271 (ExprSwitchCase -> DEFAULT .)


state 491

    (273) TypeSwitchStmt -> SWITCH TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE .

    SEMICOLON       reduce using rule 273 (TypeSwitchStmt -> SWITCH TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE .)


state 492

    (276) TypeCaseClauseMult -> TypeCaseClause TypeCaseClauseMult .

    RBRACE          reduce using rule 276 (TypeCaseClauseMult -> TypeCaseClause TypeCaseClauseMult .)


state 493

    (278) TypeCaseClause -> CASE BeginScope . TypeList EndScope COLON BeginScope StatementList EndScope
    (280) TypeList -> . Type
    (281) TypeList -> . IDENT
    (282) TypeList -> . IDENT PERIOD IDENT
    (283) TypeList -> . Type COMMA TypeList
    (284) TypeList -> . IDENT COMMA TypeList
    (285) TypeList -> . IDENT PERIOD IDENT COMMA TypeList
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 520
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    TypeList                       shift and go to state 518
    Type                           shift and go to state 519
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 494

    (279) TypeCaseClause -> DEFAULT COLON . BeginScope StatementList EndScope
    (301) BeginScope -> .

    GOTO            reduce using rule 301 (BeginScope -> .)
    RETURN          reduce using rule 301 (BeginScope -> .)
    BREAK           reduce using rule 301 (BeginScope -> .)
    CONTINUE        reduce using rule 301 (BeginScope -> .)
    FALLTHROUGH     reduce using rule 301 (BeginScope -> .)
    IF              reduce using rule 301 (BeginScope -> .)
    FOR             reduce using rule 301 (BeginScope -> .)
    CONST           reduce using rule 301 (BeginScope -> .)
    VAR             reduce using rule 301 (BeginScope -> .)
    TYPE            reduce using rule 301 (BeginScope -> .)
    IDENT           reduce using rule 301 (BeginScope -> .)
    SWITCH          reduce using rule 301 (BeginScope -> .)
    ADD             reduce using rule 301 (BeginScope -> .)
    SUB             reduce using rule 301 (BeginScope -> .)
    NOT             reduce using rule 301 (BeginScope -> .)
    XOR             reduce using rule 301 (BeginScope -> .)
    MUL             reduce using rule 301 (BeginScope -> .)
    AND             reduce using rule 301 (BeginScope -> .)
    LPAREN          reduce using rule 301 (BeginScope -> .)
    INT             reduce using rule 301 (BeginScope -> .)
    FLOAT           reduce using rule 301 (BeginScope -> .)
    IMAG            reduce using rule 301 (BeginScope -> .)
    RUNE            reduce using rule 301 (BeginScope -> .)
    STRING          reduce using rule 301 (BeginScope -> .)
    FUNC            reduce using rule 301 (BeginScope -> .)
    STRUCT          reduce using rule 301 (BeginScope -> .)
    LBRACK          reduce using rule 301 (BeginScope -> .)
    MAP             reduce using rule 301 (BeginScope -> .)
    SEMICOLON       reduce using rule 301 (BeginScope -> .)
    LBRACE          reduce using rule 301 (BeginScope -> .)
    CASE            reduce using rule 301 (BeginScope -> .)
    DEFAULT         reduce using rule 301 (BeginScope -> .)
    RBRACE          reduce using rule 301 (BeginScope -> .)

    BeginScope                     shift and go to state 521

state 495

    (274) TypeSwitchGuard -> IDENT DEFINE PrimaryExpr PERIOD . LPAREN TYPE RPAREN
    (91) Selector -> PERIOD . IDENT

    LPAREN          shift and go to state 522
    IDENT           shift and go to state 282


state 496

    (275) TypeSwitchGuard -> PrimaryExpr PERIOD LPAREN TYPE . RPAREN

    RPAREN          shift and go to state 523


state 497

    (98) Slice -> LBRACK Expr COLON Expr COLON Expr . RBRACK
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr

    RBRACK          shift and go to state 524
    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182


state 498

    (97) Slice -> LBRACK COLON Expr COLON Expr RBRACK .

    PERIOD          reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LBRACK          reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LPAREN          reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LOR             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LAND            reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    EQL             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    NEQ             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LSS             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LEQ             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    GTR             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    GEQ             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    ADD             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SUB             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    OR              reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    XOR             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    MUL             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    QUO             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    REM             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SHL             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SHR             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    AND             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    AND_NOT         reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    RBRACK          reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    COMMA           reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SEMICOLON       reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    RPAREN          reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    INC             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    DEC             reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    ASSIGN          reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    OR_ASSIGN       reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    REM_ASSIGN      reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    AND_ASSIGN      reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    COLON           reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    RBRACE          reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    LBRACE          reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)
    ELSE            reduce using rule 97 (Slice -> LBRACK COLON Expr COLON Expr RBRACK .)


state 499

    (105) Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .

    PERIOD          reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    LBRACK          reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    LPAREN          reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    LOR             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    LAND            reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    EQL             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    NEQ             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    LSS             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    LEQ             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    GTR             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    GEQ             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    ADD             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    SUB             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    OR              reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    XOR             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    MUL             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    QUO             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    REM             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    SHL             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    SHR             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    AND             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    AND_NOT         reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    RBRACK          reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    COMMA           reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    SEMICOLON       reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    RPAREN          reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    INC             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    DEC             reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    ASSIGN          reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    COLON           reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    RBRACE          reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    LBRACE          reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)
    ELSE            reduce using rule 105 (Arguments -> LPAREN TypeT COMMA ExpressionList COMMA RPAREN .)


state 500

    (109) Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .

    PERIOD          reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    LBRACK          reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    LPAREN          reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    LOR             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    LAND            reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    EQL             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    NEQ             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    LSS             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    LEQ             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    GTR             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    GEQ             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    ADD             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    SUB             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    OR              reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    XOR             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    MUL             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    QUO             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    REM             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    SHL             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    SHR             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    AND             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    AND_NOT         reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    RBRACK          reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    COMMA           reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    SEMICOLON       reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    RPAREN          reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    INC             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    DEC             reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    ASSIGN          reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    COLON           reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    RBRACE          reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    LBRACE          reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)
    ELSE            reduce using rule 109 (Arguments -> LPAREN IDENT COMMA ExpressionList COMMA RPAREN .)


state 501

    (111) Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .

    PERIOD          reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    LBRACK          reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    LPAREN          reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    LOR             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    LAND            reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    EQL             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    NEQ             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    LSS             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    LEQ             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    GTR             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    GEQ             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    ADD             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    SUB             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    OR              reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    XOR             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    MUL             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    QUO             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    REM             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    SHL             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    SHR             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    AND             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    AND_NOT         reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    RBRACK          reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    COMMA           reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    SEMICOLON       reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    RPAREN          reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    INC             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    DEC             reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    ASSIGN          reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    COLON           reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    RBRACE          reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    LBRACE          reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)
    ELSE            reduce using rule 111 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA RPAREN .)


state 502

    (112) Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList . RPAREN
    (113) Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList . COMMA RPAREN
    (55) ExpressionList -> ExpressionList . COMMA Expr

    RPAREN          shift and go to state 526
    COMMA           shift and go to state 525


state 503

    (141) FieldDecl -> IdentifierList IDENT PERIOD IDENT .
    (145) FieldDecl -> IdentifierList IDENT PERIOD IDENT . Tag
    (147) Tag -> . STRING

    SEMICOLON       reduce using rule 141 (FieldDecl -> IdentifierList IDENT PERIOD IDENT .)
    STRING          shift and go to state 432

    Tag                            shift and go to state 527

state 504

    (150) EmbeddedField -> MUL IDENT PERIOD IDENT .

    STRING          reduce using rule 150 (EmbeddedField -> MUL IDENT PERIOD IDENT .)
    SEMICOLON       reduce using rule 150 (EmbeddedField -> MUL IDENT PERIOD IDENT .)


state 505

    (254) IfStmt -> IF Expr BeginScope Block EndScope else_stmt .

    SEMICOLON       reduce using rule 254 (IfStmt -> IF Expr BeginScope Block EndScope else_stmt .)


state 506

    (256) else_stmt -> ELSE . IfStmt
    (257) else_stmt -> ELSE . BeginScope Block EndScope
    (254) IfStmt -> . IF Expr BeginScope Block EndScope else_stmt
    (255) IfStmt -> . IF BeginScope SimpleStmt EndScope SEMICOLON Expr else_stmt
    (301) BeginScope -> .

    IF              shift and go to state 244
    LBRACE          reduce using rule 301 (BeginScope -> .)

    IfStmt                         shift and go to state 528
    BeginScope                     shift and go to state 529

state 507

    (255) IfStmt -> IF BeginScope SimpleStmt EndScope SEMICOLON Expr . else_stmt
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr
    (256) else_stmt -> . ELSE IfStmt
    (257) else_stmt -> . ELSE BeginScope Block EndScope
    (258) else_stmt -> .

    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182
    ELSE            shift and go to state 506
    SEMICOLON       reduce using rule 258 (else_stmt -> .)

    else_stmt                      shift and go to state 530

state 508

    (294) ForClause -> InitStmt SEMICOLON SEMICOLON PostStmt .

    LBRACE          reduce using rule 294 (ForClause -> InitStmt SEMICOLON SEMICOLON PostStmt .)


state 509

    (296) PostStmt -> SimpleStmt .

    LBRACE          reduce using rule 296 (PostStmt -> SimpleStmt .)


state 510

    (293) ForClause -> InitStmt SEMICOLON Condition SEMICOLON . PostStmt
    (296) PostStmt -> . SimpleStmt
    (220) SimpleStmt -> . EmptyStmt
    (221) SimpleStmt -> . ExpressionStmt
    (222) SimpleStmt -> . IncDecStmt
    (223) SimpleStmt -> . Assignment
    (224) SimpleStmt -> . ShortVarDecl
    (225) EmptyStmt -> .
    (226) ExpressionStmt -> . Expr
    (227) IncDecStmt -> . Expr INC
    (228) IncDecStmt -> . Expr DEC
    (229) Assignment -> . ExpressionList assign_op ExpressionList
    (244) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    LBRACE          reduce using rule 225 (EmptyStmt -> .)
    IDENT           shift and go to state 389
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    PostStmt                       shift and go to state 531
    SimpleStmt                     shift and go to state 509
    EmptyStmt                      shift and go to state 233
    ExpressionStmt                 shift and go to state 234
    IncDecStmt                     shift and go to state 235
    Assignment                     shift and go to state 236
    ShortVarDecl                   shift and go to state 237
    Expr                           shift and go to state 245
    ExpressionList                 shift and go to state 240
    IdentifierList                 shift and go to state 250
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 511

    (261) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope . Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 532
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 512

    (263) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON LBRACE . BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (265) BeginSwitch -> .

    RBRACE          reduce using rule 265 (BeginSwitch -> .)
    CASE            reduce using rule 265 (BeginSwitch -> .)
    DEFAULT         reduce using rule 265 (BeginSwitch -> .)

    BeginSwitch                    shift and go to state 533

state 513

    (272) TypeSwitchStmt -> SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LBRACE TypeCaseClauseMult . RBRACE

    RBRACE          shift and go to state 534


state 514

    (262) ExprSwitchStmt -> SWITCH Expr LBRACE BeginSwitch ExprCaseClauseMult EndSwitch . RBRACE

    RBRACE          shift and go to state 535


state 515

    (264) ExprSwitchStmt -> SWITCH LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE .

    SEMICOLON       reduce using rule 264 (ExprSwitchStmt -> SWITCH LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE .)


state 516

    (269) ExprCaseClause -> BeginScope ExprSwitchCase COLON . StatementList EndScope
    (204) StatementList -> . Statement SEMICOLON StatementList
    (205) StatementList -> .
    (206) Statement -> . Decl
    (207) Statement -> . LabeledStmt
    (208) Statement -> . SimpleStmt
    (209) Statement -> . GotoStmt
    (210) Statement -> . ReturnStmt
    (211) Statement -> . BreakStmt
    (212) Statement -> . ContinueStmt
    (213) Statement -> . FallthroughStmt
    (214) Statement -> . BeginScope Block EndScope
    (215) Statement -> . IfStmt
    (216) Statement -> . SwitchStmt
    (217) Statement -> . ForStmt
    (19) Decl -> . ConstDecl
    (20) Decl -> . VarDecl
    (21) Decl -> . TypeDecl
    (218) LabeledStmt -> . Label COLON Statement
    (220) SimpleStmt -> . EmptyStmt
    (221) SimpleStmt -> . ExpressionStmt
    (222) SimpleStmt -> . IncDecStmt
    (223) SimpleStmt -> . Assignment
    (224) SimpleStmt -> . ShortVarDecl
    (245) GotoStmt -> . GOTO Label
    (246) ReturnStmt -> . RETURN ExpressionList
    (247) ReturnStmt -> . RETURN
    (248) BreakStmt -> . BREAK Label
    (249) BreakStmt -> . BREAK
    (250) ContinueStmt -> . CONTINUE Label
    (251) ContinueStmt -> . CONTINUE
    (252) FallthroughStmt -> . FALLTHROUGH
    (301) BeginScope -> .
    (254) IfStmt -> . IF Expr BeginScope Block EndScope else_stmt
    (255) IfStmt -> . IF BeginScope SimpleStmt EndScope SEMICOLON Expr else_stmt
    (259) SwitchStmt -> . ExprSwitchStmt
    (260) SwitchStmt -> . TypeSwitchStmt
    (286) ForStmt -> . FOR BeginFor Condition Block EndFor
    (287) ForStmt -> . FOR BeginFor ForClause Block EndFor
    (288) ForStmt -> . FOR BeginFor RangeClause Block EndFor
    (289) ForStmt -> . FOR BeginFor Block EndFor
    (22) ConstDecl -> . CONST ConstSpec
    (23) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (29) VarDecl -> . VAR VarSpec
    (30) VarDecl -> . VAR LPAREN VarMult RPAREN
    (40) TypeDecl -> . TYPE TypeSpec
    (41) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (219) Label -> . IDENT
    (225) EmptyStmt -> .
    (226) ExpressionStmt -> . Expr
    (227) IncDecStmt -> . Expr INC
    (228) IncDecStmt -> . Expr DEC
    (229) Assignment -> . ExpressionList assign_op ExpressionList
    (244) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (261) ExprSwitchStmt -> . SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (262) ExprSwitchStmt -> . SWITCH Expr LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (263) ExprSwitchStmt -> . SWITCH BeginScope SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (264) ExprSwitchStmt -> . SWITCH LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (272) TypeSwitchStmt -> . SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (273) TypeSwitchStmt -> . SWITCH TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    CASE            reduce using rule 205 (StatementList -> .)
    DEFAULT         reduce using rule 205 (StatementList -> .)
    RBRACE          reduce using rule 205 (StatementList -> .)
    GOTO            shift and go to state 238
    RETURN          shift and go to state 239
    BREAK           shift and go to state 241
    CONTINUE        shift and go to state 242
    FALLTHROUGH     shift and go to state 243
    LBRACE          reduce using rule 301 (BeginScope -> .)
    IF              shift and go to state 244
    FOR             shift and go to state 248
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 249
    SEMICOLON       reduce using rule 225 (EmptyStmt -> .)
    SWITCH          shift and go to state 251
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    BeginScope                     shift and go to state 228
    StatementList                  shift and go to state 536
    Statement                      shift and go to state 219
    Decl                           shift and go to state 220
    LabeledStmt                    shift and go to state 221
    SimpleStmt                     shift and go to state 222
    GotoStmt                       shift and go to state 223
    ReturnStmt                     shift and go to state 224
    BreakStmt                      shift and go to state 225
    ContinueStmt                   shift and go to state 226
    FallthroughStmt                shift and go to state 227
    IfStmt                         shift and go to state 229
    SwitchStmt                     shift and go to state 230
    ForStmt                        shift and go to state 231
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    Label                          shift and go to state 232
    EmptyStmt                      shift and go to state 233
    ExpressionStmt                 shift and go to state 234
    IncDecStmt                     shift and go to state 235
    Assignment                     shift and go to state 236
    ShortVarDecl                   shift and go to state 237
    ExpressionList                 shift and go to state 240
    Expr                           shift and go to state 245
    ExprSwitchStmt                 shift and go to state 246
    TypeSwitchStmt                 shift and go to state 247
    IdentifierList                 shift and go to state 250
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 517

    (270) ExprSwitchCase -> CASE ExpressionList .
    (55) ExpressionList -> ExpressionList . COMMA Expr

    COLON           reduce using rule 270 (ExprSwitchCase -> CASE ExpressionList .)
    COMMA           shift and go to state 211


state 518

    (278) TypeCaseClause -> CASE BeginScope TypeList . EndScope COLON BeginScope StatementList EndScope
    (3) EndScope -> .

    COLON           reduce using rule 3 (EndScope -> .)

    EndScope                       shift and go to state 537

state 519

    (280) TypeList -> Type .
    (283) TypeList -> Type . COMMA TypeList

    COLON           reduce using rule 280 (TypeList -> Type .)
    COMMA           shift and go to state 538


state 520

    (281) TypeList -> IDENT .
    (282) TypeList -> IDENT . PERIOD IDENT
    (284) TypeList -> IDENT . COMMA TypeList
    (285) TypeList -> IDENT . PERIOD IDENT COMMA TypeList

    COLON           reduce using rule 281 (TypeList -> IDENT .)
    PERIOD          shift and go to state 539
    COMMA           shift and go to state 540


state 521

    (279) TypeCaseClause -> DEFAULT COLON BeginScope . StatementList EndScope
    (204) StatementList -> . Statement SEMICOLON StatementList
    (205) StatementList -> .
    (206) Statement -> . Decl
    (207) Statement -> . LabeledStmt
    (208) Statement -> . SimpleStmt
    (209) Statement -> . GotoStmt
    (210) Statement -> . ReturnStmt
    (211) Statement -> . BreakStmt
    (212) Statement -> . ContinueStmt
    (213) Statement -> . FallthroughStmt
    (214) Statement -> . BeginScope Block EndScope
    (215) Statement -> . IfStmt
    (216) Statement -> . SwitchStmt
    (217) Statement -> . ForStmt
    (19) Decl -> . ConstDecl
    (20) Decl -> . VarDecl
    (21) Decl -> . TypeDecl
    (218) LabeledStmt -> . Label COLON Statement
    (220) SimpleStmt -> . EmptyStmt
    (221) SimpleStmt -> . ExpressionStmt
    (222) SimpleStmt -> . IncDecStmt
    (223) SimpleStmt -> . Assignment
    (224) SimpleStmt -> . ShortVarDecl
    (245) GotoStmt -> . GOTO Label
    (246) ReturnStmt -> . RETURN ExpressionList
    (247) ReturnStmt -> . RETURN
    (248) BreakStmt -> . BREAK Label
    (249) BreakStmt -> . BREAK
    (250) ContinueStmt -> . CONTINUE Label
    (251) ContinueStmt -> . CONTINUE
    (252) FallthroughStmt -> . FALLTHROUGH
    (301) BeginScope -> .
    (254) IfStmt -> . IF Expr BeginScope Block EndScope else_stmt
    (255) IfStmt -> . IF BeginScope SimpleStmt EndScope SEMICOLON Expr else_stmt
    (259) SwitchStmt -> . ExprSwitchStmt
    (260) SwitchStmt -> . TypeSwitchStmt
    (286) ForStmt -> . FOR BeginFor Condition Block EndFor
    (287) ForStmt -> . FOR BeginFor ForClause Block EndFor
    (288) ForStmt -> . FOR BeginFor RangeClause Block EndFor
    (289) ForStmt -> . FOR BeginFor Block EndFor
    (22) ConstDecl -> . CONST ConstSpec
    (23) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (29) VarDecl -> . VAR VarSpec
    (30) VarDecl -> . VAR LPAREN VarMult RPAREN
    (40) TypeDecl -> . TYPE TypeSpec
    (41) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (219) Label -> . IDENT
    (225) EmptyStmt -> .
    (226) ExpressionStmt -> . Expr
    (227) IncDecStmt -> . Expr INC
    (228) IncDecStmt -> . Expr DEC
    (229) Assignment -> . ExpressionList assign_op ExpressionList
    (244) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (261) ExprSwitchStmt -> . SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (262) ExprSwitchStmt -> . SWITCH Expr LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (263) ExprSwitchStmt -> . SWITCH BeginScope SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (264) ExprSwitchStmt -> . SWITCH LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (272) TypeSwitchStmt -> . SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (273) TypeSwitchStmt -> . SWITCH TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    CASE            reduce using rule 205 (StatementList -> .)
    DEFAULT         reduce using rule 205 (StatementList -> .)
    RBRACE          reduce using rule 205 (StatementList -> .)
    GOTO            shift and go to state 238
    RETURN          shift and go to state 239
    BREAK           shift and go to state 241
    CONTINUE        shift and go to state 242
    FALLTHROUGH     shift and go to state 243
    LBRACE          reduce using rule 301 (BeginScope -> .)
    IF              shift and go to state 244
    FOR             shift and go to state 248
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 249
    SEMICOLON       reduce using rule 225 (EmptyStmt -> .)
    SWITCH          shift and go to state 251
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    BeginScope                     shift and go to state 228
    StatementList                  shift and go to state 541
    Statement                      shift and go to state 219
    Decl                           shift and go to state 220
    LabeledStmt                    shift and go to state 221
    SimpleStmt                     shift and go to state 222
    GotoStmt                       shift and go to state 223
    ReturnStmt                     shift and go to state 224
    BreakStmt                      shift and go to state 225
    ContinueStmt                   shift and go to state 226
    FallthroughStmt                shift and go to state 227
    IfStmt                         shift and go to state 229
    SwitchStmt                     shift and go to state 230
    ForStmt                        shift and go to state 231
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    Label                          shift and go to state 232
    EmptyStmt                      shift and go to state 233
    ExpressionStmt                 shift and go to state 234
    IncDecStmt                     shift and go to state 235
    Assignment                     shift and go to state 236
    ShortVarDecl                   shift and go to state 237
    ExpressionList                 shift and go to state 240
    Expr                           shift and go to state 245
    ExprSwitchStmt                 shift and go to state 246
    TypeSwitchStmt                 shift and go to state 247
    IdentifierList                 shift and go to state 250
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 522

    (274) TypeSwitchGuard -> IDENT DEFINE PrimaryExpr PERIOD LPAREN . TYPE RPAREN

    TYPE            shift and go to state 542


state 523

    (275) TypeSwitchGuard -> PrimaryExpr PERIOD LPAREN TYPE RPAREN .

    LBRACE          reduce using rule 275 (TypeSwitchGuard -> PrimaryExpr PERIOD LPAREN TYPE RPAREN .)


state 524

    (98) Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .

    PERIOD          reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LBRACK          reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LPAREN          reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LOR             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LAND            reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    EQL             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    NEQ             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LSS             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LEQ             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    GTR             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    GEQ             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    ADD             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SUB             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    OR              reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    XOR             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    MUL             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    QUO             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    REM             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SHL             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SHR             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    AND             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    AND_NOT         reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    RBRACK          reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    COMMA           reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SEMICOLON       reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    RPAREN          reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    INC             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    DEC             reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    ASSIGN          reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    ADD_ASSIGN      reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SUB_ASSIGN      reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    OR_ASSIGN       reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    XOR_ASSIGN      reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    MUL_ASSIGN      reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    QUO_ASSIGN      reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    REM_ASSIGN      reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    AND_ASSIGN      reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SHL_ASSIGN      reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    SHR_ASSIGN      reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    AND_NOT_ASSIGN  reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    COLON           reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    RBRACE          reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    LBRACE          reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)
    ELSE            reduce using rule 98 (Slice -> LBRACK Expr COLON Expr COLON Expr RBRACK .)


state 525

    (113) Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA . RPAREN
    (55) ExpressionList -> ExpressionList COMMA . Expr
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    RPAREN          shift and go to state 543
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    IDENT           shift and go to state 106
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    Expr                           shift and go to state 308
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 526

    (112) Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .

    PERIOD          reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    LBRACK          reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    LPAREN          reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    LOR             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    LAND            reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    EQL             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    NEQ             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    LSS             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    LEQ             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    GTR             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    GEQ             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    ADD             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    SUB             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    OR              reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    XOR             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    MUL             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    QUO             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    REM             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    SHL             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    SHR             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    AND             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    AND_NOT         reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    RBRACK          reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    COMMA           reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    SEMICOLON       reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    RPAREN          reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    INC             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    DEC             reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    ASSIGN          reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    ADD_ASSIGN      reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    SUB_ASSIGN      reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    OR_ASSIGN       reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    XOR_ASSIGN      reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    MUL_ASSIGN      reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    QUO_ASSIGN      reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    REM_ASSIGN      reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    AND_ASSIGN      reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    SHL_ASSIGN      reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    SHR_ASSIGN      reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    COLON           reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    RBRACE          reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    LBRACE          reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)
    ELSE            reduce using rule 112 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList RPAREN .)


state 527

    (145) FieldDecl -> IdentifierList IDENT PERIOD IDENT Tag .

    SEMICOLON       reduce using rule 145 (FieldDecl -> IdentifierList IDENT PERIOD IDENT Tag .)


state 528

    (256) else_stmt -> ELSE IfStmt .

    SEMICOLON       reduce using rule 256 (else_stmt -> ELSE IfStmt .)


state 529

    (257) else_stmt -> ELSE BeginScope . Block EndScope
    (253) Block -> . LBRACE StatementList RBRACE

    LBRACE          shift and go to state 141

    Block                          shift and go to state 544

state 530

    (255) IfStmt -> IF BeginScope SimpleStmt EndScope SEMICOLON Expr else_stmt .

    SEMICOLON       reduce using rule 255 (IfStmt -> IF BeginScope SimpleStmt EndScope SEMICOLON Expr else_stmt .)


state 531

    (293) ForClause -> InitStmt SEMICOLON Condition SEMICOLON PostStmt .

    LBRACE          reduce using rule 293 (ForClause -> InitStmt SEMICOLON Condition SEMICOLON PostStmt .)


state 532

    (261) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr . EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (57) Expr -> Expr . LOR Expr
    (58) Expr -> Expr . LAND Expr
    (59) Expr -> Expr . EQL Expr
    (60) Expr -> Expr . NEQ Expr
    (61) Expr -> Expr . LSS Expr
    (62) Expr -> Expr . LEQ Expr
    (63) Expr -> Expr . GTR Expr
    (64) Expr -> Expr . GEQ Expr
    (65) Expr -> Expr . ADD Expr
    (66) Expr -> Expr . SUB Expr
    (67) Expr -> Expr . OR Expr
    (68) Expr -> Expr . XOR Expr
    (69) Expr -> Expr . MUL Expr
    (70) Expr -> Expr . QUO Expr
    (71) Expr -> Expr . REM Expr
    (72) Expr -> Expr . SHL Expr
    (73) Expr -> Expr . SHR Expr
    (74) Expr -> Expr . AND Expr
    (75) Expr -> Expr . AND_NOT Expr
    (3) EndScope -> .

    LOR             shift and go to state 164
    LAND            shift and go to state 165
    EQL             shift and go to state 166
    NEQ             shift and go to state 167
    LSS             shift and go to state 168
    LEQ             shift and go to state 169
    GTR             shift and go to state 170
    GEQ             shift and go to state 171
    ADD             shift and go to state 172
    SUB             shift and go to state 173
    OR              shift and go to state 174
    XOR             shift and go to state 175
    MUL             shift and go to state 176
    QUO             shift and go to state 177
    REM             shift and go to state 178
    SHL             shift and go to state 179
    SHR             shift and go to state 180
    AND             shift and go to state 181
    AND_NOT         shift and go to state 182
    LBRACE          reduce using rule 3 (EndScope -> .)

    EndScope                       shift and go to state 545

state 533

    (263) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch . ExprCaseClauseMult EndSwitch RBRACE
    (267) ExprCaseClauseMult -> . ExprCaseClause ExprCaseClauseMult
    (268) ExprCaseClauseMult -> .
    (269) ExprCaseClause -> . BeginScope ExprSwitchCase COLON StatementList EndScope
    (301) BeginScope -> .

    RBRACE          reduce using rule 268 (ExprCaseClauseMult -> .)
    CASE            reduce using rule 301 (BeginScope -> .)
    DEFAULT         reduce using rule 301 (BeginScope -> .)

    BeginScope                     shift and go to state 451
    ExprCaseClauseMult             shift and go to state 546
    ExprCaseClause                 shift and go to state 450

state 534

    (272) TypeSwitchStmt -> SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE .

    SEMICOLON       reduce using rule 272 (TypeSwitchStmt -> SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE .)


state 535

    (262) ExprSwitchStmt -> SWITCH Expr LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE .

    SEMICOLON       reduce using rule 262 (ExprSwitchStmt -> SWITCH Expr LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE .)


state 536

    (269) ExprCaseClause -> BeginScope ExprSwitchCase COLON StatementList . EndScope
    (3) EndScope -> .

    CASE            reduce using rule 3 (EndScope -> .)
    DEFAULT         reduce using rule 3 (EndScope -> .)
    RBRACE          reduce using rule 3 (EndScope -> .)

    EndScope                       shift and go to state 547

state 537

    (278) TypeCaseClause -> CASE BeginScope TypeList EndScope . COLON BeginScope StatementList EndScope

    COLON           shift and go to state 548


state 538

    (283) TypeList -> Type COMMA . TypeList
    (280) TypeList -> . Type
    (281) TypeList -> . IDENT
    (282) TypeList -> . IDENT PERIOD IDENT
    (283) TypeList -> . Type COMMA TypeList
    (284) TypeList -> . IDENT COMMA TypeList
    (285) TypeList -> . IDENT PERIOD IDENT COMMA TypeList
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 520
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    Type                           shift and go to state 519
    TypeList                       shift and go to state 549
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 539

    (282) TypeList -> IDENT PERIOD . IDENT
    (285) TypeList -> IDENT PERIOD . IDENT COMMA TypeList

    IDENT           shift and go to state 550


state 540

    (284) TypeList -> IDENT COMMA . TypeList
    (280) TypeList -> . Type
    (281) TypeList -> . IDENT
    (282) TypeList -> . IDENT PERIOD IDENT
    (283) TypeList -> . Type COMMA TypeList
    (284) TypeList -> . IDENT COMMA TypeList
    (285) TypeList -> . IDENT PERIOD IDENT COMMA TypeList
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 520
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    TypeList                       shift and go to state 551
    Type                           shift and go to state 519
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 541

    (279) TypeCaseClause -> DEFAULT COLON BeginScope StatementList . EndScope
    (3) EndScope -> .

    CASE            reduce using rule 3 (EndScope -> .)
    DEFAULT         reduce using rule 3 (EndScope -> .)
    RBRACE          reduce using rule 3 (EndScope -> .)

    EndScope                       shift and go to state 552

state 542

    (274) TypeSwitchGuard -> IDENT DEFINE PrimaryExpr PERIOD LPAREN TYPE . RPAREN

    RPAREN          shift and go to state 553


state 543

    (113) Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .

    PERIOD          reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    LBRACK          reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    LPAREN          reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    LOR             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    LAND            reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    EQL             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    NEQ             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    LSS             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    LEQ             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    GTR             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    GEQ             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    ADD             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    SUB             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    OR              reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    XOR             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    MUL             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    QUO             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    REM             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    SHL             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    SHR             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    AND             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    AND_NOT         reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    RBRACK          reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    COMMA           reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    SEMICOLON       reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    RPAREN          reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    INC             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    DEC             reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    ASSIGN          reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    ADD_ASSIGN      reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    SUB_ASSIGN      reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    OR_ASSIGN       reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    XOR_ASSIGN      reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    MUL_ASSIGN      reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    QUO_ASSIGN      reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    REM_ASSIGN      reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    AND_ASSIGN      reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    SHL_ASSIGN      reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    SHR_ASSIGN      reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    AND_NOT_ASSIGN  reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    COLON           reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    RBRACE          reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    LBRACE          reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)
    ELSE            reduce using rule 113 (Arguments -> LPAREN IDENT PERIOD IDENT COMMA ExpressionList COMMA RPAREN .)


state 544

    (257) else_stmt -> ELSE BeginScope Block . EndScope
    (3) EndScope -> .

    SEMICOLON       reduce using rule 3 (EndScope -> .)

    EndScope                       shift and go to state 554

state 545

    (261) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope . LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE

    LBRACE          shift and go to state 555


state 546

    (263) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult . EndSwitch RBRACE
    (266) EndSwitch -> .

    RBRACE          reduce using rule 266 (EndSwitch -> .)

    EndSwitch                      shift and go to state 556

state 547

    (269) ExprCaseClause -> BeginScope ExprSwitchCase COLON StatementList EndScope .

    CASE            reduce using rule 269 (ExprCaseClause -> BeginScope ExprSwitchCase COLON StatementList EndScope .)
    DEFAULT         reduce using rule 269 (ExprCaseClause -> BeginScope ExprSwitchCase COLON StatementList EndScope .)
    RBRACE          reduce using rule 269 (ExprCaseClause -> BeginScope ExprSwitchCase COLON StatementList EndScope .)


state 548

    (278) TypeCaseClause -> CASE BeginScope TypeList EndScope COLON . BeginScope StatementList EndScope
    (301) BeginScope -> .

    GOTO            reduce using rule 301 (BeginScope -> .)
    RETURN          reduce using rule 301 (BeginScope -> .)
    BREAK           reduce using rule 301 (BeginScope -> .)
    CONTINUE        reduce using rule 301 (BeginScope -> .)
    FALLTHROUGH     reduce using rule 301 (BeginScope -> .)
    IF              reduce using rule 301 (BeginScope -> .)
    FOR             reduce using rule 301 (BeginScope -> .)
    CONST           reduce using rule 301 (BeginScope -> .)
    VAR             reduce using rule 301 (BeginScope -> .)
    TYPE            reduce using rule 301 (BeginScope -> .)
    IDENT           reduce using rule 301 (BeginScope -> .)
    SWITCH          reduce using rule 301 (BeginScope -> .)
    ADD             reduce using rule 301 (BeginScope -> .)
    SUB             reduce using rule 301 (BeginScope -> .)
    NOT             reduce using rule 301 (BeginScope -> .)
    XOR             reduce using rule 301 (BeginScope -> .)
    MUL             reduce using rule 301 (BeginScope -> .)
    AND             reduce using rule 301 (BeginScope -> .)
    LPAREN          reduce using rule 301 (BeginScope -> .)
    INT             reduce using rule 301 (BeginScope -> .)
    FLOAT           reduce using rule 301 (BeginScope -> .)
    IMAG            reduce using rule 301 (BeginScope -> .)
    RUNE            reduce using rule 301 (BeginScope -> .)
    STRING          reduce using rule 301 (BeginScope -> .)
    FUNC            reduce using rule 301 (BeginScope -> .)
    STRUCT          reduce using rule 301 (BeginScope -> .)
    LBRACK          reduce using rule 301 (BeginScope -> .)
    MAP             reduce using rule 301 (BeginScope -> .)
    SEMICOLON       reduce using rule 301 (BeginScope -> .)
    LBRACE          reduce using rule 301 (BeginScope -> .)
    CASE            reduce using rule 301 (BeginScope -> .)
    DEFAULT         reduce using rule 301 (BeginScope -> .)
    RBRACE          reduce using rule 301 (BeginScope -> .)

    BeginScope                     shift and go to state 557

state 549

    (283) TypeList -> Type COMMA TypeList .

    COLON           reduce using rule 283 (TypeList -> Type COMMA TypeList .)


state 550

    (282) TypeList -> IDENT PERIOD IDENT .
    (285) TypeList -> IDENT PERIOD IDENT . COMMA TypeList

    COLON           reduce using rule 282 (TypeList -> IDENT PERIOD IDENT .)
    COMMA           shift and go to state 558


state 551

    (284) TypeList -> IDENT COMMA TypeList .

    COLON           reduce using rule 284 (TypeList -> IDENT COMMA TypeList .)


state 552

    (279) TypeCaseClause -> DEFAULT COLON BeginScope StatementList EndScope .

    CASE            reduce using rule 279 (TypeCaseClause -> DEFAULT COLON BeginScope StatementList EndScope .)
    DEFAULT         reduce using rule 279 (TypeCaseClause -> DEFAULT COLON BeginScope StatementList EndScope .)
    RBRACE          reduce using rule 279 (TypeCaseClause -> DEFAULT COLON BeginScope StatementList EndScope .)


state 553

    (274) TypeSwitchGuard -> IDENT DEFINE PrimaryExpr PERIOD LPAREN TYPE RPAREN .

    LBRACE          reduce using rule 274 (TypeSwitchGuard -> IDENT DEFINE PrimaryExpr PERIOD LPAREN TYPE RPAREN .)


state 554

    (257) else_stmt -> ELSE BeginScope Block EndScope .

    SEMICOLON       reduce using rule 257 (else_stmt -> ELSE BeginScope Block EndScope .)


state 555

    (261) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE . BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (265) BeginSwitch -> .

    RBRACE          reduce using rule 265 (BeginSwitch -> .)
    CASE            reduce using rule 265 (BeginSwitch -> .)
    DEFAULT         reduce using rule 265 (BeginSwitch -> .)

    BeginSwitch                    shift and go to state 559

state 556

    (263) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch . RBRACE

    RBRACE          shift and go to state 560


state 557

    (278) TypeCaseClause -> CASE BeginScope TypeList EndScope COLON BeginScope . StatementList EndScope
    (204) StatementList -> . Statement SEMICOLON StatementList
    (205) StatementList -> .
    (206) Statement -> . Decl
    (207) Statement -> . LabeledStmt
    (208) Statement -> . SimpleStmt
    (209) Statement -> . GotoStmt
    (210) Statement -> . ReturnStmt
    (211) Statement -> . BreakStmt
    (212) Statement -> . ContinueStmt
    (213) Statement -> . FallthroughStmt
    (214) Statement -> . BeginScope Block EndScope
    (215) Statement -> . IfStmt
    (216) Statement -> . SwitchStmt
    (217) Statement -> . ForStmt
    (19) Decl -> . ConstDecl
    (20) Decl -> . VarDecl
    (21) Decl -> . TypeDecl
    (218) LabeledStmt -> . Label COLON Statement
    (220) SimpleStmt -> . EmptyStmt
    (221) SimpleStmt -> . ExpressionStmt
    (222) SimpleStmt -> . IncDecStmt
    (223) SimpleStmt -> . Assignment
    (224) SimpleStmt -> . ShortVarDecl
    (245) GotoStmt -> . GOTO Label
    (246) ReturnStmt -> . RETURN ExpressionList
    (247) ReturnStmt -> . RETURN
    (248) BreakStmt -> . BREAK Label
    (249) BreakStmt -> . BREAK
    (250) ContinueStmt -> . CONTINUE Label
    (251) ContinueStmt -> . CONTINUE
    (252) FallthroughStmt -> . FALLTHROUGH
    (301) BeginScope -> .
    (254) IfStmt -> . IF Expr BeginScope Block EndScope else_stmt
    (255) IfStmt -> . IF BeginScope SimpleStmt EndScope SEMICOLON Expr else_stmt
    (259) SwitchStmt -> . ExprSwitchStmt
    (260) SwitchStmt -> . TypeSwitchStmt
    (286) ForStmt -> . FOR BeginFor Condition Block EndFor
    (287) ForStmt -> . FOR BeginFor ForClause Block EndFor
    (288) ForStmt -> . FOR BeginFor RangeClause Block EndFor
    (289) ForStmt -> . FOR BeginFor Block EndFor
    (22) ConstDecl -> . CONST ConstSpec
    (23) ConstDecl -> . CONST LPAREN ConstSpecMult RPAREN
    (29) VarDecl -> . VAR VarSpec
    (30) VarDecl -> . VAR LPAREN VarMult RPAREN
    (40) TypeDecl -> . TYPE TypeSpec
    (41) TypeDecl -> . TYPE LPAREN TypeSpecMult RPAREN
    (219) Label -> . IDENT
    (225) EmptyStmt -> .
    (226) ExpressionStmt -> . Expr
    (227) IncDecStmt -> . Expr INC
    (228) IncDecStmt -> . Expr DEC
    (229) Assignment -> . ExpressionList assign_op ExpressionList
    (244) ShortVarDecl -> . IdentifierList DEFINE ExpressionList
    (261) ExprSwitchStmt -> . SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (262) ExprSwitchStmt -> . SWITCH Expr LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (263) ExprSwitchStmt -> . SWITCH BeginScope SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (264) ExprSwitchStmt -> . SWITCH LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE
    (272) TypeSwitchStmt -> . SWITCH SimpleStmt SEMICOLON TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (273) TypeSwitchStmt -> . SWITCH TypeSwitchGuard LBRACE TypeCaseClauseMult RBRACE
    (56) Expr -> . UnaryExpr
    (57) Expr -> . Expr LOR Expr
    (58) Expr -> . Expr LAND Expr
    (59) Expr -> . Expr EQL Expr
    (60) Expr -> . Expr NEQ Expr
    (61) Expr -> . Expr LSS Expr
    (62) Expr -> . Expr LEQ Expr
    (63) Expr -> . Expr GTR Expr
    (64) Expr -> . Expr GEQ Expr
    (65) Expr -> . Expr ADD Expr
    (66) Expr -> . Expr SUB Expr
    (67) Expr -> . Expr OR Expr
    (68) Expr -> . Expr XOR Expr
    (69) Expr -> . Expr MUL Expr
    (70) Expr -> . Expr QUO Expr
    (71) Expr -> . Expr REM Expr
    (72) Expr -> . Expr SHL Expr
    (73) Expr -> . Expr SHR Expr
    (74) Expr -> . Expr AND Expr
    (75) Expr -> . Expr AND_NOT Expr
    (54) ExpressionList -> . Expr
    (55) ExpressionList -> . ExpressionList COMMA Expr
    (52) IdentifierList -> . IDENT
    (53) IdentifierList -> . IDENT COMMA IdentifierList
    (76) UnaryExpr -> . PrimaryExpr
    (77) UnaryExpr -> . ADD UnaryExpr
    (78) UnaryExpr -> . SUB UnaryExpr
    (79) UnaryExpr -> . NOT UnaryExpr
    (80) UnaryExpr -> . XOR UnaryExpr
    (81) UnaryExpr -> . MUL UnaryExpr
    (82) UnaryExpr -> . AND UnaryExpr
    (83) PrimaryExpr -> . Lit
    (84) PrimaryExpr -> . IDENT
    (85) PrimaryExpr -> . IDENT PERIOD IDENT
    (86) PrimaryExpr -> . LPAREN Expr RPAREN
    (87) PrimaryExpr -> . PrimaryExpr Selector
    (88) PrimaryExpr -> . PrimaryExpr Index
    (89) PrimaryExpr -> . PrimaryExpr Slice
    (90) PrimaryExpr -> . PrimaryExpr Arguments
    (157) Lit -> . BasicLit
    (158) Lit -> . CompositeLit
    (159) Lit -> . FunctionLit
    (160) BasicLit -> . INT
    (161) BasicLit -> . FLOAT
    (162) BasicLit -> . IMAG
    (163) BasicLit -> . RUNE
    (164) BasicLit -> . STRING
    (165) CompositeLit -> . StructType Arguments
    (166) CompositeLit -> . ArrayType LiteralValue
    (167) CompositeLit -> . SliceType LiteralValue
    (168) CompositeLit -> . MapType LiteralValue
    (169) CompositeLit -> . IDENT LiteralValue
    (170) CompositeLit -> . IDENT PERIOD IDENT LiteralValue
    (182) FunctionLit -> . FUNC Signature FunctionBody
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType

    CASE            reduce using rule 205 (StatementList -> .)
    DEFAULT         reduce using rule 205 (StatementList -> .)
    RBRACE          reduce using rule 205 (StatementList -> .)
    GOTO            shift and go to state 238
    RETURN          shift and go to state 239
    BREAK           shift and go to state 241
    CONTINUE        shift and go to state 242
    FALLTHROUGH     shift and go to state 243
    LBRACE          reduce using rule 301 (BeginScope -> .)
    IF              shift and go to state 244
    FOR             shift and go to state 248
    CONST           shift and go to state 18
    VAR             shift and go to state 19
    TYPE            shift and go to state 20
    IDENT           shift and go to state 249
    SEMICOLON       reduce using rule 225 (EmptyStmt -> .)
    SWITCH          shift and go to state 251
    ADD             shift and go to state 98
    SUB             shift and go to state 99
    NOT             shift and go to state 104
    XOR             shift and go to state 100
    MUL             shift and go to state 101
    AND             shift and go to state 102
    LPAREN          shift and go to state 107
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    IMAG            shift and go to state 113
    RUNE            shift and go to state 114
    STRING          shift and go to state 115
    FUNC            shift and go to state 120
    STRUCT          shift and go to state 64
    LBRACK          shift and go to state 63
    MAP             shift and go to state 65

    BeginScope                     shift and go to state 228
    StatementList                  shift and go to state 561
    Statement                      shift and go to state 219
    Decl                           shift and go to state 220
    LabeledStmt                    shift and go to state 221
    SimpleStmt                     shift and go to state 222
    GotoStmt                       shift and go to state 223
    ReturnStmt                     shift and go to state 224
    BreakStmt                      shift and go to state 225
    ContinueStmt                   shift and go to state 226
    FallthroughStmt                shift and go to state 227
    IfStmt                         shift and go to state 229
    SwitchStmt                     shift and go to state 230
    ForStmt                        shift and go to state 231
    ConstDecl                      shift and go to state 14
    VarDecl                        shift and go to state 15
    TypeDecl                       shift and go to state 16
    Label                          shift and go to state 232
    EmptyStmt                      shift and go to state 233
    ExpressionStmt                 shift and go to state 234
    IncDecStmt                     shift and go to state 235
    Assignment                     shift and go to state 236
    ShortVarDecl                   shift and go to state 237
    ExpressionList                 shift and go to state 240
    Expr                           shift and go to state 245
    ExprSwitchStmt                 shift and go to state 246
    TypeSwitchStmt                 shift and go to state 247
    IdentifierList                 shift and go to state 250
    UnaryExpr                      shift and go to state 97
    PrimaryExpr                    shift and go to state 103
    Lit                            shift and go to state 105
    BasicLit                       shift and go to state 108
    CompositeLit                   shift and go to state 109
    FunctionLit                    shift and go to state 110
    StructType                     shift and go to state 116
    ArrayType                      shift and go to state 117
    SliceType                      shift and go to state 118
    MapType                        shift and go to state 119

state 558

    (285) TypeList -> IDENT PERIOD IDENT COMMA . TypeList
    (280) TypeList -> . Type
    (281) TypeList -> . IDENT
    (282) TypeList -> . IDENT PERIOD IDENT
    (283) TypeList -> . Type COMMA TypeList
    (284) TypeList -> . IDENT COMMA TypeList
    (285) TypeList -> . IDENT PERIOD IDENT COMMA TypeList
    (114) Type -> . TypeT
    (115) Type -> . PointerType
    (116) Type -> . LPAREN PointerType RPAREN
    (117) TypeT -> . ArrayType
    (118) TypeT -> . StructType
    (119) TypeT -> . SliceType
    (120) TypeT -> . MapType
    (121) TypeT -> . FunctionType
    (122) TypeT -> . LPAREN TypeT RPAREN
    (123) TypeT -> . LPAREN IDENT RPAREN
    (124) TypeT -> . LPAREN IDENT PERIOD IDENT RPAREN
    (125) PointerType -> . MUL Type
    (126) PointerType -> . MUL IDENT
    (127) PointerType -> . MUL IDENT PERIOD IDENT
    (129) ArrayType -> . LBRACK ArrayLength RBRACK ElementType
    (134) StructType -> . STRUCT BeginStruct LBRACE FieldDeclMult RBRACE EndStruct
    (128) SliceType -> . LBRACK RBRACK ElementType
    (152) MapType -> . MAP LBRACK KeyType RBRACK ElementType
    (156) FunctionType -> . FUNC Signature

    IDENT           shift and go to state 520
    LPAREN          shift and go to state 56
    MUL             shift and go to state 62
    LBRACK          shift and go to state 63
    STRUCT          shift and go to state 64
    MAP             shift and go to state 65
    FUNC            shift and go to state 66

    TypeList                       shift and go to state 562
    Type                           shift and go to state 519
    TypeT                          shift and go to state 54
    PointerType                    shift and go to state 55
    ArrayType                      shift and go to state 57
    StructType                     shift and go to state 58
    SliceType                      shift and go to state 59
    MapType                        shift and go to state 60
    FunctionType                   shift and go to state 61

state 559

    (261) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch . ExprCaseClauseMult EndSwitch RBRACE
    (267) ExprCaseClauseMult -> . ExprCaseClause ExprCaseClauseMult
    (268) ExprCaseClauseMult -> .
    (269) ExprCaseClause -> . BeginScope ExprSwitchCase COLON StatementList EndScope
    (301) BeginScope -> .

    RBRACE          reduce using rule 268 (ExprCaseClauseMult -> .)
    CASE            reduce using rule 301 (BeginScope -> .)
    DEFAULT         reduce using rule 301 (BeginScope -> .)

    BeginScope                     shift and go to state 451
    ExprCaseClauseMult             shift and go to state 563
    ExprCaseClause                 shift and go to state 450

state 560

    (263) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE .

    SEMICOLON       reduce using rule 263 (ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE .)


state 561

    (278) TypeCaseClause -> CASE BeginScope TypeList EndScope COLON BeginScope StatementList . EndScope
    (3) EndScope -> .

    CASE            reduce using rule 3 (EndScope -> .)
    DEFAULT         reduce using rule 3 (EndScope -> .)
    RBRACE          reduce using rule 3 (EndScope -> .)

    EndScope                       shift and go to state 564

state 562

    (285) TypeList -> IDENT PERIOD IDENT COMMA TypeList .

    COLON           reduce using rule 285 (TypeList -> IDENT PERIOD IDENT COMMA TypeList .)


state 563

    (261) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult . EndSwitch RBRACE
    (266) EndSwitch -> .

    RBRACE          reduce using rule 266 (EndSwitch -> .)

    EndSwitch                      shift and go to state 565

state 564

    (278) TypeCaseClause -> CASE BeginScope TypeList EndScope COLON BeginScope StatementList EndScope .

    CASE            reduce using rule 278 (TypeCaseClause -> CASE BeginScope TypeList EndScope COLON BeginScope StatementList EndScope .)
    DEFAULT         reduce using rule 278 (TypeCaseClause -> CASE BeginScope TypeList EndScope COLON BeginScope StatementList EndScope .)
    RBRACE          reduce using rule 278 (TypeCaseClause -> CASE BeginScope TypeList EndScope COLON BeginScope StatementList EndScope .)


state 565

    (261) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch . RBRACE

    RBRACE          shift and go to state 566


state 566

    (261) ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE .

    SEMICOLON       reduce using rule 261 (ExprSwitchStmt -> SWITCH BeginScope SimpleStmt EndScope SEMICOLON BeginScope Expr EndScope LBRACE BeginSwitch ExprCaseClauseMult EndSwitch RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADD in state 244 resolved as shift
WARNING: shift/reduce conflict for SUB in state 244 resolved as shift
WARNING: shift/reduce conflict for NOT in state 244 resolved as shift
WARNING: shift/reduce conflict for XOR in state 244 resolved as shift
WARNING: shift/reduce conflict for MUL in state 244 resolved as shift
WARNING: shift/reduce conflict for AND in state 244 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 244 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 244 resolved as shift
WARNING: shift/reduce conflict for INT in state 244 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 244 resolved as shift
WARNING: shift/reduce conflict for IMAG in state 244 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 244 resolved as shift
WARNING: shift/reduce conflict for STRING in state 244 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 244 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 244 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 244 resolved as shift
WARNING: shift/reduce conflict for MAP in state 244 resolved as shift
WARNING: shift/reduce conflict for IDENT in state 251 resolved as shift
WARNING: shift/reduce conflict for ADD in state 251 resolved as shift
WARNING: shift/reduce conflict for SUB in state 251 resolved as shift
WARNING: shift/reduce conflict for NOT in state 251 resolved as shift
WARNING: shift/reduce conflict for XOR in state 251 resolved as shift
WARNING: shift/reduce conflict for MUL in state 251 resolved as shift
WARNING: shift/reduce conflict for AND in state 251 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 251 resolved as shift
WARNING: shift/reduce conflict for INT in state 251 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 251 resolved as shift
WARNING: shift/reduce conflict for IMAG in state 251 resolved as shift
WARNING: shift/reduce conflict for RUNE in state 251 resolved as shift
WARNING: shift/reduce conflict for STRING in state 251 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 251 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 251 resolved as shift
WARNING: shift/reduce conflict for LBRACK in state 251 resolved as shift
WARNING: shift/reduce conflict for MAP in state 251 resolved as shift
WARNING: reduce/reduce conflict in state 251 resolved using rule (EmptyStmt -> <empty>)
WARNING: rejected rule (BeginScope -> <empty>) in state 251
