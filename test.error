WARNING: 4 shift/reduce conflicts
WARNING: 4 reduce/reduce conflicts
WARNING: reduce/reduce conflict in state 413 resolved using rule (PointerType -> MUL IDENT)
WARNING: rejected rule (PrimaryExpr -> IDENT) in state 413
WARNING: reduce/reduce conflict in state 500 resolved using rule (PointerType -> MUL IDENT PERIOD IDENT)
WARNING: rejected rule (PrimaryExpr -> IDENT PERIOD IDENT) in state 500
PLY: PARSE DEBUG START
State  : 0
Stack  : . LexToken(PACKAGE,'package',1,1,0)
Action : Shift and goto state 3
State  : 3
Stack  : PACKAGE . LexToken(IDENT,'main',1,9,8)
Action : Shift and goto state 5
State  : 5
Defaulted state 5: Reduce using 2
Stack  : PACKAGE IDENT . None
Action : Reduce rule [PackageClause -> PACKAGE IDENT] with ['package','main'] and goto state 2
Result : <list @ 0x7f380e9aef80> (['PackageClause', ['package'], ['main']])
State  : 2
Stack  : PackageClause . LexToken(SEMICOLON,';',1,13,12)
Action : Shift and goto state 4
State  : 4
Stack  : PackageClause SEMICOLON . LexToken(IMPORT,'import',2,1,14)
Action : Shift and goto state 8
State  : 8
Stack  : PackageClause SEMICOLON IMPORT . LexToken(LPAREN,'(',2,8,21)
Action : Shift and goto state 22
State  : 22
Stack  : PackageClause SEMICOLON IMPORT LPAREN . LexToken(STRING,'"fmt"',3,5,27)
Action : Shift and goto state 26
State  : 26
Defaulted state 26: Reduce using 12
Stack  : PackageClause SEMICOLON IMPORT LPAREN STRING . None
Action : Reduce rule [ImportPath -> STRING] with ['"fmt"'] and goto state 24
Result : <list @ 0x7f380e9789c0> (['ImportPath', ['"fmt"']])
State  : 24
Defaulted state 24: Reduce using 11
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportPath . None
Action : Reduce rule [ImportSpec -> ImportPath] with [<list @ 0x7f380e9789c0>] and goto state 44
Result : <list @ 0x7f380e978800> (['ImportSpec', ['ImportPath', ['"fmt"']] ...)
State  : 44
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec . LexToken(SEMICOLON,';',3,10,32)
Action : Shift and goto state 80
State  : 80
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON . LexToken(RPAREN,')',5,1,35)
Action : Reduce rule [ImportSpecMult -> <empty>] with [] and goto state 147
Result : <list @ 0x7f380e978640> (['ImportMult'])
State  : 147
Defaulted state 147: Reduce using 7
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpec SEMICOLON ImportSpecMult . LexToken(RPAREN,')',5,1,35)
Action : Reduce rule [ImportSpecMult -> ImportSpec SEMICOLON ImportSpecMult] with [<list @ 0x7f380e978800>,';',['ImportMult']] and goto state 43
Result : <list @ 0x7f380e978580> (['ImportMult', ['ImportSpec', ['ImportPa ...)
State  : 43
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpecMult . LexToken(RPAREN,')',5,1,35)
Action : Shift and goto state 79
State  : 79
Defaulted state 79: Reduce using 6
Stack  : PackageClause SEMICOLON IMPORT LPAREN ImportSpecMult RPAREN . None
Action : Reduce rule [ImportDecl -> IMPORT LPAREN ImportSpecMult RPAREN] with ['import','(',<list @ 0x7f380e978580>,')'] and goto state 7
Result : <list @ 0x7f380e978540> (['ImportDecl', ['import'], ['('], ['Impo ...)
State  : 7
Stack  : PackageClause SEMICOLON ImportDecl . LexToken(SEMICOLON,';',5,2,36)
Action : Shift and goto state 20
State  : 20
Stack  : PackageClause SEMICOLON ImportDecl SEMICOLON . LexToken(FUNC,'func',7,1,39)
Action : Reduce rule [ImportDeclMult -> <empty>] with [] and goto state 42
Result : <list @ 0x7f380e970380> (['ImportDeclMult'])
State  : 42
Stack  : PackageClause SEMICOLON ImportDecl SEMICOLON ImportDeclMult . LexToken(FUNC,'func',7,1,39)
Action : Reduce rule [ImportDeclMult -> ImportDecl SEMICOLON ImportDeclMult] with [<list @ 0x7f380e978540>,';',<list @ 0x7f380e970380>] and goto state 6
Result : <list @ 0x7f380e970200> (['ImportDeclMult', ['ImportDecl', ['impo ...)
State  : 6
Stack  : PackageClause SEMICOLON ImportDeclMult . LexToken(FUNC,'func',7,1,39)
Action : Shift and goto state 16
State  : 16
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC . LexToken(IDENT,'main',7,6,44)
Action : Shift and goto state 29
State  : 29
Defaulted state 29: Reduce using 177
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC IDENT . None
Action : Reduce rule [FunctionName -> IDENT] with ['main'] and goto state 28
Result : <list @ 0x7f380eb39a80> (['FunctionName', ['main']])
State  : 28
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName . LexToken(LPAREN,'(',7,10,48)
Action : Shift and goto state 50
State  : 50
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName LPAREN . LexToken(RPAREN,')',7,11,49)
Action : Shift and goto state 89
State  : 89
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName LPAREN RPAREN . LexToken(LBRACE,'{',7,12,50)
Action : Reduce rule [Parameters -> LPAREN RPAREN] with ['(',')'] and goto state 49
Result : <list @ 0x7f380e9705c0> (['Parameters', ['('], [')']])
State  : 49
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Parameters . LexToken(LBRACE,'{',7,12,50)
Action : Reduce rule [Signature -> Parameters] with [<list @ 0x7f380e9705c0>] and goto state 48
Result : <list @ 0x7f380e970100> (['Signature', ['Parameters', ['('], [')' ...)
State  : 48
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature . LexToken(LBRACE,'{',7,12,50)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE . LexToken(IF,'if',8,5,56)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF . LexToken(INT,'1',8,8,59)
Action : Shift and goto state 119
State  : 119
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF INT . LexToken(LSS,'<',8,10,61)
Action : Reduce rule [BasicLit -> INT] with ['1'] and goto state 116
Result : <list @ 0x7f380e970180> (['BasicLit', ['1']])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF BasicLit . LexToken(LSS,'<',8,10,61)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f380e970180>] and goto state 113
Result : <list @ 0x7f380eb39580> (['Lit', ['BasicLit', ['1']]])
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Lit . LexToken(LSS,'<',8,10,61)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7f380eb39580>] and goto state 111
Result : <list @ 0x7f380e970280> (['PrimaryExpr', ['Lit', ['BasicLit', ['1 ...)
State  : 111
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF PrimaryExpr . LexToken(LSS,'<',8,10,61)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f380e970280>] and goto state 105
Result : <list @ 0x7f380e96fb00> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF UnaryExpr . LexToken(LSS,'<',8,10,61)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f380e96fb00>] and goto state 284
Result : <list @ 0x7f380e96ff40> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr . LexToken(LSS,'<',8,10,61)
Action : Shift and goto state 206
State  : 206
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LSS . LexToken(INT,'2',8,12,63)
Action : Shift and goto state 119
State  : 119
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LSS INT . LexToken(LBRACE,'{',8,14,65)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 116
Result : <list @ 0x7f380e96fa40> (['BasicLit', ['2']])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LSS BasicLit . LexToken(LBRACE,'{',8,14,65)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f380e96fa40>] and goto state 113
Result : <list @ 0x7f380e96f200> (['Lit', ['BasicLit', ['2']]])
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LSS Lit . LexToken(LBRACE,'{',8,14,65)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7f380e96f200>] and goto state 111
Result : <list @ 0x7f380e96f040> (['PrimaryExpr', ['Lit', ['BasicLit', ['2 ...)
State  : 111
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LSS PrimaryExpr . LexToken(LBRACE,'{',8,14,65)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f380e96f040>] and goto state 105
Result : <list @ 0x7f380e9ae8c0> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LSS UnaryExpr . LexToken(LBRACE,'{',8,14,65)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f380e9ae8c0>] and goto state 320
Result : <list @ 0x7f380e96f4c0> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 320
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LSS Expr . LexToken(LBRACE,'{',8,14,65)
Action : Reduce rule [Expr -> Expr LSS Expr] with [<list @ 0x7f380e96ff40>,'<',<list @ 0x7f380e96f4c0>] and goto state 284
Result : <list @ 0x7f380e96f0c0> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr . LexToken(LBRACE,'{',8,14,65)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE . LexToken(IF,'if',9,9,69)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF . LexToken(INT,'2',9,12,72)
Action : Shift and goto state 119
State  : 119
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF INT . LexToken(GTR,'>',9,14,74)
Action : Reduce rule [BasicLit -> INT] with ['2'] and goto state 116
Result : <list @ 0x7f380e96e400> (['BasicLit', ['2']])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF BasicLit . LexToken(GTR,'>',9,14,74)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f380e96e400>] and goto state 113
Result : <list @ 0x7f380eb39e40> (['Lit', ['BasicLit', ['2']]])
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Lit . LexToken(GTR,'>',9,14,74)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7f380eb39e40>] and goto state 111
Result : <list @ 0x7f380e96ef80> (['PrimaryExpr', ['Lit', ['BasicLit', ['2 ...)
State  : 111
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF PrimaryExpr . LexToken(GTR,'>',9,14,74)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f380e96ef80>] and goto state 105
Result : <list @ 0x7f380e96e8c0> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF UnaryExpr . LexToken(GTR,'>',9,14,74)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f380e96e8c0>] and goto state 284
Result : <list @ 0x7f380e96e4c0> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr . LexToken(GTR,'>',9,14,74)
Action : Shift and goto state 208
State  : 208
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr GTR . LexToken(INT,'3',9,16,76)
Action : Shift and goto state 119
State  : 119
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr GTR INT . LexToken(LBRACE,'{',9,18,78)
Action : Reduce rule [BasicLit -> INT] with ['3'] and goto state 116
Result : <list @ 0x7f380e96e280> (['BasicLit', ['3']])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr GTR BasicLit . LexToken(LBRACE,'{',9,18,78)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f380e96e280>] and goto state 113
Result : <list @ 0x7f380e96e380> (['Lit', ['BasicLit', ['3']]])
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr GTR Lit . LexToken(LBRACE,'{',9,18,78)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7f380e96e380>] and goto state 111
Result : <list @ 0x7f380e96e080> (['PrimaryExpr', ['Lit', ['BasicLit', ['3 ...)
State  : 111
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr GTR PrimaryExpr . LexToken(LBRACE,'{',9,18,78)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f380e96e080>] and goto state 105
Result : <list @ 0x7f380e96ed80> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr GTR UnaryExpr . LexToken(LBRACE,'{',9,18,78)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f380e96ed80>] and goto state 322
Result : <list @ 0x7f380e96dc80> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 322
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr GTR Expr . LexToken(LBRACE,'{',9,18,78)
Action : Reduce rule [Expr -> Expr GTR Expr] with [<list @ 0x7f380e96e4c0>,'>',<list @ 0x7f380e96dc80>] and goto state 284
Result : <list @ 0x7f380e96d840> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr . LexToken(LBRACE,'{',9,18,78)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr LBRACE . LexToken(RBRACE,'}',11,9,84)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 148
Result : <list @ 0x7f380e96db00> (['StatementList'])
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',11,9,84)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',11,11,86)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f380e96db00>,'}'] and goto state 376
Result : <list @ 0x7f380e96d8c0> (['Block', ['{'], ['StatementList'], ['}' ...)
State  : 376
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block . LexToken(ELSE,'else',11,11,86)
Action : Shift and goto state 430
State  : 430
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE . LexToken(IF,'if',11,16,91)
Action : Shift and goto state 174
State  : 174
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF . LexToken(INT,'3',11,19,94)
Action : Shift and goto state 119
State  : 119
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF INT . LexToken(EQL,'==',11,22,97)
Action : Reduce rule [BasicLit -> INT] with ['3'] and goto state 116
Result : <list @ 0x7f380e9ab2c0> (['BasicLit', ['3']])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF BasicLit . LexToken(EQL,'==',11,22,97)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f380e9ab2c0>] and goto state 113
Result : <list @ 0x7f380e9abf00> (['Lit', ['BasicLit', ['3']]])
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Lit . LexToken(EQL,'==',11,22,97)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7f380e9abf00>] and goto state 111
Result : <list @ 0x7f380e96dbc0> (['PrimaryExpr', ['Lit', ['BasicLit', ['3 ...)
State  : 111
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF PrimaryExpr . LexToken(EQL,'==',11,22,97)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f380e96dbc0>] and goto state 105
Result : <list @ 0x7f380e96d500> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF UnaryExpr . LexToken(EQL,'==',11,22,97)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f380e96d500>] and goto state 284
Result : <list @ 0x7f380e96cf00> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr . LexToken(EQL,'==',11,22,97)
Action : Shift and goto state 204
State  : 204
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr EQL . LexToken(INT,'4',11,25,100)
Action : Shift and goto state 119
State  : 119
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr EQL INT . LexToken(LBRACE,'{',11,27,102)
Action : Reduce rule [BasicLit -> INT] with ['4'] and goto state 116
Result : <list @ 0x7f380e96df40> (['BasicLit', ['4']])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr EQL BasicLit . LexToken(LBRACE,'{',11,27,102)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f380e96df40>] and goto state 113
Result : <list @ 0x7f380e96ccc0> (['Lit', ['BasicLit', ['4']]])
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr EQL Lit . LexToken(LBRACE,'{',11,27,102)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7f380e96ccc0>] and goto state 111
Result : <list @ 0x7f380e96c400> (['PrimaryExpr', ['Lit', ['BasicLit', ['4 ...)
State  : 111
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr EQL PrimaryExpr . LexToken(LBRACE,'{',11,27,102)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f380e96c400>] and goto state 105
Result : <list @ 0x7f380e96c140> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr EQL UnaryExpr . LexToken(LBRACE,'{',11,27,102)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f380e96c140>] and goto state 318
Result : <list @ 0x7f380e96c300> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 318
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr EQL Expr . LexToken(LBRACE,'{',11,27,102)
Action : Reduce rule [Expr -> Expr EQL Expr] with [<list @ 0x7f380e96cf00>,'==',<list @ 0x7f380e96c300>] and goto state 284
Result : <list @ 0x7f380e96cac0> (['Expr', ['Expr', ['UnaryExpr', ['Primar ...)
State  : 284
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr . LexToken(LBRACE,'{',11,27,102)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr LBRACE . LexToken(RBRACE,'}',13,9,109)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 148
Result : <list @ 0x7f380e96c680> (['StatementList'])
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',13,9,109)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr LBRACE StatementList RBRACE . LexToken(ELSE,'else',13,11,111)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f380e96c680>,'}'] and goto state 376
Result : <list @ 0x7f380e96c780> (['Block', ['{'], ['StatementList'], ['}' ...)
State  : 376
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block . LexToken(ELSE,'else',13,11,111)
Action : Shift and goto state 430
State  : 430
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE . LexToken(LBRACE,'{',13,16,116)
Action : Shift and goto state 83
State  : 83
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE . LexToken(IDENT,'fmt',14,13,121)
Action : Shift and goto state 179
State  : 179
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE IDENT . LexToken(PERIOD,'.',14,16,124)
Action : Shift and goto state 234
State  : 234
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE IDENT PERIOD . LexToken(IDENT,'Print',14,17,125)
Action : Shift and goto state 349
State  : 349
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE IDENT PERIOD IDENT . LexToken(LPAREN,'(',14,22,130)
Action : Reduce rule [PrimaryExpr -> IDENT PERIOD IDENT] with ['fmt','.','Print'] and goto state 111
Result : <list @ 0x7f380e9ab6c0> (['PrimaryExpr', ['fmt'], ['.'], ['Print' ...)
State  : 111
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(LPAREN,'(',14,22,130)
Action : Shift and goto state 232
State  : 232
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE PrimaryExpr LPAREN . LexToken(STRING,'"afdsdc"',14,23,131)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE PrimaryExpr LPAREN STRING . LexToken(RPAREN,')',14,31,139)
Action : Reduce rule [BasicLit -> STRING] with ['"afdsdc"'] and goto state 116
Result : <list @ 0x7f380e9abdc0> (['BasicLit', ['"afdsdc"']])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE PrimaryExpr LPAREN BasicLit . LexToken(RPAREN,')',14,31,139)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f380e9abdc0>] and goto state 113
Result : <list @ 0x7f380e96b740> (['Lit', ['BasicLit', ['"afdsdc"']]])
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE PrimaryExpr LPAREN Lit . LexToken(RPAREN,')',14,31,139)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7f380e96b740>] and goto state 111
Result : <list @ 0x7f380e96bc40> (['PrimaryExpr', ['Lit', ['BasicLit', ['" ...)
State  : 111
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',14,31,139)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f380e96bc40>] and goto state 105
Result : <list @ 0x7f380e96b840> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',14,31,139)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f380e96b840>] and goto state 139
Result : <list @ 0x7f380e96b980> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 139
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',14,31,139)
Action : Reduce rule [ExpressionList -> Expr] with [<list @ 0x7f380e96b980>] and goto state 340
Result : <list @ 0x7f380e96b380> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 340
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',14,31,139)
Action : Shift and goto state 406
State  : 406
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',14,32,140)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f380e96b380>,')'] and goto state 229
Result : <list @ 0x7f380e96b6c0> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 229
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE PrimaryExpr Arguments . LexToken(SEMICOLON,';',14,32,140)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f380e9ab6c0>,<list @ 0x7f380e96b6c0>] and goto state 111
Result : <list @ 0x7f380eb12200> (['PrimaryExpr', ['PrimaryExpr', ['fmt'], ...)
State  : 111
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE PrimaryExpr . LexToken(SEMICOLON,';',14,32,140)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f380eb12200>] and goto state 105
Result : <list @ 0x7f380eb39600> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE UnaryExpr . LexToken(SEMICOLON,';',14,32,140)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f380eb39600>] and goto state 175
Result : <list @ 0x7f380eb39800> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 175
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE Expr . LexToken(SEMICOLON,';',14,32,140)
Action : Reduce rule [ExpressionStmt -> Expr] with [<list @ 0x7f380eb39800>] and goto state 164
Result : <list @ 0x7f380eb39380> (['ExpressionStmt', ['Expr', ['UnaryExpr' ...)
State  : 164
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE ExpressionStmt . LexToken(SEMICOLON,';',14,32,140)
Action : Reduce rule [SimpleStmt -> ExpressionStmt] with [<list @ 0x7f380eb39380>] and goto state 152
Result : <list @ 0x7f380eb39340> (['SimpleStmt', ['ExpressionStmt', ['Expr ...)
State  : 152
Defaulted state 152: Reduce using 200
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE SimpleStmt . LexToken(SEMICOLON,';',14,32,140)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f380eb39340>] and goto state 149
Result : <list @ 0x7f380e9abec0> (['Statement', ['SimpleStmt', ['Expressio ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE Statement . LexToken(SEMICOLON,';',14,32,140)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',15,9,144)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 373
Result : <list @ 0x7f380e9ab880> (['StatementList'])
State  : 373
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',15,9,144)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f380e9abec0>,';',<list @ 0x7f380e9ab880>] and goto state 148
Result : <list @ 0x7f380e9abb40> (['StatementList', ['Statement', ['Simple ...)
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE StatementList . LexToken(RBRACE,'}',15,9,144)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',15,10,145)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f380e9abb40>,'}'] and goto state 472
Result : <list @ 0x7f380e9ab340> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 472
Defaulted state 472: Reduce using 248
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block ELSE Block . LexToken(SEMICOLON,';',15,10,145)
Action : Reduce rule [else_stmt -> ELSE Block] with ['else',<list @ 0x7f380e9ab340>] and goto state 429
Result : <list @ 0x7f380e9ab040> (['else_stmt', ['else'], ['Block', ['{'], ...)
State  : 429
Defaulted state 429: Reduce using 245
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IF Expr Block else_stmt . LexToken(SEMICOLON,';',15,10,145)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f380e96cac0>,<list @ 0x7f380e96c780>,<list @ 0x7f380e9ab040>] and goto state 471
Result : <list @ 0x7f380e9ab300> (['IfStmt', ['if'], ['Expr', ['Expr', ['U ...)
State  : 471
Defaulted state 471: Reduce using 247
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block ELSE IfStmt . LexToken(SEMICOLON,';',15,10,145)
Action : Reduce rule [else_stmt -> ELSE IfStmt] with ['else',<list @ 0x7f380e9ab300>] and goto state 429
Result : <list @ 0x7f380e9ab3c0> (['else_stmt', ['else'], ['IfStmt', ['if' ...)
State  : 429
Defaulted state 429: Reduce using 245
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IF Expr Block else_stmt . LexToken(SEMICOLON,';',15,10,145)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f380e96d840>,<list @ 0x7f380e96d8c0>,<list @ 0x7f380e9ab3c0>] and goto state 159
Result : <list @ 0x7f380e9abac0> (['IfStmt', ['if'], ['Expr', ['Expr', ['U ...)
State  : 159
Defaulted state 159: Reduce using 207
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE IfStmt . LexToken(SEMICOLON,';',15,10,145)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f380e9abac0>] and goto state 149
Result : <list @ 0x7f380e9abb80> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement . LexToken(SEMICOLON,';',15,10,145)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON . LexToken(RBRACE,'}',16,5,148)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 373
Result : <list @ 0x7f380eb16ac0> (['StatementList'])
State  : 373
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',16,5,148)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f380e9abb80>,';',<list @ 0x7f380eb16ac0>] and goto state 148
Result : <list @ 0x7f380eb16fc0> (['StatementList', ['Statement', ['IfStmt ...)
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE StatementList . LexToken(RBRACE,'}',16,5,148)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',16,6,149)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f380eb16fc0>,'}'] and goto state 376
Result : <list @ 0x7f380eb16c40> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 376
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block . LexToken(SEMICOLON,';',16,6,149)
Action : Reduce rule [else_stmt -> <empty>] with [] and goto state 429
Result : <list @ 0x7f380eb16ec0> (['else_stmt'])
State  : 429
Defaulted state 429: Reduce using 245
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IF Expr Block else_stmt . LexToken(SEMICOLON,';',16,6,149)
Action : Reduce rule [IfStmt -> IF Expr Block else_stmt] with ['if',<list @ 0x7f380e96f0c0>,<list @ 0x7f380eb16c40>,['else_stmt']] and goto state 159
Result : <list @ 0x7f380eb39b40> (['IfStmt', ['if'], ['Expr', ['Expr', ['U ...)
State  : 159
Defaulted state 159: Reduce using 207
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE IfStmt . LexToken(SEMICOLON,';',16,6,149)
Action : Reduce rule [Statement -> IfStmt] with [<list @ 0x7f380eb39b40>] and goto state 149
Result : <list @ 0x7f380eb390c0> (['Statement', ['IfStmt', ['if'], ['Expr' ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement . LexToken(SEMICOLON,';',16,6,149)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON . LexToken(IDENT,'fmt',17,5,152)
Action : Shift and goto state 179
State  : 179
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON IDENT . LexToken(PERIOD,'.',17,8,155)
Action : Shift and goto state 234
State  : 234
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON IDENT PERIOD . LexToken(IDENT,'Println',17,9,156)
Action : Shift and goto state 349
State  : 349
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON IDENT PERIOD IDENT . LexToken(LPAREN,'(',17,16,163)
Action : Reduce rule [PrimaryExpr -> IDENT PERIOD IDENT] with ['fmt','.','Println'] and goto state 111
Result : <list @ 0x7f380e9ab240> (['PrimaryExpr', ['fmt'], ['.'], ['Printl ...)
State  : 111
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON PrimaryExpr . LexToken(LPAREN,'(',17,16,163)
Action : Shift and goto state 232
State  : 232
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON PrimaryExpr LPAREN . LexToken(STRING,'"Sfca"',17,17,164)
Action : Shift and goto state 123
State  : 123
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON PrimaryExpr LPAREN STRING . LexToken(RPAREN,')',17,23,170)
Action : Reduce rule [BasicLit -> STRING] with ['"Sfca"'] and goto state 116
Result : <list @ 0x7f380e9abe80> (['BasicLit', ['"Sfca"']])
State  : 116
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON PrimaryExpr LPAREN BasicLit . LexToken(RPAREN,')',17,23,170)
Action : Reduce rule [Lit -> BasicLit] with [<list @ 0x7f380e9abe80>] and goto state 113
Result : <list @ 0x7f380eb16d00> (['Lit', ['BasicLit', ['"Sfca"']]])
State  : 113
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON PrimaryExpr LPAREN Lit . LexToken(RPAREN,')',17,23,170)
Action : Reduce rule [PrimaryExpr -> Lit] with [<list @ 0x7f380eb16d00>] and goto state 111
Result : <list @ 0x7f380eb16cc0> (['PrimaryExpr', ['Lit', ['BasicLit', ['" ...)
State  : 111
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON PrimaryExpr LPAREN PrimaryExpr . LexToken(RPAREN,')',17,23,170)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f380eb16cc0>] and goto state 105
Result : <list @ 0x7f380eb16bc0> (['UnaryExpr', ['PrimaryExpr', ['Lit', [' ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON PrimaryExpr LPAREN UnaryExpr . LexToken(RPAREN,')',17,23,170)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f380eb16bc0>] and goto state 139
Result : <list @ 0x7f380eb16500> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 139
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON PrimaryExpr LPAREN Expr . LexToken(RPAREN,')',17,23,170)
Action : Reduce rule [ExpressionList -> Expr] with [<list @ 0x7f380eb16500>] and goto state 340
Result : <list @ 0x7f380eb16800> (['ExpressionList', ['Expr', ['UnaryExpr' ...)
State  : 340
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON PrimaryExpr LPAREN ExpressionList . LexToken(RPAREN,')',17,23,170)
Action : Shift and goto state 406
State  : 406
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON PrimaryExpr LPAREN ExpressionList RPAREN . LexToken(SEMICOLON,';',17,24,171)
Action : Reduce rule [Arguments -> LPAREN ExpressionList RPAREN] with ['(',<list @ 0x7f380eb16800>,')'] and goto state 229
Result : <list @ 0x7f380eb16680> (['Arguments', ['('], ['ExpressionList',  ...)
State  : 229
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON PrimaryExpr Arguments . LexToken(SEMICOLON,';',17,24,171)
Action : Reduce rule [PrimaryExpr -> PrimaryExpr Arguments] with [<list @ 0x7f380e9ab240>,<list @ 0x7f380eb16680>] and goto state 111
Result : <list @ 0x7f380eb164c0> (['PrimaryExpr', ['PrimaryExpr', ['fmt'], ...)
State  : 111
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON PrimaryExpr . LexToken(SEMICOLON,';',17,24,171)
Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<list @ 0x7f380eb164c0>] and goto state 105
Result : <list @ 0x7f380eb16700> (['UnaryExpr', ['PrimaryExpr', ['PrimaryE ...)
State  : 105
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON UnaryExpr . LexToken(SEMICOLON,';',17,24,171)
Action : Reduce rule [Expr -> UnaryExpr] with [<list @ 0x7f380eb16700>] and goto state 175
Result : <list @ 0x7f380eb16440> (['Expr', ['UnaryExpr', ['PrimaryExpr', [ ...)
State  : 175
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON Expr . LexToken(SEMICOLON,';',17,24,171)
Action : Reduce rule [ExpressionStmt -> Expr] with [<list @ 0x7f380eb16440>] and goto state 164
Result : <list @ 0x7f380eb16f80> (['ExpressionStmt', ['Expr', ['UnaryExpr' ...)
State  : 164
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON ExpressionStmt . LexToken(SEMICOLON,';',17,24,171)
Action : Reduce rule [SimpleStmt -> ExpressionStmt] with [<list @ 0x7f380eb16f80>] and goto state 152
Result : <list @ 0x7f380eb16380> (['SimpleStmt', ['ExpressionStmt', ['Expr ...)
State  : 152
Defaulted state 152: Reduce using 200
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON SimpleStmt . LexToken(SEMICOLON,';',17,24,171)
Action : Reduce rule [Statement -> SimpleStmt] with [<list @ 0x7f380eb16380>] and goto state 149
Result : <list @ 0x7f380eb15e80> (['Statement', ['SimpleStmt', ['Expressio ...)
State  : 149
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement . LexToken(SEMICOLON,';',17,24,171)
Action : Shift and goto state 262
State  : 262
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON . LexToken(RBRACE,'}',18,1,173)
Action : Reduce rule [StatementList -> <empty>] with [] and goto state 373
Result : <list @ 0x7f380eb16080> (['StatementList'])
State  : 373
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RBRACE,'}',18,1,173)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f380eb15e80>,';',<list @ 0x7f380eb16080>] and goto state 373
Result : <list @ 0x7f380ebad740> (['StatementList', ['Statement', ['Simple ...)
State  : 373
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE Statement SEMICOLON StatementList . LexToken(RBRACE,'}',18,1,173)
Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<list @ 0x7f380eb390c0>,';',<list @ 0x7f380ebad740>] and goto state 148
Result : <list @ 0x7f380eb39880> (['StatementList', ['Statement', ['IfStmt ...)
State  : 148
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE StatementList . LexToken(RBRACE,'}',18,1,173)
Action : Shift and goto state 261
State  : 261
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature LBRACE StatementList RBRACE . LexToken(SEMICOLON,';',18,2,174)
Action : Reduce rule [Block -> LBRACE StatementList RBRACE] with ['{',<list @ 0x7f380eb39880>,'}'] and goto state 82
Result : <list @ 0x7f380e9ab840> (['Block', ['{'], ['StatementList', ['Sta ...)
State  : 82
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature Block . LexToken(SEMICOLON,';',18,2,174)
Action : Reduce rule [FunctionBody -> Block] with [<list @ 0x7f380e9ab840>] and goto state 81
Result : <list @ 0x7f380eb16840> (['FunctionBody', ['Block', ['{'], ['Stat ...)
State  : 81
Defaulted state 81: Reduce using 175
Stack  : PackageClause SEMICOLON ImportDeclMult FUNC FunctionName Signature FunctionBody . LexToken(SEMICOLON,';',18,2,174)
Action : Reduce rule [FuncDecl -> FUNC FunctionName Signature FunctionBody] with ['func',<list @ 0x7f380eb39a80>,<list @ 0x7f380e970100>,<list @ 0x7f380eb16840>] and goto state 12
Result : <list @ 0x7f380eb16600> (['FuncDecl', ['func'], ['FunctionName',  ...)
State  : 12
Defaulted state 12: Reduce using 16
Stack  : PackageClause SEMICOLON ImportDeclMult FuncDecl . LexToken(SEMICOLON,';',18,2,174)
Action : Reduce rule [TopLevelDecl -> FuncDecl] with [<list @ 0x7f380eb16600>] and goto state 10
Result : <list @ 0x7f380eb16a40> (['TopLevelDecl', ['FuncDecl', ['func'],  ...)
State  : 10
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl . LexToken(SEMICOLON,';',18,2,174)
Action : Shift and goto state 27
State  : 27
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON . $end
Action : Reduce rule [TopLevelDeclMult -> <empty>] with [] and goto state 47
Result : <list @ 0x7f380eb16940> (['TopLevelDeclMult'])
State  : 47
Defaulted state 47: Reduce using 13
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDecl SEMICOLON TopLevelDeclMult . $end
Action : Reduce rule [TopLevelDeclMult -> TopLevelDecl SEMICOLON TopLevelDeclMult] with [<list @ 0x7f380eb16a40>,';',<list @ 0x7f380eb16940>] and goto state 9
Result : <list @ 0x7f380eb160c0> (['TopLevelDeclMult', ['TopLevelDecl', [' ...)
State  : 9
Defaulted state 9: Reduce using 1
Stack  : PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult . $end
Action : Reduce rule [SourceFile -> PackageClause SEMICOLON ImportDeclMult TopLevelDeclMult] with [<list @ 0x7f380e9aef80>,';',<list @ 0x7f380e970200>,<list @ 0x7f380eb160c0>] and goto state 1
Result : <list @ 0x7f380ebad580> (['SourceFile', ['PackageClause', ['packa ...)
State  : 1
Stack  : SourceFile . $end
Done   : Returning <list @ 0x7f380ebad580> (['SourceFile', ['PackageClause', ['packa ...)
PLY: PARSE DEBUG END
