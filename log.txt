commit 14b7a166d1772a192876db9dd9dacaa57ef60fbd
commit 14b7a166d1772a192876db9dd9dacaa57ef60fbd
commit 14b7a166d1772a192876db9dd9dacaa57ef60fbd
Author: Devanshu Singla <coderpro274@gmail.com>
Date:   Fri Feb 18 23:40:33 2022 +0530

    final parser

diff --git a/Makefile b/Makefile
index da1cafb..4c1db95 100644
--- a/Makefile
+++ b/Makefile
@@ -3,6 +3,8 @@ mkfile_dir := $(dir $(mkfile_path))
 
 export ROOT_PATH := $(mkfile_dir)
 
+all: test_Milestone3
+
 test_Milestone3:
 	python3 tests/Milestone3/run_tests.py
 
diff --git a/README.md b/README.md
index f0d7934..be1d909 100644
--- a/README.md
+++ b/README.md
@@ -2,15 +2,42 @@
 
 ## [Milestone3](src/Milestone3/)
 
-### To run the parser on a source file
+### Execution
+- Run following command from root directory to run parser on a Go file.
+```bash
+python src/Milestone3/parser.py PATH_TO_FILE
+```
+
+- Run following command from root directory to run lexer on a Go file.
+```bash
+python src/Milestone3/lexer.py PATH_TO_FILE
+```
+
+### Testing
 - To run all the test cases for Milestone 3, run the following command from root of the project : 
 ```bash
 make 
 ```
 
-- From project root directory, use
+- To clean generated file run:
+```bash
+make clean
+```
+
+### Visualization
+- To obtain dot file, run following commnd from `PROJECT_ROOT/src/Milestone3`:
+```bash
+python gen_automation.py
+```
+
+- To obtain automata, run following command from `PROJECT_ROOT/src/Milestone3`:
+```bash
+dot -Tpdf test.dot -o automaton.pdf
+```
+
+- To obtain parse tree From project root directory, use
 ```bash
-./bin/parser tests/Milestone3/test1.go
+./bin/parser tests/Milestone3/ctest1.go
 ```
 
 ## [Milestone2](src/Milestone2)
diff --git a/bin/testall b/bin/testall
deleted file mode 100644
index 937604d..0000000
--- a/bin/testall
+++ /dev/null
@@ -1,43 +0,0 @@
-#!/bin/bash
-
-# Taking the path to Golang source file
-if [[ $# -ne 1 ]]; then
-    echo "Enter only the path to the source file as argument with extension .go" >&2
-    exit 2
-fi
-
-export MILESTONE=3
-
-path_to_root=$( dirname $( dirname $( realpath $0) ) )
-abs_path_to_parser="${path_to_root}/src/Milestone${MILESTONE}/parser.py"
-abs_path_to_gen_ast="${path_to_root}/src/Milestone${MILESTONE}/gen_tree.py"
-abs_path_to_file=$(realpath $1)
-abs_path_to_output=$(echo $abs_path_to_file | sed 's/.go$/.output/')
-abs_path_to_dot=$(echo $abs_path_to_file | sed 's/.go$/.dot/')
-abs_path_to_pdf=$(echo $abs_path_to_file | sed 's/.go$/.pdf/')
-export PATH_TO_ROOT=$path_to_root
-
-python3 $abs_path_to_parser $abs_path_to_file
-if [ $? != 0 ];
-then
-    echo "Compilation Failed!"
-    exit 1
-fi
-echo "Compilation Successful!"
-python3 $abs_path_to_gen_ast $abs_path_to_output
-if [ $? != 0 ];
-then
-    echo "Parse Tree Generation failed!"
-    exit 1
-fi
-echo "Parse Tree Generated Successfully!"
-dot -Tpdf $abs_path_to_dot -o $abs_path_to_pdf
-if [ $? != 0 ];
-then
-    echo "PDF Generation failed!"
-    echo "If dot is not installed, install dot using 'sudo apt install graphviz'"
-    exit 1
-fi
-echo "PDF Generated Successfully!"
-xdg-open $abs_path_to_pdf
-~                           
Author: Devanshu Singla <coderpro274@gmail.com>
Date:   Fri Feb 18 23:40:33 2022 +0530

    final parser

diff --git a/Makefile b/Makefile
index da1cafb..4c1db95 100644
--- a/Makefile
+++ b/Makefile
@@ -3,6 +3,8 @@ mkfile_dir := $(dir $(mkfile_path))
 
 export ROOT_PATH := $(mkfile_dir)
 
+all: test_Milestone3
+
 test_Milestone3:
 	python3 tests/Milestone3/run_tests.py
 
diff --git a/README.md b/README.md
index f0d7934..be1d909 100644
--- a/README.md
+++ b/README.md
@@ -2,15 +2,42 @@
 
 ## [Milestone3](src/Milestone3/)
 
-### To run the parser on a source file
+### Execution
+- Run following command from root directory to run parser on a Go file.
+```bash
+python src/Milestone3/parser.py PATH_TO_FILE
+```
+
+- Run following command from root directory to run lexer on a Go file.
+```bash
+python src/Milestone3/lexer.py PATH_TO_FILE
+```
+
+### Testing
 - To run all the test cases for Milestone 3, run the following command from root of the project : 
 ```bash
 make 
 ```
 
-- From project root directory, use
+- To clean generated file run:
+```bash
+make clean
+```
+
+### Visualization
+- To obtain dot file, run following commnd from `PROJECT_ROOT/src/Milestone3`:
+```bash
+python gen_automation.py
+```
+
+- To obtain automata, run following command from `PROJECT_ROOT/src/Milestone3`:
+```bash
+dot -Tpdf test.dot -o automaton.pdf
+```
+
+- To obtain parse tree From project root directory, use
 ```bash
-./bin/parser tests/Milestone3/test1.go
+./bin/parser tests/Milestone3/ctest1.go
 ```
 
 ## [Milestone2](src/Milestone2)
diff --git a/bin/testall b/bin/testall
deleted file mode 100644
index 937604d..0000000
--- a/bin/testall
+++ /dev/null
@@ -1,43 +0,0 @@
-#!/bin/bash
-
-# Taking the path to Golang source file
-if [[ $# -ne 1 ]]; then
-    echo "Enter only the path to the source file as argument with extension .go" >&2
-    exit 2
-fi
-
-export MILESTONE=3
-
-path_to_root=$( dirname $( dirname $( realpath $0) ) )
-abs_path_to_parser="${path_to_root}/src/Milestone${MILESTONE}/parser.py"
-abs_path_to_gen_ast="${path_to_root}/src/Milestone${MILESTONE}/gen_tree.py"
-abs_path_to_file=$(realpath $1)
-abs_path_to_output=$(echo $abs_path_to_file | sed 's/.go$/.output/')
-abs_path_to_dot=$(echo $abs_path_to_file | sed 's/.go$/.dot/')
-abs_path_to_pdf=$(echo $abs_path_to_file | sed 's/.go$/.pdf/')
-export PATH_TO_ROOT=$path_to_root
-
-python3 $abs_path_to_parser $abs_path_to_file
-if [ $? != 0 ];
-then
-    echo "Compilation Failed!"
-    exit 1
-fi
-echo "Compilation Successful!"
-python3 $abs_path_to_gen_ast $abs_path_to_output
-if [ $? != 0 ];
-then
-    echo "Parse Tree Generation failed!"
-    exit 1
-fi
-echo "Parse Tree Generated Successfully!"
-dot -Tpdf $abs_path_to_dot -o $abs_path_to_pdf
-if [ $? != 0 ];
-then
-    echo "PDF Generation failed!"
-    echo "If dot is not installed, install dot using 'sudo apt install graphviz'"
-    exit 1
-fi
-echo "PDF Generated Successfully!"
-xdg-open $abs_path_to_pdf
-~                           
Author: Devanshu Singla <coderpro274@gmail.com>
Date:   Fri Feb 18 23:40:33 2022 +0530

    final parser

diff --git a/Makefile b/Makefile
index da1cafb..4c1db95 100644
--- a/Makefile
+++ b/Makefile
@@ -3,6 +3,8 @@ mkfile_dir := $(dir $(mkfile_path))
 
 export ROOT_PATH := $(mkfile_dir)
 
+all: test_Milestone3
+
 test_Milestone3:
 	python3 tests/Milestone3/run_tests.py
 
diff --git a/README.md b/README.md
index f0d7934..be1d909 100644
--- a/README.md
+++ b/README.md
@@ -2,15 +2,42 @@
 
 ## [Milestone3](src/Milestone3/)
 
-### To run the parser on a source file
+### Execution
+- Run following command from root directory to run parser on a Go file.
+```bash
+python src/Milestone3/parser.py PATH_TO_FILE
+```
+
+- Run following command from root directory to run lexer on a Go file.
+```bash
+python src/Milestone3/lexer.py PATH_TO_FILE
+```
+
+### Testing
 - To run all the test cases for Milestone 3, run the following command from root of the project : 
 ```bash
 make 
 ```
 
-- From project root directory, use
+- To clean generated file run:
+```bash
+make clean
+```
+
+### Visualization
+- To obtain dot file, run following commnd from `PROJECT_ROOT/src/Milestone3`:
+```bash
+python gen_automation.py
+```
+
+- To obtain automata, run following command from `PROJECT_ROOT/src/Milestone3`:
+```bash
+dot -Tpdf test.dot -o automaton.pdf
+```
+
+- To obtain parse tree From project root directory, use
 ```bash
-./bin/parser tests/Milestone3/test1.go
+./bin/parser tests/Milestone3/ctest1.go
 ```
 
 ## [Milestone2](src/Milestone2)
diff --git a/bin/testall b/bin/testall
deleted file mode 100644
index 937604d..0000000
--- a/bin/testall
+++ /dev/null
@@ -1,43 +0,0 @@
-#!/bin/bash
-
-# Taking the path to Golang source file
-if [[ $# -ne 1 ]]; then
-    echo "Enter only the path to the source file as argument with extension .go" >&2
-    exit 2
-fi
-
-export MILESTONE=3
-
-path_to_root=$( dirname $( dirname $( realpath $0) ) )
-abs_path_to_parser="${path_to_root}/src/Milestone${MILESTONE}/parser.py"
-abs_path_to_gen_ast="${path_to_root}/src/Milestone${MILESTONE}/gen_tree.py"
-abs_path_to_file=$(realpath $1)
-abs_path_to_output=$(echo $abs_path_to_file | sed 's/.go$/.output/')
-abs_path_to_dot=$(echo $abs_path_to_file | sed 's/.go$/.dot/')
-abs_path_to_pdf=$(echo $abs_path_to_file | sed 's/.go$/.pdf/')
-export PATH_TO_ROOT=$path_to_root
-
-python3 $abs_path_to_parser $abs_path_to_file
-if [ $? != 0 ];
-then
-    echo "Compilation Failed!"
-    exit 1
-fi
-echo "Compilation Successful!"
-python3 $abs_path_to_gen_ast $abs_path_to_output
-if [ $? != 0 ];
-then
-    echo "Parse Tree Generation failed!"
-    exit 1
-fi
-echo "Parse Tree Generated Successfully!"
-dot -Tpdf $abs_path_to_dot -o $abs_path_to_pdf
-if [ $? != 0 ];
-then
-    echo "PDF Generation failed!"
-    echo "If dot is not installed, install dot using 'sudo apt install graphviz'"
-    exit 1
-fi
-echo "PDF Generated Successfully!"
-xdg-open $abs_path_to_pdf
-~                           
diff --git a/src/Milestone3/automaton.pdf b/src/Milestone3/automaton.pdf
new file mode 100644
index 0000000..bb3aaa2
--- /dev/null
+++ b/src/Milestone3/automaton.pdf
@@ -0,0 +1,69 @@
+%PDF-1.5
+%µÌÆ˚
+4 0 obj
+<< /Length 5 0 R
+   /Filter /FlateDecode
+>>
+stream
+xú5MÀ
+¬@ºÁ+Ê\'˚®›/’ÉÒ ´BÖÍ¡ﬂ7[∑dí	…L¢†≈J≠ÙDeíìÑÜ	Ô;Nx	g›aãıïx|DÒµŸŒÚ)ÁËàõ(±G∑Å˜+u9*RtYŸP‡ìcÆ≠ÜEcùπJeıé)À¢ö]∂iWÍ›ø¢}*8  ?Ö¡&™
+endstream
+endobj
+5 0 obj
+   139
+endobj
+3 0 obj
+<<
+   /ExtGState <<
+      /a0 << /CA 1 /ca 1 >>
+   >>
+>>
+endobj
+2 0 obj
+<< /Type /Page % 1
+   /Parent 1 0 R
+   /MediaBox [ 0 0 80 80 ]
+   /Contents 4 0 R
+   /Group <<
+      /Type /Group
+      /S /Transparency
+      /I true
+      /CS /DeviceRGB
+   >>
+   /Resources 3 0 R
+>>
+endobj
+1 0 obj
+<< /Type /Pages
+   /Kids [ 2 0 R ]
+   /Count 1
+>>
+endobj
+6 0 obj
+<< /Producer (cairo 1.17.4 (https://cairographics.org))
+   /CreationDate (D:20220218223104+05'30)
+>>
+endobj
+7 0 obj
+<< /Type /Catalog
+   /Pages 1 0 R
+>>
+endobj
+xref
+0 8
+0000000000 65535 f 
+0000000541 00000 n 
+0000000325 00000 n 
+0000000253 00000 n 
+0000000015 00000 n 
+0000000231 00000 n 
+0000000606 00000 n 
+0000000722 00000 n 
+trailer
+<< /Size 8
+   /Root 7 0 R
+   /Info 6 0 R
+>>
+startxref
+774
+%%EOF
diff --git a/src/Milestone3/graph1.pdf b/src/Milestone3/automaton_final.pdf
similarity index 100%
rename from src/Milestone3/graph1.pdf
rename to src/Milestone3/automaton_final.pdf
diff --git a/src/Milestone3/test.dot b/src/Milestone3/test.dot
new file mode 100644
index 0000000..eff8203
--- /dev/null
+++ b/src/Milestone3/test.dot
@@ -0,0 +1,3619 @@
+digraph G {
+0 -> 3 [ label="PACKAGE" ];
+1 -> 0 [ label="$end" ];
+2 -> 4 [ label="SEMICOLON" ];
+3 -> 5 [ label="IDENT" ];
+4 -> 8 [ label="IMPORT" ];
+6 -> 16 [ label="FUNC" ];
+6 -> 17 [ label="CONST" ];
+6 -> 18 [ label="VAR" ];
+6 -> 19 [ label="TYPE" ];
+7 -> 20 [ label="SEMICOLON" ];
+8 -> 22 [ label="LPAREN" ];
+8 -> 23 [ label="PERIOD" ];
+8 -> 25 [ label="IDENT" ];
+8 -> 26 [ label="STRING" ];
+10 -> 27 [ label="SEMICOLON" ];
+16 -> 29 [ label="IDENT" ];
+17 -> 31 [ label="LPAREN" ];
+17 -> 33 [ label="IDENT" ];
+18 -> 35 [ label="LPAREN" ];
+18 -> 33 [ label="IDENT" ];
+19 -> 38 [ label="LPAREN" ];
+19 -> 41 [ label="IDENT" ];
+20 -> 8 [ label="IMPORT" ];
+22 -> 23 [ label="PERIOD" ];
+22 -> 25 [ label="IDENT" ];
+22 -> 26 [ label="STRING" ];
+23 -> 26 [ label="STRING" ];
+25 -> 26 [ label="STRING" ];
+27 -> 16 [ label="FUNC" ];
+27 -> 17 [ label="CONST" ];
+27 -> 18 [ label="VAR" ];
+27 -> 19 [ label="TYPE" ];
+28 -> 50 [ label="LPAREN" ];
+31 -> 33 [ label="IDENT" ];
+32 -> 54 [ label="IDENT" ];
+32 -> 57 [ label="LPAREN" ];
+32 -> 63 [ label="MUL" ];
+32 -> 64 [ label="LBRACK" ];
+32 -> 65 [ label="STRUCT" ];
+32 -> 66 [ label="MAP" ];
+32 -> 67 [ label="FUNC" ];
+33 -> 68 [ label="COMMA" ];
+35 -> 33 [ label="IDENT" ];
+36 -> 73 [ label="IDENT" ];
+36 -> 72 [ label="ASSIGN" ];
+36 -> 57 [ label="LPAREN" ];
+36 -> 63 [ label="MUL" ];
+36 -> 64 [ label="LBRACK" ];
+36 -> 65 [ label="STRUCT" ];
+36 -> 66 [ label="MAP" ];
+36 -> 67 [ label="FUNC" ];
+38 -> 41 [ label="IDENT" ];
+41 -> 77 [ label="ASSIGN" ];
+41 -> 76 [ label="IDENT" ];
+41 -> 57 [ label="LPAREN" ];
+41 -> 63 [ label="MUL" ];
+41 -> 64 [ label="LBRACK" ];
+41 -> 65 [ label="STRUCT" ];
+41 -> 66 [ label="MAP" ];
+41 -> 67 [ label="FUNC" ];
+43 -> 79 [ label="RPAREN" ];
+44 -> 80 [ label="SEMICOLON" ];
+48 -> 83 [ label="LBRACE" ];
+49 -> 87 [ label="IDENT" ];
+49 -> 88 [ label="LPAREN" ];
+49 -> 63 [ label="MUL" ];
+49 -> 64 [ label="LBRACK" ];
+49 -> 65 [ label="STRUCT" ];
+49 -> 66 [ label="MAP" ];
+49 -> 67 [ label="FUNC" ];
+50 -> 89 [ label="RPAREN" ];
+50 -> 33 [ label="IDENT" ];
+51 -> 93 [ label="RPAREN" ];
+52 -> 94 [ label="SEMICOLON" ];
+53 -> 95 [ label="ASSIGN" ];
+54 -> 96 [ label="ASSIGN" ];
+54 -> 97 [ label="PERIOD" ];
+57 -> 101 [ label="IDENT" ];
+57 -> 63 [ label="MUL" ];
+57 -> 98 [ label="LPAREN" ];
+57 -> 64 [ label="LBRACK" ];
+57 -> 65 [ label="STRUCT" ];
+57 -> 66 [ label="MAP" ];
+57 -> 67 [ label="FUNC" ];
+63 -> 103 [ label="IDENT" ];
+63 -> 57 [ label="LPAREN" ];
+63 -> 63 [ label="MUL" ];
+63 -> 64 [ label="LBRACK" ];
+63 -> 65 [ label="STRUCT" ];
+63 -> 66 [ label="MAP" ];
+63 -> 67 [ label="FUNC" ];
+64 -> 105 [ label="RBRACK" ];
+64 -> 108 [ label="ADD" ];
+64 -> 109 [ label="SUB" ];
+64 -> 114 [ label="NOT" ];
+64 -> 110 [ label="XOR" ];
+64 -> 111 [ label="MUL" ];
+64 -> 112 [ label="AND" ];
+64 -> 116 [ label="IDENT" ];
+64 -> 117 [ label="LPAREN" ];
+64 -> 121 [ label="INT" ];
+64 -> 122 [ label="FLOAT" ];
+64 -> 123 [ label="IMAG" ];
+64 -> 124 [ label="RUNE" ];
+64 -> 125 [ label="STRING" ];
+64 -> 130 [ label="FUNC" ];
+64 -> 65 [ label="STRUCT" ];
+64 -> 64 [ label="LBRACK" ];
+64 -> 66 [ label="MAP" ];
+65 -> 131 [ label="LBRACE" ];
+66 -> 132 [ label="LBRACK" ];
+67 -> 50 [ label="LPAREN" ];
+68 -> 33 [ label="IDENT" ];
+69 -> 135 [ label="RPAREN" ];
+70 -> 136 [ label="SEMICOLON" ];
+71 -> 137 [ label="ASSIGN" ];
+72 -> 108 [ label="ADD" ];
+72 -> 109 [ label="SUB" ];
+72 -> 114 [ label="NOT" ];
+72 -> 110 [ label="XOR" ];
+72 -> 111 [ label="MUL" ];
+72 -> 112 [ label="AND" ];
+72 -> 116 [ label="IDENT" ];
+72 -> 117 [ label="LPAREN" ];
+72 -> 121 [ label="INT" ];
+72 -> 122 [ label="FLOAT" ];
+72 -> 123 [ label="IMAG" ];
+72 -> 124 [ label="RUNE" ];
+72 -> 125 [ label="STRING" ];
+72 -> 130 [ label="FUNC" ];
+72 -> 65 [ label="STRUCT" ];
+72 -> 64 [ label="LBRACK" ];
+72 -> 66 [ label="MAP" ];
+73 -> 140 [ label="ASSIGN" ];
+73 -> 141 [ label="PERIOD" ];
+74 -> 142 [ label="RPAREN" ];
+75 -> 143 [ label="SEMICOLON" ];
+76 -> 144 [ label="PERIOD" ];
+77 -> 145 [ label="IDENT" ];
+77 -> 57 [ label="LPAREN" ];
+77 -> 63 [ label="MUL" ];
+77 -> 64 [ label="LBRACK" ];
+77 -> 65 [ label="STRUCT" ];
+77 -> 66 [ label="MAP" ];
+77 -> 67 [ label="FUNC" ];
+80 -> 23 [ label="PERIOD" ];
+80 -> 25 [ label="IDENT" ];
+80 -> 26 [ label="STRING" ];
+83 -> 168 [ label="GOTO" ];
+83 -> 169 [ label="RETURN" ];
+83 -> 171 [ label="BREAK" ];
+83 -> 172 [ label="CONTINUE" ];
+83 -> 173 [ label="FALLTHROUGH" ];
+83 -> 83 [ label="LBRACE" ];
+83 -> 174 [ label="IF" ];
+83 -> 178 [ label="FOR" ];
+83 -> 17 [ label="CONST" ];
+83 -> 18 [ label="VAR" ];
+83 -> 19 [ label="TYPE" ];
+83 -> 179 [ label="IDENT" ];
+83 -> 181 [ label="SWITCH" ];
+83 -> 108 [ label="ADD" ];
+83 -> 109 [ label="SUB" ];
+83 -> 114 [ label="NOT" ];
+83 -> 110 [ label="XOR" ];
+83 -> 111 [ label="MUL" ];
+83 -> 112 [ label="AND" ];
+83 -> 117 [ label="LPAREN" ];
+83 -> 121 [ label="INT" ];
+83 -> 122 [ label="FLOAT" ];
+83 -> 123 [ label="IMAG" ];
+83 -> 124 [ label="RUNE" ];
+83 -> 125 [ label="STRING" ];
+83 -> 130 [ label="FUNC" ];
+83 -> 65 [ label="STRUCT" ];
+83 -> 64 [ label="LBRACK" ];
+83 -> 66 [ label="MAP" ];
+87 -> 182 [ label="PERIOD" ];
+88 -> 89 [ label="RPAREN" ];
+88 -> 183 [ label="IDENT" ];
+88 -> 63 [ label="MUL" ];
+88 -> 98 [ label="LPAREN" ];
+88 -> 64 [ label="LBRACK" ];
+88 -> 65 [ label="STRUCT" ];
+88 -> 66 [ label="MAP" ];
+88 -> 67 [ label="FUNC" ];
+90 -> 184 [ label="RPAREN" ];
+90 -> 185 [ label="COMMA" ];
+92 -> 187 [ label="IDENT" ];
+92 -> 57 [ label="LPAREN" ];
+92 -> 63 [ label="MUL" ];
+92 -> 64 [ label="LBRACK" ];
+92 -> 65 [ label="STRUCT" ];
+92 -> 66 [ label="MAP" ];
+92 -> 67 [ label="FUNC" ];
+94 -> 33 [ label="IDENT" ];
+95 -> 108 [ label="ADD" ];
+95 -> 109 [ label="SUB" ];
+95 -> 114 [ label="NOT" ];
+95 -> 110 [ label="XOR" ];
+95 -> 111 [ label="MUL" ];
+95 -> 112 [ label="AND" ];
+95 -> 116 [ label="IDENT" ];
+95 -> 117 [ label="LPAREN" ];
+95 -> 121 [ label="INT" ];
+95 -> 122 [ label="FLOAT" ];
+95 -> 123 [ label="IMAG" ];
+95 -> 124 [ label="RUNE" ];
+95 -> 125 [ label="STRING" ];
+95 -> 130 [ label="FUNC" ];
+95 -> 65 [ label="STRUCT" ];
+95 -> 64 [ label="LBRACK" ];
+95 -> 66 [ label="MAP" ];
+96 -> 108 [ label="ADD" ];
+96 -> 109 [ label="SUB" ];
+96 -> 114 [ label="NOT" ];
+96 -> 110 [ label="XOR" ];
+96 -> 111 [ label="MUL" ];
+96 -> 112 [ label="AND" ];
+96 -> 116 [ label="IDENT" ];
+96 -> 117 [ label="LPAREN" ];
+96 -> 121 [ label="INT" ];
+96 -> 122 [ label="FLOAT" ];
+96 -> 123 [ label="IMAG" ];
+96 -> 124 [ label="RUNE" ];
+96 -> 125 [ label="STRING" ];
+96 -> 130 [ label="FUNC" ];
+96 -> 65 [ label="STRUCT" ];
+96 -> 64 [ label="LBRACK" ];
+96 -> 66 [ label="MAP" ];
+97 -> 191 [ label="IDENT" ];
+98 -> 101 [ label="IDENT" ];
+98 -> 98 [ label="LPAREN" ];
+98 -> 64 [ label="LBRACK" ];
+98 -> 65 [ label="STRUCT" ];
+98 -> 66 [ label="MAP" ];
+98 -> 67 [ label="FUNC" ];
+99 -> 192 [ label="RPAREN" ];
+100 -> 193 [ label="RPAREN" ];
+101 -> 194 [ label="RPAREN" ];
+101 -> 195 [ label="PERIOD" ];
+103 -> 196 [ label="PERIOD" ];
+104 -> 197 [ label="RBRACK" ];
+105 -> 200 [ label="IDENT" ];
+105 -> 57 [ label="LPAREN" ];
+105 -> 63 [ label="MUL" ];
+105 -> 64 [ label="LBRACK" ];
+105 -> 65 [ label="STRUCT" ];
+105 -> 66 [ label="MAP" ];
+105 -> 67 [ label="FUNC" ];
+106 -> 201 [ label="LOR" ];
+106 -> 202 [ label="LAND" ];
+106 -> 203 [ label="EQL" ];
+106 -> 204 [ label="NEQ" ];
+106 -> 205 [ label="LSS" ];
+106 -> 206 [ label="LEQ" ];
+106 -> 207 [ label="GTR" ];
+106 -> 208 [ label="GEQ" ];
+106 -> 209 [ label="ADD" ];
+106 -> 210 [ label="SUB" ];
+106 -> 211 [ label="OR" ];
+106 -> 212 [ label="XOR" ];
+106 -> 213 [ label="MUL" ];
+106 -> 214 [ label="QUO" ];
+106 -> 215 [ label="REM" ];
+106 -> 216 [ label="SHL" ];
+106 -> 217 [ label="SHR" ];
+106 -> 218 [ label="AND" ];
+106 -> 219 [ label="AND_NOT" ];
+108 -> 108 [ label="ADD" ];
+108 -> 109 [ label="SUB" ];
+108 -> 114 [ label="NOT" ];
+108 -> 110 [ label="XOR" ];
+108 -> 111 [ label="MUL" ];
+108 -> 112 [ label="AND" ];
+108 -> 116 [ label="IDENT" ];
+108 -> 117 [ label="LPAREN" ];
+108 -> 121 [ label="INT" ];
+108 -> 122 [ label="FLOAT" ];
+108 -> 123 [ label="IMAG" ];
+108 -> 124 [ label="RUNE" ];
+108 -> 125 [ label="STRING" ];
+108 -> 130 [ label="FUNC" ];
+108 -> 65 [ label="STRUCT" ];
+108 -> 64 [ label="LBRACK" ];
+108 -> 66 [ label="MAP" ];
+109 -> 108 [ label="ADD" ];
+109 -> 109 [ label="SUB" ];
+109 -> 114 [ label="NOT" ];
+109 -> 110 [ label="XOR" ];
+109 -> 111 [ label="MUL" ];
+109 -> 112 [ label="AND" ];
+109 -> 116 [ label="IDENT" ];
+109 -> 117 [ label="LPAREN" ];
+109 -> 121 [ label="INT" ];
+109 -> 122 [ label="FLOAT" ];
+109 -> 123 [ label="IMAG" ];
+109 -> 124 [ label="RUNE" ];
+109 -> 125 [ label="STRING" ];
+109 -> 130 [ label="FUNC" ];
+109 -> 65 [ label="STRUCT" ];
+109 -> 64 [ label="LBRACK" ];
+109 -> 66 [ label="MAP" ];
+110 -> 108 [ label="ADD" ];
+110 -> 109 [ label="SUB" ];
+110 -> 114 [ label="NOT" ];
+110 -> 110 [ label="XOR" ];
+110 -> 111 [ label="MUL" ];
+110 -> 112 [ label="AND" ];
+110 -> 116 [ label="IDENT" ];
+110 -> 117 [ label="LPAREN" ];
+110 -> 121 [ label="INT" ];
+110 -> 122 [ label="FLOAT" ];
+110 -> 123 [ label="IMAG" ];
+110 -> 124 [ label="RUNE" ];
+110 -> 125 [ label="STRING" ];
+110 -> 130 [ label="FUNC" ];
+110 -> 65 [ label="STRUCT" ];
+110 -> 64 [ label="LBRACK" ];
+110 -> 66 [ label="MAP" ];
+111 -> 108 [ label="ADD" ];
+111 -> 109 [ label="SUB" ];
+111 -> 114 [ label="NOT" ];
+111 -> 110 [ label="XOR" ];
+111 -> 111 [ label="MUL" ];
+111 -> 112 [ label="AND" ];
+111 -> 116 [ label="IDENT" ];
+111 -> 117 [ label="LPAREN" ];
+111 -> 121 [ label="INT" ];
+111 -> 122 [ label="FLOAT" ];
+111 -> 123 [ label="IMAG" ];
+111 -> 124 [ label="RUNE" ];
+111 -> 125 [ label="STRING" ];
+111 -> 130 [ label="FUNC" ];
+111 -> 65 [ label="STRUCT" ];
+111 -> 64 [ label="LBRACK" ];
+111 -> 66 [ label="MAP" ];
+112 -> 108 [ label="ADD" ];
+112 -> 109 [ label="SUB" ];
+112 -> 114 [ label="NOT" ];
+112 -> 110 [ label="XOR" ];
+112 -> 111 [ label="MUL" ];
+112 -> 112 [ label="AND" ];
+112 -> 116 [ label="IDENT" ];
+112 -> 117 [ label="LPAREN" ];
+112 -> 121 [ label="INT" ];
+112 -> 122 [ label="FLOAT" ];
+112 -> 123 [ label="IMAG" ];
+112 -> 124 [ label="RUNE" ];
+112 -> 125 [ label="STRING" ];
+112 -> 130 [ label="FUNC" ];
+112 -> 65 [ label="STRUCT" ];
+112 -> 64 [ label="LBRACK" ];
+112 -> 66 [ label="MAP" ];
+113 -> 229 [ label="PERIOD" ];
+113 -> 230 [ label="LBRACK" ];
+113 -> 231 [ label="LPAREN" ];
+114 -> 108 [ label="ADD" ];
+114 -> 109 [ label="SUB" ];
+114 -> 114 [ label="NOT" ];
+114 -> 110 [ label="XOR" ];
+114 -> 111 [ label="MUL" ];
+114 -> 112 [ label="AND" ];
+114 -> 116 [ label="IDENT" ];
+114 -> 117 [ label="LPAREN" ];
+114 -> 121 [ label="INT" ];
+114 -> 122 [ label="FLOAT" ];
+114 -> 123 [ label="IMAG" ];
+114 -> 124 [ label="RUNE" ];
+114 -> 125 [ label="STRING" ];
+114 -> 130 [ label="FUNC" ];
+114 -> 65 [ label="STRUCT" ];
+114 -> 64 [ label="LBRACK" ];
+114 -> 66 [ label="MAP" ];
+116 -> 233 [ label="PERIOD" ];
+117 -> 108 [ label="ADD" ];
+117 -> 109 [ label="SUB" ];
+117 -> 114 [ label="NOT" ];
+117 -> 110 [ label="XOR" ];
+117 -> 111 [ label="MUL" ];
+117 -> 112 [ label="AND" ];
+117 -> 116 [ label="IDENT" ];
+117 -> 117 [ label="LPAREN" ];
+117 -> 121 [ label="INT" ];
+117 -> 122 [ label="FLOAT" ];
+117 -> 123 [ label="IMAG" ];
+117 -> 124 [ label="RUNE" ];
+117 -> 125 [ label="STRING" ];
+117 -> 130 [ label="FUNC" ];
+117 -> 65 [ label="STRUCT" ];
+117 -> 64 [ label="LBRACK" ];
+117 -> 66 [ label="MAP" ];
+126 -> 231 [ label="LPAREN" ];
+127 -> 235 [ label="LBRACE" ];
+128 -> 235 [ label="LBRACE" ];
+129 -> 235 [ label="LBRACE" ];
+130 -> 50 [ label="LPAREN" ];
+132 -> 245 [ label="IDENT" ];
+132 -> 57 [ label="LPAREN" ];
+132 -> 63 [ label="MUL" ];
+132 -> 64 [ label="LBRACK" ];
+132 -> 65 [ label="STRUCT" ];
+132 -> 66 [ label="MAP" ];
+132 -> 67 [ label="FUNC" ];
+136 -> 33 [ label="IDENT" ];
+137 -> 108 [ label="ADD" ];
+137 -> 109 [ label="SUB" ];
+137 -> 114 [ label="NOT" ];
+137 -> 110 [ label="XOR" ];
+137 -> 111 [ label="MUL" ];
+137 -> 112 [ label="AND" ];
+137 -> 116 [ label="IDENT" ];
+137 -> 117 [ label="LPAREN" ];
+137 -> 121 [ label="INT" ];
+137 -> 122 [ label="FLOAT" ];
+137 -> 123 [ label="IMAG" ];
+137 -> 124 [ label="RUNE" ];
+137 -> 125 [ label="STRING" ];
+137 -> 130 [ label="FUNC" ];
+137 -> 65 [ label="STRUCT" ];
+137 -> 64 [ label="LBRACK" ];
+137 -> 66 [ label="MAP" ];
+138 -> 248 [ label="COMMA" ];
+139 -> 201 [ label="LOR" ];
+139 -> 202 [ label="LAND" ];
+139 -> 203 [ label="EQL" ];
+139 -> 204 [ label="NEQ" ];
+139 -> 205 [ label="LSS" ];
+139 -> 206 [ label="LEQ" ];
+139 -> 207 [ label="GTR" ];
+139 -> 208 [ label="GEQ" ];
+139 -> 209 [ label="ADD" ];
+139 -> 210 [ label="SUB" ];
+139 -> 211 [ label="OR" ];
+139 -> 212 [ label="XOR" ];
+139 -> 213 [ label="MUL" ];
+139 -> 214 [ label="QUO" ];
+139 -> 215 [ label="REM" ];
+139 -> 216 [ label="SHL" ];
+139 -> 217 [ label="SHR" ];
+139 -> 218 [ label="AND" ];
+139 -> 219 [ label="AND_NOT" ];
+140 -> 108 [ label="ADD" ];
+140 -> 109 [ label="SUB" ];
+140 -> 114 [ label="NOT" ];
+140 -> 110 [ label="XOR" ];
+140 -> 111 [ label="MUL" ];
+140 -> 112 [ label="AND" ];
+140 -> 116 [ label="IDENT" ];
+140 -> 117 [ label="LPAREN" ];
+140 -> 121 [ label="INT" ];
+140 -> 122 [ label="FLOAT" ];
+140 -> 123 [ label="IMAG" ];
+140 -> 124 [ label="RUNE" ];
+140 -> 125 [ label="STRING" ];
+140 -> 130 [ label="FUNC" ];
+140 -> 65 [ label="STRUCT" ];
+140 -> 64 [ label="LBRACK" ];
+140 -> 66 [ label="MAP" ];
+141 -> 250 [ label="IDENT" ];
+143 -> 41 [ label="IDENT" ];
+144 -> 252 [ label="IDENT" ];
+145 -> 253 [ label="PERIOD" ];
+148 -> 254 [ label="RBRACE" ];
+149 -> 255 [ label="SEMICOLON" ];
+162 -> 256 [ label="COLON" ];
+168 -> 258 [ label="IDENT" ];
+169 -> 108 [ label="ADD" ];
+169 -> 109 [ label="SUB" ];
+169 -> 114 [ label="NOT" ];
+169 -> 110 [ label="XOR" ];
+169 -> 111 [ label="MUL" ];
+169 -> 112 [ label="AND" ];
+169 -> 116 [ label="IDENT" ];
+169 -> 117 [ label="LPAREN" ];
+169 -> 121 [ label="INT" ];
+169 -> 122 [ label="FLOAT" ];
+169 -> 123 [ label="IMAG" ];
+169 -> 124 [ label="RUNE" ];
+169 -> 125 [ label="STRING" ];
+169 -> 130 [ label="FUNC" ];
+169 -> 65 [ label="STRUCT" ];
+169 -> 64 [ label="LBRACK" ];
+169 -> 66 [ label="MAP" ];
+170 -> 248 [ label="COMMA" ];
+170 -> 263 [ label="ASSIGN" ];
+170 -> 264 [ label="ADD_ASSIGN" ];
+170 -> 265 [ label="SUB_ASSIGN" ];
+170 -> 266 [ label="OR_ASSIGN" ];
+170 -> 267 [ label="XOR_ASSIGN" ];
+170 -> 268 [ label="MUL_ASSIGN" ];
+170 -> 269 [ label="QUO_ASSIGN" ];
+170 -> 270 [ label="REM_ASSIGN" ];
+170 -> 271 [ label="AND_ASSIGN" ];
+170 -> 272 [ label="SHL_ASSIGN" ];
+170 -> 273 [ label="SHR_ASSIGN" ];
+170 -> 274 [ label="AND_NOT_ASSIGN" ];
+171 -> 258 [ label="IDENT" ];
+172 -> 258 [ label="IDENT" ];
+174 -> 108 [ label="ADD" ];
+174 -> 109 [ label="SUB" ];
+174 -> 114 [ label="NOT" ];
+174 -> 110 [ label="XOR" ];
+174 -> 111 [ label="MUL" ];
+174 -> 112 [ label="AND" ];
+174 -> 279 [ label="IDENT" ];
+174 -> 117 [ label="LPAREN" ];
+174 -> 121 [ label="INT" ];
+174 -> 122 [ label="FLOAT" ];
+174 -> 123 [ label="IMAG" ];
+174 -> 124 [ label="RUNE" ];
+174 -> 125 [ label="STRING" ];
+174 -> 130 [ label="FUNC" ];
+174 -> 65 [ label="STRUCT" ];
+174 -> 64 [ label="LBRACK" ];
+174 -> 66 [ label="MAP" ];
+175 -> 280 [ label="INC" ];
+175 -> 281 [ label="DEC" ];
+175 -> 201 [ label="LOR" ];
+175 -> 202 [ label="LAND" ];
+175 -> 203 [ label="EQL" ];
+175 -> 204 [ label="NEQ" ];
+175 -> 205 [ label="LSS" ];
+175 -> 206 [ label="LEQ" ];
+175 -> 207 [ label="GTR" ];
+175 -> 208 [ label="GEQ" ];
+175 -> 209 [ label="ADD" ];
+175 -> 210 [ label="SUB" ];
+175 -> 211 [ label="OR" ];
+175 -> 212 [ label="XOR" ];
+175 -> 213 [ label="MUL" ];
+175 -> 214 [ label="QUO" ];
+175 -> 215 [ label="REM" ];
+175 -> 216 [ label="SHL" ];
+175 -> 217 [ label="SHR" ];
+175 -> 218 [ label="AND" ];
+175 -> 219 [ label="AND_NOT" ];
+178 -> 83 [ label="LBRACE" ];
+178 -> 108 [ label="ADD" ];
+178 -> 109 [ label="SUB" ];
+178 -> 114 [ label="NOT" ];
+178 -> 110 [ label="XOR" ];
+178 -> 111 [ label="MUL" ];
+178 -> 112 [ label="AND" ];
+178 -> 292 [ label="IDENT" ];
+178 -> 117 [ label="LPAREN" ];
+178 -> 121 [ label="INT" ];
+178 -> 122 [ label="FLOAT" ];
+178 -> 123 [ label="IMAG" ];
+178 -> 124 [ label="RUNE" ];
+178 -> 125 [ label="STRING" ];
+178 -> 130 [ label="FUNC" ];
+178 -> 65 [ label="STRUCT" ];
+178 -> 64 [ label="LBRACK" ];
+178 -> 66 [ label="MAP" ];
+179 -> 68 [ label="COMMA" ];
+179 -> 233 [ label="PERIOD" ];
+179 -> 235 [ label="LBRACE" ];
+180 -> 293 [ label="DEFINE" ];
+181 -> 296 [ label="LBRACE" ];
+181 -> 298 [ label="IDENT" ];
+181 -> 108 [ label="ADD" ];
+181 -> 109 [ label="SUB" ];
+181 -> 114 [ label="NOT" ];
+181 -> 110 [ label="XOR" ];
+181 -> 111 [ label="MUL" ];
+181 -> 112 [ label="AND" ];
+181 -> 117 [ label="LPAREN" ];
+181 -> 121 [ label="INT" ];
+181 -> 122 [ label="FLOAT" ];
+181 -> 123 [ label="IMAG" ];
+181 -> 124 [ label="RUNE" ];
+181 -> 125 [ label="STRING" ];
+181 -> 130 [ label="FUNC" ];
+181 -> 65 [ label="STRUCT" ];
+181 -> 64 [ label="LBRACK" ];
+181 -> 66 [ label="MAP" ];
+182 -> 300 [ label="IDENT" ];
+183 -> 194 [ label="RPAREN" ];
+183 -> 195 [ label="PERIOD" ];
+183 -> 68 [ label="COMMA" ];
+185 -> 301 [ label="RPAREN" ];
+185 -> 302 [ label="IDENT" ];
+185 -> 57 [ label="LPAREN" ];
+185 -> 63 [ label="MUL" ];
+185 -> 64 [ label="LBRACK" ];
+185 -> 65 [ label="STRUCT" ];
+185 -> 66 [ label="MAP" ];
+185 -> 67 [ label="FUNC" ];
+187 -> 305 [ label="PERIOD" ];
+189 -> 248 [ label="COMMA" ];
+190 -> 248 [ label="COMMA" ];
+191 -> 306 [ label="ASSIGN" ];
+195 -> 307 [ label="IDENT" ];
+196 -> 308 [ label="IDENT" ];
+197 -> 200 [ label="IDENT" ];
+197 -> 57 [ label="LPAREN" ];
+197 -> 63 [ label="MUL" ];
+197 -> 64 [ label="LBRACK" ];
+197 -> 65 [ label="STRUCT" ];
+197 -> 66 [ label="MAP" ];
+197 -> 67 [ label="FUNC" ];
+200 -> 310 [ label="PERIOD" ];
+201 -> 108 [ label="ADD" ];
+201 -> 109 [ label="SUB" ];
+201 -> 114 [ label="NOT" ];
+201 -> 110 [ label="XOR" ];
+201 -> 111 [ label="MUL" ];
+201 -> 112 [ label="AND" ];
+201 -> 116 [ label="IDENT" ];
+201 -> 117 [ label="LPAREN" ];
+201 -> 121 [ label="INT" ];
+201 -> 122 [ label="FLOAT" ];
+201 -> 123 [ label="IMAG" ];
+201 -> 124 [ label="RUNE" ];
+201 -> 125 [ label="STRING" ];
+201 -> 130 [ label="FUNC" ];
+201 -> 65 [ label="STRUCT" ];
+201 -> 64 [ label="LBRACK" ];
+201 -> 66 [ label="MAP" ];
+202 -> 108 [ label="ADD" ];
+202 -> 109 [ label="SUB" ];
+202 -> 114 [ label="NOT" ];
+202 -> 110 [ label="XOR" ];
+202 -> 111 [ label="MUL" ];
+202 -> 112 [ label="AND" ];
+202 -> 116 [ label="IDENT" ];
+202 -> 117 [ label="LPAREN" ];
+202 -> 121 [ label="INT" ];
+202 -> 122 [ label="FLOAT" ];
+202 -> 123 [ label="IMAG" ];
+202 -> 124 [ label="RUNE" ];
+202 -> 125 [ label="STRING" ];
+202 -> 130 [ label="FUNC" ];
+202 -> 65 [ label="STRUCT" ];
+202 -> 64 [ label="LBRACK" ];
+202 -> 66 [ label="MAP" ];
+203 -> 108 [ label="ADD" ];
+203 -> 109 [ label="SUB" ];
+203 -> 114 [ label="NOT" ];
+203 -> 110 [ label="XOR" ];
+203 -> 111 [ label="MUL" ];
+203 -> 112 [ label="AND" ];
+203 -> 116 [ label="IDENT" ];
+203 -> 117 [ label="LPAREN" ];
+203 -> 121 [ label="INT" ];
+203 -> 122 [ label="FLOAT" ];
+203 -> 123 [ label="IMAG" ];
+203 -> 124 [ label="RUNE" ];
+203 -> 125 [ label="STRING" ];
+203 -> 130 [ label="FUNC" ];
+203 -> 65 [ label="STRUCT" ];
+203 -> 64 [ label="LBRACK" ];
+203 -> 66 [ label="MAP" ];
+204 -> 108 [ label="ADD" ];
+204 -> 109 [ label="SUB" ];
+204 -> 114 [ label="NOT" ];
+204 -> 110 [ label="XOR" ];
+204 -> 111 [ label="MUL" ];
+204 -> 112 [ label="AND" ];
+204 -> 116 [ label="IDENT" ];
+204 -> 117 [ label="LPAREN" ];
+204 -> 121 [ label="INT" ];
+204 -> 122 [ label="FLOAT" ];
+204 -> 123 [ label="IMAG" ];
+204 -> 124 [ label="RUNE" ];
+204 -> 125 [ label="STRING" ];
+204 -> 130 [ label="FUNC" ];
+204 -> 65 [ label="STRUCT" ];
+204 -> 64 [ label="LBRACK" ];
+204 -> 66 [ label="MAP" ];
+205 -> 108 [ label="ADD" ];
+205 -> 109 [ label="SUB" ];
+205 -> 114 [ label="NOT" ];
+205 -> 110 [ label="XOR" ];
+205 -> 111 [ label="MUL" ];
+205 -> 112 [ label="AND" ];
+205 -> 116 [ label="IDENT" ];
+205 -> 117 [ label="LPAREN" ];
+205 -> 121 [ label="INT" ];
+205 -> 122 [ label="FLOAT" ];
+205 -> 123 [ label="IMAG" ];
+205 -> 124 [ label="RUNE" ];
+205 -> 125 [ label="STRING" ];
+205 -> 130 [ label="FUNC" ];
+205 -> 65 [ label="STRUCT" ];
+205 -> 64 [ label="LBRACK" ];
+205 -> 66 [ label="MAP" ];
+206 -> 108 [ label="ADD" ];
+206 -> 109 [ label="SUB" ];
+206 -> 114 [ label="NOT" ];
+206 -> 110 [ label="XOR" ];
+206 -> 111 [ label="MUL" ];
+206 -> 112 [ label="AND" ];
+206 -> 116 [ label="IDENT" ];
+206 -> 117 [ label="LPAREN" ];
+206 -> 121 [ label="INT" ];
+206 -> 122 [ label="FLOAT" ];
+206 -> 123 [ label="IMAG" ];
+206 -> 124 [ label="RUNE" ];
+206 -> 125 [ label="STRING" ];
+206 -> 130 [ label="FUNC" ];
+206 -> 65 [ label="STRUCT" ];
+206 -> 64 [ label="LBRACK" ];
+206 -> 66 [ label="MAP" ];
+207 -> 108 [ label="ADD" ];
+207 -> 109 [ label="SUB" ];
+207 -> 114 [ label="NOT" ];
+207 -> 110 [ label="XOR" ];
+207 -> 111 [ label="MUL" ];
+207 -> 112 [ label="AND" ];
+207 -> 116 [ label="IDENT" ];
+207 -> 117 [ label="LPAREN" ];
+207 -> 121 [ label="INT" ];
+207 -> 122 [ label="FLOAT" ];
+207 -> 123 [ label="IMAG" ];
+207 -> 124 [ label="RUNE" ];
+207 -> 125 [ label="STRING" ];
+207 -> 130 [ label="FUNC" ];
+207 -> 65 [ label="STRUCT" ];
+207 -> 64 [ label="LBRACK" ];
+207 -> 66 [ label="MAP" ];
+208 -> 108 [ label="ADD" ];
+208 -> 109 [ label="SUB" ];
+208 -> 114 [ label="NOT" ];
+208 -> 110 [ label="XOR" ];
+208 -> 111 [ label="MUL" ];
+208 -> 112 [ label="AND" ];
+208 -> 116 [ label="IDENT" ];
+208 -> 117 [ label="LPAREN" ];
+208 -> 121 [ label="INT" ];
+208 -> 122 [ label="FLOAT" ];
+208 -> 123 [ label="IMAG" ];
+208 -> 124 [ label="RUNE" ];
+208 -> 125 [ label="STRING" ];
+208 -> 130 [ label="FUNC" ];
+208 -> 65 [ label="STRUCT" ];
+208 -> 64 [ label="LBRACK" ];
+208 -> 66 [ label="MAP" ];
+209 -> 108 [ label="ADD" ];
+209 -> 109 [ label="SUB" ];
+209 -> 114 [ label="NOT" ];
+209 -> 110 [ label="XOR" ];
+209 -> 111 [ label="MUL" ];
+209 -> 112 [ label="AND" ];
+209 -> 116 [ label="IDENT" ];
+209 -> 117 [ label="LPAREN" ];
+209 -> 121 [ label="INT" ];
+209 -> 122 [ label="FLOAT" ];
+209 -> 123 [ label="IMAG" ];
+209 -> 124 [ label="RUNE" ];
+209 -> 125 [ label="STRING" ];
+209 -> 130 [ label="FUNC" ];
+209 -> 65 [ label="STRUCT" ];
+209 -> 64 [ label="LBRACK" ];
+209 -> 66 [ label="MAP" ];
+210 -> 108 [ label="ADD" ];
+210 -> 109 [ label="SUB" ];
+210 -> 114 [ label="NOT" ];
+210 -> 110 [ label="XOR" ];
+210 -> 111 [ label="MUL" ];
+210 -> 112 [ label="AND" ];
+210 -> 116 [ label="IDENT" ];
+210 -> 117 [ label="LPAREN" ];
+210 -> 121 [ label="INT" ];
+210 -> 122 [ label="FLOAT" ];
+210 -> 123 [ label="IMAG" ];
+210 -> 124 [ label="RUNE" ];
+210 -> 125 [ label="STRING" ];
+210 -> 130 [ label="FUNC" ];
+210 -> 65 [ label="STRUCT" ];
+210 -> 64 [ label="LBRACK" ];
+210 -> 66 [ label="MAP" ];
+211 -> 108 [ label="ADD" ];
+211 -> 109 [ label="SUB" ];
+211 -> 114 [ label="NOT" ];
+211 -> 110 [ label="XOR" ];
+211 -> 111 [ label="MUL" ];
+211 -> 112 [ label="AND" ];
+211 -> 116 [ label="IDENT" ];
+211 -> 117 [ label="LPAREN" ];
+211 -> 121 [ label="INT" ];
+211 -> 122 [ label="FLOAT" ];
+211 -> 123 [ label="IMAG" ];
+211 -> 124 [ label="RUNE" ];
+211 -> 125 [ label="STRING" ];
+211 -> 130 [ label="FUNC" ];
+211 -> 65 [ label="STRUCT" ];
+211 -> 64 [ label="LBRACK" ];
+211 -> 66 [ label="MAP" ];
+212 -> 108 [ label="ADD" ];
+212 -> 109 [ label="SUB" ];
+212 -> 114 [ label="NOT" ];
+212 -> 110 [ label="XOR" ];
+212 -> 111 [ label="MUL" ];
+212 -> 112 [ label="AND" ];
+212 -> 116 [ label="IDENT" ];
+212 -> 117 [ label="LPAREN" ];
+212 -> 121 [ label="INT" ];
+212 -> 122 [ label="FLOAT" ];
+212 -> 123 [ label="IMAG" ];
+212 -> 124 [ label="RUNE" ];
+212 -> 125 [ label="STRING" ];
+212 -> 130 [ label="FUNC" ];
+212 -> 65 [ label="STRUCT" ];
+212 -> 64 [ label="LBRACK" ];
+212 -> 66 [ label="MAP" ];
+213 -> 108 [ label="ADD" ];
+213 -> 109 [ label="SUB" ];
+213 -> 114 [ label="NOT" ];
+213 -> 110 [ label="XOR" ];
+213 -> 111 [ label="MUL" ];
+213 -> 112 [ label="AND" ];
+213 -> 116 [ label="IDENT" ];
+213 -> 117 [ label="LPAREN" ];
+213 -> 121 [ label="INT" ];
+213 -> 122 [ label="FLOAT" ];
+213 -> 123 [ label="IMAG" ];
+213 -> 124 [ label="RUNE" ];
+213 -> 125 [ label="STRING" ];
+213 -> 130 [ label="FUNC" ];
+213 -> 65 [ label="STRUCT" ];
+213 -> 64 [ label="LBRACK" ];
+213 -> 66 [ label="MAP" ];
+214 -> 108 [ label="ADD" ];
+214 -> 109 [ label="SUB" ];
+214 -> 114 [ label="NOT" ];
+214 -> 110 [ label="XOR" ];
+214 -> 111 [ label="MUL" ];
+214 -> 112 [ label="AND" ];
+214 -> 116 [ label="IDENT" ];
+214 -> 117 [ label="LPAREN" ];
+214 -> 121 [ label="INT" ];
+214 -> 122 [ label="FLOAT" ];
+214 -> 123 [ label="IMAG" ];
+214 -> 124 [ label="RUNE" ];
+214 -> 125 [ label="STRING" ];
+214 -> 130 [ label="FUNC" ];
+214 -> 65 [ label="STRUCT" ];
+214 -> 64 [ label="LBRACK" ];
+214 -> 66 [ label="MAP" ];
+215 -> 108 [ label="ADD" ];
+215 -> 109 [ label="SUB" ];
+215 -> 114 [ label="NOT" ];
+215 -> 110 [ label="XOR" ];
+215 -> 111 [ label="MUL" ];
+215 -> 112 [ label="AND" ];
+215 -> 116 [ label="IDENT" ];
+215 -> 117 [ label="LPAREN" ];
+215 -> 121 [ label="INT" ];
+215 -> 122 [ label="FLOAT" ];
+215 -> 123 [ label="IMAG" ];
+215 -> 124 [ label="RUNE" ];
+215 -> 125 [ label="STRING" ];
+215 -> 130 [ label="FUNC" ];
+215 -> 65 [ label="STRUCT" ];
+215 -> 64 [ label="LBRACK" ];
+215 -> 66 [ label="MAP" ];
+216 -> 108 [ label="ADD" ];
+216 -> 109 [ label="SUB" ];
+216 -> 114 [ label="NOT" ];
+216 -> 110 [ label="XOR" ];
+216 -> 111 [ label="MUL" ];
+216 -> 112 [ label="AND" ];
+216 -> 116 [ label="IDENT" ];
+216 -> 117 [ label="LPAREN" ];
+216 -> 121 [ label="INT" ];
+216 -> 122 [ label="FLOAT" ];
+216 -> 123 [ label="IMAG" ];
+216 -> 124 [ label="RUNE" ];
+216 -> 125 [ label="STRING" ];
+216 -> 130 [ label="FUNC" ];
+216 -> 65 [ label="STRUCT" ];
+216 -> 64 [ label="LBRACK" ];
+216 -> 66 [ label="MAP" ];
+217 -> 108 [ label="ADD" ];
+217 -> 109 [ label="SUB" ];
+217 -> 114 [ label="NOT" ];
+217 -> 110 [ label="XOR" ];
+217 -> 111 [ label="MUL" ];
+217 -> 112 [ label="AND" ];
+217 -> 116 [ label="IDENT" ];
+217 -> 117 [ label="LPAREN" ];
+217 -> 121 [ label="INT" ];
+217 -> 122 [ label="FLOAT" ];
+217 -> 123 [ label="IMAG" ];
+217 -> 124 [ label="RUNE" ];
+217 -> 125 [ label="STRING" ];
+217 -> 130 [ label="FUNC" ];
+217 -> 65 [ label="STRUCT" ];
+217 -> 64 [ label="LBRACK" ];
+217 -> 66 [ label="MAP" ];
+218 -> 108 [ label="ADD" ];
+218 -> 109 [ label="SUB" ];
+218 -> 114 [ label="NOT" ];
+218 -> 110 [ label="XOR" ];
+218 -> 111 [ label="MUL" ];
+218 -> 112 [ label="AND" ];
+218 -> 116 [ label="IDENT" ];
+218 -> 117 [ label="LPAREN" ];
+218 -> 121 [ label="INT" ];
+218 -> 122 [ label="FLOAT" ];
+218 -> 123 [ label="IMAG" ];
+218 -> 124 [ label="RUNE" ];
+218 -> 125 [ label="STRING" ];
+218 -> 130 [ label="FUNC" ];
+218 -> 65 [ label="STRUCT" ];
+218 -> 64 [ label="LBRACK" ];
+218 -> 66 [ label="MAP" ];
+219 -> 108 [ label="ADD" ];
+219 -> 109 [ label="SUB" ];
+219 -> 114 [ label="NOT" ];
+219 -> 110 [ label="XOR" ];
+219 -> 111 [ label="MUL" ];
+219 -> 112 [ label="AND" ];
+219 -> 116 [ label="IDENT" ];
+219 -> 117 [ label="LPAREN" ];
+219 -> 121 [ label="INT" ];
+219 -> 122 [ label="FLOAT" ];
+219 -> 123 [ label="IMAG" ];
+219 -> 124 [ label="RUNE" ];
+219 -> 125 [ label="STRING" ];
+219 -> 130 [ label="FUNC" ];
+219 -> 65 [ label="STRUCT" ];
+219 -> 64 [ label="LBRACK" ];
+219 -> 66 [ label="MAP" ];
+229 -> 330 [ label="IDENT" ];
+230 -> 332 [ label="COLON" ];
+230 -> 108 [ label="ADD" ];
+230 -> 109 [ label="SUB" ];
+230 -> 114 [ label="NOT" ];
+230 -> 110 [ label="XOR" ];
+230 -> 111 [ label="MUL" ];
+230 -> 112 [ label="AND" ];
+230 -> 116 [ label="IDENT" ];
+230 -> 117 [ label="LPAREN" ];
+230 -> 121 [ label="INT" ];
+230 -> 122 [ label="FLOAT" ];
+230 -> 123 [ label="IMAG" ];
+230 -> 124 [ label="RUNE" ];
+230 -> 125 [ label="STRING" ];
+230 -> 130 [ label="FUNC" ];
+230 -> 65 [ label="STRUCT" ];
+230 -> 64 [ label="LBRACK" ];
+230 -> 66 [ label="MAP" ];
+231 -> 334 [ label="RPAREN" ];
+231 -> 337 [ label="IDENT" ];
+231 -> 333 [ label="LPAREN" ];
+231 -> 64 [ label="LBRACK" ];
+231 -> 65 [ label="STRUCT" ];
+231 -> 66 [ label="MAP" ];
+231 -> 342 [ label="FUNC" ];
+231 -> 108 [ label="ADD" ];
+231 -> 109 [ label="SUB" ];
+231 -> 114 [ label="NOT" ];
+231 -> 110 [ label="XOR" ];
+231 -> 111 [ label="MUL" ];
+231 -> 112 [ label="AND" ];
+231 -> 121 [ label="INT" ];
+231 -> 122 [ label="FLOAT" ];
+231 -> 123 [ label="IMAG" ];
+231 -> 124 [ label="RUNE" ];
+231 -> 125 [ label="STRING" ];
+233 -> 343 [ label="IDENT" ];
+235 -> 345 [ label="RBRACE" ];
+235 -> 235 [ label="LBRACE" ];
+235 -> 108 [ label="ADD" ];
+235 -> 109 [ label="SUB" ];
+235 -> 114 [ label="NOT" ];
+235 -> 110 [ label="XOR" ];
+235 -> 111 [ label="MUL" ];
+235 -> 112 [ label="AND" ];
+235 -> 116 [ label="IDENT" ];
+235 -> 117 [ label="LPAREN" ];
+235 -> 121 [ label="INT" ];
+235 -> 122 [ label="FLOAT" ];
+235 -> 123 [ label="IMAG" ];
+235 -> 124 [ label="RUNE" ];
+235 -> 125 [ label="STRING" ];
+235 -> 130 [ label="FUNC" ];
+235 -> 65 [ label="STRUCT" ];
+235 -> 64 [ label="LBRACK" ];
+235 -> 66 [ label="MAP" ];
+236 -> 351 [ label="RPAREN" ];
+236 -> 201 [ label="LOR" ];
+236 -> 202 [ label="LAND" ];
+236 -> 203 [ label="EQL" ];
+236 -> 204 [ label="NEQ" ];
+236 -> 205 [ label="LSS" ];
+236 -> 206 [ label="LEQ" ];
+236 -> 207 [ label="GTR" ];
+236 -> 208 [ label="GEQ" ];
+236 -> 209 [ label="ADD" ];
+236 -> 210 [ label="SUB" ];
+236 -> 211 [ label="OR" ];
+236 -> 212 [ label="XOR" ];
+236 -> 213 [ label="MUL" ];
+236 -> 214 [ label="QUO" ];
+236 -> 215 [ label="REM" ];
+236 -> 216 [ label="SHL" ];
+236 -> 217 [ label="SHR" ];
+236 -> 218 [ label="AND" ];
+236 -> 219 [ label="AND_NOT" ];
+241 -> 83 [ label="LBRACE" ];
+242 -> 353 [ label="RBRACE" ];
+242 -> 356 [ label="IDENT" ];
+242 -> 358 [ label="MUL" ];
+243 -> 359 [ label="RBRACK" ];
+245 -> 360 [ label="PERIOD" ];
+247 -> 248 [ label="COMMA" ];
+248 -> 108 [ label="ADD" ];
+248 -> 109 [ label="SUB" ];
+248 -> 114 [ label="NOT" ];
+248 -> 110 [ label="XOR" ];
+248 -> 111 [ label="MUL" ];
+248 -> 112 [ label="AND" ];
+248 -> 116 [ label="IDENT" ];
+248 -> 117 [ label="LPAREN" ];
+248 -> 121 [ label="INT" ];
+248 -> 122 [ label="FLOAT" ];
+248 -> 123 [ label="IMAG" ];
+248 -> 124 [ label="RUNE" ];
+248 -> 125 [ label="STRING" ];
+248 -> 130 [ label="FUNC" ];
+248 -> 65 [ label="STRUCT" ];
+248 -> 64 [ label="LBRACK" ];
+248 -> 66 [ label="MAP" ];
+249 -> 248 [ label="COMMA" ];
+250 -> 362 [ label="ASSIGN" ];
+253 -> 363 [ label="IDENT" ];
+255 -> 168 [ label="GOTO" ];
+255 -> 169 [ label="RETURN" ];
+255 -> 171 [ label="BREAK" ];
+255 -> 172 [ label="CONTINUE" ];
+255 -> 173 [ label="FALLTHROUGH" ];
+255 -> 83 [ label="LBRACE" ];
+255 -> 174 [ label="IF" ];
+255 -> 178 [ label="FOR" ];
+255 -> 17 [ label="CONST" ];
+255 -> 18 [ label="VAR" ];
+255 -> 19 [ label="TYPE" ];
+255 -> 179 [ label="IDENT" ];
+255 -> 181 [ label="SWITCH" ];
+255 -> 108 [ label="ADD" ];
+255 -> 109 [ label="SUB" ];
+255 -> 114 [ label="NOT" ];
+255 -> 110 [ label="XOR" ];
+255 -> 111 [ label="MUL" ];
+255 -> 112 [ label="AND" ];
+255 -> 117 [ label="LPAREN" ];
+255 -> 121 [ label="INT" ];
+255 -> 122 [ label="FLOAT" ];
+255 -> 123 [ label="IMAG" ];
+255 -> 124 [ label="RUNE" ];
+255 -> 125 [ label="STRING" ];
+255 -> 130 [ label="FUNC" ];
+255 -> 65 [ label="STRUCT" ];
+255 -> 64 [ label="LBRACK" ];
+255 -> 66 [ label="MAP" ];
+256 -> 168 [ label="GOTO" ];
+256 -> 169 [ label="RETURN" ];
+256 -> 171 [ label="BREAK" ];
+256 -> 172 [ label="CONTINUE" ];
+256 -> 173 [ label="FALLTHROUGH" ];
+256 -> 83 [ label="LBRACE" ];
+256 -> 174 [ label="IF" ];
+256 -> 178 [ label="FOR" ];
+256 -> 17 [ label="CONST" ];
+256 -> 18 [ label="VAR" ];
+256 -> 19 [ label="TYPE" ];
+256 -> 179 [ label="IDENT" ];
+256 -> 181 [ label="SWITCH" ];
+256 -> 108 [ label="ADD" ];
+256 -> 109 [ label="SUB" ];
+256 -> 114 [ label="NOT" ];
+256 -> 110 [ label="XOR" ];
+256 -> 111 [ label="MUL" ];
+256 -> 112 [ label="AND" ];
+256 -> 117 [ label="LPAREN" ];
+256 -> 121 [ label="INT" ];
+256 -> 122 [ label="FLOAT" ];
+256 -> 123 [ label="IMAG" ];
+256 -> 124 [ label="RUNE" ];
+256 -> 125 [ label="STRING" ];
+256 -> 130 [ label="FUNC" ];
+256 -> 65 [ label="STRUCT" ];
+256 -> 64 [ label="LBRACK" ];
+256 -> 66 [ label="MAP" ];
+259 -> 248 [ label="COMMA" ];
+260 -> 108 [ label="ADD" ];
+260 -> 109 [ label="SUB" ];
+260 -> 114 [ label="NOT" ];
+260 -> 110 [ label="XOR" ];
+260 -> 111 [ label="MUL" ];
+260 -> 112 [ label="AND" ];
+260 -> 116 [ label="IDENT" ];
+260 -> 117 [ label="LPAREN" ];
+260 -> 121 [ label="INT" ];
+260 -> 122 [ label="FLOAT" ];
+260 -> 123 [ label="IMAG" ];
+260 -> 124 [ label="RUNE" ];
+260 -> 125 [ label="STRING" ];
+260 -> 130 [ label="FUNC" ];
+260 -> 65 [ label="STRUCT" ];
+260 -> 64 [ label="LBRACK" ];
+260 -> 66 [ label="MAP" ];
+277 -> 201 [ label="LOR" ];
+277 -> 202 [ label="LAND" ];
+277 -> 203 [ label="EQL" ];
+277 -> 204 [ label="NEQ" ];
+277 -> 205 [ label="LSS" ];
+277 -> 206 [ label="LEQ" ];
+277 -> 207 [ label="GTR" ];
+277 -> 208 [ label="GEQ" ];
+277 -> 209 [ label="ADD" ];
+277 -> 210 [ label="SUB" ];
+277 -> 211 [ label="OR" ];
+277 -> 212 [ label="XOR" ];
+277 -> 213 [ label="MUL" ];
+277 -> 214 [ label="QUO" ];
+277 -> 215 [ label="REM" ];
+277 -> 216 [ label="SHL" ];
+277 -> 217 [ label="SHR" ];
+277 -> 218 [ label="AND" ];
+277 -> 219 [ label="AND_NOT" ];
+277 -> 280 [ label="INC" ];
+277 -> 281 [ label="DEC" ];
+277 -> 83 [ label="LBRACE" ];
+278 -> 368 [ label="SEMICOLON" ];
+279 -> 233 [ label="PERIOD" ];
+279 -> 68 [ label="COMMA" ];
+282 -> 83 [ label="LBRACE" ];
+284 -> 83 [ label="LBRACE" ];
+285 -> 83 [ label="LBRACE" ];
+286 -> 201 [ label="LOR" ];
+286 -> 202 [ label="LAND" ];
+286 -> 203 [ label="EQL" ];
+286 -> 204 [ label="NEQ" ];
+286 -> 205 [ label="LSS" ];
+286 -> 206 [ label="LEQ" ];
+286 -> 207 [ label="GTR" ];
+286 -> 208 [ label="GEQ" ];
+286 -> 209 [ label="ADD" ];
+286 -> 210 [ label="SUB" ];
+286 -> 211 [ label="OR" ];
+286 -> 212 [ label="XOR" ];
+286 -> 213 [ label="MUL" ];
+286 -> 214 [ label="QUO" ];
+286 -> 215 [ label="REM" ];
+286 -> 216 [ label="SHL" ];
+286 -> 217 [ label="SHR" ];
+286 -> 218 [ label="AND" ];
+286 -> 219 [ label="AND_NOT" ];
+286 -> 280 [ label="INC" ];
+286 -> 281 [ label="DEC" ];
+287 -> 372 [ label="SEMICOLON" ];
+288 -> 373 [ label="RANGE" ];
+290 -> 374 [ label="ASSIGN" ];
+290 -> 248 [ label="COMMA" ];
+290 -> 264 [ label="ADD_ASSIGN" ];
+290 -> 265 [ label="SUB_ASSIGN" ];
+290 -> 266 [ label="OR_ASSIGN" ];
+290 -> 267 [ label="XOR_ASSIGN" ];
+290 -> 268 [ label="MUL_ASSIGN" ];
+290 -> 269 [ label="QUO_ASSIGN" ];
+290 -> 270 [ label="REM_ASSIGN" ];
+290 -> 271 [ label="AND_ASSIGN" ];
+290 -> 272 [ label="SHL_ASSIGN" ];
+290 -> 273 [ label="SHR_ASSIGN" ];
+290 -> 274 [ label="AND_NOT_ASSIGN" ];
+291 -> 375 [ label="DEFINE" ];
+292 -> 68 [ label="COMMA" ];
+292 -> 233 [ label="PERIOD" ];
+293 -> 108 [ label="ADD" ];
+293 -> 109 [ label="SUB" ];
+293 -> 114 [ label="NOT" ];
+293 -> 110 [ label="XOR" ];
+293 -> 111 [ label="MUL" ];
+293 -> 112 [ label="AND" ];
+293 -> 116 [ label="IDENT" ];
+293 -> 117 [ label="LPAREN" ];
+293 -> 121 [ label="INT" ];
+293 -> 122 [ label="FLOAT" ];
+293 -> 123 [ label="IMAG" ];
+293 -> 124 [ label="RUNE" ];
+293 -> 125 [ label="STRING" ];
+293 -> 130 [ label="FUNC" ];
+293 -> 65 [ label="STRUCT" ];
+293 -> 64 [ label="LBRACK" ];
+293 -> 66 [ label="MAP" ];
+294 -> 377 [ label="SEMICOLON" ];
+295 -> 378 [ label="LBRACE" ];
+295 -> 201 [ label="LOR" ];
+295 -> 202 [ label="LAND" ];
+295 -> 203 [ label="EQL" ];
+295 -> 204 [ label="NEQ" ];
+295 -> 205 [ label="LSS" ];
+295 -> 206 [ label="LEQ" ];
+295 -> 207 [ label="GTR" ];
+295 -> 208 [ label="GEQ" ];
+295 -> 209 [ label="ADD" ];
+295 -> 210 [ label="SUB" ];
+295 -> 211 [ label="OR" ];
+295 -> 212 [ label="XOR" ];
+295 -> 213 [ label="MUL" ];
+295 -> 214 [ label="QUO" ];
+295 -> 215 [ label="REM" ];
+295 -> 216 [ label="SHL" ];
+295 -> 217 [ label="SHR" ];
+295 -> 218 [ label="AND" ];
+295 -> 219 [ label="AND_NOT" ];
+295 -> 280 [ label="INC" ];
+295 -> 281 [ label="DEC" ];
+296 -> 382 [ label="CASE" ];
+296 -> 383 [ label="DEFAULT" ];
+297 -> 384 [ label="LBRACE" ];
+298 -> 233 [ label="PERIOD" ];
+298 -> 68 [ label="COMMA" ];
+299 -> 386 [ label="PERIOD" ];
+299 -> 230 [ label="LBRACK" ];
+299 -> 231 [ label="LPAREN" ];
+302 -> 68 [ label="COMMA" ];
+302 -> 387 [ label="PERIOD" ];
+305 -> 388 [ label="IDENT" ];
+306 -> 108 [ label="ADD" ];
+306 -> 109 [ label="SUB" ];
+306 -> 114 [ label="NOT" ];
+306 -> 110 [ label="XOR" ];
+306 -> 111 [ label="MUL" ];
+306 -> 112 [ label="AND" ];
+306 -> 116 [ label="IDENT" ];
+306 -> 117 [ label="LPAREN" ];
+306 -> 121 [ label="INT" ];
+306 -> 122 [ label="FLOAT" ];
+306 -> 123 [ label="IMAG" ];
+306 -> 124 [ label="RUNE" ];
+306 -> 125 [ label="STRING" ];
+306 -> 130 [ label="FUNC" ];
+306 -> 65 [ label="STRUCT" ];
+306 -> 64 [ label="LBRACK" ];
+306 -> 66 [ label="MAP" ];
+307 -> 390 [ label="RPAREN" ];
+310 -> 391 [ label="IDENT" ];
+311 -> 202 [ label="LAND" ];
+311 -> 203 [ label="EQL" ];
+311 -> 204 [ label="NEQ" ];
+311 -> 205 [ label="LSS" ];
+311 -> 206 [ label="LEQ" ];
+311 -> 207 [ label="GTR" ];
+311 -> 208 [ label="GEQ" ];
+311 -> 209 [ label="ADD" ];
+311 -> 210 [ label="SUB" ];
+311 -> 211 [ label="OR" ];
+311 -> 212 [ label="XOR" ];
+311 -> 213 [ label="MUL" ];
+311 -> 214 [ label="QUO" ];
+311 -> 215 [ label="REM" ];
+311 -> 216 [ label="SHL" ];
+311 -> 217 [ label="SHR" ];
+311 -> 218 [ label="AND" ];
+311 -> 219 [ label="AND_NOT" ];
+312 -> 203 [ label="EQL" ];
+312 -> 204 [ label="NEQ" ];
+312 -> 205 [ label="LSS" ];
+312 -> 206 [ label="LEQ" ];
+312 -> 207 [ label="GTR" ];
+312 -> 208 [ label="GEQ" ];
+312 -> 209 [ label="ADD" ];
+312 -> 210 [ label="SUB" ];
+312 -> 211 [ label="OR" ];
+312 -> 212 [ label="XOR" ];
+312 -> 213 [ label="MUL" ];
+312 -> 214 [ label="QUO" ];
+312 -> 215 [ label="REM" ];
+312 -> 216 [ label="SHL" ];
+312 -> 217 [ label="SHR" ];
+312 -> 218 [ label="AND" ];
+312 -> 219 [ label="AND_NOT" ];
+313 -> 209 [ label="ADD" ];
+313 -> 210 [ label="SUB" ];
+313 -> 211 [ label="OR" ];
+313 -> 212 [ label="XOR" ];
+313 -> 213 [ label="MUL" ];
+313 -> 214 [ label="QUO" ];
+313 -> 215 [ label="REM" ];
+313 -> 216 [ label="SHL" ];
+313 -> 217 [ label="SHR" ];
+313 -> 218 [ label="AND" ];
+313 -> 219 [ label="AND_NOT" ];
+314 -> 209 [ label="ADD" ];
+314 -> 210 [ label="SUB" ];
+314 -> 211 [ label="OR" ];
+314 -> 212 [ label="XOR" ];
+314 -> 213 [ label="MUL" ];
+314 -> 214 [ label="QUO" ];
+314 -> 215 [ label="REM" ];
+314 -> 216 [ label="SHL" ];
+314 -> 217 [ label="SHR" ];
+314 -> 218 [ label="AND" ];
+314 -> 219 [ label="AND_NOT" ];
+315 -> 209 [ label="ADD" ];
+315 -> 210 [ label="SUB" ];
+315 -> 211 [ label="OR" ];
+315 -> 212 [ label="XOR" ];
+315 -> 213 [ label="MUL" ];
+315 -> 214 [ label="QUO" ];
+315 -> 215 [ label="REM" ];
+315 -> 216 [ label="SHL" ];
+315 -> 217 [ label="SHR" ];
+315 -> 218 [ label="AND" ];
+315 -> 219 [ label="AND_NOT" ];
+316 -> 209 [ label="ADD" ];
+316 -> 210 [ label="SUB" ];
+316 -> 211 [ label="OR" ];
+316 -> 212 [ label="XOR" ];
+316 -> 213 [ label="MUL" ];
+316 -> 214 [ label="QUO" ];
+316 -> 215 [ label="REM" ];
+316 -> 216 [ label="SHL" ];
+316 -> 217 [ label="SHR" ];
+316 -> 218 [ label="AND" ];
+316 -> 219 [ label="AND_NOT" ];
+317 -> 209 [ label="ADD" ];
+317 -> 210 [ label="SUB" ];
+317 -> 211 [ label="OR" ];
+317 -> 212 [ label="XOR" ];
+317 -> 213 [ label="MUL" ];
+317 -> 214 [ label="QUO" ];
+317 -> 215 [ label="REM" ];
+317 -> 216 [ label="SHL" ];
+317 -> 217 [ label="SHR" ];
+317 -> 218 [ label="AND" ];
+317 -> 219 [ label="AND_NOT" ];
+318 -> 209 [ label="ADD" ];
+318 -> 210 [ label="SUB" ];
+318 -> 211 [ label="OR" ];
+318 -> 212 [ label="XOR" ];
+318 -> 213 [ label="MUL" ];
+318 -> 214 [ label="QUO" ];
+318 -> 215 [ label="REM" ];
+318 -> 216 [ label="SHL" ];
+318 -> 217 [ label="SHR" ];
+318 -> 218 [ label="AND" ];
+318 -> 219 [ label="AND_NOT" ];
+319 -> 213 [ label="MUL" ];
+319 -> 214 [ label="QUO" ];
+319 -> 215 [ label="REM" ];
+319 -> 216 [ label="SHL" ];
+319 -> 217 [ label="SHR" ];
+319 -> 218 [ label="AND" ];
+319 -> 219 [ label="AND_NOT" ];
+320 -> 213 [ label="MUL" ];
+320 -> 214 [ label="QUO" ];
+320 -> 215 [ label="REM" ];
+320 -> 216 [ label="SHL" ];
+320 -> 217 [ label="SHR" ];
+320 -> 218 [ label="AND" ];
+320 -> 219 [ label="AND_NOT" ];
+321 -> 213 [ label="MUL" ];
+321 -> 214 [ label="QUO" ];
+321 -> 215 [ label="REM" ];
+321 -> 216 [ label="SHL" ];
+321 -> 217 [ label="SHR" ];
+321 -> 218 [ label="AND" ];
+321 -> 219 [ label="AND_NOT" ];
+322 -> 213 [ label="MUL" ];
+322 -> 214 [ label="QUO" ];
+322 -> 215 [ label="REM" ];
+322 -> 216 [ label="SHL" ];
+322 -> 217 [ label="SHR" ];
+322 -> 218 [ label="AND" ];
+322 -> 219 [ label="AND_NOT" ];
+331 -> 392 [ label="RBRACK" ];
+331 -> 393 [ label="COLON" ];
+331 -> 201 [ label="LOR" ];
+331 -> 202 [ label="LAND" ];
+331 -> 203 [ label="EQL" ];
+331 -> 204 [ label="NEQ" ];
+331 -> 205 [ label="LSS" ];
+331 -> 206 [ label="LEQ" ];
+331 -> 207 [ label="GTR" ];
+331 -> 208 [ label="GEQ" ];
+331 -> 209 [ label="ADD" ];
+331 -> 210 [ label="SUB" ];
+331 -> 211 [ label="OR" ];
+331 -> 212 [ label="XOR" ];
+331 -> 213 [ label="MUL" ];
+331 -> 214 [ label="QUO" ];
+331 -> 215 [ label="REM" ];
+331 -> 216 [ label="SHL" ];
+331 -> 217 [ label="SHR" ];
+331 -> 218 [ label="AND" ];
+331 -> 219 [ label="AND_NOT" ];
+332 -> 395 [ label="RBRACK" ];
+332 -> 108 [ label="ADD" ];
+332 -> 109 [ label="SUB" ];
+332 -> 114 [ label="NOT" ];
+332 -> 110 [ label="XOR" ];
+332 -> 111 [ label="MUL" ];
+332 -> 112 [ label="AND" ];
+332 -> 116 [ label="IDENT" ];
+332 -> 117 [ label="LPAREN" ];
+332 -> 121 [ label="INT" ];
+332 -> 122 [ label="FLOAT" ];
+332 -> 123 [ label="IMAG" ];
+332 -> 124 [ label="RUNE" ];
+332 -> 125 [ label="STRING" ];
+332 -> 130 [ label="FUNC" ];
+332 -> 65 [ label="STRUCT" ];
+332 -> 64 [ label="LBRACK" ];
+332 -> 66 [ label="MAP" ];
+333 -> 396 [ label="IDENT" ];
+333 -> 333 [ label="LPAREN" ];
+333 -> 64 [ label="LBRACK" ];
+333 -> 65 [ label="STRUCT" ];
+333 -> 66 [ label="MAP" ];
+333 -> 342 [ label="FUNC" ];
+333 -> 108 [ label="ADD" ];
+333 -> 109 [ label="SUB" ];
+333 -> 114 [ label="NOT" ];
+333 -> 110 [ label="XOR" ];
+333 -> 111 [ label="MUL" ];
+333 -> 112 [ label="AND" ];
+333 -> 121 [ label="INT" ];
+333 -> 122 [ label="FLOAT" ];
+333 -> 123 [ label="IMAG" ];
+333 -> 124 [ label="RUNE" ];
+333 -> 125 [ label="STRING" ];
+335 -> 397 [ label="RPAREN" ];
+335 -> 398 [ label="COMMA" ];
+336 -> 399 [ label="RPAREN" ];
+336 -> 400 [ label="COMMA" ];
+337 -> 401 [ label="RPAREN" ];
+337 -> 402 [ label="COMMA" ];
+337 -> 403 [ label="PERIOD" ];
+337 -> 235 [ label="LBRACE" ];
+338 -> 235 [ label="LBRACE" ];
+339 -> 231 [ label="LPAREN" ];
+340 -> 235 [ label="LBRACE" ];
+341 -> 235 [ label="LBRACE" ];
+342 -> 50 [ label="LPAREN" ];
+344 -> 406 [ label="COMMA" ];
+344 -> 407 [ label="RBRACE" ];
+348 -> 408 [ label="COLON" ];
+349 -> 201 [ label="LOR" ];
+349 -> 202 [ label="LAND" ];
+349 -> 203 [ label="EQL" ];
+349 -> 204 [ label="NEQ" ];
+349 -> 205 [ label="LSS" ];
+349 -> 206 [ label="LEQ" ];
+349 -> 207 [ label="GTR" ];
+349 -> 208 [ label="GEQ" ];
+349 -> 209 [ label="ADD" ];
+349 -> 210 [ label="SUB" ];
+349 -> 211 [ label="OR" ];
+349 -> 212 [ label="XOR" ];
+349 -> 213 [ label="MUL" ];
+349 -> 214 [ label="QUO" ];
+349 -> 215 [ label="REM" ];
+349 -> 216 [ label="SHL" ];
+349 -> 217 [ label="SHR" ];
+349 -> 218 [ label="AND" ];
+349 -> 219 [ label="AND_NOT" ];
+354 -> 409 [ label="SEMICOLON" ];
+355 -> 411 [ label="IDENT" ];
+355 -> 57 [ label="LPAREN" ];
+355 -> 63 [ label="MUL" ];
+355 -> 64 [ label="LBRACK" ];
+355 -> 65 [ label="STRUCT" ];
+355 -> 66 [ label="MAP" ];
+355 -> 67 [ label="FUNC" ];
+356 -> 68 [ label="COMMA" ];
+356 -> 412 [ label="PERIOD" ];
+357 -> 414 [ label="STRING" ];
+358 -> 415 [ label="IDENT" ];
+359 -> 200 [ label="IDENT" ];
+359 -> 57 [ label="LPAREN" ];
+359 -> 63 [ label="MUL" ];
+359 -> 64 [ label="LBRACK" ];
+359 -> 65 [ label="STRUCT" ];
+359 -> 66 [ label="MAP" ];
+359 -> 67 [ label="FUNC" ];
+360 -> 417 [ label="IDENT" ];
+361 -> 201 [ label="LOR" ];
+361 -> 202 [ label="LAND" ];
+361 -> 203 [ label="EQL" ];
+361 -> 204 [ label="NEQ" ];
+361 -> 205 [ label="LSS" ];
+361 -> 206 [ label="LEQ" ];
+361 -> 207 [ label="GTR" ];
+361 -> 208 [ label="GEQ" ];
+361 -> 209 [ label="ADD" ];
+361 -> 210 [ label="SUB" ];
+361 -> 211 [ label="OR" ];
+361 -> 212 [ label="XOR" ];
+361 -> 213 [ label="MUL" ];
+361 -> 214 [ label="QUO" ];
+361 -> 215 [ label="REM" ];
+361 -> 216 [ label="SHL" ];
+361 -> 217 [ label="SHR" ];
+361 -> 218 [ label="AND" ];
+361 -> 219 [ label="AND_NOT" ];
+362 -> 108 [ label="ADD" ];
+362 -> 109 [ label="SUB" ];
+362 -> 114 [ label="NOT" ];
+362 -> 110 [ label="XOR" ];
+362 -> 111 [ label="MUL" ];
+362 -> 112 [ label="AND" ];
+362 -> 116 [ label="IDENT" ];
+362 -> 117 [ label="LPAREN" ];
+362 -> 121 [ label="INT" ];
+362 -> 122 [ label="FLOAT" ];
+362 -> 123 [ label="IMAG" ];
+362 -> 124 [ label="RUNE" ];
+362 -> 125 [ label="STRING" ];
+362 -> 130 [ label="FUNC" ];
+362 -> 65 [ label="STRUCT" ];
+362 -> 64 [ label="LBRACK" ];
+362 -> 66 [ label="MAP" ];
+366 -> 248 [ label="COMMA" ];
+367 -> 420 [ label="ELSE" ];
+368 -> 108 [ label="ADD" ];
+368 -> 109 [ label="SUB" ];
+368 -> 114 [ label="NOT" ];
+368 -> 110 [ label="XOR" ];
+368 -> 111 [ label="MUL" ];
+368 -> 112 [ label="AND" ];
+368 -> 116 [ label="IDENT" ];
+368 -> 117 [ label="LPAREN" ];
+368 -> 121 [ label="INT" ];
+368 -> 122 [ label="FLOAT" ];
+368 -> 123 [ label="IMAG" ];
+368 -> 124 [ label="RUNE" ];
+368 -> 125 [ label="STRING" ];
+368 -> 130 [ label="FUNC" ];
+368 -> 65 [ label="STRUCT" ];
+368 -> 64 [ label="LBRACK" ];
+368 -> 66 [ label="MAP" ];
+372 -> 422 [ label="SEMICOLON" ];
+372 -> 108 [ label="ADD" ];
+372 -> 109 [ label="SUB" ];
+372 -> 114 [ label="NOT" ];
+372 -> 110 [ label="XOR" ];
+372 -> 111 [ label="MUL" ];
+372 -> 112 [ label="AND" ];
+372 -> 116 [ label="IDENT" ];
+372 -> 117 [ label="LPAREN" ];
+372 -> 121 [ label="INT" ];
+372 -> 122 [ label="FLOAT" ];
+372 -> 123 [ label="IMAG" ];
+372 -> 124 [ label="RUNE" ];
+372 -> 125 [ label="STRING" ];
+372 -> 130 [ label="FUNC" ];
+372 -> 65 [ label="STRUCT" ];
+372 -> 64 [ label="LBRACK" ];
+372 -> 66 [ label="MAP" ];
+373 -> 108 [ label="ADD" ];
+373 -> 109 [ label="SUB" ];
+373 -> 114 [ label="NOT" ];
+373 -> 110 [ label="XOR" ];
+373 -> 111 [ label="MUL" ];
+373 -> 112 [ label="AND" ];
+373 -> 116 [ label="IDENT" ];
+373 -> 117 [ label="LPAREN" ];
+373 -> 121 [ label="INT" ];
+373 -> 122 [ label="FLOAT" ];
+373 -> 123 [ label="IMAG" ];
+373 -> 124 [ label="RUNE" ];
+373 -> 125 [ label="STRING" ];
+373 -> 130 [ label="FUNC" ];
+373 -> 65 [ label="STRUCT" ];
+373 -> 64 [ label="LBRACK" ];
+373 -> 66 [ label="MAP" ];
+375 -> 108 [ label="ADD" ];
+375 -> 109 [ label="SUB" ];
+375 -> 114 [ label="NOT" ];
+375 -> 110 [ label="XOR" ];
+375 -> 111 [ label="MUL" ];
+375 -> 112 [ label="AND" ];
+375 -> 116 [ label="IDENT" ];
+375 -> 117 [ label="LPAREN" ];
+375 -> 121 [ label="INT" ];
+375 -> 122 [ label="FLOAT" ];
+375 -> 123 [ label="IMAG" ];
+375 -> 124 [ label="RUNE" ];
+375 -> 125 [ label="STRING" ];
+375 -> 130 [ label="FUNC" ];
+375 -> 65 [ label="STRUCT" ];
+375 -> 64 [ label="LBRACK" ];
+375 -> 66 [ label="MAP" ];
+376 -> 248 [ label="COMMA" ];
+377 -> 427 [ label="LBRACE" ];
+377 -> 429 [ label="IDENT" ];
+377 -> 108 [ label="ADD" ];
+377 -> 109 [ label="SUB" ];
+377 -> 114 [ label="NOT" ];
+377 -> 110 [ label="XOR" ];
+377 -> 111 [ label="MUL" ];
+377 -> 112 [ label="AND" ];
+377 -> 117 [ label="LPAREN" ];
+377 -> 121 [ label="INT" ];
+377 -> 122 [ label="FLOAT" ];
+377 -> 123 [ label="IMAG" ];
+377 -> 124 [ label="RUNE" ];
+377 -> 125 [ label="STRING" ];
+377 -> 130 [ label="FUNC" ];
+377 -> 65 [ label="STRUCT" ];
+377 -> 64 [ label="LBRACK" ];
+377 -> 66 [ label="MAP" ];
+378 -> 382 [ label="CASE" ];
+378 -> 383 [ label="DEFAULT" ];
+379 -> 431 [ label="RBRACE" ];
+380 -> 382 [ label="CASE" ];
+380 -> 383 [ label="DEFAULT" ];
+381 -> 433 [ label="COLON" ];
+382 -> 108 [ label="ADD" ];
+382 -> 109 [ label="SUB" ];
+382 -> 114 [ label="NOT" ];
+382 -> 110 [ label="XOR" ];
+382 -> 111 [ label="MUL" ];
+382 -> 112 [ label="AND" ];
+382 -> 116 [ label="IDENT" ];
+382 -> 117 [ label="LPAREN" ];
+382 -> 121 [ label="INT" ];
+382 -> 122 [ label="FLOAT" ];
+382 -> 123 [ label="IMAG" ];
+382 -> 124 [ label="RUNE" ];
+382 -> 125 [ label="STRING" ];
+382 -> 130 [ label="FUNC" ];
+382 -> 65 [ label="STRUCT" ];
+382 -> 64 [ label="LBRACK" ];
+382 -> 66 [ label="MAP" ];
+384 -> 437 [ label="CASE" ];
+384 -> 438 [ label="DEFAULT" ];
+385 -> 116 [ label="IDENT" ];
+385 -> 117 [ label="LPAREN" ];
+385 -> 121 [ label="INT" ];
+385 -> 122 [ label="FLOAT" ];
+385 -> 123 [ label="IMAG" ];
+385 -> 124 [ label="RUNE" ];
+385 -> 125 [ label="STRING" ];
+385 -> 130 [ label="FUNC" ];
+385 -> 65 [ label="STRUCT" ];
+385 -> 64 [ label="LBRACK" ];
+385 -> 66 [ label="MAP" ];
+386 -> 440 [ label="LPAREN" ];
+386 -> 330 [ label="IDENT" ];
+387 -> 441 [ label="IDENT" ];
+389 -> 248 [ label="COMMA" ];
+393 -> 443 [ label="RBRACK" ];
+393 -> 108 [ label="ADD" ];
+393 -> 109 [ label="SUB" ];
+393 -> 114 [ label="NOT" ];
+393 -> 110 [ label="XOR" ];
+393 -> 111 [ label="MUL" ];
+393 -> 112 [ label="AND" ];
+393 -> 116 [ label="IDENT" ];
+393 -> 117 [ label="LPAREN" ];
+393 -> 121 [ label="INT" ];
+393 -> 122 [ label="FLOAT" ];
+393 -> 123 [ label="IMAG" ];
+393 -> 124 [ label="RUNE" ];
+393 -> 125 [ label="STRING" ];
+393 -> 130 [ label="FUNC" ];
+393 -> 65 [ label="STRUCT" ];
+393 -> 64 [ label="LBRACK" ];
+393 -> 66 [ label="MAP" ];
+394 -> 445 [ label="RBRACK" ];
+394 -> 444 [ label="COLON" ];
+394 -> 201 [ label="LOR" ];
+394 -> 202 [ label="LAND" ];
+394 -> 203 [ label="EQL" ];
+394 -> 204 [ label="NEQ" ];
+394 -> 205 [ label="LSS" ];
+394 -> 206 [ label="LEQ" ];
+394 -> 207 [ label="GTR" ];
+394 -> 208 [ label="GEQ" ];
+394 -> 209 [ label="ADD" ];
+394 -> 210 [ label="SUB" ];
+394 -> 211 [ label="OR" ];
+394 -> 212 [ label="XOR" ];
+394 -> 213 [ label="MUL" ];
+394 -> 214 [ label="QUO" ];
+394 -> 215 [ label="REM" ];
+394 -> 216 [ label="SHL" ];
+394 -> 217 [ label="SHR" ];
+394 -> 218 [ label="AND" ];
+394 -> 219 [ label="AND_NOT" ];
+396 -> 194 [ label="RPAREN" ];
+396 -> 446 [ label="PERIOD" ];
+396 -> 235 [ label="LBRACE" ];
+398 -> 447 [ label="RPAREN" ];
+398 -> 108 [ label="ADD" ];
+398 -> 109 [ label="SUB" ];
+398 -> 114 [ label="NOT" ];
+398 -> 110 [ label="XOR" ];
+398 -> 111 [ label="MUL" ];
+398 -> 112 [ label="AND" ];
+398 -> 116 [ label="IDENT" ];
+398 -> 117 [ label="LPAREN" ];
+398 -> 121 [ label="INT" ];
+398 -> 122 [ label="FLOAT" ];
+398 -> 123 [ label="IMAG" ];
+398 -> 124 [ label="RUNE" ];
+398 -> 125 [ label="STRING" ];
+398 -> 130 [ label="FUNC" ];
+398 -> 65 [ label="STRUCT" ];
+398 -> 64 [ label="LBRACK" ];
+398 -> 66 [ label="MAP" ];
+400 -> 448 [ label="RPAREN" ];
+400 -> 108 [ label="ADD" ];
+400 -> 109 [ label="SUB" ];
+400 -> 114 [ label="NOT" ];
+400 -> 110 [ label="XOR" ];
+400 -> 111 [ label="MUL" ];
+400 -> 112 [ label="AND" ];
+400 -> 116 [ label="IDENT" ];
+400 -> 117 [ label="LPAREN" ];
+400 -> 121 [ label="INT" ];
+400 -> 122 [ label="FLOAT" ];
+400 -> 123 [ label="IMAG" ];
+400 -> 124 [ label="RUNE" ];
+400 -> 125 [ label="STRING" ];
+400 -> 130 [ label="FUNC" ];
+400 -> 65 [ label="STRUCT" ];
+400 -> 64 [ label="LBRACK" ];
+400 -> 66 [ label="MAP" ];
+402 -> 450 [ label="RPAREN" ];
+402 -> 108 [ label="ADD" ];
+402 -> 109 [ label="SUB" ];
+402 -> 114 [ label="NOT" ];
+402 -> 110 [ label="XOR" ];
+402 -> 111 [ label="MUL" ];
+402 -> 112 [ label="AND" ];
+402 -> 116 [ label="IDENT" ];
+402 -> 117 [ label="LPAREN" ];
+402 -> 121 [ label="INT" ];
+402 -> 122 [ label="FLOAT" ];
+402 -> 123 [ label="IMAG" ];
+402 -> 124 [ label="RUNE" ];
+402 -> 125 [ label="STRING" ];
+402 -> 130 [ label="FUNC" ];
+402 -> 65 [ label="STRUCT" ];
+402 -> 64 [ label="LBRACK" ];
+402 -> 66 [ label="MAP" ];
+403 -> 452 [ label="IDENT" ];
+404 -> 83 [ label="LBRACE" ];
+406 -> 453 [ label="RBRACE" ];
+406 -> 235 [ label="LBRACE" ];
+406 -> 108 [ label="ADD" ];
+406 -> 109 [ label="SUB" ];
+406 -> 114 [ label="NOT" ];
+406 -> 110 [ label="XOR" ];
+406 -> 111 [ label="MUL" ];
+406 -> 112 [ label="AND" ];
+406 -> 116 [ label="IDENT" ];
+406 -> 117 [ label="LPAREN" ];
+406 -> 121 [ label="INT" ];
+406 -> 122 [ label="FLOAT" ];
+406 -> 123 [ label="IMAG" ];
+406 -> 124 [ label="RUNE" ];
+406 -> 125 [ label="STRING" ];
+406 -> 130 [ label="FUNC" ];
+406 -> 65 [ label="STRUCT" ];
+406 -> 64 [ label="LBRACK" ];
+406 -> 66 [ label="MAP" ];
+408 -> 235 [ label="LBRACE" ];
+408 -> 108 [ label="ADD" ];
+408 -> 109 [ label="SUB" ];
+408 -> 114 [ label="NOT" ];
+408 -> 110 [ label="XOR" ];
+408 -> 111 [ label="MUL" ];
+408 -> 112 [ label="AND" ];
+408 -> 116 [ label="IDENT" ];
+408 -> 117 [ label="LPAREN" ];
+408 -> 121 [ label="INT" ];
+408 -> 122 [ label="FLOAT" ];
+408 -> 123 [ label="IMAG" ];
+408 -> 124 [ label="RUNE" ];
+408 -> 125 [ label="STRING" ];
+408 -> 130 [ label="FUNC" ];
+408 -> 65 [ label="STRUCT" ];
+408 -> 64 [ label="LBRACK" ];
+408 -> 66 [ label="MAP" ];
+410 -> 414 [ label="STRING" ];
+411 -> 459 [ label="PERIOD" ];
+411 -> 414 [ label="STRING" ];
+412 -> 461 [ label="IDENT" ];
+415 -> 462 [ label="PERIOD" ];
+418 -> 248 [ label="COMMA" ];
+420 -> 174 [ label="IF" ];
+420 -> 83 [ label="LBRACE" ];
+421 -> 201 [ label="LOR" ];
+421 -> 202 [ label="LAND" ];
+421 -> 203 [ label="EQL" ];
+421 -> 204 [ label="NEQ" ];
+421 -> 205 [ label="LSS" ];
+421 -> 206 [ label="LEQ" ];
+421 -> 207 [ label="GTR" ];
+421 -> 208 [ label="GEQ" ];
+421 -> 209 [ label="ADD" ];
+421 -> 210 [ label="SUB" ];
+421 -> 211 [ label="OR" ];
+421 -> 212 [ label="XOR" ];
+421 -> 213 [ label="MUL" ];
+421 -> 214 [ label="QUO" ];
+421 -> 215 [ label="REM" ];
+421 -> 216 [ label="SHL" ];
+421 -> 217 [ label="SHR" ];
+421 -> 218 [ label="AND" ];
+421 -> 219 [ label="AND_NOT" ];
+421 -> 420 [ label="ELSE" ];
+422 -> 292 [ label="IDENT" ];
+422 -> 108 [ label="ADD" ];
+422 -> 109 [ label="SUB" ];
+422 -> 114 [ label="NOT" ];
+422 -> 110 [ label="XOR" ];
+422 -> 111 [ label="MUL" ];
+422 -> 112 [ label="AND" ];
+422 -> 117 [ label="LPAREN" ];
+422 -> 121 [ label="INT" ];
+422 -> 122 [ label="FLOAT" ];
+422 -> 123 [ label="IMAG" ];
+422 -> 124 [ label="RUNE" ];
+422 -> 125 [ label="STRING" ];
+422 -> 130 [ label="FUNC" ];
+422 -> 65 [ label="STRUCT" ];
+422 -> 64 [ label="LBRACK" ];
+422 -> 66 [ label="MAP" ];
+423 -> 468 [ label="SEMICOLON" ];
+424 -> 201 [ label="LOR" ];
+424 -> 202 [ label="LAND" ];
+424 -> 203 [ label="EQL" ];
+424 -> 204 [ label="NEQ" ];
+424 -> 205 [ label="LSS" ];
+424 -> 206 [ label="LEQ" ];
+424 -> 207 [ label="GTR" ];
+424 -> 208 [ label="GEQ" ];
+424 -> 209 [ label="ADD" ];
+424 -> 210 [ label="SUB" ];
+424 -> 211 [ label="OR" ];
+424 -> 212 [ label="XOR" ];
+424 -> 213 [ label="MUL" ];
+424 -> 214 [ label="QUO" ];
+424 -> 215 [ label="REM" ];
+424 -> 216 [ label="SHL" ];
+424 -> 217 [ label="SHR" ];
+424 -> 218 [ label="AND" ];
+424 -> 219 [ label="AND_NOT" ];
+425 -> 201 [ label="LOR" ];
+425 -> 202 [ label="LAND" ];
+425 -> 203 [ label="EQL" ];
+425 -> 204 [ label="NEQ" ];
+425 -> 205 [ label="LSS" ];
+425 -> 206 [ label="LEQ" ];
+425 -> 207 [ label="GTR" ];
+425 -> 208 [ label="GEQ" ];
+425 -> 209 [ label="ADD" ];
+425 -> 210 [ label="SUB" ];
+425 -> 211 [ label="OR" ];
+425 -> 212 [ label="XOR" ];
+425 -> 213 [ label="MUL" ];
+425 -> 214 [ label="QUO" ];
+425 -> 215 [ label="REM" ];
+425 -> 216 [ label="SHL" ];
+425 -> 217 [ label="SHR" ];
+425 -> 218 [ label="AND" ];
+425 -> 219 [ label="AND_NOT" ];
+426 -> 469 [ label="LBRACE" ];
+426 -> 201 [ label="LOR" ];
+426 -> 202 [ label="LAND" ];
+426 -> 203 [ label="EQL" ];
+426 -> 204 [ label="NEQ" ];
+426 -> 205 [ label="LSS" ];
+426 -> 206 [ label="LEQ" ];
+426 -> 207 [ label="GTR" ];
+426 -> 208 [ label="GEQ" ];
+426 -> 209 [ label="ADD" ];
+426 -> 210 [ label="SUB" ];
+426 -> 211 [ label="OR" ];
+426 -> 212 [ label="XOR" ];
+426 -> 213 [ label="MUL" ];
+426 -> 214 [ label="QUO" ];
+426 -> 215 [ label="REM" ];
+426 -> 216 [ label="SHL" ];
+426 -> 217 [ label="SHR" ];
+426 -> 218 [ label="AND" ];
+426 -> 219 [ label="AND_NOT" ];
+427 -> 382 [ label="CASE" ];
+427 -> 383 [ label="DEFAULT" ];
+428 -> 471 [ label="LBRACE" ];
+429 -> 385 [ label="DEFINE" ];
+429 -> 233 [ label="PERIOD" ];
+430 -> 472 [ label="RBRACE" ];
+433 -> 168 [ label="GOTO" ];
+433 -> 169 [ label="RETURN" ];
+433 -> 171 [ label="BREAK" ];
+433 -> 172 [ label="CONTINUE" ];
+433 -> 173 [ label="FALLTHROUGH" ];
+433 -> 83 [ label="LBRACE" ];
+433 -> 174 [ label="IF" ];
+433 -> 178 [ label="FOR" ];
+433 -> 17 [ label="CONST" ];
+433 -> 18 [ label="VAR" ];
+433 -> 19 [ label="TYPE" ];
+433 -> 179 [ label="IDENT" ];
+433 -> 181 [ label="SWITCH" ];
+433 -> 108 [ label="ADD" ];
+433 -> 109 [ label="SUB" ];
+433 -> 114 [ label="NOT" ];
+433 -> 110 [ label="XOR" ];
+433 -> 111 [ label="MUL" ];
+433 -> 112 [ label="AND" ];
+433 -> 117 [ label="LPAREN" ];
+433 -> 121 [ label="INT" ];
+433 -> 122 [ label="FLOAT" ];
+433 -> 123 [ label="IMAG" ];
+433 -> 124 [ label="RUNE" ];
+433 -> 125 [ label="STRING" ];
+433 -> 130 [ label="FUNC" ];
+433 -> 65 [ label="STRUCT" ];
+433 -> 64 [ label="LBRACK" ];
+433 -> 66 [ label="MAP" ];
+434 -> 248 [ label="COMMA" ];
+435 -> 474 [ label="RBRACE" ];
+436 -> 437 [ label="CASE" ];
+436 -> 438 [ label="DEFAULT" ];
+437 -> 478 [ label="IDENT" ];
+437 -> 57 [ label="LPAREN" ];
+437 -> 63 [ label="MUL" ];
+437 -> 64 [ label="LBRACK" ];
+437 -> 65 [ label="STRUCT" ];
+437 -> 66 [ label="MAP" ];
+437 -> 67 [ label="FUNC" ];
+438 -> 479 [ label="COLON" ];
+439 -> 480 [ label="PERIOD" ];
+439 -> 230 [ label="LBRACK" ];
+439 -> 231 [ label="LPAREN" ];
+440 -> 481 [ label="TYPE" ];
+442 -> 483 [ label="RBRACK" ];
+442 -> 482 [ label="COLON" ];
+442 -> 201 [ label="LOR" ];
+442 -> 202 [ label="LAND" ];
+442 -> 203 [ label="EQL" ];
+442 -> 204 [ label="NEQ" ];
+442 -> 205 [ label="LSS" ];
+442 -> 206 [ label="LEQ" ];
+442 -> 207 [ label="GTR" ];
+442 -> 208 [ label="GEQ" ];
+442 -> 209 [ label="ADD" ];
+442 -> 210 [ label="SUB" ];
+442 -> 211 [ label="OR" ];
+442 -> 212 [ label="XOR" ];
+442 -> 213 [ label="MUL" ];
+442 -> 214 [ label="QUO" ];
+442 -> 215 [ label="REM" ];
+442 -> 216 [ label="SHL" ];
+442 -> 217 [ label="SHR" ];
+442 -> 218 [ label="AND" ];
+442 -> 219 [ label="AND_NOT" ];
+444 -> 108 [ label="ADD" ];
+444 -> 109 [ label="SUB" ];
+444 -> 114 [ label="NOT" ];
+444 -> 110 [ label="XOR" ];
+444 -> 111 [ label="MUL" ];
+444 -> 112 [ label="AND" ];
+444 -> 116 [ label="IDENT" ];
+444 -> 117 [ label="LPAREN" ];
+444 -> 121 [ label="INT" ];
+444 -> 122 [ label="FLOAT" ];
+444 -> 123 [ label="IMAG" ];
+444 -> 124 [ label="RUNE" ];
+444 -> 125 [ label="STRING" ];
+444 -> 130 [ label="FUNC" ];
+444 -> 65 [ label="STRUCT" ];
+444 -> 64 [ label="LBRACK" ];
+444 -> 66 [ label="MAP" ];
+446 -> 485 [ label="IDENT" ];
+449 -> 487 [ label="RPAREN" ];
+449 -> 486 [ label="COMMA" ];
+451 -> 489 [ label="RPAREN" ];
+451 -> 488 [ label="COMMA" ];
+452 -> 490 [ label="RPAREN" ];
+452 -> 491 [ label="COMMA" ];
+452 -> 235 [ label="LBRACE" ];
+456 -> 201 [ label="LOR" ];
+456 -> 202 [ label="LAND" ];
+456 -> 203 [ label="EQL" ];
+456 -> 204 [ label="NEQ" ];
+456 -> 205 [ label="LSS" ];
+456 -> 206 [ label="LEQ" ];
+456 -> 207 [ label="GTR" ];
+456 -> 208 [ label="GEQ" ];
+456 -> 209 [ label="ADD" ];
+456 -> 210 [ label="SUB" ];
+456 -> 211 [ label="OR" ];
+456 -> 212 [ label="XOR" ];
+456 -> 213 [ label="MUL" ];
+456 -> 214 [ label="QUO" ];
+456 -> 215 [ label="REM" ];
+456 -> 216 [ label="SHL" ];
+456 -> 217 [ label="SHR" ];
+456 -> 218 [ label="AND" ];
+456 -> 219 [ label="AND_NOT" ];
+459 -> 492 [ label="IDENT" ];
+462 -> 493 [ label="IDENT" ];
+468 -> 292 [ label="IDENT" ];
+468 -> 108 [ label="ADD" ];
+468 -> 109 [ label="SUB" ];
+468 -> 114 [ label="NOT" ];
+468 -> 110 [ label="XOR" ];
+468 -> 111 [ label="MUL" ];
+468 -> 112 [ label="AND" ];
+468 -> 117 [ label="LPAREN" ];
+468 -> 121 [ label="INT" ];
+468 -> 122 [ label="FLOAT" ];
+468 -> 123 [ label="IMAG" ];
+468 -> 124 [ label="RUNE" ];
+468 -> 125 [ label="STRING" ];
+468 -> 130 [ label="FUNC" ];
+468 -> 65 [ label="STRUCT" ];
+468 -> 64 [ label="LBRACK" ];
+468 -> 66 [ label="MAP" ];
+469 -> 382 [ label="CASE" ];
+469 -> 383 [ label="DEFAULT" ];
+470 -> 496 [ label="RBRACE" ];
+471 -> 437 [ label="CASE" ];
+471 -> 438 [ label="DEFAULT" ];
+476 -> 498 [ label="COLON" ];
+477 -> 499 [ label="COMMA" ];
+478 -> 500 [ label="PERIOD" ];
+478 -> 501 [ label="COMMA" ];
+479 -> 168 [ label="GOTO" ];
+479 -> 169 [ label="RETURN" ];
+479 -> 171 [ label="BREAK" ];
+479 -> 172 [ label="CONTINUE" ];
+479 -> 173 [ label="FALLTHROUGH" ];
+479 -> 83 [ label="LBRACE" ];
+479 -> 174 [ label="IF" ];
+479 -> 178 [ label="FOR" ];
+479 -> 17 [ label="CONST" ];
+479 -> 18 [ label="VAR" ];
+479 -> 19 [ label="TYPE" ];
+479 -> 179 [ label="IDENT" ];
+479 -> 181 [ label="SWITCH" ];
+479 -> 108 [ label="ADD" ];
+479 -> 109 [ label="SUB" ];
+479 -> 114 [ label="NOT" ];
+479 -> 110 [ label="XOR" ];
+479 -> 111 [ label="MUL" ];
+479 -> 112 [ label="AND" ];
+479 -> 117 [ label="LPAREN" ];
+479 -> 121 [ label="INT" ];
+479 -> 122 [ label="FLOAT" ];
+479 -> 123 [ label="IMAG" ];
+479 -> 124 [ label="RUNE" ];
+479 -> 125 [ label="STRING" ];
+479 -> 130 [ label="FUNC" ];
+479 -> 65 [ label="STRUCT" ];
+479 -> 64 [ label="LBRACK" ];
+479 -> 66 [ label="MAP" ];
+480 -> 503 [ label="LPAREN" ];
+480 -> 330 [ label="IDENT" ];
+481 -> 504 [ label="RPAREN" ];
+482 -> 108 [ label="ADD" ];
+482 -> 109 [ label="SUB" ];
+482 -> 114 [ label="NOT" ];
+482 -> 110 [ label="XOR" ];
+482 -> 111 [ label="MUL" ];
+482 -> 112 [ label="AND" ];
+482 -> 116 [ label="IDENT" ];
+482 -> 117 [ label="LPAREN" ];
+482 -> 121 [ label="INT" ];
+482 -> 122 [ label="FLOAT" ];
+482 -> 123 [ label="IMAG" ];
+482 -> 124 [ label="RUNE" ];
+482 -> 125 [ label="STRING" ];
+482 -> 130 [ label="FUNC" ];
+482 -> 65 [ label="STRUCT" ];
+482 -> 64 [ label="LBRACK" ];
+482 -> 66 [ label="MAP" ];
+484 -> 506 [ label="RBRACK" ];
+484 -> 201 [ label="LOR" ];
+484 -> 202 [ label="LAND" ];
+484 -> 203 [ label="EQL" ];
+484 -> 204 [ label="NEQ" ];
+484 -> 205 [ label="LSS" ];
+484 -> 206 [ label="LEQ" ];
+484 -> 207 [ label="GTR" ];
+484 -> 208 [ label="GEQ" ];
+484 -> 209 [ label="ADD" ];
+484 -> 210 [ label="SUB" ];
+484 -> 211 [ label="OR" ];
+484 -> 212 [ label="XOR" ];
+484 -> 213 [ label="MUL" ];
+484 -> 214 [ label="QUO" ];
+484 -> 215 [ label="REM" ];
+484 -> 216 [ label="SHL" ];
+484 -> 217 [ label="SHR" ];
+484 -> 218 [ label="AND" ];
+484 -> 219 [ label="AND_NOT" ];
+485 -> 390 [ label="RPAREN" ];
+485 -> 235 [ label="LBRACE" ];
+486 -> 507 [ label="RPAREN" ];
+486 -> 108 [ label="ADD" ];
+486 -> 109 [ label="SUB" ];
+486 -> 114 [ label="NOT" ];
+486 -> 110 [ label="XOR" ];
+486 -> 111 [ label="MUL" ];
+486 -> 112 [ label="AND" ];
+486 -> 116 [ label="IDENT" ];
+486 -> 117 [ label="LPAREN" ];
+486 -> 121 [ label="INT" ];
+486 -> 122 [ label="FLOAT" ];
+486 -> 123 [ label="IMAG" ];
+486 -> 124 [ label="RUNE" ];
+486 -> 125 [ label="STRING" ];
+486 -> 130 [ label="FUNC" ];
+486 -> 65 [ label="STRUCT" ];
+486 -> 64 [ label="LBRACK" ];
+486 -> 66 [ label="MAP" ];
+488 -> 508 [ label="RPAREN" ];
+488 -> 108 [ label="ADD" ];
+488 -> 109 [ label="SUB" ];
+488 -> 114 [ label="NOT" ];
+488 -> 110 [ label="XOR" ];
+488 -> 111 [ label="MUL" ];
+488 -> 112 [ label="AND" ];
+488 -> 116 [ label="IDENT" ];
+488 -> 117 [ label="LPAREN" ];
+488 -> 121 [ label="INT" ];
+488 -> 122 [ label="FLOAT" ];
+488 -> 123 [ label="IMAG" ];
+488 -> 124 [ label="RUNE" ];
+488 -> 125 [ label="STRING" ];
+488 -> 130 [ label="FUNC" ];
+488 -> 65 [ label="STRUCT" ];
+488 -> 64 [ label="LBRACK" ];
+488 -> 66 [ label="MAP" ];
+491 -> 509 [ label="RPAREN" ];
+491 -> 108 [ label="ADD" ];
+491 -> 109 [ label="SUB" ];
+491 -> 114 [ label="NOT" ];
+491 -> 110 [ label="XOR" ];
+491 -> 111 [ label="MUL" ];
+491 -> 112 [ label="AND" ];
+491 -> 116 [ label="IDENT" ];
+491 -> 117 [ label="LPAREN" ];
+491 -> 121 [ label="INT" ];
+491 -> 122 [ label="FLOAT" ];
+491 -> 123 [ label="IMAG" ];
+491 -> 124 [ label="RUNE" ];
+491 -> 125 [ label="STRING" ];
+491 -> 130 [ label="FUNC" ];
+491 -> 65 [ label="STRUCT" ];
+491 -> 64 [ label="LBRACK" ];
+491 -> 66 [ label="MAP" ];
+492 -> 414 [ label="STRING" ];
+495 -> 512 [ label="RBRACE" ];
+497 -> 513 [ label="RBRACE" ];
+498 -> 168 [ label="GOTO" ];
+498 -> 169 [ label="RETURN" ];
+498 -> 171 [ label="BREAK" ];
+498 -> 172 [ label="CONTINUE" ];
+498 -> 173 [ label="FALLTHROUGH" ];
+498 -> 83 [ label="LBRACE" ];
+498 -> 174 [ label="IF" ];
+498 -> 178 [ label="FOR" ];
+498 -> 17 [ label="CONST" ];
+498 -> 18 [ label="VAR" ];
+498 -> 19 [ label="TYPE" ];
+498 -> 179 [ label="IDENT" ];
+498 -> 181 [ label="SWITCH" ];
+498 -> 108 [ label="ADD" ];
+498 -> 109 [ label="SUB" ];
+498 -> 114 [ label="NOT" ];
+498 -> 110 [ label="XOR" ];
+498 -> 111 [ label="MUL" ];
+498 -> 112 [ label="AND" ];
+498 -> 117 [ label="LPAREN" ];
+498 -> 121 [ label="INT" ];
+498 -> 122 [ label="FLOAT" ];
+498 -> 123 [ label="IMAG" ];
+498 -> 124 [ label="RUNE" ];
+498 -> 125 [ label="STRING" ];
+498 -> 130 [ label="FUNC" ];
+498 -> 65 [ label="STRUCT" ];
+498 -> 64 [ label="LBRACK" ];
+498 -> 66 [ label="MAP" ];
+499 -> 478 [ label="IDENT" ];
+499 -> 57 [ label="LPAREN" ];
+499 -> 63 [ label="MUL" ];
+499 -> 64 [ label="LBRACK" ];
+499 -> 65 [ label="STRUCT" ];
+499 -> 66 [ label="MAP" ];
+499 -> 67 [ label="FUNC" ];
+500 -> 516 [ label="IDENT" ];
+501 -> 478 [ label="IDENT" ];
+501 -> 57 [ label="LPAREN" ];
+501 -> 63 [ label="MUL" ];
+501 -> 64 [ label="LBRACK" ];
+501 -> 65 [ label="STRUCT" ];
+501 -> 66 [ label="MAP" ];
+501 -> 67 [ label="FUNC" ];
+503 -> 518 [ label="TYPE" ];
+505 -> 519 [ label="RBRACK" ];
+505 -> 201 [ label="LOR" ];
+505 -> 202 [ label="LAND" ];
+505 -> 203 [ label="EQL" ];
+505 -> 204 [ label="NEQ" ];
+505 -> 205 [ label="LSS" ];
+505 -> 206 [ label="LEQ" ];
+505 -> 207 [ label="GTR" ];
+505 -> 208 [ label="GEQ" ];
+505 -> 209 [ label="ADD" ];
+505 -> 210 [ label="SUB" ];
+505 -> 211 [ label="OR" ];
+505 -> 212 [ label="XOR" ];
+505 -> 213 [ label="MUL" ];
+505 -> 214 [ label="QUO" ];
+505 -> 215 [ label="REM" ];
+505 -> 216 [ label="SHL" ];
+505 -> 217 [ label="SHR" ];
+505 -> 218 [ label="AND" ];
+505 -> 219 [ label="AND_NOT" ];
+510 -> 521 [ label="RPAREN" ];
+510 -> 520 [ label="COMMA" ];
+516 -> 522 [ label="COMMA" ];
+518 -> 523 [ label="RPAREN" ];
+520 -> 524 [ label="RPAREN" ];
+520 -> 108 [ label="ADD" ];
+520 -> 109 [ label="SUB" ];
+520 -> 114 [ label="NOT" ];
+520 -> 110 [ label="XOR" ];
+520 -> 111 [ label="MUL" ];
+520 -> 112 [ label="AND" ];
+520 -> 116 [ label="IDENT" ];
+520 -> 117 [ label="LPAREN" ];
+520 -> 121 [ label="INT" ];
+520 -> 122 [ label="FLOAT" ];
+520 -> 123 [ label="IMAG" ];
+520 -> 124 [ label="RUNE" ];
+520 -> 125 [ label="STRING" ];
+520 -> 130 [ label="FUNC" ];
+520 -> 65 [ label="STRUCT" ];
+520 -> 64 [ label="LBRACK" ];
+520 -> 66 [ label="MAP" ];
+522 -> 478 [ label="IDENT" ];
+522 -> 57 [ label="LPAREN" ];
+522 -> 63 [ label="MUL" ];
+522 -> 64 [ label="LBRACK" ];
+522 -> 65 [ label="STRUCT" ];
+522 -> 66 [ label="MAP" ];
+522 -> 67 [ label="FUNC" ];
+0 -> 1 [ label="SourceFile" ];
+0 -> 2 [ label="PackageClause" ];
+4 -> 6 [ label="ImportDeclMult" ];
+4 -> 7 [ label="ImportDecl" ];
+6 -> 9 [ label="TopLevelDeclMult" ];
+6 -> 10 [ label="TopLevelDecl" ];
+6 -> 11 [ label="Decl" ];
+6 -> 12 [ label="FuncDecl" ];
+6 -> 13 [ label="ConstDecl" ];
+6 -> 14 [ label="VarDecl" ];
+6 -> 15 [ label="TypeDecl" ];
+8 -> 21 [ label="ImportSpec" ];
+8 -> 24 [ label="ImportPath" ];
+16 -> 28 [ label="FunctionName" ];
+17 -> 30 [ label="ConstSpec" ];
+17 -> 32 [ label="IdentifierList" ];
+18 -> 34 [ label="VarSpec" ];
+18 -> 36 [ label="IdentifierList" ];
+19 -> 37 [ label="TypeSpec" ];
+19 -> 39 [ label="AliasDecl" ];
+19 -> 40 [ label="Typedef" ];
+20 -> 7 [ label="ImportDecl" ];
+20 -> 42 [ label="ImportDeclMult" ];
+22 -> 43 [ label="ImportSpecMult" ];
+22 -> 44 [ label="ImportSpec" ];
+22 -> 24 [ label="ImportPath" ];
+23 -> 45 [ label="ImportPath" ];
+25 -> 46 [ label="ImportPath" ];
+27 -> 10 [ label="TopLevelDecl" ];
+27 -> 47 [ label="TopLevelDeclMult" ];
+27 -> 11 [ label="Decl" ];
+27 -> 12 [ label="FuncDecl" ];
+27 -> 13 [ label="ConstDecl" ];
+27 -> 14 [ label="VarDecl" ];
+27 -> 15 [ label="TypeDecl" ];
+28 -> 48 [ label="Signature" ];
+28 -> 49 [ label="Parameters" ];
+31 -> 51 [ label="ConstSpecMult" ];
+31 -> 52 [ label="ConstSpec" ];
+31 -> 32 [ label="IdentifierList" ];
+32 -> 53 [ label="Type" ];
+32 -> 55 [ label="TypeT" ];
+32 -> 56 [ label="PointerType" ];
+32 -> 58 [ label="ArrayType" ];
+32 -> 59 [ label="StructType" ];
+32 -> 60 [ label="SliceType" ];
+32 -> 61 [ label="MapType" ];
+32 -> 62 [ label="FunctionType" ];
+35 -> 69 [ label="VarMult" ];
+35 -> 70 [ label="VarSpec" ];
+35 -> 36 [ label="IdentifierList" ];
+36 -> 71 [ label="Type" ];
+36 -> 55 [ label="TypeT" ];
+36 -> 56 [ label="PointerType" ];
+36 -> 58 [ label="ArrayType" ];
+36 -> 59 [ label="StructType" ];
+36 -> 60 [ label="SliceType" ];
+36 -> 61 [ label="MapType" ];
+36 -> 62 [ label="FunctionType" ];
+38 -> 74 [ label="TypeSpecMult" ];
+38 -> 75 [ label="TypeSpec" ];
+38 -> 39 [ label="AliasDecl" ];
+38 -> 40 [ label="Typedef" ];
+41 -> 78 [ label="Type" ];
+41 -> 55 [ label="TypeT" ];
+41 -> 56 [ label="PointerType" ];
+41 -> 58 [ label="ArrayType" ];
+41 -> 59 [ label="StructType" ];
+41 -> 60 [ label="SliceType" ];
+41 -> 61 [ label="MapType" ];
+41 -> 62 [ label="FunctionType" ];
+48 -> 81 [ label="FunctionBody" ];
+48 -> 82 [ label="Block" ];
+49 -> 84 [ label="Parameters" ];
+49 -> 85 [ label="Result" ];
+49 -> 86 [ label="Type" ];
+49 -> 55 [ label="TypeT" ];
+49 -> 56 [ label="PointerType" ];
+49 -> 58 [ label="ArrayType" ];
+49 -> 59 [ label="StructType" ];
+49 -> 60 [ label="SliceType" ];
+49 -> 61 [ label="MapType" ];
+49 -> 62 [ label="FunctionType" ];
+50 -> 90 [ label="ParameterList" ];
+50 -> 91 [ label="ParameterDecl" ];
+50 -> 92 [ label="IdentifierList" ];
+57 -> 99 [ label="PointerType" ];
+57 -> 100 [ label="TypeT" ];
+57 -> 58 [ label="ArrayType" ];
+57 -> 59 [ label="StructType" ];
+57 -> 60 [ label="SliceType" ];
+57 -> 61 [ label="MapType" ];
+57 -> 62 [ label="FunctionType" ];
+63 -> 102 [ label="Type" ];
+63 -> 55 [ label="TypeT" ];
+63 -> 56 [ label="PointerType" ];
+63 -> 58 [ label="ArrayType" ];
+63 -> 59 [ label="StructType" ];
+63 -> 60 [ label="SliceType" ];
+63 -> 61 [ label="MapType" ];
+63 -> 62 [ label="FunctionType" ];
+64 -> 104 [ label="ArrayLength" ];
+64 -> 106 [ label="Expr" ];
+64 -> 107 [ label="UnaryExpr" ];
+64 -> 113 [ label="PrimaryExpr" ];
+64 -> 115 [ label="Lit" ];
+64 -> 118 [ label="BasicLit" ];
+64 -> 119 [ label="CompositeLit" ];
+64 -> 120 [ label="FunctionLit" ];
+64 -> 126 [ label="StructType" ];
+64 -> 127 [ label="ArrayType" ];
+64 -> 128 [ label="SliceType" ];
+64 -> 129 [ label="MapType" ];
+67 -> 133 [ label="Signature" ];
+67 -> 49 [ label="Parameters" ];
+68 -> 134 [ label="IdentifierList" ];
+72 -> 138 [ label="ExpressionList" ];
+72 -> 139 [ label="Expr" ];
+72 -> 107 [ label="UnaryExpr" ];
+72 -> 113 [ label="PrimaryExpr" ];
+72 -> 115 [ label="Lit" ];
+72 -> 118 [ label="BasicLit" ];
+72 -> 119 [ label="CompositeLit" ];
+72 -> 120 [ label="FunctionLit" ];
+72 -> 126 [ label="StructType" ];
+72 -> 127 [ label="ArrayType" ];
+72 -> 128 [ label="SliceType" ];
+72 -> 129 [ label="MapType" ];
+77 -> 146 [ label="Type" ];
+77 -> 55 [ label="TypeT" ];
+77 -> 56 [ label="PointerType" ];
+77 -> 58 [ label="ArrayType" ];
+77 -> 59 [ label="StructType" ];
+77 -> 60 [ label="SliceType" ];
+77 -> 61 [ label="MapType" ];
+77 -> 62 [ label="FunctionType" ];
+80 -> 44 [ label="ImportSpec" ];
+80 -> 147 [ label="ImportSpecMult" ];
+80 -> 24 [ label="ImportPath" ];
+83 -> 148 [ label="StatementList" ];
+83 -> 149 [ label="Statement" ];
+83 -> 150 [ label="Decl" ];
+83 -> 151 [ label="LabeledStmt" ];
+83 -> 152 [ label="SimpleStmt" ];
+83 -> 153 [ label="GotoStmt" ];
+83 -> 154 [ label="ReturnStmt" ];
+83 -> 155 [ label="BreakStmt" ];
+83 -> 156 [ label="ContinueStmt" ];
+83 -> 157 [ label="FallthroughStmt" ];
+83 -> 158 [ label="Block" ];
+83 -> 159 [ label="IfStmt" ];
+83 -> 160 [ label="SwitchStmt" ];
+83 -> 161 [ label="ForStmt" ];
+83 -> 13 [ label="ConstDecl" ];
+83 -> 14 [ label="VarDecl" ];
+83 -> 15 [ label="TypeDecl" ];
+83 -> 162 [ label="Label" ];
+83 -> 163 [ label="EmptyStmt" ];
+83 -> 164 [ label="ExpressionStmt" ];
+83 -> 165 [ label="IncDecStmt" ];
+83 -> 166 [ label="Assignment" ];
+83 -> 167 [ label="ShortVarDecl" ];
+83 -> 170 [ label="ExpressionList" ];
+83 -> 175 [ label="Expr" ];
+83 -> 176 [ label="ExprSwitchStmt" ];
+83 -> 177 [ label="TypeSwitchStmt" ];
+83 -> 180 [ label="IdentifierList" ];
+83 -> 107 [ label="UnaryExpr" ];
+83 -> 113 [ label="PrimaryExpr" ];
+83 -> 115 [ label="Lit" ];
+83 -> 118 [ label="BasicLit" ];
+83 -> 119 [ label="CompositeLit" ];
+83 -> 120 [ label="FunctionLit" ];
+83 -> 126 [ label="StructType" ];
+83 -> 127 [ label="ArrayType" ];
+83 -> 128 [ label="SliceType" ];
+83 -> 129 [ label="MapType" ];
+88 -> 90 [ label="ParameterList" ];
+88 -> 99 [ label="PointerType" ];
+88 -> 100 [ label="TypeT" ];
+88 -> 91 [ label="ParameterDecl" ];
+88 -> 58 [ label="ArrayType" ];
+88 -> 59 [ label="StructType" ];
+88 -> 60 [ label="SliceType" ];
+88 -> 61 [ label="MapType" ];
+88 -> 62 [ label="FunctionType" ];
+88 -> 92 [ label="IdentifierList" ];
+92 -> 186 [ label="Type" ];
+92 -> 55 [ label="TypeT" ];
+92 -> 56 [ label="PointerType" ];
+92 -> 58 [ label="ArrayType" ];
+92 -> 59 [ label="StructType" ];
+92 -> 60 [ label="SliceType" ];
+92 -> 61 [ label="MapType" ];
+92 -> 62 [ label="FunctionType" ];
+94 -> 52 [ label="ConstSpec" ];
+94 -> 188 [ label="ConstSpecMult" ];
+94 -> 32 [ label="IdentifierList" ];
+95 -> 189 [ label="ExpressionList" ];
+95 -> 139 [ label="Expr" ];
+95 -> 107 [ label="UnaryExpr" ];
+95 -> 113 [ label="PrimaryExpr" ];
+95 -> 115 [ label="Lit" ];
+95 -> 118 [ label="BasicLit" ];
+95 -> 119 [ label="CompositeLit" ];
+95 -> 120 [ label="FunctionLit" ];
+95 -> 126 [ label="StructType" ];
+95 -> 127 [ label="ArrayType" ];
+95 -> 128 [ label="SliceType" ];
+95 -> 129 [ label="MapType" ];
+96 -> 190 [ label="ExpressionList" ];
+96 -> 139 [ label="Expr" ];
+96 -> 107 [ label="UnaryExpr" ];
+96 -> 113 [ label="PrimaryExpr" ];
+96 -> 115 [ label="Lit" ];
+96 -> 118 [ label="BasicLit" ];
+96 -> 119 [ label="CompositeLit" ];
+96 -> 120 [ label="FunctionLit" ];
+96 -> 126 [ label="StructType" ];
+96 -> 127 [ label="ArrayType" ];
+96 -> 128 [ label="SliceType" ];
+96 -> 129 [ label="MapType" ];
+98 -> 100 [ label="TypeT" ];
+98 -> 58 [ label="ArrayType" ];
+98 -> 59 [ label="StructType" ];
+98 -> 60 [ label="SliceType" ];
+98 -> 61 [ label="MapType" ];
+98 -> 62 [ label="FunctionType" ];
+105 -> 198 [ label="ElementType" ];
+105 -> 199 [ label="Type" ];
+105 -> 55 [ label="TypeT" ];
+105 -> 56 [ label="PointerType" ];
+105 -> 58 [ label="ArrayType" ];
+105 -> 59 [ label="StructType" ];
+105 -> 60 [ label="SliceType" ];
+105 -> 61 [ label="MapType" ];
+105 -> 62 [ label="FunctionType" ];
+108 -> 220 [ label="UnaryExpr" ];
+108 -> 113 [ label="PrimaryExpr" ];
+108 -> 115 [ label="Lit" ];
+108 -> 118 [ label="BasicLit" ];
+108 -> 119 [ label="CompositeLit" ];
+108 -> 120 [ label="FunctionLit" ];
+108 -> 126 [ label="StructType" ];
+108 -> 127 [ label="ArrayType" ];
+108 -> 128 [ label="SliceType" ];
+108 -> 129 [ label="MapType" ];
+109 -> 221 [ label="UnaryExpr" ];
+109 -> 113 [ label="PrimaryExpr" ];
+109 -> 115 [ label="Lit" ];
+109 -> 118 [ label="BasicLit" ];
+109 -> 119 [ label="CompositeLit" ];
+109 -> 120 [ label="FunctionLit" ];
+109 -> 126 [ label="StructType" ];
+109 -> 127 [ label="ArrayType" ];
+109 -> 128 [ label="SliceType" ];
+109 -> 129 [ label="MapType" ];
+110 -> 222 [ label="UnaryExpr" ];
+110 -> 113 [ label="PrimaryExpr" ];
+110 -> 115 [ label="Lit" ];
+110 -> 118 [ label="BasicLit" ];
+110 -> 119 [ label="CompositeLit" ];
+110 -> 120 [ label="FunctionLit" ];
+110 -> 126 [ label="StructType" ];
+110 -> 127 [ label="ArrayType" ];
+110 -> 128 [ label="SliceType" ];
+110 -> 129 [ label="MapType" ];
+111 -> 223 [ label="UnaryExpr" ];
+111 -> 113 [ label="PrimaryExpr" ];
+111 -> 115 [ label="Lit" ];
+111 -> 118 [ label="BasicLit" ];
+111 -> 119 [ label="CompositeLit" ];
+111 -> 120 [ label="FunctionLit" ];
+111 -> 126 [ label="StructType" ];
+111 -> 127 [ label="ArrayType" ];
+111 -> 128 [ label="SliceType" ];
+111 -> 129 [ label="MapType" ];
+112 -> 224 [ label="UnaryExpr" ];
+112 -> 113 [ label="PrimaryExpr" ];
+112 -> 115 [ label="Lit" ];
+112 -> 118 [ label="BasicLit" ];
+112 -> 119 [ label="CompositeLit" ];
+112 -> 120 [ label="FunctionLit" ];
+112 -> 126 [ label="StructType" ];
+112 -> 127 [ label="ArrayType" ];
+112 -> 128 [ label="SliceType" ];
+112 -> 129 [ label="MapType" ];
+113 -> 225 [ label="Selector" ];
+113 -> 226 [ label="Index" ];
+113 -> 227 [ label="Slice" ];
+113 -> 228 [ label="Arguments" ];
+114 -> 232 [ label="UnaryExpr" ];
+114 -> 113 [ label="PrimaryExpr" ];
+114 -> 115 [ label="Lit" ];
+114 -> 118 [ label="BasicLit" ];
+114 -> 119 [ label="CompositeLit" ];
+114 -> 120 [ label="FunctionLit" ];
+114 -> 126 [ label="StructType" ];
+114 -> 127 [ label="ArrayType" ];
+114 -> 128 [ label="SliceType" ];
+114 -> 129 [ label="MapType" ];
+116 -> 234 [ label="LiteralValue" ];
+117 -> 236 [ label="Expr" ];
+117 -> 107 [ label="UnaryExpr" ];
+117 -> 113 [ label="PrimaryExpr" ];
+117 -> 115 [ label="Lit" ];
+117 -> 118 [ label="BasicLit" ];
+117 -> 119 [ label="CompositeLit" ];
+117 -> 120 [ label="FunctionLit" ];
+117 -> 126 [ label="StructType" ];
+117 -> 127 [ label="ArrayType" ];
+117 -> 128 [ label="SliceType" ];
+117 -> 129 [ label="MapType" ];
+126 -> 237 [ label="Arguments" ];
+127 -> 238 [ label="LiteralValue" ];
+128 -> 239 [ label="LiteralValue" ];
+129 -> 240 [ label="LiteralValue" ];
+130 -> 241 [ label="Signature" ];
+130 -> 49 [ label="Parameters" ];
+131 -> 242 [ label="FieldDeclMult" ];
+132 -> 243 [ label="KeyType" ];
+132 -> 244 [ label="Type" ];
+132 -> 55 [ label="TypeT" ];
+132 -> 56 [ label="PointerType" ];
+132 -> 58 [ label="ArrayType" ];
+132 -> 59 [ label="StructType" ];
+132 -> 60 [ label="SliceType" ];
+132 -> 61 [ label="MapType" ];
+132 -> 62 [ label="FunctionType" ];
+136 -> 70 [ label="VarSpec" ];
+136 -> 246 [ label="VarMult" ];
+136 -> 36 [ label="IdentifierList" ];
+137 -> 247 [ label="ExpressionList" ];
+137 -> 139 [ label="Expr" ];
+137 -> 107 [ label="UnaryExpr" ];
+137 -> 113 [ label="PrimaryExpr" ];
+137 -> 115 [ label="Lit" ];
+137 -> 118 [ label="BasicLit" ];
+137 -> 119 [ label="CompositeLit" ];
+137 -> 120 [ label="FunctionLit" ];
+137 -> 126 [ label="StructType" ];
+137 -> 127 [ label="ArrayType" ];
+137 -> 128 [ label="SliceType" ];
+137 -> 129 [ label="MapType" ];
+140 -> 249 [ label="ExpressionList" ];
+140 -> 139 [ label="Expr" ];
+140 -> 107 [ label="UnaryExpr" ];
+140 -> 113 [ label="PrimaryExpr" ];
+140 -> 115 [ label="Lit" ];
+140 -> 118 [ label="BasicLit" ];
+140 -> 119 [ label="CompositeLit" ];
+140 -> 120 [ label="FunctionLit" ];
+140 -> 126 [ label="StructType" ];
+140 -> 127 [ label="ArrayType" ];
+140 -> 128 [ label="SliceType" ];
+140 -> 129 [ label="MapType" ];
+143 -> 75 [ label="TypeSpec" ];
+143 -> 251 [ label="TypeSpecMult" ];
+143 -> 39 [ label="AliasDecl" ];
+143 -> 40 [ label="Typedef" ];
+168 -> 257 [ label="Label" ];
+169 -> 259 [ label="ExpressionList" ];
+169 -> 139 [ label="Expr" ];
+169 -> 107 [ label="UnaryExpr" ];
+169 -> 113 [ label="PrimaryExpr" ];
+169 -> 115 [ label="Lit" ];
+169 -> 118 [ label="BasicLit" ];
+169 -> 119 [ label="CompositeLit" ];
+169 -> 120 [ label="FunctionLit" ];
+169 -> 126 [ label="StructType" ];
+169 -> 127 [ label="ArrayType" ];
+169 -> 128 [ label="SliceType" ];
+169 -> 129 [ label="MapType" ];
+170 -> 260 [ label="assign_op" ];
+170 -> 261 [ label="add_op_assign" ];
+170 -> 262 [ label="mul_op_assign" ];
+171 -> 275 [ label="Label" ];
+172 -> 276 [ label="Label" ];
+174 -> 277 [ label="Expr" ];
+174 -> 278 [ label="SimpleStmt" ];
+174 -> 107 [ label="UnaryExpr" ];
+174 -> 163 [ label="EmptyStmt" ];
+174 -> 164 [ label="ExpressionStmt" ];
+174 -> 165 [ label="IncDecStmt" ];
+174 -> 166 [ label="Assignment" ];
+174 -> 167 [ label="ShortVarDecl" ];
+174 -> 113 [ label="PrimaryExpr" ];
+174 -> 170 [ label="ExpressionList" ];
+174 -> 180 [ label="IdentifierList" ];
+174 -> 115 [ label="Lit" ];
+174 -> 118 [ label="BasicLit" ];
+174 -> 119 [ label="CompositeLit" ];
+174 -> 120 [ label="FunctionLit" ];
+174 -> 126 [ label="StructType" ];
+174 -> 127 [ label="ArrayType" ];
+174 -> 128 [ label="SliceType" ];
+174 -> 129 [ label="MapType" ];
+178 -> 282 [ label="Condition" ];
+178 -> 283 [ label="Block" ];
+178 -> 284 [ label="ForClause" ];
+178 -> 285 [ label="RangeClause" ];
+178 -> 286 [ label="Expr" ];
+178 -> 287 [ label="InitStmt" ];
+178 -> 288 [ label="RangeList" ];
+178 -> 107 [ label="UnaryExpr" ];
+178 -> 289 [ label="SimpleStmt" ];
+178 -> 290 [ label="ExpressionList" ];
+178 -> 291 [ label="IdentifierList" ];
+178 -> 113 [ label="PrimaryExpr" ];
+178 -> 163 [ label="EmptyStmt" ];
+178 -> 164 [ label="ExpressionStmt" ];
+178 -> 165 [ label="IncDecStmt" ];
+178 -> 166 [ label="Assignment" ];
+178 -> 167 [ label="ShortVarDecl" ];
+178 -> 115 [ label="Lit" ];
+178 -> 118 [ label="BasicLit" ];
+178 -> 119 [ label="CompositeLit" ];
+178 -> 120 [ label="FunctionLit" ];
+178 -> 126 [ label="StructType" ];
+178 -> 127 [ label="ArrayType" ];
+178 -> 128 [ label="SliceType" ];
+178 -> 129 [ label="MapType" ];
+179 -> 234 [ label="LiteralValue" ];
+181 -> 294 [ label="SimpleStmt" ];
+181 -> 295 [ label="Expr" ];
+181 -> 297 [ label="TypeSwitchGuard" ];
+181 -> 163 [ label="EmptyStmt" ];
+181 -> 164 [ label="ExpressionStmt" ];
+181 -> 165 [ label="IncDecStmt" ];
+181 -> 166 [ label="Assignment" ];
+181 -> 167 [ label="ShortVarDecl" ];
+181 -> 107 [ label="UnaryExpr" ];
+181 -> 299 [ label="PrimaryExpr" ];
+181 -> 170 [ label="ExpressionList" ];
+181 -> 180 [ label="IdentifierList" ];
+181 -> 115 [ label="Lit" ];
+181 -> 118 [ label="BasicLit" ];
+181 -> 119 [ label="CompositeLit" ];
+181 -> 120 [ label="FunctionLit" ];
+181 -> 126 [ label="StructType" ];
+181 -> 127 [ label="ArrayType" ];
+181 -> 128 [ label="SliceType" ];
+181 -> 129 [ label="MapType" ];
+185 -> 303 [ label="Type" ];
+185 -> 304 [ label="ParameterDecl" ];
+185 -> 55 [ label="TypeT" ];
+185 -> 56 [ label="PointerType" ];
+185 -> 92 [ label="IdentifierList" ];
+185 -> 58 [ label="ArrayType" ];
+185 -> 59 [ label="StructType" ];
+185 -> 60 [ label="SliceType" ];
+185 -> 61 [ label="MapType" ];
+185 -> 62 [ label="FunctionType" ];
+197 -> 309 [ label="ElementType" ];
+197 -> 199 [ label="Type" ];
+197 -> 55 [ label="TypeT" ];
+197 -> 56 [ label="PointerType" ];
+197 -> 58 [ label="ArrayType" ];
+197 -> 59 [ label="StructType" ];
+197 -> 60 [ label="SliceType" ];
+197 -> 61 [ label="MapType" ];
+197 -> 62 [ label="FunctionType" ];
+201 -> 311 [ label="Expr" ];
+201 -> 107 [ label="UnaryExpr" ];
+201 -> 113 [ label="PrimaryExpr" ];
+201 -> 115 [ label="Lit" ];
+201 -> 118 [ label="BasicLit" ];
+201 -> 119 [ label="CompositeLit" ];
+201 -> 120 [ label="FunctionLit" ];
+201 -> 126 [ label="StructType" ];
+201 -> 127 [ label="ArrayType" ];
+201 -> 128 [ label="SliceType" ];
+201 -> 129 [ label="MapType" ];
+202 -> 312 [ label="Expr" ];
+202 -> 107 [ label="UnaryExpr" ];
+202 -> 113 [ label="PrimaryExpr" ];
+202 -> 115 [ label="Lit" ];
+202 -> 118 [ label="BasicLit" ];
+202 -> 119 [ label="CompositeLit" ];
+202 -> 120 [ label="FunctionLit" ];
+202 -> 126 [ label="StructType" ];
+202 -> 127 [ label="ArrayType" ];
+202 -> 128 [ label="SliceType" ];
+202 -> 129 [ label="MapType" ];
+203 -> 313 [ label="Expr" ];
+203 -> 107 [ label="UnaryExpr" ];
+203 -> 113 [ label="PrimaryExpr" ];
+203 -> 115 [ label="Lit" ];
+203 -> 118 [ label="BasicLit" ];
+203 -> 119 [ label="CompositeLit" ];
+203 -> 120 [ label="FunctionLit" ];
+203 -> 126 [ label="StructType" ];
+203 -> 127 [ label="ArrayType" ];
+203 -> 128 [ label="SliceType" ];
+203 -> 129 [ label="MapType" ];
+204 -> 314 [ label="Expr" ];
+204 -> 107 [ label="UnaryExpr" ];
+204 -> 113 [ label="PrimaryExpr" ];
+204 -> 115 [ label="Lit" ];
+204 -> 118 [ label="BasicLit" ];
+204 -> 119 [ label="CompositeLit" ];
+204 -> 120 [ label="FunctionLit" ];
+204 -> 126 [ label="StructType" ];
+204 -> 127 [ label="ArrayType" ];
+204 -> 128 [ label="SliceType" ];
+204 -> 129 [ label="MapType" ];
+205 -> 315 [ label="Expr" ];
+205 -> 107 [ label="UnaryExpr" ];
+205 -> 113 [ label="PrimaryExpr" ];
+205 -> 115 [ label="Lit" ];
+205 -> 118 [ label="BasicLit" ];
+205 -> 119 [ label="CompositeLit" ];
+205 -> 120 [ label="FunctionLit" ];
+205 -> 126 [ label="StructType" ];
+205 -> 127 [ label="ArrayType" ];
+205 -> 128 [ label="SliceType" ];
+205 -> 129 [ label="MapType" ];
+206 -> 316 [ label="Expr" ];
+206 -> 107 [ label="UnaryExpr" ];
+206 -> 113 [ label="PrimaryExpr" ];
+206 -> 115 [ label="Lit" ];
+206 -> 118 [ label="BasicLit" ];
+206 -> 119 [ label="CompositeLit" ];
+206 -> 120 [ label="FunctionLit" ];
+206 -> 126 [ label="StructType" ];
+206 -> 127 [ label="ArrayType" ];
+206 -> 128 [ label="SliceType" ];
+206 -> 129 [ label="MapType" ];
+207 -> 317 [ label="Expr" ];
+207 -> 107 [ label="UnaryExpr" ];
+207 -> 113 [ label="PrimaryExpr" ];
+207 -> 115 [ label="Lit" ];
+207 -> 118 [ label="BasicLit" ];
+207 -> 119 [ label="CompositeLit" ];
+207 -> 120 [ label="FunctionLit" ];
+207 -> 126 [ label="StructType" ];
+207 -> 127 [ label="ArrayType" ];
+207 -> 128 [ label="SliceType" ];
+207 -> 129 [ label="MapType" ];
+208 -> 318 [ label="Expr" ];
+208 -> 107 [ label="UnaryExpr" ];
+208 -> 113 [ label="PrimaryExpr" ];
+208 -> 115 [ label="Lit" ];
+208 -> 118 [ label="BasicLit" ];
+208 -> 119 [ label="CompositeLit" ];
+208 -> 120 [ label="FunctionLit" ];
+208 -> 126 [ label="StructType" ];
+208 -> 127 [ label="ArrayType" ];
+208 -> 128 [ label="SliceType" ];
+208 -> 129 [ label="MapType" ];
+209 -> 319 [ label="Expr" ];
+209 -> 107 [ label="UnaryExpr" ];
+209 -> 113 [ label="PrimaryExpr" ];
+209 -> 115 [ label="Lit" ];
+209 -> 118 [ label="BasicLit" ];
+209 -> 119 [ label="CompositeLit" ];
+209 -> 120 [ label="FunctionLit" ];
+209 -> 126 [ label="StructType" ];
+209 -> 127 [ label="ArrayType" ];
+209 -> 128 [ label="SliceType" ];
+209 -> 129 [ label="MapType" ];
+210 -> 320 [ label="Expr" ];
+210 -> 107 [ label="UnaryExpr" ];
+210 -> 113 [ label="PrimaryExpr" ];
+210 -> 115 [ label="Lit" ];
+210 -> 118 [ label="BasicLit" ];
+210 -> 119 [ label="CompositeLit" ];
+210 -> 120 [ label="FunctionLit" ];
+210 -> 126 [ label="StructType" ];
+210 -> 127 [ label="ArrayType" ];
+210 -> 128 [ label="SliceType" ];
+210 -> 129 [ label="MapType" ];
+211 -> 321 [ label="Expr" ];
+211 -> 107 [ label="UnaryExpr" ];
+211 -> 113 [ label="PrimaryExpr" ];
+211 -> 115 [ label="Lit" ];
+211 -> 118 [ label="BasicLit" ];
+211 -> 119 [ label="CompositeLit" ];
+211 -> 120 [ label="FunctionLit" ];
+211 -> 126 [ label="StructType" ];
+211 -> 127 [ label="ArrayType" ];
+211 -> 128 [ label="SliceType" ];
+211 -> 129 [ label="MapType" ];
+212 -> 322 [ label="Expr" ];
+212 -> 107 [ label="UnaryExpr" ];
+212 -> 113 [ label="PrimaryExpr" ];
+212 -> 115 [ label="Lit" ];
+212 -> 118 [ label="BasicLit" ];
+212 -> 119 [ label="CompositeLit" ];
+212 -> 120 [ label="FunctionLit" ];
+212 -> 126 [ label="StructType" ];
+212 -> 127 [ label="ArrayType" ];
+212 -> 128 [ label="SliceType" ];
+212 -> 129 [ label="MapType" ];
+213 -> 323 [ label="Expr" ];
+213 -> 107 [ label="UnaryExpr" ];
+213 -> 113 [ label="PrimaryExpr" ];
+213 -> 115 [ label="Lit" ];
+213 -> 118 [ label="BasicLit" ];
+213 -> 119 [ label="CompositeLit" ];
+213 -> 120 [ label="FunctionLit" ];
+213 -> 126 [ label="StructType" ];
+213 -> 127 [ label="ArrayType" ];
+213 -> 128 [ label="SliceType" ];
+213 -> 129 [ label="MapType" ];
+214 -> 324 [ label="Expr" ];
+214 -> 107 [ label="UnaryExpr" ];
+214 -> 113 [ label="PrimaryExpr" ];
+214 -> 115 [ label="Lit" ];
+214 -> 118 [ label="BasicLit" ];
+214 -> 119 [ label="CompositeLit" ];
+214 -> 120 [ label="FunctionLit" ];
+214 -> 126 [ label="StructType" ];
+214 -> 127 [ label="ArrayType" ];
+214 -> 128 [ label="SliceType" ];
+214 -> 129 [ label="MapType" ];
+215 -> 325 [ label="Expr" ];
+215 -> 107 [ label="UnaryExpr" ];
+215 -> 113 [ label="PrimaryExpr" ];
+215 -> 115 [ label="Lit" ];
+215 -> 118 [ label="BasicLit" ];
+215 -> 119 [ label="CompositeLit" ];
+215 -> 120 [ label="FunctionLit" ];
+215 -> 126 [ label="StructType" ];
+215 -> 127 [ label="ArrayType" ];
+215 -> 128 [ label="SliceType" ];
+215 -> 129 [ label="MapType" ];
+216 -> 326 [ label="Expr" ];
+216 -> 107 [ label="UnaryExpr" ];
+216 -> 113 [ label="PrimaryExpr" ];
+216 -> 115 [ label="Lit" ];
+216 -> 118 [ label="BasicLit" ];
+216 -> 119 [ label="CompositeLit" ];
+216 -> 120 [ label="FunctionLit" ];
+216 -> 126 [ label="StructType" ];
+216 -> 127 [ label="ArrayType" ];
+216 -> 128 [ label="SliceType" ];
+216 -> 129 [ label="MapType" ];
+217 -> 327 [ label="Expr" ];
+217 -> 107 [ label="UnaryExpr" ];
+217 -> 113 [ label="PrimaryExpr" ];
+217 -> 115 [ label="Lit" ];
+217 -> 118 [ label="BasicLit" ];
+217 -> 119 [ label="CompositeLit" ];
+217 -> 120 [ label="FunctionLit" ];
+217 -> 126 [ label="StructType" ];
+217 -> 127 [ label="ArrayType" ];
+217 -> 128 [ label="SliceType" ];
+217 -> 129 [ label="MapType" ];
+218 -> 328 [ label="Expr" ];
+218 -> 107 [ label="UnaryExpr" ];
+218 -> 113 [ label="PrimaryExpr" ];
+218 -> 115 [ label="Lit" ];
+218 -> 118 [ label="BasicLit" ];
+218 -> 119 [ label="CompositeLit" ];
+218 -> 120 [ label="FunctionLit" ];
+218 -> 126 [ label="StructType" ];
+218 -> 127 [ label="ArrayType" ];
+218 -> 128 [ label="SliceType" ];
+218 -> 129 [ label="MapType" ];
+219 -> 329 [ label="Expr" ];
+219 -> 107 [ label="UnaryExpr" ];
+219 -> 113 [ label="PrimaryExpr" ];
+219 -> 115 [ label="Lit" ];
+219 -> 118 [ label="BasicLit" ];
+219 -> 119 [ label="CompositeLit" ];
+219 -> 120 [ label="FunctionLit" ];
+219 -> 126 [ label="StructType" ];
+219 -> 127 [ label="ArrayType" ];
+219 -> 128 [ label="SliceType" ];
+219 -> 129 [ label="MapType" ];
+230 -> 331 [ label="Expr" ];
+230 -> 107 [ label="UnaryExpr" ];
+230 -> 113 [ label="PrimaryExpr" ];
+230 -> 115 [ label="Lit" ];
+230 -> 118 [ label="BasicLit" ];
+230 -> 119 [ label="CompositeLit" ];
+230 -> 120 [ label="FunctionLit" ];
+230 -> 126 [ label="StructType" ];
+230 -> 127 [ label="ArrayType" ];
+230 -> 128 [ label="SliceType" ];
+230 -> 129 [ label="MapType" ];
+231 -> 335 [ label="ExpressionList" ];
+231 -> 336 [ label="TypeT" ];
+231 -> 139 [ label="Expr" ];
+231 -> 338 [ label="ArrayType" ];
+231 -> 339 [ label="StructType" ];
+231 -> 340 [ label="SliceType" ];
+231 -> 341 [ label="MapType" ];
+231 -> 62 [ label="FunctionType" ];
+231 -> 107 [ label="UnaryExpr" ];
+231 -> 113 [ label="PrimaryExpr" ];
+231 -> 115 [ label="Lit" ];
+231 -> 118 [ label="BasicLit" ];
+231 -> 119 [ label="CompositeLit" ];
+231 -> 120 [ label="FunctionLit" ];
+235 -> 344 [ label="ElementList" ];
+235 -> 346 [ label="KeyedElement" ];
+235 -> 347 [ label="Element" ];
+235 -> 348 [ label="Key" ];
+235 -> 349 [ label="Expr" ];
+235 -> 350 [ label="LiteralValue" ];
+235 -> 107 [ label="UnaryExpr" ];
+235 -> 113 [ label="PrimaryExpr" ];
+235 -> 115 [ label="Lit" ];
+235 -> 118 [ label="BasicLit" ];
+235 -> 119 [ label="CompositeLit" ];
+235 -> 120 [ label="FunctionLit" ];
+235 -> 126 [ label="StructType" ];
+235 -> 127 [ label="ArrayType" ];
+235 -> 128 [ label="SliceType" ];
+235 -> 129 [ label="MapType" ];
+241 -> 352 [ label="FunctionBody" ];
+241 -> 82 [ label="Block" ];
+242 -> 354 [ label="FieldDecl" ];
+242 -> 355 [ label="IdentifierList" ];
+242 -> 357 [ label="EmbeddedField" ];
+248 -> 361 [ label="Expr" ];
+248 -> 107 [ label="UnaryExpr" ];
+248 -> 113 [ label="PrimaryExpr" ];
+248 -> 115 [ label="Lit" ];
+248 -> 118 [ label="BasicLit" ];
+248 -> 119 [ label="CompositeLit" ];
+248 -> 120 [ label="FunctionLit" ];
+248 -> 126 [ label="StructType" ];
+248 -> 127 [ label="ArrayType" ];
+248 -> 128 [ label="SliceType" ];
+248 -> 129 [ label="MapType" ];
+255 -> 149 [ label="Statement" ];
+255 -> 364 [ label="StatementList" ];
+255 -> 150 [ label="Decl" ];
+255 -> 151 [ label="LabeledStmt" ];
+255 -> 152 [ label="SimpleStmt" ];
+255 -> 153 [ label="GotoStmt" ];
+255 -> 154 [ label="ReturnStmt" ];
+255 -> 155 [ label="BreakStmt" ];
+255 -> 156 [ label="ContinueStmt" ];
+255 -> 157 [ label="FallthroughStmt" ];
+255 -> 158 [ label="Block" ];
+255 -> 159 [ label="IfStmt" ];
+255 -> 160 [ label="SwitchStmt" ];
+255 -> 161 [ label="ForStmt" ];
+255 -> 13 [ label="ConstDecl" ];
+255 -> 14 [ label="VarDecl" ];
+255 -> 15 [ label="TypeDecl" ];
+255 -> 162 [ label="Label" ];
+255 -> 163 [ label="EmptyStmt" ];
+255 -> 164 [ label="ExpressionStmt" ];
+255 -> 165 [ label="IncDecStmt" ];
+255 -> 166 [ label="Assignment" ];
+255 -> 167 [ label="ShortVarDecl" ];
+255 -> 170 [ label="ExpressionList" ];
+255 -> 175 [ label="Expr" ];
+255 -> 176 [ label="ExprSwitchStmt" ];
+255 -> 177 [ label="TypeSwitchStmt" ];
+255 -> 180 [ label="IdentifierList" ];
+255 -> 107 [ label="UnaryExpr" ];
+255 -> 113 [ label="PrimaryExpr" ];
+255 -> 115 [ label="Lit" ];
+255 -> 118 [ label="BasicLit" ];
+255 -> 119 [ label="CompositeLit" ];
+255 -> 120 [ label="FunctionLit" ];
+255 -> 126 [ label="StructType" ];
+255 -> 127 [ label="ArrayType" ];
+255 -> 128 [ label="SliceType" ];
+255 -> 129 [ label="MapType" ];
+256 -> 162 [ label="Label" ];
+256 -> 365 [ label="Statement" ];
+256 -> 150 [ label="Decl" ];
+256 -> 151 [ label="LabeledStmt" ];
+256 -> 152 [ label="SimpleStmt" ];
+256 -> 153 [ label="GotoStmt" ];
+256 -> 154 [ label="ReturnStmt" ];
+256 -> 155 [ label="BreakStmt" ];
+256 -> 156 [ label="ContinueStmt" ];
+256 -> 157 [ label="FallthroughStmt" ];
+256 -> 158 [ label="Block" ];
+256 -> 159 [ label="IfStmt" ];
+256 -> 160 [ label="SwitchStmt" ];
+256 -> 161 [ label="ForStmt" ];
+256 -> 13 [ label="ConstDecl" ];
+256 -> 14 [ label="VarDecl" ];
+256 -> 15 [ label="TypeDecl" ];
+256 -> 163 [ label="EmptyStmt" ];
+256 -> 164 [ label="ExpressionStmt" ];
+256 -> 165 [ label="IncDecStmt" ];
+256 -> 166 [ label="Assignment" ];
+256 -> 167 [ label="ShortVarDecl" ];
+256 -> 170 [ label="ExpressionList" ];
+256 -> 175 [ label="Expr" ];
+256 -> 176 [ label="ExprSwitchStmt" ];
+256 -> 177 [ label="TypeSwitchStmt" ];
+256 -> 180 [ label="IdentifierList" ];
+256 -> 107 [ label="UnaryExpr" ];
+256 -> 113 [ label="PrimaryExpr" ];
+256 -> 115 [ label="Lit" ];
+256 -> 118 [ label="BasicLit" ];
+256 -> 119 [ label="CompositeLit" ];
+256 -> 120 [ label="FunctionLit" ];
+256 -> 126 [ label="StructType" ];
+256 -> 127 [ label="ArrayType" ];
+256 -> 128 [ label="SliceType" ];
+256 -> 129 [ label="MapType" ];
+260 -> 366 [ label="ExpressionList" ];
+260 -> 139 [ label="Expr" ];
+260 -> 107 [ label="UnaryExpr" ];
+260 -> 113 [ label="PrimaryExpr" ];
+260 -> 115 [ label="Lit" ];
+260 -> 118 [ label="BasicLit" ];
+260 -> 119 [ label="CompositeLit" ];
+260 -> 120 [ label="FunctionLit" ];
+260 -> 126 [ label="StructType" ];
+260 -> 127 [ label="ArrayType" ];
+260 -> 128 [ label="SliceType" ];
+260 -> 129 [ label="MapType" ];
+277 -> 367 [ label="Block" ];
+279 -> 234 [ label="LiteralValue" ];
+282 -> 369 [ label="Block" ];
+284 -> 370 [ label="Block" ];
+285 -> 371 [ label="Block" ];
+290 -> 260 [ label="assign_op" ];
+290 -> 261 [ label="add_op_assign" ];
+290 -> 262 [ label="mul_op_assign" ];
+292 -> 234 [ label="LiteralValue" ];
+293 -> 376 [ label="ExpressionList" ];
+293 -> 139 [ label="Expr" ];
+293 -> 107 [ label="UnaryExpr" ];
+293 -> 113 [ label="PrimaryExpr" ];
+293 -> 115 [ label="Lit" ];
+293 -> 118 [ label="BasicLit" ];
+293 -> 119 [ label="CompositeLit" ];
+293 -> 120 [ label="FunctionLit" ];
+293 -> 126 [ label="StructType" ];
+293 -> 127 [ label="ArrayType" ];
+293 -> 128 [ label="SliceType" ];
+293 -> 129 [ label="MapType" ];
+296 -> 379 [ label="ExprCaseClauseMult" ];
+296 -> 380 [ label="ExprCaseClause" ];
+296 -> 381 [ label="ExprSwitchCase" ];
+298 -> 234 [ label="LiteralValue" ];
+299 -> 225 [ label="Selector" ];
+299 -> 226 [ label="Index" ];
+299 -> 227 [ label="Slice" ];
+299 -> 228 [ label="Arguments" ];
+306 -> 389 [ label="ExpressionList" ];
+306 -> 139 [ label="Expr" ];
+306 -> 107 [ label="UnaryExpr" ];
+306 -> 113 [ label="PrimaryExpr" ];
+306 -> 115 [ label="Lit" ];
+306 -> 118 [ label="BasicLit" ];
+306 -> 119 [ label="CompositeLit" ];
+306 -> 120 [ label="FunctionLit" ];
+306 -> 126 [ label="StructType" ];
+306 -> 127 [ label="ArrayType" ];
+306 -> 128 [ label="SliceType" ];
+306 -> 129 [ label="MapType" ];
+332 -> 394 [ label="Expr" ];
+332 -> 107 [ label="UnaryExpr" ];
+332 -> 113 [ label="PrimaryExpr" ];
+332 -> 115 [ label="Lit" ];
+332 -> 118 [ label="BasicLit" ];
+332 -> 119 [ label="CompositeLit" ];
+332 -> 120 [ label="FunctionLit" ];
+332 -> 126 [ label="StructType" ];
+332 -> 127 [ label="ArrayType" ];
+332 -> 128 [ label="SliceType" ];
+332 -> 129 [ label="MapType" ];
+333 -> 100 [ label="TypeT" ];
+333 -> 236 [ label="Expr" ];
+333 -> 338 [ label="ArrayType" ];
+333 -> 339 [ label="StructType" ];
+333 -> 340 [ label="SliceType" ];
+333 -> 341 [ label="MapType" ];
+333 -> 62 [ label="FunctionType" ];
+333 -> 107 [ label="UnaryExpr" ];
+333 -> 113 [ label="PrimaryExpr" ];
+333 -> 115 [ label="Lit" ];
+333 -> 118 [ label="BasicLit" ];
+333 -> 119 [ label="CompositeLit" ];
+333 -> 120 [ label="FunctionLit" ];
+337 -> 234 [ label="LiteralValue" ];
+338 -> 238 [ label="LiteralValue" ];
+339 -> 237 [ label="Arguments" ];
+340 -> 239 [ label="LiteralValue" ];
+341 -> 240 [ label="LiteralValue" ];
+342 -> 404 [ label="Signature" ];
+342 -> 49 [ label="Parameters" ];
+343 -> 405 [ label="LiteralValue" ];
+355 -> 410 [ label="Type" ];
+355 -> 55 [ label="TypeT" ];
+355 -> 56 [ label="PointerType" ];
+355 -> 58 [ label="ArrayType" ];
+355 -> 59 [ label="StructType" ];
+355 -> 60 [ label="SliceType" ];
+355 -> 61 [ label="MapType" ];
+355 -> 62 [ label="FunctionType" ];
+357 -> 413 [ label="Tag" ];
+359 -> 416 [ label="ElementType" ];
+359 -> 199 [ label="Type" ];
+359 -> 55 [ label="TypeT" ];
+359 -> 56 [ label="PointerType" ];
+359 -> 58 [ label="ArrayType" ];
+359 -> 59 [ label="StructType" ];
+359 -> 60 [ label="SliceType" ];
+359 -> 61 [ label="MapType" ];
+359 -> 62 [ label="FunctionType" ];
+362 -> 418 [ label="ExpressionList" ];
+362 -> 139 [ label="Expr" ];
+362 -> 107 [ label="UnaryExpr" ];
+362 -> 113 [ label="PrimaryExpr" ];
+362 -> 115 [ label="Lit" ];
+362 -> 118 [ label="BasicLit" ];
+362 -> 119 [ label="CompositeLit" ];
+362 -> 120 [ label="FunctionLit" ];
+362 -> 126 [ label="StructType" ];
+362 -> 127 [ label="ArrayType" ];
+362 -> 128 [ label="SliceType" ];
+362 -> 129 [ label="MapType" ];
+367 -> 419 [ label="else_stmt" ];
+368 -> 421 [ label="Expr" ];
+368 -> 107 [ label="UnaryExpr" ];
+368 -> 113 [ label="PrimaryExpr" ];
+368 -> 115 [ label="Lit" ];
+368 -> 118 [ label="BasicLit" ];
+368 -> 119 [ label="CompositeLit" ];
+368 -> 120 [ label="FunctionLit" ];
+368 -> 126 [ label="StructType" ];
+368 -> 127 [ label="ArrayType" ];
+368 -> 128 [ label="SliceType" ];
+368 -> 129 [ label="MapType" ];
+372 -> 423 [ label="Condition" ];
+372 -> 424 [ label="Expr" ];
+372 -> 107 [ label="UnaryExpr" ];
+372 -> 113 [ label="PrimaryExpr" ];
+372 -> 115 [ label="Lit" ];
+372 -> 118 [ label="BasicLit" ];
+372 -> 119 [ label="CompositeLit" ];
+372 -> 120 [ label="FunctionLit" ];
+372 -> 126 [ label="StructType" ];
+372 -> 127 [ label="ArrayType" ];
+372 -> 128 [ label="SliceType" ];
+372 -> 129 [ label="MapType" ];
+373 -> 425 [ label="Expr" ];
+373 -> 107 [ label="UnaryExpr" ];
+373 -> 113 [ label="PrimaryExpr" ];
+373 -> 115 [ label="Lit" ];
+373 -> 118 [ label="BasicLit" ];
+373 -> 119 [ label="CompositeLit" ];
+373 -> 120 [ label="FunctionLit" ];
+373 -> 126 [ label="StructType" ];
+373 -> 127 [ label="ArrayType" ];
+373 -> 128 [ label="SliceType" ];
+373 -> 129 [ label="MapType" ];
+375 -> 376 [ label="ExpressionList" ];
+375 -> 139 [ label="Expr" ];
+375 -> 107 [ label="UnaryExpr" ];
+375 -> 113 [ label="PrimaryExpr" ];
+375 -> 115 [ label="Lit" ];
+375 -> 118 [ label="BasicLit" ];
+375 -> 119 [ label="CompositeLit" ];
+375 -> 120 [ label="FunctionLit" ];
+375 -> 126 [ label="StructType" ];
+375 -> 127 [ label="ArrayType" ];
+375 -> 128 [ label="SliceType" ];
+375 -> 129 [ label="MapType" ];
+377 -> 426 [ label="Expr" ];
+377 -> 428 [ label="TypeSwitchGuard" ];
+377 -> 107 [ label="UnaryExpr" ];
+377 -> 299 [ label="PrimaryExpr" ];
+377 -> 115 [ label="Lit" ];
+377 -> 118 [ label="BasicLit" ];
+377 -> 119 [ label="CompositeLit" ];
+377 -> 120 [ label="FunctionLit" ];
+377 -> 126 [ label="StructType" ];
+377 -> 127 [ label="ArrayType" ];
+377 -> 128 [ label="SliceType" ];
+377 -> 129 [ label="MapType" ];
+378 -> 430 [ label="ExprCaseClauseMult" ];
+378 -> 380 [ label="ExprCaseClause" ];
+378 -> 381 [ label="ExprSwitchCase" ];
+380 -> 380 [ label="ExprCaseClause" ];
+380 -> 432 [ label="ExprCaseClauseMult" ];
+380 -> 381 [ label="ExprSwitchCase" ];
+382 -> 434 [ label="ExpressionList" ];
+382 -> 139 [ label="Expr" ];
+382 -> 107 [ label="UnaryExpr" ];
+382 -> 113 [ label="PrimaryExpr" ];
+382 -> 115 [ label="Lit" ];
+382 -> 118 [ label="BasicLit" ];
+382 -> 119 [ label="CompositeLit" ];
+382 -> 120 [ label="FunctionLit" ];
+382 -> 126 [ label="StructType" ];
+382 -> 127 [ label="ArrayType" ];
+382 -> 128 [ label="SliceType" ];
+382 -> 129 [ label="MapType" ];
+384 -> 435 [ label="TypeCaseClauseMult" ];
+384 -> 436 [ label="TypeCaseClause" ];
+385 -> 439 [ label="PrimaryExpr" ];
+385 -> 115 [ label="Lit" ];
+385 -> 118 [ label="BasicLit" ];
+385 -> 119 [ label="CompositeLit" ];
+385 -> 120 [ label="FunctionLit" ];
+385 -> 126 [ label="StructType" ];
+385 -> 127 [ label="ArrayType" ];
+385 -> 128 [ label="SliceType" ];
+385 -> 129 [ label="MapType" ];
+393 -> 442 [ label="Expr" ];
+393 -> 107 [ label="UnaryExpr" ];
+393 -> 113 [ label="PrimaryExpr" ];
+393 -> 115 [ label="Lit" ];
+393 -> 118 [ label="BasicLit" ];
+393 -> 119 [ label="CompositeLit" ];
+393 -> 120 [ label="FunctionLit" ];
+393 -> 126 [ label="StructType" ];
+393 -> 127 [ label="ArrayType" ];
+393 -> 128 [ label="SliceType" ];
+393 -> 129 [ label="MapType" ];
+396 -> 234 [ label="LiteralValue" ];
+398 -> 361 [ label="Expr" ];
+398 -> 107 [ label="UnaryExpr" ];
+398 -> 113 [ label="PrimaryExpr" ];
+398 -> 115 [ label="Lit" ];
+398 -> 118 [ label="BasicLit" ];
+398 -> 119 [ label="CompositeLit" ];
+398 -> 120 [ label="FunctionLit" ];
+398 -> 126 [ label="StructType" ];
+398 -> 127 [ label="ArrayType" ];
+398 -> 128 [ label="SliceType" ];
+398 -> 129 [ label="MapType" ];
+400 -> 449 [ label="ExpressionList" ];
+400 -> 139 [ label="Expr" ];
+400 -> 107 [ label="UnaryExpr" ];
+400 -> 113 [ label="PrimaryExpr" ];
+400 -> 115 [ label="Lit" ];
+400 -> 118 [ label="BasicLit" ];
+400 -> 119 [ label="CompositeLit" ];
+400 -> 120 [ label="FunctionLit" ];
+400 -> 126 [ label="StructType" ];
+400 -> 127 [ label="ArrayType" ];
+400 -> 128 [ label="SliceType" ];
+400 -> 129 [ label="MapType" ];
+402 -> 451 [ label="ExpressionList" ];
+402 -> 139 [ label="Expr" ];
+402 -> 107 [ label="UnaryExpr" ];
+402 -> 113 [ label="PrimaryExpr" ];
+402 -> 115 [ label="Lit" ];
+402 -> 118 [ label="BasicLit" ];
+402 -> 119 [ label="CompositeLit" ];
+402 -> 120 [ label="FunctionLit" ];
+402 -> 126 [ label="StructType" ];
+402 -> 127 [ label="ArrayType" ];
+402 -> 128 [ label="SliceType" ];
+402 -> 129 [ label="MapType" ];
+404 -> 352 [ label="FunctionBody" ];
+404 -> 82 [ label="Block" ];
+406 -> 454 [ label="KeyedElement" ];
+406 -> 347 [ label="Element" ];
+406 -> 348 [ label="Key" ];
+406 -> 349 [ label="Expr" ];
+406 -> 350 [ label="LiteralValue" ];
+406 -> 107 [ label="UnaryExpr" ];
+406 -> 113 [ label="PrimaryExpr" ];
+406 -> 115 [ label="Lit" ];
+406 -> 118 [ label="BasicLit" ];
+406 -> 119 [ label="CompositeLit" ];
+406 -> 120 [ label="FunctionLit" ];
+406 -> 126 [ label="StructType" ];
+406 -> 127 [ label="ArrayType" ];
+406 -> 128 [ label="SliceType" ];
+406 -> 129 [ label="MapType" ];
+408 -> 455 [ label="Element" ];
+408 -> 456 [ label="Expr" ];
+408 -> 457 [ label="LiteralValue" ];
+408 -> 107 [ label="UnaryExpr" ];
+408 -> 113 [ label="PrimaryExpr" ];
+408 -> 115 [ label="Lit" ];
+408 -> 118 [ label="BasicLit" ];
+408 -> 119 [ label="CompositeLit" ];
+408 -> 120 [ label="FunctionLit" ];
+408 -> 126 [ label="StructType" ];
+408 -> 127 [ label="ArrayType" ];
+408 -> 128 [ label="SliceType" ];
+408 -> 129 [ label="MapType" ];
+410 -> 458 [ label="Tag" ];
+411 -> 460 [ label="Tag" ];
+420 -> 463 [ label="IfStmt" ];
+420 -> 464 [ label="Block" ];
+421 -> 465 [ label="else_stmt" ];
+422 -> 466 [ label="PostStmt" ];
+422 -> 467 [ label="SimpleStmt" ];
+422 -> 163 [ label="EmptyStmt" ];
+422 -> 164 [ label="ExpressionStmt" ];
+422 -> 165 [ label="IncDecStmt" ];
+422 -> 166 [ label="Assignment" ];
+422 -> 167 [ label="ShortVarDecl" ];
+422 -> 175 [ label="Expr" ];
+422 -> 170 [ label="ExpressionList" ];
+422 -> 180 [ label="IdentifierList" ];
+422 -> 107 [ label="UnaryExpr" ];
+422 -> 113 [ label="PrimaryExpr" ];
+422 -> 115 [ label="Lit" ];
+422 -> 118 [ label="BasicLit" ];
+422 -> 119 [ label="CompositeLit" ];
+422 -> 120 [ label="FunctionLit" ];
+422 -> 126 [ label="StructType" ];
+422 -> 127 [ label="ArrayType" ];
+422 -> 128 [ label="SliceType" ];
+422 -> 129 [ label="MapType" ];
+427 -> 470 [ label="ExprCaseClauseMult" ];
+427 -> 380 [ label="ExprCaseClause" ];
+427 -> 381 [ label="ExprSwitchCase" ];
+429 -> 234 [ label="LiteralValue" ];
+433 -> 473 [ label="StatementList" ];
+433 -> 149 [ label="Statement" ];
+433 -> 150 [ label="Decl" ];
+433 -> 151 [ label="LabeledStmt" ];
+433 -> 152 [ label="SimpleStmt" ];
+433 -> 153 [ label="GotoStmt" ];
+433 -> 154 [ label="ReturnStmt" ];
+433 -> 155 [ label="BreakStmt" ];
+433 -> 156 [ label="ContinueStmt" ];
+433 -> 157 [ label="FallthroughStmt" ];
+433 -> 158 [ label="Block" ];
+433 -> 159 [ label="IfStmt" ];
+433 -> 160 [ label="SwitchStmt" ];
+433 -> 161 [ label="ForStmt" ];
+433 -> 13 [ label="ConstDecl" ];
+433 -> 14 [ label="VarDecl" ];
+433 -> 15 [ label="TypeDecl" ];
+433 -> 162 [ label="Label" ];
+433 -> 163 [ label="EmptyStmt" ];
+433 -> 164 [ label="ExpressionStmt" ];
+433 -> 165 [ label="IncDecStmt" ];
+433 -> 166 [ label="Assignment" ];
+433 -> 167 [ label="ShortVarDecl" ];
+433 -> 170 [ label="ExpressionList" ];
+433 -> 175 [ label="Expr" ];
+433 -> 176 [ label="ExprSwitchStmt" ];
+433 -> 177 [ label="TypeSwitchStmt" ];
+433 -> 180 [ label="IdentifierList" ];
+433 -> 107 [ label="UnaryExpr" ];
+433 -> 113 [ label="PrimaryExpr" ];
+433 -> 115 [ label="Lit" ];
+433 -> 118 [ label="BasicLit" ];
+433 -> 119 [ label="CompositeLit" ];
+433 -> 120 [ label="FunctionLit" ];
+433 -> 126 [ label="StructType" ];
+433 -> 127 [ label="ArrayType" ];
+433 -> 128 [ label="SliceType" ];
+433 -> 129 [ label="MapType" ];
+436 -> 436 [ label="TypeCaseClause" ];
+436 -> 475 [ label="TypeCaseClauseMult" ];
+437 -> 476 [ label="TypeList" ];
+437 -> 477 [ label="Type" ];
+437 -> 55 [ label="TypeT" ];
+437 -> 56 [ label="PointerType" ];
+437 -> 58 [ label="ArrayType" ];
+437 -> 59 [ label="StructType" ];
+437 -> 60 [ label="SliceType" ];
+437 -> 61 [ label="MapType" ];
+437 -> 62 [ label="FunctionType" ];
+439 -> 225 [ label="Selector" ];
+439 -> 226 [ label="Index" ];
+439 -> 227 [ label="Slice" ];
+439 -> 228 [ label="Arguments" ];
+444 -> 484 [ label="Expr" ];
+444 -> 107 [ label="UnaryExpr" ];
+444 -> 113 [ label="PrimaryExpr" ];
+444 -> 115 [ label="Lit" ];
+444 -> 118 [ label="BasicLit" ];
+444 -> 119 [ label="CompositeLit" ];
+444 -> 120 [ label="FunctionLit" ];
+444 -> 126 [ label="StructType" ];
+444 -> 127 [ label="ArrayType" ];
+444 -> 128 [ label="SliceType" ];
+444 -> 129 [ label="MapType" ];
+452 -> 405 [ label="LiteralValue" ];
+468 -> 494 [ label="PostStmt" ];
+468 -> 467 [ label="SimpleStmt" ];
+468 -> 163 [ label="EmptyStmt" ];
+468 -> 164 [ label="ExpressionStmt" ];
+468 -> 165 [ label="IncDecStmt" ];
+468 -> 166 [ label="Assignment" ];
+468 -> 167 [ label="ShortVarDecl" ];
+468 -> 175 [ label="Expr" ];
+468 -> 170 [ label="ExpressionList" ];
+468 -> 180 [ label="IdentifierList" ];
+468 -> 107 [ label="UnaryExpr" ];
+468 -> 113 [ label="PrimaryExpr" ];
+468 -> 115 [ label="Lit" ];
+468 -> 118 [ label="BasicLit" ];
+468 -> 119 [ label="CompositeLit" ];
+468 -> 120 [ label="FunctionLit" ];
+468 -> 126 [ label="StructType" ];
+468 -> 127 [ label="ArrayType" ];
+468 -> 128 [ label="SliceType" ];
+468 -> 129 [ label="MapType" ];
+469 -> 495 [ label="ExprCaseClauseMult" ];
+469 -> 380 [ label="ExprCaseClause" ];
+469 -> 381 [ label="ExprSwitchCase" ];
+471 -> 497 [ label="TypeCaseClauseMult" ];
+471 -> 436 [ label="TypeCaseClause" ];
+479 -> 502 [ label="StatementList" ];
+479 -> 149 [ label="Statement" ];
+479 -> 150 [ label="Decl" ];
+479 -> 151 [ label="LabeledStmt" ];
+479 -> 152 [ label="SimpleStmt" ];
+479 -> 153 [ label="GotoStmt" ];
+479 -> 154 [ label="ReturnStmt" ];
+479 -> 155 [ label="BreakStmt" ];
+479 -> 156 [ label="ContinueStmt" ];
+479 -> 157 [ label="FallthroughStmt" ];
+479 -> 158 [ label="Block" ];
+479 -> 159 [ label="IfStmt" ];
+479 -> 160 [ label="SwitchStmt" ];
+479 -> 161 [ label="ForStmt" ];
+479 -> 13 [ label="ConstDecl" ];
+479 -> 14 [ label="VarDecl" ];
+479 -> 15 [ label="TypeDecl" ];
+479 -> 162 [ label="Label" ];
+479 -> 163 [ label="EmptyStmt" ];
+479 -> 164 [ label="ExpressionStmt" ];
+479 -> 165 [ label="IncDecStmt" ];
+479 -> 166 [ label="Assignment" ];
+479 -> 167 [ label="ShortVarDecl" ];
+479 -> 170 [ label="ExpressionList" ];
+479 -> 175 [ label="Expr" ];
+479 -> 176 [ label="ExprSwitchStmt" ];
+479 -> 177 [ label="TypeSwitchStmt" ];
+479 -> 180 [ label="IdentifierList" ];
+479 -> 107 [ label="UnaryExpr" ];
+479 -> 113 [ label="PrimaryExpr" ];
+479 -> 115 [ label="Lit" ];
+479 -> 118 [ label="BasicLit" ];
+479 -> 119 [ label="CompositeLit" ];
+479 -> 120 [ label="FunctionLit" ];
+479 -> 126 [ label="StructType" ];
+479 -> 127 [ label="ArrayType" ];
+479 -> 128 [ label="SliceType" ];
+479 -> 129 [ label="MapType" ];
+482 -> 505 [ label="Expr" ];
+482 -> 107 [ label="UnaryExpr" ];
+482 -> 113 [ label="PrimaryExpr" ];
+482 -> 115 [ label="Lit" ];
+482 -> 118 [ label="BasicLit" ];
+482 -> 119 [ label="CompositeLit" ];
+482 -> 120 [ label="FunctionLit" ];
+482 -> 126 [ label="StructType" ];
+482 -> 127 [ label="ArrayType" ];
+482 -> 128 [ label="SliceType" ];
+482 -> 129 [ label="MapType" ];
+485 -> 405 [ label="LiteralValue" ];
+486 -> 361 [ label="Expr" ];
+486 -> 107 [ label="UnaryExpr" ];
+486 -> 113 [ label="PrimaryExpr" ];
+486 -> 115 [ label="Lit" ];
+486 -> 118 [ label="BasicLit" ];
+486 -> 119 [ label="CompositeLit" ];
+486 -> 120 [ label="FunctionLit" ];
+486 -> 126 [ label="StructType" ];
+486 -> 127 [ label="ArrayType" ];
+486 -> 128 [ label="SliceType" ];
+486 -> 129 [ label="MapType" ];
+488 -> 361 [ label="Expr" ];
+488 -> 107 [ label="UnaryExpr" ];
+488 -> 113 [ label="PrimaryExpr" ];
+488 -> 115 [ label="Lit" ];
+488 -> 118 [ label="BasicLit" ];
+488 -> 119 [ label="CompositeLit" ];
+488 -> 120 [ label="FunctionLit" ];
+488 -> 126 [ label="StructType" ];
+488 -> 127 [ label="ArrayType" ];
+488 -> 128 [ label="SliceType" ];
+488 -> 129 [ label="MapType" ];
+491 -> 510 [ label="ExpressionList" ];
+491 -> 139 [ label="Expr" ];
+491 -> 107 [ label="UnaryExpr" ];
+491 -> 113 [ label="PrimaryExpr" ];
+491 -> 115 [ label="Lit" ];
+491 -> 118 [ label="BasicLit" ];
+491 -> 119 [ label="CompositeLit" ];
+491 -> 120 [ label="FunctionLit" ];
+491 -> 126 [ label="StructType" ];
+491 -> 127 [ label="ArrayType" ];
+491 -> 128 [ label="SliceType" ];
+491 -> 129 [ label="MapType" ];
+492 -> 511 [ label="Tag" ];
+498 -> 514 [ label="StatementList" ];
+498 -> 149 [ label="Statement" ];
+498 -> 150 [ label="Decl" ];
+498 -> 151 [ label="LabeledStmt" ];
+498 -> 152 [ label="SimpleStmt" ];
+498 -> 153 [ label="GotoStmt" ];
+498 -> 154 [ label="ReturnStmt" ];
+498 -> 155 [ label="BreakStmt" ];
+498 -> 156 [ label="ContinueStmt" ];
+498 -> 157 [ label="FallthroughStmt" ];
+498 -> 158 [ label="Block" ];
+498 -> 159 [ label="IfStmt" ];
+498 -> 160 [ label="SwitchStmt" ];
+498 -> 161 [ label="ForStmt" ];
+498 -> 13 [ label="ConstDecl" ];
+498 -> 14 [ label="VarDecl" ];
+498 -> 15 [ label="TypeDecl" ];
+498 -> 162 [ label="Label" ];
+498 -> 163 [ label="EmptyStmt" ];
+498 -> 164 [ label="ExpressionStmt" ];
+498 -> 165 [ label="IncDecStmt" ];
+498 -> 166 [ label="Assignment" ];
+498 -> 167 [ label="ShortVarDecl" ];
+498 -> 170 [ label="ExpressionList" ];
+498 -> 175 [ label="Expr" ];
+498 -> 176 [ label="ExprSwitchStmt" ];
+498 -> 177 [ label="TypeSwitchStmt" ];
+498 -> 180 [ label="IdentifierList" ];
+498 -> 107 [ label="UnaryExpr" ];
+498 -> 113 [ label="PrimaryExpr" ];
+498 -> 115 [ label="Lit" ];
+498 -> 118 [ label="BasicLit" ];
+498 -> 119 [ label="CompositeLit" ];
+498 -> 120 [ label="FunctionLit" ];
+498 -> 126 [ label="StructType" ];
+498 -> 127 [ label="ArrayType" ];
+498 -> 128 [ label="SliceType" ];
+498 -> 129 [ label="MapType" ];
+499 -> 477 [ label="Type" ];
+499 -> 515 [ label="TypeList" ];
+499 -> 55 [ label="TypeT" ];
+499 -> 56 [ label="PointerType" ];
+499 -> 58 [ label="ArrayType" ];
+499 -> 59 [ label="StructType" ];
+499 -> 60 [ label="SliceType" ];
+499 -> 61 [ label="MapType" ];
+499 -> 62 [ label="FunctionType" ];
+501 -> 517 [ label="TypeList" ];
+501 -> 477 [ label="Type" ];
+501 -> 55 [ label="TypeT" ];
+501 -> 56 [ label="PointerType" ];
+501 -> 58 [ label="ArrayType" ];
+501 -> 59 [ label="StructType" ];
+501 -> 60 [ label="SliceType" ];
+501 -> 61 [ label="MapType" ];
+501 -> 62 [ label="FunctionType" ];
+520 -> 361 [ label="Expr" ];
+520 -> 107 [ label="UnaryExpr" ];
+520 -> 113 [ label="PrimaryExpr" ];
+520 -> 115 [ label="Lit" ];
+520 -> 118 [ label="BasicLit" ];
+520 -> 119 [ label="CompositeLit" ];
+520 -> 120 [ label="FunctionLit" ];
+520 -> 126 [ label="StructType" ];
+520 -> 127 [ label="ArrayType" ];
+520 -> 128 [ label="SliceType" ];
+520 -> 129 [ label="MapType" ];
+522 -> 525 [ label="TypeList" ];
+522 -> 477 [ label="Type" ];
+522 -> 55 [ label="TypeT" ];
+522 -> 56 [ label="PointerType" ];
+522 -> 58 [ label="ArrayType" ];
+522 -> 59 [ label="StructType" ];
+522 -> 60 [ label="SliceType" ];
+522 -> 61 [ label="MapType" ];
+522 -> 62 [ label="FunctionType" ];
+}
\ No newline at end of file
